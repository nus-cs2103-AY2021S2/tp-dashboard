[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# PocketEstate","lastModifiedDate":"2021-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-11"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T13-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T13-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"PocketEstate enables easy organisation of mass clientele property information through sorting of information by price, location and housing type, that may otherwise be difficult to manage.","lastModifiedDate":"2021-02-11"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"## User guide","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"For more information on how to use PocketEstate, please refer to our [User Guide](https://ay2021s2-cs2103t-t13-4.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"## Developer Guide","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"For more information on the development of PocketEstate, please refer to our [Developer Guide](https://ay2021s2-cs2103t-t13-4.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"## About Us","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"We are a team of 5 from the School of Computing, National University of Singapore. For more information, please refer to [About Us](https://ay2021s2-cs2103t-t13-4.github.io/tp/AboutUs.html).","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"## Acknowledgement","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-25"}],"authorContributionMap":{"-":5,"w-yuchen":10,"w2vgd":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"run {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    archiveName \u003d \u0027pocketestate.jar\u0027","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"w2vgd":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"### Wang Yuchen","lastModifiedDate":"2021-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"\u003cimg src\u003d\"images/w-yuchen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"[[github](http://github.com/w-yuchen)]","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"[[portfolio](team/w-yuchen.md)]","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"* Role: Developer","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"* Responsibilities: Documentation, Testing","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"### Yeoh Hsin Ying Candice","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"\u003cimg src\u003d\"images/candyhy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"[[github](http://github.com/candyhy)]","lastModifiedDate":"2021-02-26"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"[[portfolio](team/candyhy.md)]","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2021-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"### Tan Jun Wei","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"\u003cimg src\u003d\"images/w2vgd.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"[[github](http://github.com/w2vgd)]","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"[[portfolio](team/w2vgd.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"* Role: Team Lead, Developer","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"### David Au Wei En","lastModifiedDate":"2021-02-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"\u003cimg src\u003d\"images/dvdweien.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"[[github](http://github.com/dvdweien)]","lastModifiedDate":"2021-02-25"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"[[portfolio](team/dvdweien.md)]","lastModifiedDate":"2021-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"### Cao Peng","lastModifiedDate":"2021-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"\u003cimg src\u003d\"images/cp-john.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"[[github](http://github.com/cp-john)]","lastModifiedDate":"2021-02-27"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"[[portfolio](team/cp-john.md)]","lastModifiedDate":"2021-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-27"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"dvdweien":5,"Cp-John":5,"candyhy":5,"-":34,"w-yuchen":4,"w2vgd":8}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete property 1`.","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Due to the limitation of PlantUML, some triangles that are used to indicate class inheritance and some solid diamonds that are used to denote composition may overlap with each other.","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PropertyListPanel`, `AppointmentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"w2vgd"},"content":"* property agent who has a need to manage a significant number of properties and appointments","lastModifiedDate":"2021-03-02"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"w-yuchen"},"content":"**Value proposition**: PocketEstate enables easy organization of mass clientele property information through sorting of information by price, location and housing type, that may otherwise be difficult to manage.","lastModifiedDate":"2021-03-02"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                                                            | So that I can…​                                                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"w2vgd"},"content":"| -------- | ------------------------------------------ | -------------------------------------------------------------------------- | --------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-02"},{"lineNumber":257,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                                                     | refer to instructions when I forget how to use the App                            |","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"w-yuchen"},"content":"| `* * *`  | user                                       | be able to add a property                                                  | keep track of my clients\u0027 properties                                              |","lastModifiedDate":"2021-03-02"},{"lineNumber":259,"author":{"gitId":"w-yuchen"},"content":"| `* * *`  | user                                       | be able to add an appointment                                              | keep track of my upcoming schedule                                                |","lastModifiedDate":"2021-03-02"},{"lineNumber":260,"author":{"gitId":"w-yuchen"},"content":"| `* * *`  | user                                       | list all properties on sale                                                | know the number of properties that I have to sell                                 |","lastModifiedDate":"2021-03-02"},{"lineNumber":261,"author":{"gitId":"w-yuchen"},"content":"| `* * *`  | user                                       | list all properties on sale                                                | know which properties I have to sell                                              |","lastModifiedDate":"2021-03-02"},{"lineNumber":262,"author":{"gitId":"w-yuchen"},"content":"| `* * *`  | user                                       | view the client asking price of a property                                 | keep the price in mind when negotiating with the buyer                            |","lastModifiedDate":"2021-03-02"},{"lineNumber":263,"author":{"gitId":"w-yuchen"},"content":"| `* * *`  | user                                       | view the properties in the order of nearest deadline                       | prioritize selling properties with a more urgent deadline                         |","lastModifiedDate":"2021-03-02"},{"lineNumber":264,"author":{"gitId":"w-yuchen"},"content":"| `* *`    | potential user exploring the app           | see the app populated with sample data                                     | easily see how the app looks like when it is in use                               |","lastModifiedDate":"2021-03-02"},{"lineNumber":265,"author":{"gitId":"w-yuchen"},"content":"| `* *`    | careless user                              | be able to categorize housing information based on predefined tags         | prevent typos while keying in information and avoid storing the wrong information |","lastModifiedDate":"2021-03-02"},{"lineNumber":266,"author":{"gitId":"w-yuchen"},"content":"| `* *`    | user                                       | update the status of property listings(completed, Option, Sale Agreement)  | follow up with clients on time                                                    |","lastModifiedDate":"2021-03-02"},{"lineNumber":267,"author":{"gitId":"w-yuchen"},"content":"| `* *`    | user                                       | edit the deadline of the property listing                                  | extend the time period for selling the property                                   |","lastModifiedDate":"2021-03-02"},{"lineNumber":268,"author":{"gitId":"w-yuchen"},"content":"| `* *`    | user                                       | edit the name of the property listing                                      | change the name of the property when I have made a mistake                        |","lastModifiedDate":"2021-03-02"},{"lineNumber":269,"author":{"gitId":"w-yuchen"},"content":"| `* *`    | user                                       | edit the address of the property listing                                   | change the address of the property when I have made a mistake                     |","lastModifiedDate":"2021-03-02"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"w-yuchen"},"content":"(For all use cases below, the **System** is the `PocketEsate` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-03-02"},{"lineNumber":276,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":277,"author":{"gitId":"w-yuchen"},"content":"**Use case: UC01 - Add a property**","lastModifiedDate":"2021-03-02"},{"lineNumber":278,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":279,"author":{"gitId":"w-yuchen"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":280,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":281,"author":{"gitId":"w-yuchen"},"content":"1. User request to add a property","lastModifiedDate":"2021-03-02"},{"lineNumber":282,"author":{"gitId":"w-yuchen"},"content":"2. PocketEstate shows an updated list of properties","lastModifiedDate":"2021-03-02"},{"lineNumber":283,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":284,"author":{"gitId":"w-yuchen"},"content":"   Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":285,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":286,"author":{"gitId":"w-yuchen"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":287,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":288,"author":{"gitId":"w-yuchen"},"content":"* 1a. The property to be added has missing required fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":289,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":290,"author":{"gitId":"w-yuchen"},"content":"    * 1a1. PocketEstate shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":291,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":292,"author":{"gitId":"w-yuchen"},"content":"      Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":294,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":295,"author":{"gitId":"w-yuchen"},"content":"**Use case: UC02 - Add an appointment**","lastModifiedDate":"2021-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":299,"author":{"gitId":"w-yuchen"},"content":"1. User request to add an appointment","lastModifiedDate":"2021-03-02"},{"lineNumber":300,"author":{"gitId":"w-yuchen"},"content":"2. PocketEstate shows an updated list of appointments","lastModifiedDate":"2021-03-02"},{"lineNumber":301,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":302,"author":{"gitId":"w-yuchen"},"content":"   Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":303,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":304,"author":{"gitId":"w-yuchen"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":305,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":306,"author":{"gitId":"w-yuchen"},"content":"* 1a. The appointment to be added has missing required fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":307,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":308,"author":{"gitId":"w-yuchen"},"content":"    * 1a1. PocketEstate shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":309,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":310,"author":{"gitId":"w-yuchen"},"content":"      Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":311,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":312,"author":{"gitId":"w-yuchen"},"content":"**Use case: UC03 - Listing all properties and appointments**","lastModifiedDate":"2021-03-02"},{"lineNumber":313,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":314,"author":{"gitId":"w-yuchen"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":315,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":316,"author":{"gitId":"w-yuchen"},"content":"1. User requests to list all properties and appointments.","lastModifiedDate":"2021-03-02"},{"lineNumber":317,"author":{"gitId":"w-yuchen"},"content":"2. PocketEstate shows the entire list of properties and appointments.","lastModifiedDate":"2021-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":323,"author":{"gitId":"w-yuchen"},"content":"* 3a. List command used has unrecognized fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":324,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":325,"author":{"gitId":"w-yuchen"},"content":"    * 3a1. PocketEstate shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":326,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":327,"author":{"gitId":"w-yuchen"},"content":"      Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":328,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":329,"author":{"gitId":"w-yuchen"},"content":"**Use case: UC04 - Edit a property**","lastModifiedDate":"2021-03-02"},{"lineNumber":330,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":331,"author":{"gitId":"w-yuchen"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":332,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":333,"author":{"gitId":"w-yuchen"},"content":"1. User request to edit a property","lastModifiedDate":"2021-03-02"},{"lineNumber":334,"author":{"gitId":"w-yuchen"},"content":"2. PocketEstate shows an updated list of properties","lastModifiedDate":"2021-03-02"},{"lineNumber":335,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":336,"author":{"gitId":"w-yuchen"},"content":"   Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":337,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":338,"author":{"gitId":"w-yuchen"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":339,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":340,"author":{"gitId":"w-yuchen"},"content":"* 1a. The property to be edited has unrecognized fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":341,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":342,"author":{"gitId":"w-yuchen"},"content":"    * 1a1. PocketEstate shows an error message with the unrecognized fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":343,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":344,"author":{"gitId":"w-yuchen"},"content":"      Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":345,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":346,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":347,"author":{"gitId":"w-yuchen"},"content":"**Use case: UC05 - Edit an appointment**","lastModifiedDate":"2021-03-02"},{"lineNumber":348,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":349,"author":{"gitId":"w-yuchen"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":350,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":351,"author":{"gitId":"w-yuchen"},"content":"1. User request to edit an appointment","lastModifiedDate":"2021-03-02"},{"lineNumber":352,"author":{"gitId":"w-yuchen"},"content":"2. PocketEstate shows an updated list of appointments","lastModifiedDate":"2021-03-02"},{"lineNumber":353,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":354,"author":{"gitId":"w-yuchen"},"content":"   Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":355,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":356,"author":{"gitId":"w-yuchen"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":357,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":358,"author":{"gitId":"w-yuchen"},"content":"* 1a. The appointment to be edited has unrecognized fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":359,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":360,"author":{"gitId":"w-yuchen"},"content":"    * 1a1. PocketEstate shows an error message with the unrecognized fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":362,"author":{"gitId":"w-yuchen"},"content":"      Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":364,"author":{"gitId":"w-yuchen"},"content":"**Use case: UC06 - Update status of a property**","lastModifiedDate":"2021-03-02"},{"lineNumber":365,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":366,"author":{"gitId":"w-yuchen"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":368,"author":{"gitId":"w-yuchen"},"content":"1. User request to update status of a property","lastModifiedDate":"2021-03-02"},{"lineNumber":369,"author":{"gitId":"w-yuchen"},"content":"2. PocketEstate shows an updated list of properties","lastModifiedDate":"2021-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":371,"author":{"gitId":"w-yuchen"},"content":"   Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":372,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":373,"author":{"gitId":"w-yuchen"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":374,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":375,"author":{"gitId":"w-yuchen"},"content":"* 1a. The property to be updated has incorrect fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":376,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":377,"author":{"gitId":"w-yuchen"},"content":"    * 1a1. PocketEstate shows an error message.","lastModifiedDate":"2021-03-02"},{"lineNumber":378,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":379,"author":{"gitId":"w-yuchen"},"content":"      Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":380,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":381,"author":{"gitId":"w-yuchen"},"content":"**Use case: UC07 - Searching for property**","lastModifiedDate":"2021-03-02"},{"lineNumber":382,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":383,"author":{"gitId":"w-yuchen"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":384,"author":{"gitId":"w-yuchen"},"content":"1. User requests to search for properties of a certain type.","lastModifiedDate":"2021-03-02"},{"lineNumber":385,"author":{"gitId":"w-yuchen"},"content":"2. PocketEstate shows a list of properties that are of that type.","lastModifiedDate":"2021-03-02"},{"lineNumber":386,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":387,"author":{"gitId":"w-yuchen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":388,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":389,"author":{"gitId":"w-yuchen"},"content":"**Use case: UC08 - Searching for appointment**","lastModifiedDate":"2021-03-02"},{"lineNumber":390,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":391,"author":{"gitId":"w-yuchen"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":392,"author":{"gitId":"w-yuchen"},"content":"1. User requests to search for appointments with a certain person.","lastModifiedDate":"2021-03-02"},{"lineNumber":393,"author":{"gitId":"w-yuchen"},"content":"2. PocketEstate shows a list of all appointments with that person.","lastModifiedDate":"2021-03-02"},{"lineNumber":394,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":395,"author":{"gitId":"w-yuchen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"w-yuchen"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster by using commands over the mouse.","lastModifiedDate":"2021-03-02"},{"lineNumber":403,"author":{"gitId":"w-yuchen"},"content":"3. Should be able to hold up to 500 properties and 500 appointments concurrently without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-02"},{"lineNumber":404,"author":{"gitId":"w-yuchen"},"content":"4. The app should respond within two seconds after each user command.","lastModifiedDate":"2021-03-02"},{"lineNumber":405,"author":{"gitId":"w-yuchen"},"content":"5. The GUI of the app should clearly differentiate the different property types (HDB ![hdb_icon](images/hdb_16.png), Condo ![condo_icon](images/condo_16.png), Landed ![landed_icon](images/landed_16.png), etc.) of each property in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":406,"author":{"gitId":"w-yuchen"},"content":"6. The app should be able to run without internet connection.","lastModifiedDate":"2021-03-02"},{"lineNumber":407,"author":{"gitId":"w-yuchen"},"content":"7. The app should be resizable and can be enlarged to the maximum window width.","lastModifiedDate":"2021-03-02"},{"lineNumber":408,"author":{"gitId":"w-yuchen"},"content":"8. There should be sample data in the app when the user opens the app for the first time.","lastModifiedDate":"2021-03-02"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"w-yuchen"},"content":"* **Property**: A property listing with mandatory attributes: Name, Property type, Address, Postal code and Deadline,","lastModifiedDate":"2021-03-02"},{"lineNumber":417,"author":{"gitId":"w-yuchen"},"content":"    optional attributes: Client name, Client contact, Client email, Client asking price, Remarks","lastModifiedDate":"2021-03-02"},{"lineNumber":418,"author":{"gitId":"w-yuchen"},"content":"* **Appointment**: An appointment listing with mandatory attributes: Name, Remarks, Date,  optional attribute: Time","lastModifiedDate":"2021-03-02"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":333,"w2vgd":7,"w-yuchen":131}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"PocketEstate enables easy organization of mass clientele property information through sorting of information by price, location and housing type, that may otherwise be difficult to manage.","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"1. Download the latest `pocketestate.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your PocketEstate.","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"   * **`list`** : Lists all properties and appointments in the app.","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"   * **`add property`**`n/Mayfair t/Condo a/1 Jurong East Street 32 p/609477 d/31-12-2021` : Adds a property with the corresponding information to the PocketEstate app.","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"   * **`delete property`**`2` : Deletes the 2nd property shown in the current list of properties.","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"  e.g. in `add property n/NAME`, `NAME` is a parameter which can be used as `add property n/Mayfair`.","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"  e.g `add property n/NAME t/PROPERTY_TYPE a/ADDRESS p/POSTAL_CODE d/DEADLINE [r/REMARKS] [cn/CLIENT_NAME] [cc/CLIENT_CONTACT_NUMBER] [ce/CLIENT_EMAIL] [ca/CLIENT_ASKING_PRICE] [tags/TAGS...]` can be used as \u003cbr\u003e`add property n/Mayfair t/Condo a/1 Jurong East Street 32 p/609477 d/31-12-2021` \u003cbr\u003e or as \u003cbr\u003e`add property n/Mayfair t/Condo a/1 Jurong East Street 32 p/609477 d/31-12-2021 r/Urgent to sell cn/Alice cc/91234567 ce/alice@gmail.com ca/$800,000 tags/4 bedrooms, No need for renovation`.","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"* Items with `…` after them can be used multiple times, and separated by a comma.\u003cbr\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"  e.g. `tags/TAGS...` can be used as `tags/Freehold`, `tags/Freehold, 5 bedrooms`, `tags/Freehold, 5 bedrooms, Near MRT` etc.","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"  e.g. if the command specifies `n/NAME r/REMARKS`, `r/REMARKS n/NAME` is also acceptable.","lastModifiedDate":"2021-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"  e.g. if you specify `n/John n/Alice`, only `n/Alice` will be taken.","lastModifiedDate":"2021-02-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"### Adding a property: `add property`","lastModifiedDate":"2021-02-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"Adds a property to the app.","lastModifiedDate":"2021-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"Format: `add property n/NAME t/PROPERTY_TYPE a/ADDRESS p/POSTAL_CODE d/DEADLINE [r/REMARKS] [cn/CLIENT_NAME] [cc/CLIENT_CONTACT_NUMBER] [ce/CLIENT_EMAIL] [ca/CLIENT_ASKING_PRICE] [tags/TAGS...]​`","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"Description:","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"* There can be multiple tags but different tags should be separated with a comma. \u003cbr\u003e e.g. `tags/TAGS...` can be used as `tags/Freehold`, `tags/Freehold, 5 bedrooms`, `tags/Freehold, 5 bedrooms, Near MRT` etc.","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-02-24"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"* `add property n/Mayfair t/Condo a/1 Jurong East Street 32 p/609477 d/31-12-2021`","lastModifiedDate":"2021-02-24"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"* `add property n/Mayfair t/Condo a/1 Jurong East Street 32 p/609477 d/31-12-2021 r/Urgent to sell cn/Alice cc/91234567 ce/alice@gmail.com ca/$800,000 tags/4 bedrooms, No need for renovation`","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"### Adding an appointment: `add appointment`","lastModifiedDate":"2021-02-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"Adds an appointment to the app.","lastModifiedDate":"2021-02-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"Format: `add appointment n/NAME r/REMARKS d/DATE t/TIME​`","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"* `add appointment n/Meet Alex r/At M Hotel d/17-2-2021 t/1500`","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"### Listing all properties and appointments : `list`","lastModifiedDate":"2021-02-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"Shows a list of all properties and appointments in the app.","lastModifiedDate":"2021-02-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"### Sorting : `sort`","lastModifiedDate":"2021-02-27"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"Sorts and shows a list of properties or appointments that is sorted according to the comparator provided.","lastModifiedDate":"2021-02-27"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"Formats:","lastModifiedDate":"2021-02-27"},{"lineNumber":108,"author":{"gitId":"Cp-John"},"content":"* `sort appointment o/\u003casc or desc\u003e k/\u003cdatetime or name\u003e`","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"Cp-John"},"content":"* `sort property o/\u003casc or desc\u003e k/\u003cprice or address or postalcode or deadline or name\u003e`","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":111,"author":{"gitId":"Cp-John"},"content":"Description:","lastModifiedDate":"2021-02-27"},{"lineNumber":112,"author":{"gitId":"Cp-John"},"content":"* Sorts appointment or property by the specified sorting key in ascending or descending order.","lastModifiedDate":"2021-02-27"},{"lineNumber":113,"author":{"gitId":"Cp-John"},"content":"* The sorting key and sorting order fields must be specified.","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":115,"author":{"gitId":"Cp-John"},"content":"Examples:","lastModifiedDate":"2021-02-27"},{"lineNumber":116,"author":{"gitId":"Cp-John"},"content":"*  `sort appointment o/asc k/datetime` Sorts `appointment` by `datetime` in ascending order.","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"Cp-John"},"content":"*  `sort property o/desc k/price` Sorts `property` by `price` in descending order.","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"### Editing a property : `edit property`","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"dvdweien"},"content":"Overwrites the information of the property according to the flags provided.","lastModifiedDate":"2021-02-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"dvdweien"},"content":"Formats: `edit property INDEX [n/NAME] [t/PROPERTY_TYPE] [a/ADDRESS] [p/POSTAL_CODE] [d/DEADLINE] [r/REMARKS] [cn/CLIENT_NAME] [cc/CLIENT_CONTACT_NUMBER] [ce/CLIENT_EMAIL] [ca/CLIENT_ASKING_PRICE] [tags/TAGS...]​`","lastModifiedDate":"2021-03-20"},{"lineNumber":124,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":125,"author":{"gitId":"dvdweien"},"content":"Description:","lastModifiedDate":"2021-02-27"},{"lineNumber":126,"author":{"gitId":"dvdweien"},"content":"* Edits the entry at the specified `INDEX`. The index refers to the index number shown in the displayed list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-02-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-02-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-02-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-02-27"},{"lineNumber":131,"author":{"gitId":"dvdweien"},"content":"*  `edit property 1 r/Urgent to sell cn/Alice` Edits the remark and client name of the 1st property to be `Urgent to sell` and `Alice` respectively.","lastModifiedDate":"2021-02-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":133,"author":{"gitId":"dvdweien"},"content":"### Editing an appointment : `edit appointment`","lastModifiedDate":"2021-02-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"dvdweien"},"content":"Overwrites the information of the appointment according to the flags provided.","lastModifiedDate":"2021-02-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"dvdweien"},"content":"Formats: `edit appointment INDEX [n/NAME] [r/REMARKS] [d/DATE] [t/TIME]`","lastModifiedDate":"2021-02-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"dvdweien"},"content":"Description:","lastModifiedDate":"2021-02-25"},{"lineNumber":140,"author":{"gitId":"dvdweien"},"content":"* Edits the entry at the specified `INDEX`. The index refers to the index number shown in the displayed list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-02-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"dvdweien"},"content":"*  `edit appointment 3 d/21-03-2021 r/at M hotel` Edits the date and remark of the 3rd appointment to be `21-03-2021` and `at M hotel` respectively.","lastModifiedDate":"2021-03-20"},{"lineNumber":146,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":147,"author":{"gitId":"dvdweien"},"content":"### Updating the status of a property : `update`","lastModifiedDate":"2021-02-25"},{"lineNumber":148,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":149,"author":{"gitId":"dvdweien"},"content":"Updates the status of a property from Option to Purchase, to Sales and Purchase Agreement to Completion","lastModifiedDate":"2021-02-25"},{"lineNumber":150,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":151,"author":{"gitId":"dvdweien"},"content":"Formats:","lastModifiedDate":"2021-02-25"},{"lineNumber":152,"author":{"gitId":"dvdweien"},"content":"* `update INDEX new AMOUNT`","lastModifiedDate":"2021-02-25"},{"lineNumber":153,"author":{"gitId":"dvdweien"},"content":"* `update INDEX [proceed][cancel]`","lastModifiedDate":"2021-02-25"},{"lineNumber":154,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":155,"author":{"gitId":"dvdweien"},"content":"Description:","lastModifiedDate":"2021-02-25"},{"lineNumber":156,"author":{"gitId":"dvdweien"},"content":"* Edits the property at the specified `INDEX`. The index refers to the index number shown in the displayed list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-02-25"},{"lineNumber":157,"author":{"gitId":"dvdweien"},"content":"* The `new` keyword can only be used on a property without an existing status","lastModifiedDate":"2021-02-25"},{"lineNumber":158,"author":{"gitId":"dvdweien"},"content":"* `proceed` or `cancel` can only be used on a property with an existing status","lastModifiedDate":"2021-02-25"},{"lineNumber":159,"author":{"gitId":"dvdweien"},"content":"* `proceed` would move the status on to the next one. e.g. Option to Sales Agreement or Sales Agreement to Completion","lastModifiedDate":"2021-02-25"},{"lineNumber":160,"author":{"gitId":"dvdweien"},"content":"* `cancel` would remove the status of the property","lastModifiedDate":"2021-02-25"},{"lineNumber":161,"author":{"gitId":"dvdweien"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-02-25"},{"lineNumber":162,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":163,"author":{"gitId":"dvdweien"},"content":"Examples:","lastModifiedDate":"2021-02-25"},{"lineNumber":164,"author":{"gitId":"dvdweien"},"content":"*  `update 1 new 600000` Creates a new status with amount 600000 for the 1st property.","lastModifiedDate":"2021-02-25"},{"lineNumber":165,"author":{"gitId":"dvdweien"},"content":"*  `update 3 proceed` Moves the status of the 3rd property to next one.","lastModifiedDate":"2021-02-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"Cp-John"},"content":"### Removing an entry : `delete`","lastModifiedDate":"2021-02-27"},{"lineNumber":168,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":169,"author":{"gitId":"Cp-John"},"content":"Deletes the specified property or appointment from the app.","lastModifiedDate":"2021-02-27"},{"lineNumber":170,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":171,"author":{"gitId":"Cp-John"},"content":"Formats:","lastModifiedDate":"2021-02-27"},{"lineNumber":172,"author":{"gitId":"Cp-John"},"content":"* `delete appointment INDEX`","lastModifiedDate":"2021-02-27"},{"lineNumber":173,"author":{"gitId":"Cp-John"},"content":"* `delete property INDEX`","lastModifiedDate":"2021-02-27"},{"lineNumber":174,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":175,"author":{"gitId":"Cp-John"},"content":"Description:","lastModifiedDate":"2021-02-27"},{"lineNumber":176,"author":{"gitId":"w-yuchen"},"content":"* Deletes the appointment or property at the specified `INDEX`. The index refers to the index number shown in the displayed list. The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2021-03-02"},{"lineNumber":177,"author":{"gitId":"Cp-John"},"content":"* The field INDEX must be provided.","lastModifiedDate":"2021-02-27"},{"lineNumber":178,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":179,"author":{"gitId":"Cp-John"},"content":"Examples:","lastModifiedDate":"2021-02-27"},{"lineNumber":180,"author":{"gitId":"Cp-John"},"content":"*  `delete appointment 7` Deletes the `appointment` at index `7`.","lastModifiedDate":"2021-02-27"},{"lineNumber":181,"author":{"gitId":"Cp-John"},"content":"*  `delete property 7` Deletes the `property` at index `7`.","lastModifiedDate":"2021-02-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"w-yuchen"},"content":"### Filtering: `find`","lastModifiedDate":"2021-03-02"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":185,"author":{"gitId":"w-yuchen"},"content":"Finds properties or appointments that matches the criterion provided.","lastModifiedDate":"2021-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"w-yuchen"},"content":"Formats:","lastModifiedDate":"2021-03-02"},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"* `find appointment [keywords] [option...]`","lastModifiedDate":"2021-03-02"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"* `find property [keywords] [option...]`","lastModifiedDate":"2021-03-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"Description:","lastModifiedDate":"2021-03-02"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"* There can be 0 or more keywords and 0 or more options, but keywords and options cannot be both empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":193,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":194,"author":{"gitId":"w-yuchen"},"content":"Options:","lastModifiedDate":"2021-03-02"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"* `r/[REMARKS]`","lastModifiedDate":"2021-03-02"},{"lineNumber":196,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":197,"author":{"gitId":"w-yuchen"},"content":"Search for properties or appointments whose remarks field contain patterns specified in `[REMARKS]`","lastModifiedDate":"2021-03-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":199,"author":{"gitId":"w2vgd"},"content":"* `pm/[PRICE]`","lastModifiedDate":"2021-03-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":201,"author":{"gitId":"w-yuchen"},"content":"Search for properties with prices more than `[PRICE]`, ignored if used with appointment","lastModifiedDate":"2021-03-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"* `pl/[PRICE]`","lastModifiedDate":"2021-03-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":205,"author":{"gitId":"w2vgd"},"content":"Search for properties with prices less than `[PRICE]`, ignored if used with appointment","lastModifiedDate":"2021-03-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"* `find property \"jurong west\"`","lastModifiedDate":"2021-03-02"},{"lineNumber":209,"author":{"gitId":"w2vgd"},"content":"* `find appointment \"fri\" r/\"come in afternoon\"`","lastModifiedDate":"2021-03-02"},{"lineNumber":210,"author":{"gitId":"w2vgd"},"content":"* `find property pm/500000`","lastModifiedDate":"2021-03-02"},{"lineNumber":211,"author":{"gitId":"w2vgd"},"content":"* `find property \"bishan\" \"north\" \"mrt\" r/\"recently renovated\"`","lastModifiedDate":"2021-03-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"Cp-John"},"content":"Clears all properties or appointments or both from the app.","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"w2vgd"},"content":"Formats:","lastModifiedDate":"2021-03-02"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"* `clear property`","lastModifiedDate":"2021-03-02"},{"lineNumber":219,"author":{"gitId":"w2vgd"},"content":"* `clear appointment`","lastModifiedDate":"2021-03-02"},{"lineNumber":220,"author":{"gitId":"Cp-John"},"content":"* `clear all`","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"w2vgd"},"content":"PocketEstate data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-03-02"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":234,"author":{"gitId":"w2vgd"},"content":"PocketEstate data are saved as a JSON file `[JAR file location]/data/pocketestate.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-03-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":237,"author":{"gitId":"w2vgd"},"content":"If your changes to the data file makes its format invalid, PocketEstate will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-03-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"w2vgd"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous PocketEstate home folder.","lastModifiedDate":"2021-03-02"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"w2vgd"},"content":"**Add property** | `add property n/NAME t/PROPERTY_TYPE a/ADDRESS p/POSTAL_CODE d/DEADLINE [r/REMARKS] [cn/CLIENT_NAME] [cc/CLIENT_CONTACT_NUMBER] [ce/CLIENT_EMAIL] [ca/CLIENT_ASKING_PRICE] [tags/TAGS...]` \u003cbr\u003e e.g., `add property n/Mayfair t/Condo a/1 Jurong East Street 32 p/609477 d/31-12-2021 r/Urgent to sell cn/Alice cc/91234567 ce/alice@gmail.com ca/$800,000 tags/4 bedrooms, No need for renovation`","lastModifiedDate":"2021-03-18"},{"lineNumber":258,"author":{"gitId":"w2vgd"},"content":"**Add appointment** | `add appointment n/NAME r/REMARKS d/DATE t/TIME` \u003cbr\u003e e.g., `add appointment n/Meet Alex r/At M Hotel d/17-2-2021 t/1500`","lastModifiedDate":"2021-03-15"},{"lineNumber":259,"author":{"gitId":"Cp-John"},"content":"**Clear** | `clear property` \u003cbr\u003e `clear appointment` \u003cbr\u003e `clear all`","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"dvdweien"},"content":"**Edit property** | `edit property INDEX [n/NAME] [t/PROPERTY_TYPE] [a/ADDRESS] [p/POSTAL_CODE] [d/DEADLINE] [r/REMARKS] [cn/CLIENT_NAME] [cc/CLIENT_CONTACT_NUMBER] [ce/CLIENT_EMAIL] [ca/CLIENT_ASKING_PRICE]`\u003cbr\u003e e.g.,`edit property 1 r/Urgent to sell cn/Alice`","lastModifiedDate":"2021-02-27"},{"lineNumber":261,"author":{"gitId":"dvdweien"},"content":"**Edit appointment** | `edit appointment INDEX [n/NAME] [r/REMARKS] [d/DATE] [t/TIME]`\u003cbr\u003e e.g.,`edit appointment 3 d/2021-03-28 r/at M hotel`","lastModifiedDate":"2021-02-27"},{"lineNumber":262,"author":{"gitId":"dvdweien"},"content":"**Add new status** | `update INDEX new AMOUNT`\u003cbr\u003e e.g.,`update 1 new 600000`","lastModifiedDate":"2021-02-27"},{"lineNumber":263,"author":{"gitId":"w2vgd"},"content":"**Update status** | `update INDEX [proceed][cancel]`\u003cbr\u003e e.g. `update 3 proceed`","lastModifiedDate":"2021-03-02"},{"lineNumber":264,"author":{"gitId":"w2vgd"},"content":"**Find** | `find appointment [keywords] [option...]` \u003cbr\u003e e.g. `find appointment \"fri\" r/\"come in afternoon\"` \u003cbr\u003e\u003cbr\u003e `find property [keywords] [option...]` \u003cbr\u003e e.g., `find property \"jurong west\"`","lastModifiedDate":"2021-03-02"},{"lineNumber":265,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"Cp-John"},"content":"**Sort** | `sort appointment o/\u003casc or desc\u003e k/\u003cdatetime or name\u003e`\u003cbr\u003e e.g., `sort appointment o/asc k/datetime`\u003cbr\u003e\u003cbr\u003e`sort property o/\u003casc or desc\u003e k/\u003cprice or address or postalcode or deadline or name\u003e`\u003cbr\u003e e.g., `sort property o/asc k/price`","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"w2vgd"},"content":"**Remove an entry** | `delete appointment INDEX` \u003cbr\u003e e.g. `delete appointment 7` \u003cbr\u003e\u003cbr\u003e `delete property INDEX` \u003cbr\u003e e.g. `delete property 7`","lastModifiedDate":"2021-03-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dvdweien":35,"Cp-John":32,"candyhy":3,"-":139,"w2vgd":49,"w-yuchen":10}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"user -[USER_COLOR]\u003e ui : \"delete property 1\"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete property 1\")","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteProperty(p)","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"logic -[LOGIC_COLOR]\u003e storage : savePropertyBook(propertyBook)","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":34,"w2vgd":4}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"Class AppointmentListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"Class AppointmentCard","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"Class PropertyListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"Class PropertyCard","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"MainWindow *-down-\u003e AppointmentListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"MainWindow *-down-\u003e PropertyListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"AppointmentListPanel -down--\u003e AppointmentCard","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"PropertyListPanel -down-\u003e PropertyCard","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"AppointmentListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"AppointmentCard --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"PropertyListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"PropertyCard --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"AppointmentCard ..\u003e Model","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"PropertyCard ..\u003e Model","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"AppointmentListPanel -[hidden]left- PropertyListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"PropertyListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":52,"w2vgd":16}},{"path":"docs/team/candyhy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"layout: page","lastModifiedDate":"2021-02-26"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"title: Yeoh Hsin Ying Candice\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"## Project: PocketEstate","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"PocketEstate enables easy organisation of mass clientele property information through sorting of information by price,","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"location and housing type, that may otherwise be difficult to manage.","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"candyhy":11}},{"path":"docs/team/cp-john.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"layout: page","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"title: Cao Peng\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"## Project: PocketEstate","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"PocketEstate enables easy organisation of mass clientele property information through sorting of information by price,","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"location and housing type, that may otherwise be difficult to manage.","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"Cp-John":11}},{"path":"docs/team/dvdweien.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"layout: page","lastModifiedDate":"2021-02-25"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"title: David Au Wei En\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"## Project: PocketEstate","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"PocketEstate enables easy organisation of mass clientele property information through sorting of information by price,","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"location and housing type, that may otherwise be difficult to manage.","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-25"}],"authorContributionMap":{"dvdweien":11}},{"path":"docs/team/w-yuchen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"layout: page","lastModifiedDate":"2021-02-25"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"title: Wang Yuchen\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"## Project: PocketEstate","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"PocketEstate enables easy organisation of mass clientele property information through sorting of information by price,","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"location and housing type, that may otherwise be difficult to manage.","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-25"}],"authorContributionMap":{"w-yuchen":11}},{"path":"docs/team/w2vgd.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"layout: page","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"title: Tan Jun Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"## Project: PocketEstate","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"PocketEstate enables easy organisation of mass clientele property information through sorting of information by price,","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"location and housing type, that may otherwise be difficult to manage.","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"w2vgd":12}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"candyhy":4,"-":21}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"import seedu.address.storage.AppointmentBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"import seedu.address.storage.JsonPropertyBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"import seedu.address.storage.PropertyBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PocketEstate ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"        PropertyBookStorage propertyBookStorage \u003d new JsonPropertyBookStorage(userPrefs.getPropertyBookFilePath());","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        AppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"                new JsonAppointmentBookStorage(userPrefs.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        storage \u003d new StorageManager(appointmentBookStorage, propertyBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s property book, appointment book","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"     * and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"     * The data from the sample property book or appointment book will be used instead if","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"     * {@code storage}\u0027s property book or appointment book is not found respectively,","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"     * or an empty property book or appointment book will be used instead if errors occur when reading","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"     * {@code storage}\u0027s property book or appointment book respectively.","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"        Optional\u003cReadOnlyPropertyBook\u003e propertyBookOptional;","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"        Optional\u003cReadOnlyAppointmentBook\u003e appointmentBookOptional;","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"        ReadOnlyPropertyBook initialPropertyData;","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"        ReadOnlyAppointmentBook initialAppointmentData;","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"            propertyBookOptional \u003d storage.readPropertyBook();","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"w-yuchen"},"content":"            if (propertyBookOptional.isEmpty()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"                logger.info(\"Property data file not found. Will be starting with a sample PropertyBook\");","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"            initialPropertyData \u003d propertyBookOptional.orElseGet(SampleDataUtil::getSamplePropertyBook);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"            logger.warning(\"Property data file not in the correct format. \"","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"                    + \"Will be starting with an empty PropertyBook\");","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"            initialPropertyData \u003d new PropertyBook();","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PropertyBook\");","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"            initialPropertyData \u003d new PropertyBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"            appointmentBookOptional \u003d storage.readAppointmentBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"            if (appointmentBookOptional.isEmpty()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"                logger.info(\"Appointment data file not found. Will be starting with a sample AppointmentBook\");","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"            initialAppointmentData \u003d appointmentBookOptional.orElseGet(SampleDataUtil::getSampleAppointmentBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"            logger.warning(\"Appointment data file not in the correct format. \"","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"                    + \"Will be starting with an empty AppointmentBook\");","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"            initialAppointmentData \u003d new AppointmentBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AppointmentBook\");","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"            initialAppointmentData \u003d new AppointmentBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"        return new ModelManager(initialAppointmentData, initialPropertyData, userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"            logger.warning(\"Problem while reading from the file. \"","lastModifiedDate":"2021-03-22"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"                    + \"Will be starting with an empty Property Book and Appointment Book\");","lastModifiedDate":"2021-03-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"candyhy"},"content":"        logger.info(\"Starting PocketEstate \" + MainApp.VERSION);","lastModifiedDate":"2021-03-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"w2vgd"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping PocketEstate ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"candyhy":26,"-":161,"w2vgd":26,"w-yuchen":1}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    private static final String LOG_FILE \u003d \"pocketestate.log\";","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"candyhy":1,"-":111,"w2vgd":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_PROPERTIES_LISTED_OVERVIEW_SINGULAR \u003d \"%1$d property listed!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_PROPERTIES_LISTED_OVERVIEW \u003d \"%1$d properties listed!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_APPOINTMENT_LISTED_OVERVIEW_SINGULAR \u003d \"%1$d appointment listed!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_APPOINTMENT_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX \u003d \"The property index provided is invalid\";","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"            \"The appointment index provided is invalid\";","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dvdweien":3,"-":11,"w2vgd":4}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"candyhy":1,"-":116}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"candyhy":1,"-":53}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"candyhy":3,"-":34}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"candyhy":2,"-":83}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"candyhy":4,"-":142}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"candyhy":2,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     * Returns the PropertyBook.","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * @see seedu.address.model.Model#getPropertyBook()","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    ReadOnlyPropertyBook getPropertyBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * Returns an unmodifiable view of the filtered list of properties.","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    ObservableList\u003cProperty\u003e getFilteredPropertyList();","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     * Returns the user prefs\u0027 property book file path.","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    Path getPropertyBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * Returns the AppointmentBook.","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     * @see seedu.address.model.Model#getAppointmentBook()","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    ReadOnlyAppointmentBook getAppointmentBook();","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"     * Returns an unmodifiable view of the filtered list of appointments","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"     * Returns the user prefs\u0027 appointment book file path.","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"candyhy":18,"-":48,"w2vgd":7}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.parser.PocketEstateParser;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    private final PocketEstateParser pocketEstateParser;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        pocketEstateParser \u003d new PocketEstateParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        Command command \u003d pocketEstateParser.parseCommand(commandText);","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            storage.saveAppointmentBook(model.getAppointmentBook());","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"            storage.savePropertyBook(model.getPropertyBook());","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    public ReadOnlyPropertyBook getPropertyBook() {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        return model.getPropertyBook();","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        return model.getFilteredPropertyList();","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"    public Path getPropertyBookFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        return model.getPropertyBookFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"    public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        return model.getAppointmentBook();","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        return model.getAppointmentBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"candyhy":16,"-":73,"w2vgd":10}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":" * Adds an appointment to the app.","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"add appointment\";","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to the app. \\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_TIME + \"TIME \\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_NAME + \"Meet Alex \"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_REMARK + \"at M hotel \"","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_DATE + \"17-2-2021 \"","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_TIME + \"1500 \";","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the app\";","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     * Creates an AddAppointmentCommand to add the specified {@code Appointment}.","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"                || (other instanceof AddAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 toAdd.equals(((AddAppointmentCommand) other).toAdd));","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"w2vgd":64}},{"path":"src/main/java/seedu/address/logic/commands/AddPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_ASKING_PRICE;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_CONTACT;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAGS;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":" * Adds a property to the app.","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"public class AddPropertyCommand extends Command {","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"add property\";","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a property to the app. \\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-05"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_TYPE + \"TYPE \"","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_POSTAL + \"POSTAL \"","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"            + \"[\" + PREFIX_CLIENT_NAME + \"CLIENT_NAME] \"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"            + \"[\" + PREFIX_CLIENT_CONTACT + \"CLIENT_CONTACT] \"","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"            + \"[\" + PREFIX_CLIENT_EMAIL + \"CLIENT_EMAIL] \"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"            + \"[\" + PREFIX_CLIENT_ASKING_PRICE + \"CLIENT_ASKING_PRICE] \"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"            + \"[\" + PREFIX_TAGS + \"TAGS...]\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_NAME + \"Mayfair \"","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_TYPE + \"Condo \"","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_ADDRESS + \"1 Jurong East Street 32 \"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_POSTAL + \"609477 \"","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_DEADLINE + \"31-12-2021 \"","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_REMARK + \"Urgent to sell \"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_CLIENT_NAME + \"Alice \"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_CLIENT_CONTACT + \"91234567 \"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_CLIENT_EMAIL + \"alice@gmail.com \"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_CLIENT_ASKING_PRICE + \"$800,000 \"","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"            + PREFIX_TAGS + \"4 bedrooms, No need for renovation\";","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New property added: %1$s\";","lastModifiedDate":"2021-03-05"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"This property already exists in the app\";","lastModifiedDate":"2021-03-05"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    private final Property toAdd;","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"     * Creates an AddPropertyCommand to add the specified {@code Property}.","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    public AddPropertyCommand(Property property) {","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(property);","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        toAdd \u003d property;","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-05"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-05"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        if (model.hasProperty(toAdd)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2021-03-05"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        model.addProperty(toAdd);","lastModifiedDate":"2021-03-05"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-05"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-05"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"                || (other instanceof AddPropertyCommand // instanceof handles nulls","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 toAdd.equals(((AddPropertyCommand) other).toAdd));","lastModifiedDate":"2021-03-05"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"w2vgd":84}},{"path":"src/main/java/seedu/address/logic/commands/ClearAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" * Clears all of the data in both the property and appointment book.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"public class ClearAllCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    public static final String COMMAND_WORD \u003d \"clear all\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Both Property and Appointment book have been cleared!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"        model.setPropertyBook(new PropertyBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"        model.setAppointmentBook(new AppointmentBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Cp-John":23,"w2vgd":2}},{"path":"src/main/java/seedu/address/logic/commands/ClearAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Clears the data in the appointment book.","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"public class ClearAppointmentCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"    public static final String COMMAND_WORD \u003d \"clear appointment\";","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Appointment book has been cleared!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"        model.setAppointmentBook(new AppointmentBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Cp-John":5,"-":17,"w2vgd":1}},{"path":"src/main/java/seedu/address/logic/commands/ClearPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Clears the data in the property book.","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"public class ClearPropertyCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"    public static final String COMMAND_WORD \u003d \"clear property\";","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Property book has been cleared!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        model.setPropertyBook(new PropertyBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Cp-John":21,"w2vgd":1}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * The application should exit.","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"candyhy":6,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":" * Deletes an appointment identified using it\u0027s displayed index from the appointment book.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public static final String COMMAND_WORD \u003d \"delete appointment\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"            + \": Deletes the appointment identified by the index number used in the displayed appointment list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    public DeleteAppointmentCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"            throw new CommandException(MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"        Appointment appointmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS, appointmentToDelete));","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"                || (other instanceof DeleteAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteAppointmentCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Cp-John":53}},{"path":"src/main/java/seedu/address/logic/commands/DeletePropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":" * Deletes a property identified using it\u0027s displayed index from the property book.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"public class DeletePropertyCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public static final String COMMAND_WORD \u003d \"delete property\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"            + \": Deletes the property identified by the index number used in the displayed property list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_DELETE_PROPERTY_SUCCESS \u003d \"Deleted Property: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    public DeletePropertyCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"        List\u003cProperty\u003e lastShownList \u003d model.getFilteredPropertyList();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"            throw new CommandException(MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"        Property propertyToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"        model.deleteProperty(propertyToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROPERTY_SUCCESS, propertyToDelete));","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"                || (other instanceof DeletePropertyCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePropertyCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Cp-John":53}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.appointment.Date;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":" * Edits an appointment in the app.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"    public static final String COMMAND_WORD \u003d \"edit appointment\";","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits an appointment in the app. \\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"            + \"Parameters: INDEX\"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_TIME + \"TIME \\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_NAME + \"Meet Alex \"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_REMARK + \"at M hotel \"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_DATE + \"17-2-2021 \"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_TIME + \"1500 \";","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Edited appointment: %1$s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the app\";","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"    private final Index index;","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"     * Creates an EditAppointmentCommand to edit the specified {@code Appointment}.","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"    public EditAppointmentCommand(Index index, EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(editAppointmentDescriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editAppointmentDescriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"dvdweien"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        if (index.getZeroBased() \u003e\u003d model.getAppointmentListSize()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"dvdweien"},"content":"        Appointment appointmentToEdit \u003d model.getAppointment(index.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"dvdweien"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"dvdweien"},"content":"        if (!appointmentToEdit.isSameAppointment(editedAppointment) \u0026\u0026 model.hasAppointment(editedAppointment)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"dvdweien"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"dvdweien"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedAppointment));","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"dvdweien"},"content":"     * Creates and returns an {@code Appointment} with the details of {@code appointmentToEdit}","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"dvdweien"},"content":"     * edited with {@code editAppointmentDescriptor}.","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"dvdweien"},"content":"    private static Appointment createEditedAppointment(Appointment appointmentToEdit,","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"dvdweien"},"content":"                                                       EditAppointmentDescriptor editAppointmentDescriptor) {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"dvdweien"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"dvdweien"},"content":"        Name updatedName \u003d editAppointmentDescriptor.getName().orElse(appointmentToEdit.getName());","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"dvdweien"},"content":"        Remark updatedRemark \u003d editAppointmentDescriptor.getRemarks().orElse(appointmentToEdit.getRemarks());","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"dvdweien"},"content":"        Date updatedDate \u003d editAppointmentDescriptor.getDate().orElse(appointmentToEdit.getDate());","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"dvdweien"},"content":"        Time updatedTime \u003d editAppointmentDescriptor.getTime().orElse(appointmentToEdit.getTime());","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"dvdweien"},"content":"        return new Appointment(updatedName, updatedRemark, updatedDate, updatedTime);","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"dvdweien"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"dvdweien"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"dvdweien"},"content":"                || (other instanceof EditAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"dvdweien"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(((EditAppointmentCommand) other).editAppointmentDescriptor));","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"dvdweien"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"dvdweien"},"content":"        private Name name;","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"dvdweien"},"content":"        private Remark remark;","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"dvdweien"},"content":"        private Date date;","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"dvdweien"},"content":"        private Time time;","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"dvdweien"},"content":"        public EditAppointmentDescriptor() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"dvdweien"},"content":"        /**","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"dvdweien"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"dvdweien"},"content":"         */","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"dvdweien"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"dvdweien"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"dvdweien"},"content":"            setRemarks(toCopy.remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"dvdweien"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"dvdweien"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"dvdweien"},"content":"        /**","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"dvdweien"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"dvdweien"},"content":"         */","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"dvdweien"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"dvdweien"},"content":"            return CollectionUtil.isAnyNonNull(name, remark, date, time);","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"dvdweien"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"dvdweien"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"dvdweien"},"content":"        public void setRemarks(Remark remark) {","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"dvdweien"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cRemark\u003e getRemarks() {","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"dvdweien"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"dvdweien"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"dvdweien"},"content":"        public void setTime(Time time) {","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"dvdweien"},"content":"            this.time \u003d time;","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cTime\u003e getTime() {","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"dvdweien"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"dvdweien"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"dvdweien"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"dvdweien"},"content":"                return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"dvdweien"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"dvdweien"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"dvdweien"},"content":"            if (!(other instanceof EditAppointmentDescriptor)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"dvdweien"},"content":"                return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"dvdweien"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"dvdweien"},"content":"            // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"dvdweien"},"content":"            EditAppointmentDescriptor e \u003d (EditAppointmentDescriptor) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"dvdweien"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getRemarks().equals(e.getRemarks())","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getTime().equals(e.getTime());","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"dvdweien":179,"w2vgd":1}},{"path":"src/main/java/seedu/address/logic/commands/EditPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_ASKING_PRICE;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.client.AskingPrice;","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.client.Client;","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.client.Contact;","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.client.Email;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":" * Edits a property in the app.","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"public class EditPropertyCommand extends Command {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"    public static final String COMMAND_WORD \u003d \"edit property\";","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits a property in the app. \\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_TYPE + \"TYPE \"","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_POSTAL + \"POSTAL \"","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_REMARK + \"REMARK \"","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_CLIENT_NAME + \"CLIENT_NAME \"","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_CLIENT_CONTACT + \"CLIENT_CONTACT \"","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_CLIENT_EMAIL + \"CLIENT_EMAIL \"","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_CLIENT_ASKING_PRICE + \"CLIENT_ASKING_PRICE \\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_NAME + \"Mayfair \"","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_TYPE + \"Condo \"","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_ADDRESS + \"1 Jurong East Street 32 \"","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_POSTAL + \"609477 \"","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_DEADLINE + \"31-12-2021 \"","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_REMARK + \"Urgent to sell \"","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_CLIENT_NAME + \"Alice \"","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_CLIENT_CONTACT + \"91234567 \"","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_CLIENT_EMAIL + \"alice@gmail.com \"","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_CLIENT_ASKING_PRICE + \"$800,000\";","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Edited property: %1$s\";","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"This property already exists in the app\";","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"dvdweien"},"content":"    private final Index index;","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"dvdweien"},"content":"    private final EditPropertyDescriptor editPropertyDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"dvdweien"},"content":"     * Creates an EditPropertyCommand to edit the specified {@code Property}.","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyCommand(Index index, EditPropertyDescriptor editPropertyDescriptor) {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(editPropertyDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"dvdweien"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"dvdweien"},"content":"        this.editPropertyDescriptor \u003d new EditPropertyDescriptor(editPropertyDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"dvdweien"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        if (index.getZeroBased() \u003e\u003d model.getPropertyListSize()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"dvdweien"},"content":"        Property propertyToEdit \u003d model.getProperty(index.getZeroBased());","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"dvdweien"},"content":"        Property editedProperty \u003d createEditedProperty(propertyToEdit, editPropertyDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"dvdweien"},"content":"        if (!propertyToEdit.isSameProperty(editedProperty) \u0026\u0026 model.hasProperty(editedProperty)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"dvdweien"},"content":"        model.setProperty(index.getZeroBased(), editedProperty);","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"dvdweien"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"dvdweien"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedProperty));","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"dvdweien"},"content":"     * Creates and returns a {@code Property} with the details of {@code propertyToEdit}","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"dvdweien"},"content":"     * edited with {@code editPropertyDescriptor}.","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"dvdweien"},"content":"    private static Property createEditedProperty(Property propertyToEdit,","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"dvdweien"},"content":"                                                 EditPropertyDescriptor editPropertyDescriptor) {","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"dvdweien"},"content":"        assert propertyToEdit !\u003d null;","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":116,"author":{"gitId":"dvdweien"},"content":"        Name updatedName \u003d editPropertyDescriptor.getName().orElse(propertyToEdit.getName());","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"dvdweien"},"content":"        Type updatedType \u003d editPropertyDescriptor.getType().orElse(propertyToEdit.getPropertyType());","lastModifiedDate":"2021-03-11"},{"lineNumber":118,"author":{"gitId":"dvdweien"},"content":"        Address updatedAddress \u003d editPropertyDescriptor.getAddress().orElse(propertyToEdit.getAddress());","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"dvdweien"},"content":"        PostalCode updatedPostalCode \u003d editPropertyDescriptor.getPostalCode().orElse(propertyToEdit.getPostalCode());","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"dvdweien"},"content":"        Deadline updatedDeadline \u003d editPropertyDescriptor.getDeadline().orElse(propertyToEdit.getDeadline());","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"dvdweien"},"content":"        Remark updatedRemark \u003d editPropertyDescriptor.getRemarks().orElse(propertyToEdit.getRemarks());","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"dvdweien"},"content":"        Client updatedClient \u003d createEditedClient(propertyToEdit.getClient(),","lastModifiedDate":"2021-03-20"},{"lineNumber":124,"author":{"gitId":"dvdweien"},"content":"                editPropertyDescriptor.getClientDescriptor());","lastModifiedDate":"2021-03-20"},{"lineNumber":125,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPropertyDescriptor.getTags().orElse(propertyToEdit.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"dvdweien"},"content":"        return new Property(updatedName, updatedType, updatedAddress, updatedPostalCode, updatedDeadline,","lastModifiedDate":"2021-03-11"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"                updatedRemark, updatedClient, updatedTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":133,"author":{"gitId":"dvdweien"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"dvdweien"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2021-03-11"},{"lineNumber":135,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"dvdweien"},"content":"    private static Client createEditedClient(Client clientToEdit,","lastModifiedDate":"2021-03-11"},{"lineNumber":137,"author":{"gitId":"dvdweien"},"content":"                                                 Optional\u003cEditClientDescriptor\u003e clientDescriptor) {","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"dvdweien"},"content":"        if (clientDescriptor.isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"dvdweien"},"content":"            if (clientToEdit \u003d\u003d null) {","lastModifiedDate":"2021-03-20"},{"lineNumber":141,"author":{"gitId":"dvdweien"},"content":"                clientToEdit \u003d new Client();","lastModifiedDate":"2021-03-20"},{"lineNumber":142,"author":{"gitId":"dvdweien"},"content":"            }","lastModifiedDate":"2021-03-20"},{"lineNumber":143,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":144,"author":{"gitId":"dvdweien"},"content":"            EditClientDescriptor editClientDescriptor \u003d clientDescriptor.get();","lastModifiedDate":"2021-03-11"},{"lineNumber":145,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"dvdweien"},"content":"            Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getClientName());","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"dvdweien"},"content":"            Contact updatedContact \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":148,"author":{"gitId":"dvdweien"},"content":"                    editClientDescriptor.getContact().orElse(clientToEdit.getClientContact());","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"dvdweien"},"content":"            Email updatedEmail \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"dvdweien"},"content":"                    editClientDescriptor.getEmail().orElse(clientToEdit.getClientEmail());","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"dvdweien"},"content":"            AskingPrice updatedAskingPrice \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":152,"author":{"gitId":"dvdweien"},"content":"                    editClientDescriptor.getAskingPrice().orElse(clientToEdit.getClientAskingPrice());","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"dvdweien"},"content":"            return new Client(updatedName, updatedContact, updatedEmail, updatedAskingPrice);","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"dvdweien"},"content":"        } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"dvdweien"},"content":"            return clientToEdit;","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"dvdweien"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"dvdweien"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"dvdweien"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"dvdweien"},"content":"            return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"dvdweien"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"dvdweien"},"content":"        if (!(other instanceof EditPropertyCommand)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"dvdweien"},"content":"            return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"dvdweien"},"content":"        // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand e \u003d (EditPropertyCommand) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"dvdweien"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"dvdweien"},"content":"                \u0026\u0026 editPropertyDescriptor.equals(e.editPropertyDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":178,"author":{"gitId":"dvdweien"},"content":"    public static class EditPropertyDescriptor {","lastModifiedDate":"2021-03-11"},{"lineNumber":179,"author":{"gitId":"dvdweien"},"content":"        private Name name;","lastModifiedDate":"2021-03-11"},{"lineNumber":180,"author":{"gitId":"dvdweien"},"content":"        private Type type;","lastModifiedDate":"2021-03-11"},{"lineNumber":181,"author":{"gitId":"dvdweien"},"content":"        private Address address;","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"dvdweien"},"content":"        private PostalCode postalCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"dvdweien"},"content":"        private Deadline deadline;","lastModifiedDate":"2021-03-11"},{"lineNumber":184,"author":{"gitId":"dvdweien"},"content":"        private Remark remark;","lastModifiedDate":"2021-03-11"},{"lineNumber":185,"author":{"gitId":"dvdweien"},"content":"        private EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":188,"author":{"gitId":"dvdweien"},"content":"        public EditPropertyDescriptor() {}","lastModifiedDate":"2021-03-11"},{"lineNumber":189,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":190,"author":{"gitId":"dvdweien"},"content":"        /**","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"dvdweien"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-11"},{"lineNumber":192,"author":{"gitId":"dvdweien"},"content":"         */","lastModifiedDate":"2021-03-11"},{"lineNumber":193,"author":{"gitId":"dvdweien"},"content":"        public EditPropertyDescriptor(EditPropertyDescriptor toCopy) {","lastModifiedDate":"2021-03-12"},{"lineNumber":194,"author":{"gitId":"dvdweien"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"dvdweien"},"content":"            setType(toCopy.type);","lastModifiedDate":"2021-03-11"},{"lineNumber":196,"author":{"gitId":"dvdweien"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-03-11"},{"lineNumber":197,"author":{"gitId":"dvdweien"},"content":"            setPostalCode(toCopy.postalCode);","lastModifiedDate":"2021-03-11"},{"lineNumber":198,"author":{"gitId":"dvdweien"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2021-03-11"},{"lineNumber":199,"author":{"gitId":"dvdweien"},"content":"            setRemarks(toCopy.remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"dvdweien"},"content":"            setClientDescriptor(toCopy.editClientDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":203,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":204,"author":{"gitId":"dvdweien"},"content":"        /**","lastModifiedDate":"2021-03-11"},{"lineNumber":205,"author":{"gitId":"dvdweien"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-11"},{"lineNumber":206,"author":{"gitId":"dvdweien"},"content":"         */","lastModifiedDate":"2021-03-11"},{"lineNumber":207,"author":{"gitId":"dvdweien"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-11"},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"            return CollectionUtil.isAnyNonNull(name, type, address, postalCode, deadline, remark,","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"w2vgd"},"content":"                    editClientDescriptor, tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":211,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":212,"author":{"gitId":"dvdweien"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-11"},{"lineNumber":213,"author":{"gitId":"dvdweien"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-11"},{"lineNumber":214,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":215,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":216,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-11"},{"lineNumber":217,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-11"},{"lineNumber":218,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":219,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":220,"author":{"gitId":"dvdweien"},"content":"        public void setType(Type type) {","lastModifiedDate":"2021-03-11"},{"lineNumber":221,"author":{"gitId":"dvdweien"},"content":"            this.type \u003d type;","lastModifiedDate":"2021-03-11"},{"lineNumber":222,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":223,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":224,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cType\u003e getType() {","lastModifiedDate":"2021-03-11"},{"lineNumber":225,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(type);","lastModifiedDate":"2021-03-11"},{"lineNumber":226,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":227,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":228,"author":{"gitId":"dvdweien"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-11"},{"lineNumber":229,"author":{"gitId":"dvdweien"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-11"},{"lineNumber":230,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":231,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":232,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-11"},{"lineNumber":233,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-03-11"},{"lineNumber":234,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":235,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":236,"author":{"gitId":"dvdweien"},"content":"        public void setPostalCode(PostalCode postalCode) {","lastModifiedDate":"2021-03-11"},{"lineNumber":237,"author":{"gitId":"dvdweien"},"content":"            this.postalCode \u003d postalCode;","lastModifiedDate":"2021-03-11"},{"lineNumber":238,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":239,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":240,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cPostalCode\u003e getPostalCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":241,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(postalCode);","lastModifiedDate":"2021-03-11"},{"lineNumber":242,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":243,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":244,"author":{"gitId":"dvdweien"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2021-03-11"},{"lineNumber":245,"author":{"gitId":"dvdweien"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2021-03-11"},{"lineNumber":246,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":247,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":248,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2021-03-11"},{"lineNumber":249,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2021-03-11"},{"lineNumber":250,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":251,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":252,"author":{"gitId":"dvdweien"},"content":"        public void setRemarks(Remark remark) {","lastModifiedDate":"2021-03-15"},{"lineNumber":253,"author":{"gitId":"dvdweien"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-03-11"},{"lineNumber":254,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":255,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":256,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cRemark\u003e getRemarks() {","lastModifiedDate":"2021-03-15"},{"lineNumber":257,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-03-11"},{"lineNumber":258,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":259,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":260,"author":{"gitId":"dvdweien"},"content":"        public void setClientDescriptor(EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2021-03-11"},{"lineNumber":261,"author":{"gitId":"dvdweien"},"content":"            this.editClientDescriptor \u003d editClientDescriptor;","lastModifiedDate":"2021-03-11"},{"lineNumber":262,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":263,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":264,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cEditClientDescriptor\u003e getClientDescriptor() {","lastModifiedDate":"2021-03-11"},{"lineNumber":265,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(editClientDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":266,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":267,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":268,"author":{"gitId":"w2vgd"},"content":"        /**","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"w2vgd"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"w2vgd"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"w2vgd"},"content":"         */","lastModifiedDate":"2021-03-17"},{"lineNumber":272,"author":{"gitId":"w2vgd"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":273,"author":{"gitId":"w2vgd"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-17"},{"lineNumber":274,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":275,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":276,"author":{"gitId":"w2vgd"},"content":"        /**","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"w2vgd"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-17"},{"lineNumber":278,"author":{"gitId":"w2vgd"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-17"},{"lineNumber":279,"author":{"gitId":"w2vgd"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-17"},{"lineNumber":280,"author":{"gitId":"w2vgd"},"content":"         */","lastModifiedDate":"2021-03-17"},{"lineNumber":281,"author":{"gitId":"w2vgd"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"w2vgd"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":283,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":284,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":285,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":286,"author":{"gitId":"dvdweien"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":287,"author":{"gitId":"dvdweien"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":288,"author":{"gitId":"dvdweien"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-11"},{"lineNumber":289,"author":{"gitId":"dvdweien"},"content":"                return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":290,"author":{"gitId":"dvdweien"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":291,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":292,"author":{"gitId":"dvdweien"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":293,"author":{"gitId":"dvdweien"},"content":"            if (!(other instanceof EditPropertyDescriptor)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":294,"author":{"gitId":"dvdweien"},"content":"                return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":295,"author":{"gitId":"dvdweien"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":296,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":297,"author":{"gitId":"dvdweien"},"content":"            // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":298,"author":{"gitId":"dvdweien"},"content":"            EditPropertyDescriptor e \u003d (EditPropertyDescriptor) other;","lastModifiedDate":"2021-03-12"},{"lineNumber":299,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":300,"author":{"gitId":"dvdweien"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-11"},{"lineNumber":301,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getType().equals(e.getType())","lastModifiedDate":"2021-03-11"},{"lineNumber":302,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-03-11"},{"lineNumber":303,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getPostalCode().equals(e.getPostalCode())","lastModifiedDate":"2021-03-11"},{"lineNumber":304,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2021-03-11"},{"lineNumber":305,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getRemarks().equals(e.getRemarks())","lastModifiedDate":"2021-03-15"},{"lineNumber":306,"author":{"gitId":"w2vgd"},"content":"                    \u0026\u0026 getClientDescriptor().equals(e.getClientDescriptor())","lastModifiedDate":"2021-03-17"},{"lineNumber":307,"author":{"gitId":"w2vgd"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":308,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":309,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":310,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":311,"author":{"gitId":"dvdweien"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2021-03-11"},{"lineNumber":312,"author":{"gitId":"dvdweien"},"content":"        private Name name;","lastModifiedDate":"2021-03-11"},{"lineNumber":313,"author":{"gitId":"dvdweien"},"content":"        private Contact contact;","lastModifiedDate":"2021-03-11"},{"lineNumber":314,"author":{"gitId":"dvdweien"},"content":"        private Email email;","lastModifiedDate":"2021-03-11"},{"lineNumber":315,"author":{"gitId":"dvdweien"},"content":"        private AskingPrice askingPrice;","lastModifiedDate":"2021-03-11"},{"lineNumber":316,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":317,"author":{"gitId":"dvdweien"},"content":"        public EditClientDescriptor() {}","lastModifiedDate":"2021-03-11"},{"lineNumber":318,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":319,"author":{"gitId":"dvdweien"},"content":"        /**","lastModifiedDate":"2021-03-11"},{"lineNumber":320,"author":{"gitId":"dvdweien"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-11"},{"lineNumber":321,"author":{"gitId":"dvdweien"},"content":"         */","lastModifiedDate":"2021-03-11"},{"lineNumber":322,"author":{"gitId":"dvdweien"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2021-03-12"},{"lineNumber":323,"author":{"gitId":"dvdweien"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-11"},{"lineNumber":324,"author":{"gitId":"dvdweien"},"content":"            setContact(contact);","lastModifiedDate":"2021-03-11"},{"lineNumber":325,"author":{"gitId":"dvdweien"},"content":"            setEmail(email);","lastModifiedDate":"2021-03-11"},{"lineNumber":326,"author":{"gitId":"dvdweien"},"content":"            setAskingPrice(askingPrice);","lastModifiedDate":"2021-03-11"},{"lineNumber":327,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":328,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":329,"author":{"gitId":"dvdweien"},"content":"        /**","lastModifiedDate":"2021-03-11"},{"lineNumber":330,"author":{"gitId":"dvdweien"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-11"},{"lineNumber":331,"author":{"gitId":"dvdweien"},"content":"         */","lastModifiedDate":"2021-03-11"},{"lineNumber":332,"author":{"gitId":"dvdweien"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-11"},{"lineNumber":333,"author":{"gitId":"dvdweien"},"content":"            return CollectionUtil.isAnyNonNull(name, contact, email, askingPrice);","lastModifiedDate":"2021-03-11"},{"lineNumber":334,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":335,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":336,"author":{"gitId":"dvdweien"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-11"},{"lineNumber":337,"author":{"gitId":"dvdweien"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-11"},{"lineNumber":338,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":339,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":340,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-11"},{"lineNumber":341,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-11"},{"lineNumber":342,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":343,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":344,"author":{"gitId":"dvdweien"},"content":"        public void setContact(Contact contact) {","lastModifiedDate":"2021-03-11"},{"lineNumber":345,"author":{"gitId":"dvdweien"},"content":"            this.contact \u003d contact;","lastModifiedDate":"2021-03-11"},{"lineNumber":346,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":347,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":348,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cContact\u003e getContact() {","lastModifiedDate":"2021-03-11"},{"lineNumber":349,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(contact);","lastModifiedDate":"2021-03-11"},{"lineNumber":350,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":351,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":352,"author":{"gitId":"dvdweien"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-03-11"},{"lineNumber":353,"author":{"gitId":"dvdweien"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-03-11"},{"lineNumber":354,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":355,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":356,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-03-11"},{"lineNumber":357,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-03-11"},{"lineNumber":358,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":359,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":360,"author":{"gitId":"dvdweien"},"content":"        public void setAskingPrice(AskingPrice askingPrice) {","lastModifiedDate":"2021-03-11"},{"lineNumber":361,"author":{"gitId":"dvdweien"},"content":"            this.askingPrice \u003d askingPrice;","lastModifiedDate":"2021-03-11"},{"lineNumber":362,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":363,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":364,"author":{"gitId":"dvdweien"},"content":"        public Optional\u003cAskingPrice\u003e getAskingPrice() {","lastModifiedDate":"2021-03-11"},{"lineNumber":365,"author":{"gitId":"dvdweien"},"content":"            return Optional.ofNullable(askingPrice);","lastModifiedDate":"2021-03-11"},{"lineNumber":366,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":367,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":368,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":369,"author":{"gitId":"dvdweien"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":370,"author":{"gitId":"dvdweien"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":371,"author":{"gitId":"dvdweien"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-11"},{"lineNumber":372,"author":{"gitId":"dvdweien"},"content":"                return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":373,"author":{"gitId":"dvdweien"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":374,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":375,"author":{"gitId":"dvdweien"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":376,"author":{"gitId":"dvdweien"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":377,"author":{"gitId":"dvdweien"},"content":"                return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":378,"author":{"gitId":"dvdweien"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":379,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":380,"author":{"gitId":"dvdweien"},"content":"            // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":381,"author":{"gitId":"dvdweien"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2021-03-12"},{"lineNumber":382,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":383,"author":{"gitId":"dvdweien"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-11"},{"lineNumber":384,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getContact().equals(e.getContact())","lastModifiedDate":"2021-03-11"},{"lineNumber":385,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-03-11"},{"lineNumber":386,"author":{"gitId":"dvdweien"},"content":"                    \u0026\u0026 getAskingPrice().equals(e.getAskingPrice());","lastModifiedDate":"2021-03-11"},{"lineNumber":387,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":388,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":389,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"dvdweien":359,"w2vgd":30}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting PocketEstate as requested ...\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"w2vgd":1}},{"path":"src/main/java/seedu/address/logic/commands/FindAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":" * Finds and lists all appointments in appointment book containing any of the argument keywords.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"public class FindAppointmentCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"    public static final String COMMAND_WORD \u003d \"find appointment\";","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all appointments whose names contain any of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"            + \"Example: \" + COMMAND_WORD + \" charlie monday\";","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"    private final AppointmentContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"    public FindAppointmentCommand(AppointmentContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"        int appointmentListSize \u003d model.getFilteredAppointmentList().size();","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"                String.format(appointmentListSize \u003e 1","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"                        ? Messages.MESSAGE_APPOINTMENT_LISTED_OVERVIEW","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"                        : Messages.MESSAGE_APPOINTMENT_LISTED_OVERVIEW_SINGULAR, appointmentListSize));","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"                || (other instanceof FindAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"                \u0026\u0026 predicate.equals(((FindAppointmentCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"w-yuchen":45}},{"path":"src/main/java/seedu/address/logic/commands/FindPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.PropertyPredicateList;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":" * Finds and lists all properties in property book containing any of the argument keywords or by price","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":" * given.","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"public class FindPropertyCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"    public static final String COMMAND_WORD \u003d \"find property\";","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all properties containing any of \"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"            + \"the specified keywords (case-insensitive) and/or by giving a price and search for properties \"","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"            + \"with asking prices above or below that amount, then displaying them as a list with index \"","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"            + \"numbers.\\n\"","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"            + \"Parameters: [KEYWORD]... [pl/UPPER_PRICE_LIMIT] [pm/LOWER_PRICE_LIMIT] \\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"            + \"Price limits are inclusive. \\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"            + \"Example: \" + COMMAND_WORD + \" jurong\\n\"","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"            + COMMAND_WORD + \" pl/1000000\";","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"    private final PropertyPredicateList predicates;","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"    public FindPropertyCommand(PropertyPredicateList predicates) {","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"        model.updateFilteredPropertyList(predicates.combine());","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"        int propertyListSize \u003d model.getFilteredPropertyList().size();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"                String.format(propertyListSize \u003e 1","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"                        ? Messages.MESSAGE_PROPERTIES_LISTED_OVERVIEW","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"                        : Messages.MESSAGE_PROPERTIES_LISTED_OVERVIEW_SINGULAR, propertyListSize));","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"                || (other instanceof FindPropertyCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"                \u0026\u0026 predicates.equals(((FindPropertyCommand) other).predicates)); // state check","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"w-yuchen":51}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" * Lists all properties and appointments in the app to the user.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all properties and appointments\";","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"candyhy":5,"-":20,"w2vgd":1}},{"path":"src/main/java/seedu/address/logic/commands/SortAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_KEY;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_ORDER;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.AppointmentSortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.SortingOrder;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":" * Sorts appointment list.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"public class SortAppointmentCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    public static final String COMMAND_WORD \u003d \"sort appointment\";","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the appointment list based on the sorting key.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"            + PREFIX_SORTING_ORDER + \"SORTING_ORDER \"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"            + PREFIX_SORTING_KEY + \"SORTING_KEY \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"            + PREFIX_SORTING_ORDER + \"desc \"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"            + PREFIX_SORTING_KEY + \"datetime \";","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Appointment list sorted %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"    private static final Supplier\u003cCommandException\u003e invalidCommandExceptionSupplier \u003d () -\u003e new CommandException(","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"    private final SortAppointmentDescriptor sortAppointmentDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"     * Creates an SortAppointmentCommand to sort appointment list based on the information in","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"     * {@code sortAppointmentDescriptor}.","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"    public SortAppointmentCommand(SortAppointmentDescriptor sortAppointmentDescriptor) {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(sortAppointmentDescriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"        this.sortAppointmentDescriptor \u003d new SortAppointmentCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"                .SortAppointmentDescriptor(sortAppointmentDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cAppointment\u003e cmp \u003d createAppointmentComparator(sortAppointmentDescriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"        model.sortAppointmentList(cmp);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, sortAppointmentDescriptor));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"     * Creates and returns an {@code Comparator} with the details of {@code sortAppointmentDescriptor}","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"    private static Comparator\u003cAppointment\u003e createAppointmentComparator(","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"            SortAppointmentDescriptor sortAppointmentDescriptor) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"        assert sortAppointmentDescriptor !\u003d null;","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"        SortingOrder sortingOrder \u003d sortAppointmentDescriptor.getSortingOrder()","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"                .orElseThrow(invalidCommandExceptionSupplier);","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"        AppointmentSortingKey appointmentSortingKey \u003d sortAppointmentDescriptor.getAppointmentSortingKey()","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"                .orElseThrow(invalidCommandExceptionSupplier);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"        return (Appointment o1, Appointment o2) -\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"            int result;","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"            if (appointmentSortingKey.isName()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"                result \u003d o1.getName().compareTo(o2.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"            } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"                result \u003d o1.getDate().compareTo(o2.getDate());","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"                if (result \u003d\u003d 0) {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"                    result \u003d o1.getTime().compareTo(o2.getTime());","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"                }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"            if (sortingOrder.isAscendingOrder()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"                return result;","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"            } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"                return -1 * result;","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"        };","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"                || (other instanceof SortAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"                \u0026\u0026 sortAppointmentDescriptor.equals(((SortAppointmentCommand) other).sortAppointmentDescriptor));","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"Cp-John"},"content":"    public static class SortAppointmentDescriptor {","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"Cp-John"},"content":"        private SortingOrder sortingOrder;","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"Cp-John"},"content":"        private AppointmentSortingKey appointmentSortingKey;","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"        public SortAppointmentDescriptor() {}","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"        /**","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"         */","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"Cp-John"},"content":"        public SortAppointmentDescriptor(SortAppointmentDescriptor toCopy) {","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"Cp-John"},"content":"            setSortingOrder(toCopy.sortingOrder);","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"Cp-John"},"content":"            setAppointmentSortingKey(toCopy.appointmentSortingKey);","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"Cp-John"},"content":"        public void setSortingOrder(SortingOrder sortingOrder) {","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"Cp-John"},"content":"            this.sortingOrder \u003d sortingOrder;","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"Cp-John"},"content":"        public Optional\u003cSortingOrder\u003e getSortingOrder() {","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"Cp-John"},"content":"            return Optional.ofNullable(sortingOrder);","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"Cp-John"},"content":"        public void setAppointmentSortingKey(AppointmentSortingKey appointmentSortingKey) {","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"Cp-John"},"content":"            this.appointmentSortingKey \u003d appointmentSortingKey;","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"Cp-John"},"content":"        public Optional\u003cAppointmentSortingKey\u003e getAppointmentSortingKey() {","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"Cp-John"},"content":"            return Optional.ofNullable(appointmentSortingKey);","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"Cp-John"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"Cp-John"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"Cp-John"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"Cp-John"},"content":"                return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"Cp-John"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"Cp-John"},"content":"            if (!(other instanceof SortAppointmentDescriptor)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"Cp-John"},"content":"                return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"Cp-John"},"content":"            // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"Cp-John"},"content":"            SortAppointmentDescriptor e \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"Cp-John"},"content":"                    (SortAppointmentDescriptor) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"Cp-John"},"content":"            return getSortingOrder().equals(e.getSortingOrder())","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"Cp-John"},"content":"                    \u0026\u0026 getAppointmentSortingKey().equals(e.getAppointmentSortingKey());","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"Cp-John"},"content":"        public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"Cp-John"},"content":"            return String.format(\"in %1$sending order by %2$s\", sortingOrder, appointmentSortingKey);","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Cp-John":154}},{"path":"src/main/java/seedu/address/logic/commands/SortPropertyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_ORDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.PropertySortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.SortingOrder;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":" * Sorts property list.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"public class SortPropertyCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    public static final String COMMAND_WORD \u003d \"sort property\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the property list based on the sorting key.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"            + PREFIX_SORTING_ORDER + \"SORTING_ORDER \"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"            + PREFIX_SORTING_KEY + \"SORTING_KEY \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"            + PREFIX_SORTING_ORDER + \"desc \"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"            + PREFIX_SORTING_KEY + \"price \";","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Property list sorted %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"    private static final Supplier\u003cCommandException\u003e invalidCommandExceptionSupplier \u003d () -\u003e new CommandException(","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"    private final SortPropertyDescriptor sortPropertyDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"     * Creates an SortPropertyCommand to sort property list based on the information in","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"     * {@code sortPropertyDescriptor}.","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"    public SortPropertyCommand(SortPropertyDescriptor sortPropertyDescriptor) {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(sortPropertyDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"        this.sortPropertyDescriptor \u003d new SortPropertyCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"                .SortPropertyDescriptor(sortPropertyDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cProperty\u003e cmp \u003d createPropertyComparator(sortPropertyDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"        model.sortPropertyList(cmp);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, sortPropertyDescriptor));","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"     * Creates and returns an {@code Comparator} with the details of {@code sortPropertyDescriptor}","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"    private static Comparator\u003cProperty\u003e createPropertyComparator(","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"            SortPropertyDescriptor sortPropertyDescriptor) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"        assert sortPropertyDescriptor !\u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"        SortingOrder sortingOrder \u003d sortPropertyDescriptor.getSortingOrder()","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"                .orElseThrow(invalidCommandExceptionSupplier);","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"        PropertySortingKey propertySortingKey \u003d sortPropertyDescriptor.getPropertySortingKey()","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"                .orElseThrow(invalidCommandExceptionSupplier);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"        return (Property o1, Property o2) -\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"            int result;","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"            if (propertySortingKey.isName()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"                result \u003d o1.getName().compareTo(o2.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"            } else if (propertySortingKey.isPrice()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"                if (o1.getClient() \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"                    return 1;","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"                } else if (o2.getClient() \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"                    return -1;","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"                }","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"                result \u003d o1.getAskingPrice().compareTo(o2.getAskingPrice());","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"            } else if (propertySortingKey.isPostalCode()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"                result \u003d o1.getPostalCode().compareTo(o2.getPostalCode());","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"            } else if (propertySortingKey.isAddress()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"                result \u003d o1.getAddress().compareTo(o2.getAddress());","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"                result \u003d o1.getDeadline().compareTo(o2.getDeadline());","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"            if (sortingOrder.isAscendingOrder()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"                return result;","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"                return -1 * result;","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"Cp-John"},"content":"        };","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"Cp-John"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"                || (other instanceof SortPropertyCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"                \u0026\u0026 sortPropertyDescriptor.equals(((SortPropertyCommand) other).sortPropertyDescriptor));","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"    public static class SortPropertyDescriptor {","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"Cp-John"},"content":"        private SortingOrder sortingOrder;","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"Cp-John"},"content":"        private PropertySortingKey propertySortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"Cp-John"},"content":"        public SortPropertyDescriptor() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"Cp-John"},"content":"        /**","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"Cp-John"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"Cp-John"},"content":"         */","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"Cp-John"},"content":"        public SortPropertyDescriptor(SortPropertyDescriptor toCopy) {","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"Cp-John"},"content":"            setSortingOrder(toCopy.sortingOrder);","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"Cp-John"},"content":"            setPropertySortingKey(toCopy.propertySortingKey);","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"Cp-John"},"content":"        public void setSortingOrder(SortingOrder sortingOrder) {","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"Cp-John"},"content":"            this.sortingOrder \u003d sortingOrder;","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"Cp-John"},"content":"        public Optional\u003cSortingOrder\u003e getSortingOrder() {","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"Cp-John"},"content":"            return Optional.ofNullable(sortingOrder);","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"Cp-John"},"content":"        public void setPropertySortingKey(PropertySortingKey propertySortingKey) {","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"Cp-John"},"content":"            this.propertySortingKey \u003d propertySortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"Cp-John"},"content":"        public Optional\u003cPropertySortingKey\u003e getPropertySortingKey() {","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"Cp-John"},"content":"            return Optional.ofNullable(propertySortingKey);","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"Cp-John"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"Cp-John"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"Cp-John"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"Cp-John"},"content":"                return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"Cp-John"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"Cp-John"},"content":"            if (!(other instanceof SortPropertyDescriptor)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"Cp-John"},"content":"                return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"Cp-John"},"content":"            // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"Cp-John"},"content":"            SortPropertyDescriptor e \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"Cp-John"},"content":"                    (SortPropertyDescriptor) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"Cp-John"},"content":"            return getSortingOrder().equals(e.getSortingOrder())","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"Cp-John"},"content":"                    \u0026\u0026 getPropertySortingKey().equals(e.getPropertySortingKey());","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"Cp-John"},"content":"        public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"Cp-John"},"content":"            return String.format(\"in %1$sending order by %2$s\", sortingOrder, propertySortingKey);","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":162}},{"path":"src/main/java/seedu/address/logic/commands/update/UpdateCancelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.commands.update;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Status;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"public class UpdateCancelCommand extends UpdateCommand {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"    private final Index index;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"    public UpdateCancelCommand(Index index) {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        if (index.getZeroBased() \u003e\u003d model.getPropertyListSize()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"        Property propertyToEdit \u003d model.getProperty(index.getZeroBased());","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"        Status status \u003d propertyToEdit.getStatus();","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(MESSAGE_NULL_STATUS);","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"        Property editedProperty \u003d createEditedProperty(propertyToEdit, null);","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"        model.setProperty(index.getZeroBased(), editedProperty);","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedProperty));","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":42,"w2vgd":1}},{"path":"src/main/java/seedu/address/logic/commands/update/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.commands.update;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPDATE;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.client.Client;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Status;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"public abstract class UpdateCommand extends Command {","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the status of a property in the app. \\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"            + PREFIX_UPDATE + \"new AMOUNT|proceed|cancel\\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"            + \"u/new 600,000\";","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Updated property: %1$s\";","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_PRE_EXISTING_STATUS \u003d \"Property already has a status\";","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_NULL_STATUS \u003d \"Property does not have a status\";","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_FINAL_STATUS \u003d \"Property sale is already completed\";","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"     * Creates and returns a {@code Property} with the details of {@code propertyToEdit}","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"     * edited with {@code editPropertyDescriptor}.","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"    static Property createEditedProperty(Property propertyToEdit, Status status) {","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"        assert propertyToEdit !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"        Name updatedName \u003d propertyToEdit.getName();","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"        Type updatedType \u003d propertyToEdit.getPropertyType();","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"        Address updatedAddress \u003d propertyToEdit.getAddress();","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"        PostalCode updatedPostalCode \u003d propertyToEdit.getPostalCode();","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"        Deadline updatedDeadline \u003d propertyToEdit.getDeadline();","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"        Remark updatedRemark \u003d propertyToEdit.getRemarks();","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"        Client updatedClient \u003d propertyToEdit.getClient();","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"        Set\u003cTag\u003e updatedTags \u003d propertyToEdit.getTags();","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"        return new Property(updatedName, updatedType, updatedAddress, updatedPostalCode, updatedDeadline,","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"                updatedRemark, updatedClient, updatedTags, status);","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":57}},{"path":"src/main/java/seedu/address/logic/commands/update/UpdateNewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.commands.update;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Offer;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Option;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Status;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"public class UpdateNewCommand extends UpdateCommand {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"    private final Offer amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"    private final Index index;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"     * Creates a new status for the property at the index with the provided amount","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"     * @param index","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"     * @param amount","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"    public UpdateNewCommand(Index index, Offer amount) {","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        if (index.getZeroBased() \u003e\u003d model.getPropertyListSize()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"        Property propertyToEdit \u003d model.getProperty(index.getZeroBased());","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"        Status status \u003d propertyToEdit.getStatus();","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"        if (status !\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(MESSAGE_PRE_EXISTING_STATUS);","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"        Property editedProperty \u003d createEditedProperty(propertyToEdit, new Option(amount));","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"        model.setProperty(index.getZeroBased(), editedProperty);","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedProperty));","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":51,"w2vgd":1}},{"path":"src/main/java/seedu/address/logic/commands/update/UpdateProceedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.commands.update;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROPERTIES;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Status;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"public class UpdateProceedCommand extends UpdateCommand {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"    private final Index index;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"    public UpdateProceedCommand(Index index) {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        if (index.getZeroBased() \u003e\u003d model.getPropertyListSize()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"        Property propertyToEdit \u003d model.getProperty(index.getZeroBased());","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"        Status status \u003d propertyToEdit.getStatus();","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(MESSAGE_NULL_STATUS);","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"        Status nextStatus \u003d status.next();","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"        if (status.equals(nextStatus)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"            throw new CommandException(MESSAGE_FINAL_STATUS);","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"        Property editedProperty \u003d createEditedProperty(propertyToEdit, nextStatus);","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"        model.setProperty(index.getZeroBased(), editedProperty);","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"        model.updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedProperty));","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":48,"w2vgd":1}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Date;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":" * Parses input arguments and creates a new AddAppointmentCommand object.","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAppointmentCommand","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     * and returns an AddAppointmentCommand object for execution.","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_REMARK, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_REMARK, PREFIX_DATE, PREFIX_TIME)","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        Date date \u003d ParserUtil.parseAppointmentDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        Time time \u003d ParserUtil.parseAppointmentTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        Appointment appointment \u003d new Appointment(name, remark, date, time);","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"candyhy":1,"w2vgd":57}},{"path":"src/main/java/seedu/address/logic/parser/AddPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_ASKING_PRICE;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_CONTACT;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAGS;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.commands.AddPropertyCommand;","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.AskingPrice;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Client;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Contact;","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Email;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":" * Parses input arguments and creates a new AddPropertyCommand object.","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"public class AddPropertyCommandParser implements Parser\u003cAddPropertyCommand\u003e {","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPropertyCommand","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     * and returns an AddPropertyCommand object for execution.","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public AddPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TYPE, PREFIX_ADDRESS, PREFIX_POSTAL,","lastModifiedDate":"2021-03-05"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"                        PREFIX_DEADLINE, PREFIX_REMARK, PREFIX_CLIENT_NAME, PREFIX_CLIENT_CONTACT,","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"                        PREFIX_CLIENT_EMAIL, PREFIX_CLIENT_ASKING_PRICE, PREFIX_TAGS);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TYPE, PREFIX_ADDRESS, PREFIX_POSTAL, PREFIX_DEADLINE)","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        Type type \u003d ParserUtil.parsePropertyType(argMultimap.getValue(PREFIX_TYPE).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        Address address \u003d ParserUtil.parsePropertyAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        PostalCode postal \u003d ParserUtil.parsePropertyPostal(argMultimap.getValue(PREFIX_POSTAL).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        Deadline deadline \u003d ParserUtil.parsePropertyDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getValue(PREFIX_TAGS).orElse(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"        if (!anyClientPrefixesPresent(argMultimap, PREFIX_CLIENT_NAME, PREFIX_CLIENT_CONTACT, PREFIX_CLIENT_EMAIL,","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"                PREFIX_CLIENT_ASKING_PRICE)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"            Property property \u003d new Property(name, type, address, postal, deadline, remark, tagList);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"            return new AddPropertyCommand(property);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        Name clientName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_CLIENT_NAME).orElse(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        Contact clientContact \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"                ParserUtil.parseClientContact(argMultimap.getValue(PREFIX_CLIENT_CONTACT).orElse(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"        Email clientEmail \u003d ParserUtil.parseClientEmail(argMultimap.getValue(PREFIX_CLIENT_EMAIL).orElse(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        AskingPrice clientAskingPrice \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"                ParserUtil.parseClientAskingPrice(argMultimap.getValue(PREFIX_CLIENT_ASKING_PRICE).orElse(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        Client client \u003d new Client(clientName, clientContact, clientEmail, clientAskingPrice);","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        Property property \u003d new Property(name, type, address, postal, deadline, remark, client, tagList);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"        return new AddPropertyCommand(property);","lastModifiedDate":"2021-03-05"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-05"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-05"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-05"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-05"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"     * Returns true if any of the client prefixes are present in the given {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"    private static boolean anyClientPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"candyhy":13,"w2vgd":84}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     **/","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"candyhy":3,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"candyhy":1,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    // Prefix definitions for name, remark and tag","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_TAGS \u003d new Prefix(\"tags/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    // Prefix definitions for property attributes","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_TYPE \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_POSTAL \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    // Prefix definitions for client attributes","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_CLIENT_NAME \u003d new Prefix(\"cn/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_CLIENT_CONTACT \u003d new Prefix(\"cc/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_CLIENT_EMAIL \u003d new Prefix(\"ce/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_CLIENT_ASKING_PRICE \u003d new Prefix(\"ca/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    // Prefix definitions for appointment attributes","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    // Prefix definitions for property find","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_PROPERTY_PRICE_MORE \u003d new Prefix(\"pm/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_PROPERTY_PRICE_LESS \u003d new Prefix(\"pl/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    // Prefix definitions for sorting keys and sorting order","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_SORTING_KEY \u003d new Prefix(\"k/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    public static final Prefix PREFIX_SORTING_ORDER \u003d new Prefix(\"o/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"    // Prefix definitions for update command","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"    public static final Prefix PREFIX_UPDATE \u003d new Prefix(\"u/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dvdweien":2,"-":10,"w2vgd":27}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":" * Parses input arguments and creates a new DeleteAppointmentCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAppointmentCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"     * and returns a DeleteAppointmentCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"            return new DeleteAppointmentCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Cp-John":30}},{"path":"src/main/java/seedu/address/logic/parser/DeletePropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.DeletePropertyCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":" * Parses input arguments and creates a new DeletePropertyCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"public class DeletePropertyCommandParser implements Parser\u003cDeletePropertyCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePropertyCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"     * and returns a DeletePropertyCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    public DeletePropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"            return new DeletePropertyCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePropertyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Cp-John":9,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":" * Parses input arguments and creates a new EditAppointmentCommand object.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"     * Parses the given {@code String} of arguments in the context of the EditAppointmentCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"     * and returns an EditAppointmentCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_REMARK, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"        Index index;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"            editAppointmentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"            editAppointmentDescriptor.setRemarks(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"            editAppointmentDescriptor.setDate(ParserUtil.parseAppointmentDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"            editAppointmentDescriptor.setTime(ParserUtil.parseAppointmentTime(argMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"        return new EditAppointmentCommand(index, editAppointmentDescriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"dvdweien":61}},{"path":"src/main/java/seedu/address/logic/parser/EditPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_ASKING_PRICE;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_CONTACT;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAGS;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditPropertyCommand;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditPropertyCommand.EditClientDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":" * Parses input arguments and creates a new EditPropertyCommand object.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"public class EditPropertyCommandParser implements Parser\u003cEditPropertyCommand\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPropertyCommand","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"     * and returns an EditPropertyCommand object for execution.","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TYPE, PREFIX_ADDRESS, PREFIX_POSTAL,","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"                        PREFIX_DEADLINE, PREFIX_REMARK, PREFIX_CLIENT_NAME, PREFIX_CLIENT_CONTACT,","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"                        PREFIX_CLIENT_EMAIL, PREFIX_CLIENT_ASKING_PRICE, PREFIX_TAGS);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"        Index index;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"        try {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPropertyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        EditPropertyDescriptor editPropertyDescriptor \u003d new EditPropertyDescriptor();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"            editPropertyDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_TYPE).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"            editPropertyDescriptor.setType(ParserUtil.parsePropertyType(argMultimap.getValue(PREFIX_TYPE).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"            editPropertyDescriptor.setAddress(","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"                    ParserUtil.parsePropertyAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_POSTAL).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"dvdweien"},"content":"            editPropertyDescriptor.setPostalCode(","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"dvdweien"},"content":"                    ParserUtil.parsePropertyPostal(argMultimap.getValue(PREFIX_POSTAL).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"dvdweien"},"content":"            editPropertyDescriptor.setDeadline(","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"dvdweien"},"content":"                    ParserUtil.parsePropertyDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"dvdweien"},"content":"            editPropertyDescriptor.setRemarks(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"dvdweien"},"content":"        EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_NAME).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"dvdweien"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_CLIENT_NAME).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_CONTACT).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":78,"author":{"gitId":"dvdweien"},"content":"            editClientDescriptor.setContact(","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"dvdweien"},"content":"                    ParserUtil.parseClientContact(argMultimap.getValue(PREFIX_CLIENT_CONTACT).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_EMAIL).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"dvdweien"},"content":"            editClientDescriptor.setEmail(ParserUtil.parseClientEmail(argMultimap.getValue(PREFIX_CLIENT_EMAIL).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_CLIENT_ASKING_PRICE).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"dvdweien"},"content":"            editClientDescriptor.setAskingPrice(","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"dvdweien"},"content":"                    ParserUtil.parseClientAskingPrice(argMultimap.getValue(PREFIX_CLIENT_ASKING_PRICE).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":87,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"        if (argMultimap.getValue(PREFIX_TAGS).isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"            editPropertyDescriptor.setTags(ParserUtil.parseTags(argMultimap.getValue(PREFIX_TAGS).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"dvdweien"},"content":"        if (editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"dvdweien"},"content":"            editPropertyDescriptor.setClientDescriptor(editClientDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"dvdweien"},"content":"        if (!editPropertyDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"dvdweien"},"content":"            throw new ParseException(EditPropertyCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"dvdweien"},"content":"        return new EditPropertyCommand(index, editPropertyDescriptor);","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"dvdweien":95,"w2vgd":8}},{"path":"src/main/java/seedu/address/logic/parser/FindAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":" * Parses input arguments and creates a new FindAppointmentCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"public class FindAppointmentCommandParser implements Parser\u003cFindAppointmentCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"     * Parses the given {@code String} of arguments in the context of the FindAppointmentCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"     * and returns a FindAppointmentCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"    public FindAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"        return new FindAppointmentCommand(new AppointmentContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"-":24,"w-yuchen":10}},{"path":"src/main/java/seedu/address/logic/parser/FindPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROPERTY_PRICE_LESS;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PROPERTY_PRICE_MORE;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.FindPropertyCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.PropertyContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.PropertyPredicateList;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.PropertyPricePredicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":" * Parses input arguments and creates a new FindPropertyCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"public class FindPropertyCommandParser implements Parser\u003cFindPropertyCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPropertyCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"     * and returns a FindPropertyCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    public FindPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"        List\u003cPredicate\u003cProperty\u003e\u003e predicates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"        for (String s : nameKeywords) {","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"            if (s.startsWith(String.valueOf(PREFIX_PROPERTY_PRICE_MORE))) {","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"                predicates.add(new PropertyPricePredicate(s.split(\"/\")[1], false));","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"            } else if (s.startsWith(String.valueOf(PREFIX_PROPERTY_PRICE_LESS))) {","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"                predicates.add(new PropertyPricePredicate(s.split(\"/\")[1], true));","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"            } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"                keywords.add(s);","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"            }","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"        if (keywords.size() \u003e 0) {","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"            predicates.add(new PropertyContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"        return new FindPropertyCommand(new PropertyPredicateList(predicates));","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"w-yuchen":57}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"candyhy":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Date;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.AskingPrice;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Contact;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Email;","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Offer;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.AppointmentSortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.PropertySortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.SortingOrder;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.util.DateTimeFormat;","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  General parser methods for shared classes \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"     * @param name The name string to be parsed.","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Name}.","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code name} is invalid.","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"            return null;","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String remark} into a {@code Remark}.","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"     * @param remark The remark string to be parsed.","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Remark}.","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code remark} is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"            return null;","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code tag} is invalid.","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String tagsString}, with a comma as the delimiter, into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"     * @param tagsString The string containing possibly multiple tags to be parsed.","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code tagsString} is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"    public static Set\u003cTag\u003e parseTags(String tagsString) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"        Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"        if (tagsString \u003d\u003d null || tagsString.isBlank()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"            return tagSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"        String trimmedTagsString \u003d tagsString.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"        String[] tagList \u003d trimmedTagsString.split(\",\");","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"        for (String tag: tagList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"            tagSet.add(parseTag(tag));","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"        return tagSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  Parser methods for property attributes \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String type} into a {@code Type}.","lastModifiedDate":"2021-03-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"     * @param type The property type string to be parsed.","lastModifiedDate":"2021-03-06"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Type}.","lastModifiedDate":"2021-03-06"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code type} is invalid.","lastModifiedDate":"2021-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"    public static Type parsePropertyType(String type) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(type);","lastModifiedDate":"2021-03-05"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2021-03-05"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"        if (!Type.isValidType(trimmedType)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(Type.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"        return new Type(trimmedType);","lastModifiedDate":"2021-03-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"     * Parses an {@code String address} into an {@code Address}.","lastModifiedDate":"2021-03-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"w2vgd"},"content":"     * @param address The property address string to be parsed.","lastModifiedDate":"2021-03-06"},{"lineNumber":153,"author":{"gitId":"w2vgd"},"content":"     * @return An {@code Address}.","lastModifiedDate":"2021-03-06"},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code address} is invalid.","lastModifiedDate":"2021-03-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"    public static Address parsePropertyAddress(String address) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String postal} into a {@code Postal}.","lastModifiedDate":"2021-03-06"},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-06"},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":"     * @param postal The property postal string to be parsed.","lastModifiedDate":"2021-03-06"},{"lineNumber":170,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Postal}.","lastModifiedDate":"2021-03-06"},{"lineNumber":171,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code postal} is invalid.","lastModifiedDate":"2021-03-06"},{"lineNumber":172,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"    public static PostalCode parsePropertyPostal(String postal) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(postal);","lastModifiedDate":"2021-03-05"},{"lineNumber":175,"author":{"gitId":"w2vgd"},"content":"        String trimmedPostal \u003d postal.trim();","lastModifiedDate":"2021-03-05"},{"lineNumber":176,"author":{"gitId":"w2vgd"},"content":"        if (!PostalCode.isValidPostal(trimmedPostal)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":177,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"w2vgd"},"content":"        return new PostalCode(trimmedPostal);","lastModifiedDate":"2021-03-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2021-03-06"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-06"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"     * @param deadline The property deadline string to be parsed.","lastModifiedDate":"2021-03-06"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Deadline}.","lastModifiedDate":"2021-03-06"},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code deadline} is invalid.","lastModifiedDate":"2021-03-06"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"    public static Deadline parsePropertyDeadline(String deadline) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-05"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2021-03-05"},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"        try {","lastModifiedDate":"2021-03-05"},{"lineNumber":194,"author":{"gitId":"w2vgd"},"content":"            return new Deadline(LocalDate.parse(trimmedDeadline, DateTimeFormat.INPUT_DATE_FORMAT));","lastModifiedDate":"2021-03-07"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-03-05"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  Parser methods for client attributes \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String contact} into a {@code Contact}.","lastModifiedDate":"2021-03-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":206,"author":{"gitId":"w2vgd"},"content":"     * @param contact The client contact string to be parsed.","lastModifiedDate":"2021-03-09"},{"lineNumber":207,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Contact}.","lastModifiedDate":"2021-03-09"},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code contact} is invalid.","lastModifiedDate":"2021-03-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":210,"author":{"gitId":"w2vgd"},"content":"    public static Contact parseClientContact(String contact) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":211,"author":{"gitId":"w2vgd"},"content":"        if (contact \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":212,"author":{"gitId":"w2vgd"},"content":"            return null;","lastModifiedDate":"2021-03-09"},{"lineNumber":213,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":214,"author":{"gitId":"w2vgd"},"content":"        String trimmedContact \u003d contact.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":215,"author":{"gitId":"w2vgd"},"content":"        if (!Contact.isValidContact(trimmedContact)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":216,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(Contact.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":217,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"        return new Contact(trimmedContact);","lastModifiedDate":"2021-03-09"},{"lineNumber":219,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":220,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":222,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String email} into a {@code Email}.","lastModifiedDate":"2021-03-09"},{"lineNumber":223,"author":{"gitId":"w2vgd"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":224,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":225,"author":{"gitId":"w2vgd"},"content":"     * @param email The client email string to be parsed.","lastModifiedDate":"2021-03-09"},{"lineNumber":226,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Email}.","lastModifiedDate":"2021-03-09"},{"lineNumber":227,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code email} is invalid.","lastModifiedDate":"2021-03-09"},{"lineNumber":228,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":229,"author":{"gitId":"w2vgd"},"content":"    public static Email parseClientEmail(String email) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":230,"author":{"gitId":"w2vgd"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":231,"author":{"gitId":"w2vgd"},"content":"            return null;","lastModifiedDate":"2021-03-09"},{"lineNumber":232,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2021-03-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":241,"author":{"gitId":"w2vgd"},"content":"     * Parses an {@code String askingPrice} into an {@code AskingPrice}.","lastModifiedDate":"2021-03-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":244,"author":{"gitId":"w2vgd"},"content":"     * @param askingPrice The client asking price string to be parsed.","lastModifiedDate":"2021-03-09"},{"lineNumber":245,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code AskingPrice}.","lastModifiedDate":"2021-03-09"},{"lineNumber":246,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code askingPrice} is invalid.","lastModifiedDate":"2021-03-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":248,"author":{"gitId":"w2vgd"},"content":"    public static AskingPrice parseClientAskingPrice(String askingPrice) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":249,"author":{"gitId":"w2vgd"},"content":"        if (askingPrice \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":250,"author":{"gitId":"w2vgd"},"content":"            return null;","lastModifiedDate":"2021-03-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":252,"author":{"gitId":"w2vgd"},"content":"        String trimmedAskingPrice \u003d askingPrice.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":253,"author":{"gitId":"w2vgd"},"content":"        if (!AskingPrice.isValidAskingPrice(trimmedAskingPrice)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":254,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(AskingPrice.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":255,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":256,"author":{"gitId":"w2vgd"},"content":"        return new AskingPrice(trimmedAskingPrice);","lastModifiedDate":"2021-03-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":259,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  Parser methods for appointment attributes \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":260,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":262,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2021-03-07"},{"lineNumber":263,"author":{"gitId":"w2vgd"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-06"},{"lineNumber":264,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":265,"author":{"gitId":"w2vgd"},"content":"     * @param date The appointment meeting date string to be parsed.","lastModifiedDate":"2021-03-07"},{"lineNumber":266,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Date}.","lastModifiedDate":"2021-03-07"},{"lineNumber":267,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code date} is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":269,"author":{"gitId":"w2vgd"},"content":"    public static Date parseAppointmentDate(String date) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":270,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-07"},{"lineNumber":271,"author":{"gitId":"w2vgd"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":272,"author":{"gitId":"w2vgd"},"content":"        try {","lastModifiedDate":"2021-03-07"},{"lineNumber":273,"author":{"gitId":"w2vgd"},"content":"            return new Date(LocalDate.parse(trimmedDate, DateTimeFormat.INPUT_DATE_FORMAT));","lastModifiedDate":"2021-03-07"},{"lineNumber":274,"author":{"gitId":"w2vgd"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-03-07"},{"lineNumber":275,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":278,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":279,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":280,"author":{"gitId":"w2vgd"},"content":"     * Parses a {@code String time} into a {@code Time}.","lastModifiedDate":"2021-03-07"},{"lineNumber":281,"author":{"gitId":"w2vgd"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-06"},{"lineNumber":282,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":283,"author":{"gitId":"w2vgd"},"content":"     * @param time The appointment meeting time string to be parsed.","lastModifiedDate":"2021-03-07"},{"lineNumber":284,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Time}.","lastModifiedDate":"2021-03-07"},{"lineNumber":285,"author":{"gitId":"w2vgd"},"content":"     * @throws ParseException If the given {@code time} is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":286,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":287,"author":{"gitId":"w2vgd"},"content":"    public static Time parseAppointmentTime(String time) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":288,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-03-15"},{"lineNumber":289,"author":{"gitId":"w2vgd"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":290,"author":{"gitId":"w2vgd"},"content":"        try {","lastModifiedDate":"2021-03-07"},{"lineNumber":291,"author":{"gitId":"w2vgd"},"content":"            return new Time(LocalTime.parse(trimmedTime, DateTimeFormat.INPUT_TIME_FORMAT));","lastModifiedDate":"2021-03-07"},{"lineNumber":292,"author":{"gitId":"w2vgd"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-03-07"},{"lineNumber":293,"author":{"gitId":"w2vgd"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":294,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":295,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":296,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":297,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  Parser methods for sorting \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":298,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":299,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":300,"author":{"gitId":"Cp-John"},"content":"     * Parses {@code String sortingKey} into a {@code AppointmentSortingKey}.","lastModifiedDate":"2021-03-15"},{"lineNumber":301,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":302,"author":{"gitId":"Cp-John"},"content":"    public static AppointmentSortingKey parseAppointmentSortingKey(String sortingKey) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":303,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(sortingKey);","lastModifiedDate":"2021-03-15"},{"lineNumber":304,"author":{"gitId":"Cp-John"},"content":"        String trimmedSortingKey \u003d sortingKey.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":305,"author":{"gitId":"Cp-John"},"content":"        if (!AppointmentSortingKey.isValidAppointmentSortingKey(trimmedSortingKey)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":306,"author":{"gitId":"Cp-John"},"content":"            throw new ParseException(AppointmentSortingKey.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":307,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":308,"author":{"gitId":"Cp-John"},"content":"        return new AppointmentSortingKey(trimmedSortingKey);","lastModifiedDate":"2021-03-15"},{"lineNumber":309,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":310,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":311,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":312,"author":{"gitId":"Cp-John"},"content":"     * Parses {@code String sortingKey} into a {@code PropertySortingKey}.","lastModifiedDate":"2021-03-16"},{"lineNumber":313,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":314,"author":{"gitId":"Cp-John"},"content":"    public static PropertySortingKey parsePropertySortingKey(String sortingKey) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":315,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(sortingKey);","lastModifiedDate":"2021-03-16"},{"lineNumber":316,"author":{"gitId":"Cp-John"},"content":"        String trimmedSortingKey \u003d sortingKey.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":317,"author":{"gitId":"Cp-John"},"content":"        if (!PropertySortingKey.isValidPropertySortingKey(trimmedSortingKey)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":318,"author":{"gitId":"Cp-John"},"content":"            throw new ParseException(PropertySortingKey.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":319,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":320,"author":{"gitId":"Cp-John"},"content":"        return new PropertySortingKey(trimmedSortingKey);","lastModifiedDate":"2021-03-16"},{"lineNumber":321,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":322,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":323,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":324,"author":{"gitId":"Cp-John"},"content":"     * Parses {@code String sortingOrder} into a {@code SortingOrder}.","lastModifiedDate":"2021-03-15"},{"lineNumber":325,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":326,"author":{"gitId":"Cp-John"},"content":"    public static SortingOrder parseSortingOrder(String sortingOrder) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":327,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(sortingOrder);","lastModifiedDate":"2021-03-15"},{"lineNumber":328,"author":{"gitId":"Cp-John"},"content":"        String trimmedSortingOrder \u003d sortingOrder.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":329,"author":{"gitId":"Cp-John"},"content":"        if (!SortingOrder.isValidSortingOrder(trimmedSortingOrder)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":330,"author":{"gitId":"Cp-John"},"content":"            throw new ParseException(SortingOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":331,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":332,"author":{"gitId":"Cp-John"},"content":"        return new SortingOrder(trimmedSortingOrder);","lastModifiedDate":"2021-03-15"},{"lineNumber":333,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":334,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":335,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":336,"author":{"gitId":"dvdweien"},"content":"     * Parses {@code String amount} into an {@code Offer}.","lastModifiedDate":"2021-03-21"},{"lineNumber":337,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":338,"author":{"gitId":"dvdweien"},"content":"    public static Offer parseOffer(String amount) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":339,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(amount);","lastModifiedDate":"2021-03-21"},{"lineNumber":340,"author":{"gitId":"dvdweien"},"content":"        String trimmedAmount \u003d amount.trim();","lastModifiedDate":"2021-03-21"},{"lineNumber":341,"author":{"gitId":"dvdweien"},"content":"        if (!Offer.isValidOffer(trimmedAmount)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":342,"author":{"gitId":"dvdweien"},"content":"            throw new ParseException(Offer.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":343,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":344,"author":{"gitId":"dvdweien"},"content":"        return new Offer(trimmedAmount);","lastModifiedDate":"2021-03-21"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dvdweien":12,"Cp-John":38,"candyhy":1,"-":101,"w2vgd":194}},{"path":"src/main/java/seedu/address/logic/parser/PocketEstateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.AddPropertyCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.ClearAllCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.ClearAppointmentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.ClearPropertyCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.DeletePropertyCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.EditPropertyCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.FindPropertyCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortAppointmentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortPropertyCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.update.UpdateCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"public class PocketEstateParser {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"            Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+(\\\\s(appointment|property|all))?)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        // To satisfy the condition of \"extraneous parameters will be ignored\" in command format description","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        if (commandWord.startsWith(HelpCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        } else if (commandWord.startsWith(ListCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"            return new ListCommand();","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        } else if (commandWord.startsWith(ExitCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        case AddPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"            return new AddPropertyCommandParser().parse(arguments);","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"dvdweien"},"content":"        case EditPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"dvdweien"},"content":"            return new EditPropertyCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"dvdweien"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"dvdweien"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"w-yuchen"},"content":"        case FindAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"w-yuchen"},"content":"            return new FindAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"w-yuchen"},"content":"        case FindPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"w-yuchen"},"content":"            return new FindPropertyCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"        case DeletePropertyCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"            return new DeletePropertyCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"        case SortAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"            return new SortAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"        case SortPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"            return new SortPropertyCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"Cp-John"},"content":"        case ClearAllCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"Cp-John"},"content":"            return new ClearAllCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"Cp-John"},"content":"        case ClearAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"Cp-John"},"content":"            return new ClearAppointmentCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"        case ClearPropertyCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"            return new ClearPropertyCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"dvdweien"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"dvdweien"},"content":"            return new UpdateCommandParser().parse(arguments);","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dvdweien":10,"Cp-John":29,"-":42,"w-yuchen":16,"w2vgd":17}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" * E.g. \u0027n/\u0027 in \u0027add property n/Mayfair\u0027.","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":38,"w2vgd":1}},{"path":"src/main/java/seedu/address/logic/parser/SortAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_KEY;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_ORDER;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortAppointmentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortAppointmentCommand.SortAppointmentDescriptor;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":" * Parses input arguments and creates a new SortAppointmentCommand object.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"public class SortAppointmentCommandParser implements Parser\u003cSortAppointmentCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"     * Parses the given {@code String} of arguments in the context of the SortAppointmentCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"     * and returns an SortAppointmentCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"    public SortAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORTING_ORDER, PREFIX_SORTING_KEY);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor sortAppointmentDescriptor \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"                new SortAppointmentDescriptor();","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        if (argMultimap.getValue(PREFIX_SORTING_ORDER).isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"            sortAppointmentDescriptor.setSortingOrder(ParserUtil.parseSortingOrder(","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"                    argMultimap.getValue(PREFIX_SORTING_ORDER).get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"                    SortAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"        if (argMultimap.getValue(PREFIX_SORTING_KEY).isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"            sortAppointmentDescriptor.setAppointmentSortingKey(ParserUtil.parseAppointmentSortingKey(","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"                    argMultimap.getValue(PREFIX_SORTING_KEY).get()));","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"                    SortAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"        return new SortAppointmentCommand(sortAppointmentDescriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Cp-John":47}},{"path":"src/main/java/seedu/address/logic/parser/SortPropertyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_ORDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortPropertyCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortPropertyCommand.SortPropertyDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":" * Parses input arguments and creates a new SortPropertyCommand object.","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"public class SortPropertyCommandParser implements Parser\u003cSortPropertyCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"     * Parses the given {@code String} of arguments in the context of the SortPropertyCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"     * and returns an SortPropertyCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"    public SortPropertyCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORTING_ORDER, PREFIX_SORTING_KEY);","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor sortPropertyDescriptor \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"                new SortPropertyDescriptor();","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"        if (argMultimap.getValue(PREFIX_SORTING_ORDER).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"            sortPropertyDescriptor.setSortingOrder(ParserUtil.parseSortingOrder(","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"                    argMultimap.getValue(PREFIX_SORTING_ORDER).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"                    SortPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"        if (argMultimap.getValue(PREFIX_SORTING_KEY).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"            sortPropertyDescriptor.setPropertySortingKey(ParserUtil.parsePropertySortingKey(","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"                    argMultimap.getValue(PREFIX_SORTING_KEY).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"                    SortPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"        return new SortPropertyCommand(sortPropertyDescriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":46}},{"path":"src/main/java/seedu/address/logic/parser/UpdateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPDATE;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.update.UpdateCancelCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.update.UpdateCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.update.UpdateNewCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.update.UpdateProceedCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Offer;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"public class UpdateCommandParser implements Parser\u003cUpdateCommand\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"    private static final String UPDATE_STRING_REGEX \u003d \"\\\\s([1-9]\\\\d*){1}\\\\su/((new )|(proceed)|(cancel)){1}(?\u003camount\u003e\"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"            + Offer.VALIDATION_REGEX + \")?\";","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"    private static final Pattern UPDATE_STRING_FORMAT \u003d Pattern.compile(UPDATE_STRING_REGEX,","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"            Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"     * and returns an UpdateCommand object for execution.","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"     * @throws ParseException If the user input does not conform the expected format.","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"    public UpdateCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_UPDATE);","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"        Matcher matcher \u003d UPDATE_STRING_FORMAT.matcher(args);","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"        Index index;","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"        if (argMultimap.getValue(PREFIX_UPDATE).isPresent()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"            String command \u003d argMultimap.getValue(PREFIX_UPDATE).get();","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"            if (command.contains(\"new\")) {","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"                return new UpdateNewCommand(index, new Offer(matcher.group(\"amount\")));","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"            } else if (command.contains(\"proceed\")) {","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"                return new UpdateProceedCommand(index);","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"            } else if (command.contains(\"cancel\")) {","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"                return new UpdateCancelCommand(index);","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"dvdweien"},"content":"        throw new ParseException(","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"dvdweien"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":64}},{"path":"src/main/java/seedu/address/model/AppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.util.List;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":" * Wraps all data at the appointment-book level.","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":" * Duplicates are not allowed (by .isSameAppointment comparison).","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"public class AppointmentBook implements ReadOnlyAppointmentBook {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /*","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public AppointmentBook() {","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * Creates an Appointment Book using the appointments in the {@code toBeCopied}.","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    public AppointmentBook(ReadOnlyAppointmentBook toBeCopied) {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        this();","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  List overwrite operations  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     * Replaces the contents of the appointment list with {@code appointments}.","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"     * Resets the existing data of this {@code AppointmentBook} with {@code newData}.","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"    public void resetData(ReadOnlyAppointmentBook newData) {","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  Appointment-level operations  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the app.","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * @param appointment The appointment to check.","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     * @return True if there is an appointment with the same identity, otherwise false.","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"     * Adds an appointment to the app.","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"     * The appointment must not already exist in the appointment book.","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"     * @param appointment The appointment to be added.","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"        appointments.add(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"     * Replaces the given appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"     * {@code target} must exist in the appointment book.","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as another","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"     * existing appointment in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"     * Removes {@code key} from this {@code AppointmentBook}.","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"     * {@code key} must exist in the appointment book.","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"        appointments.remove(key);","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"     * Sorts appointment list using the specified comparator {@code comparator}.","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"    public void sortAppointments(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"        appointments.sortAppointments(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  Utility methods  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"    public String toString() {","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"        return appointments.asUnmodifiableObservableList().size() + \" appointments\";","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"                || (other instanceof AppointmentBook // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 appointments.equals(((AppointmentBook) other).appointments));","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"        return appointments.hashCode();","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"Cp-John":8,"candyhy":80,"w2vgd":44}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    Predicate\u003cProperty\u003e PREDICATE_SHOW_ALL_PROPERTIES \u003d unused -\u003e true;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  PropertyBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * Returns the user prefs\u0027 property book file path.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"    Path getPropertyBookFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"     * Sets the user prefs\u0027 property book file path.","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"    void setPropertyBookFilePath(Path propertyBookFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"     * Replaces property book data with the data in {@code propertyBook}.","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    void setPropertyBook(ReadOnlyPropertyBook propertyBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"     * Returns the PropertyBook","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    ReadOnlyPropertyBook getPropertyBook();","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"     * Returns true if a property with the same identity as {@code property} exists in the property book","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    boolean hasProperty(Property property);","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"     * Deletes the given property.","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"     * The property must exist in the property book.","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    void deleteProperty(Property target);","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"     * Adds the given property to the property book.","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"    void addProperty(Property property);","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"dvdweien"},"content":"     * Replaces the given property {@code target} with {@code editedProperty}.","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"dvdweien"},"content":"     * {@code target} must exist in the property book.","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"dvdweien"},"content":"     * The property identity of {@code editedProperty} must not be the same as another existing property","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"dvdweien"},"content":"     * in the property book.","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"dvdweien"},"content":"    void setProperty(Property target, Property editedProperty);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"     * Replaces the property at index {@code i} in the property book with {@code editedProperty}.","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"     * {@code i} must be a valid index in the property book.","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"     * The property identity of {@code editedProperty} must not be the same as another existing property","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"     * in the property book.","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"    void setProperty(int i, Property property);","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"     * Returns the property at index {@code i} in the property book.","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"     * {@code i} must be a valid index in the property book.","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"    Property getProperty(int i);","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"     * Returns an unmodifiable view of the filtered property list","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"    ObservableList\u003cProperty\u003e getFilteredPropertyList();","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"     * Updates the filter of the filtered property list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"    void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"     * Returns the total number of properties in the property book.","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"    int getPropertyListSize();","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"     * Sorts the the filtered property list by the given {@code comparator}.","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"    void sortPropertyList(Comparator\u003cProperty\u003e comparator);","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"     * Returns the user prefs\u0027 appointment book file path.","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"     * Sets the user prefs\u0027 appointment book file path.","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"    void setAppointmentBookFilePath(Path appointmentBookFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"     * Replaces appointment book data with the data in {@code appointmentBook}.","lastModifiedDate":"2021-03-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"    void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"     * Returns the AppointmentBook","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":146,"author":{"gitId":"candyhy"},"content":"    ReadOnlyAppointmentBook getAppointmentBook();","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the appointment book","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"candyhy"},"content":"     * Deletes the given appointment.","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"candyhy"},"content":"     * The appointment must exist in the appointment book.","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"candyhy"},"content":"    void deleteAppointment(Appointment target);","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":159,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"w2vgd"},"content":"     * Adds the given appointment to the appointment book.","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"w2vgd"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"     * {@code target} must exist in the appointment book.","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as another existing appointment","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"     * in the appointment book.","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"w2vgd"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2021-03-22"},{"lineNumber":171,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"     * Returns the appointment at index {@code i} in the appointment book.","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":"     * {@code i} must be a valid index in the appointment book.","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"w2vgd"},"content":"    Appointment getAppointment(int i);","lastModifiedDate":"2021-03-22"},{"lineNumber":177,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":178,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"candyhy"},"content":"     * Returns an unmodifiable view of the filtered appointment list","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"candyhy"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":183,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"candyhy"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"candyhy"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":189,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"     * Returns the total number of appointments in the appointment book.","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"    int getAppointmentListSize();","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":195,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"Cp-John"},"content":"     * Sorts the the filtered appointment list by the given {@code comparator}.","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"Cp-John"},"content":"    void sortAppointmentList(Comparator\u003cAppointment\u003e comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dvdweien":11,"Cp-John":8,"candyhy":51,"-":61,"w2vgd":69}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    private final PropertyBook propertyBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    private final FilteredList\u003cProperty\u003e filteredProperties;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    private final AppointmentBook appointmentBook;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * Initializes a ModelManager with the given appointmentBook and userPrefs.","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    public ModelManager(ReadOnlyAppointmentBook appointmentBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        // TODO: Remove","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        super();","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        requireAllNonNull(appointmentBook, userPrefs);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"        logger.fine(\"Initializing with appointment book: \" + appointmentBook","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        this.propertyBook \u003d new PropertyBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        filteredProperties \u003d new FilteredList\u003c\u003e(this.propertyBook.getPropertyList());","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        this.appointmentBook \u003d new AppointmentBook(appointmentBook);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.appointmentBook.getAppointmentList());","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"     * Initializes a ModelManager with the given propertyBook and userPrefs.","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"    public ModelManager(ReadOnlyPropertyBook propertyBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        // TODO: Remove","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"        requireAllNonNull(propertyBook, userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        logger.fine(\"Initializing with property book: \" + propertyBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"        this.propertyBook \u003d new PropertyBook(propertyBook);","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"        this.filteredProperties \u003d new FilteredList\u003c\u003e(this.propertyBook.getPropertyList());","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"        this.appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"        this.filteredAppointments \u003d new FilteredList\u003c\u003e(this.appointmentBook.getAppointmentList());","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"     * Initializes a ModelManager with the given appointmentBook, propertyBook and userPrefs.","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"    public ModelManager(ReadOnlyAppointmentBook appointmentBook, ReadOnlyPropertyBook propertyBook,","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        super();","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        requireAllNonNull(appointmentBook, propertyBook, userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"        logger.fine(\"Initializing with property book: \" + propertyBook + \", appointment book: \" + appointmentBook","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"        this.propertyBook \u003d new PropertyBook(propertyBook);","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"        this.filteredProperties \u003d new FilteredList\u003c\u003e(this.propertyBook.getPropertyList());","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"        this.appointmentBook \u003d new AppointmentBook(appointmentBook);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"        this.filteredAppointments \u003d new FilteredList\u003c\u003e(this.appointmentBook.getAppointmentList());","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"        this(new AppointmentBook(), new PropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  PropertyBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"    public Path getPropertyBookFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"        return userPrefs.getPropertyBookFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"    public void setPropertyBookFilePath(Path propertyBookFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"        requireNonNull(propertyBookFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"        userPrefs.setPropertyBookFilePath(propertyBookFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"    public void setPropertyBook(ReadOnlyPropertyBook propertyBook) {","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"        this.propertyBook.resetData(propertyBook);","lastModifiedDate":"2021-03-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"    public ReadOnlyPropertyBook getPropertyBook() {","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"        return propertyBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"    public boolean hasProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"        return propertyBook.hasProperty(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"    public void deleteProperty(Property target) {","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"        propertyBook.removeProperty(target);","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":150,"author":{"gitId":"w2vgd"},"content":"    public void addProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":"        propertyBook.addProperty(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":152,"author":{"gitId":"candyhy"},"content":"        updateFilteredPropertyList(PREDICATE_SHOW_ALL_PROPERTIES);","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"    public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"w2vgd"},"content":"        propertyBook.setProperty(target, editedProperty);","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"    public void setProperty(int i, Property property) {","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"        Property target \u003d getProperty(i);","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"w2vgd"},"content":"        setProperty(target, property);","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"    public Property getProperty(int i) {","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"        return filteredProperties.get(i);","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2021-03-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":176,"author":{"gitId":"candyhy"},"content":"    public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":177,"author":{"gitId":"candyhy"},"content":"        return filteredProperties;","lastModifiedDate":"2021-03-12"},{"lineNumber":178,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"candyhy"},"content":"    public void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"candyhy"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":183,"author":{"gitId":"candyhy"},"content":"        filteredProperties.setPredicate(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":186,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":"    public int getPropertyListSize() {","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"dvdweien"},"content":"        return filteredProperties.size();","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":190,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"     * Sorts property list using the specified comparator {@code comparator}.","lastModifiedDate":"2021-03-22"},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":194,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"    public void sortPropertyList(Comparator\u003cProperty\u003e comparator) {","lastModifiedDate":"2021-03-22"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-03-22"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"        this.propertyBook.sortProperties(comparator);","lastModifiedDate":"2021-03-22"},{"lineNumber":198,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":199,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":202,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":204,"author":{"gitId":"w2vgd"},"content":"        return userPrefs.getAppointmentBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":205,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"    public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-22"},{"lineNumber":209,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(appointmentBookFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":210,"author":{"gitId":"w2vgd"},"content":"        userPrefs.setAppointmentBookFilePath(appointmentBookFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":211,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":212,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":213,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":214,"author":{"gitId":"candyhy"},"content":"    public void setAppointmentBook(ReadOnlyAppointmentBook appointmentBook) {","lastModifiedDate":"2021-03-12"},{"lineNumber":215,"author":{"gitId":"candyhy"},"content":"        this.appointmentBook.resetData(appointmentBook);","lastModifiedDate":"2021-03-12"},{"lineNumber":216,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":217,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":219,"author":{"gitId":"w2vgd"},"content":"    public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-22"},{"lineNumber":220,"author":{"gitId":"w2vgd"},"content":"        return appointmentBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":222,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":223,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":224,"author":{"gitId":"w2vgd"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":225,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":226,"author":{"gitId":"w2vgd"},"content":"        return appointmentBook.hasAppointment(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":227,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":228,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":229,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":230,"author":{"gitId":"w2vgd"},"content":"    public void deleteAppointment(Appointment target) {","lastModifiedDate":"2021-03-22"},{"lineNumber":231,"author":{"gitId":"w2vgd"},"content":"        appointmentBook.removeAppointment(target);","lastModifiedDate":"2021-03-22"},{"lineNumber":232,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":233,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":234,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":235,"author":{"gitId":"w2vgd"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":236,"author":{"gitId":"w2vgd"},"content":"        appointmentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":237,"author":{"gitId":"candyhy"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":238,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":239,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":240,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":241,"author":{"gitId":"candyhy"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-12"},{"lineNumber":242,"author":{"gitId":"candyhy"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":243,"author":{"gitId":"candyhy"},"content":"        appointmentBook.setAppointment(target, editedAppointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":244,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":245,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":246,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":247,"author":{"gitId":"dvdweien"},"content":"    public Appointment getAppointment(int i) {","lastModifiedDate":"2021-03-13"},{"lineNumber":248,"author":{"gitId":"dvdweien"},"content":"        return appointmentBook.getAppointmentList().get(i);","lastModifiedDate":"2021-03-13"},{"lineNumber":249,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":250,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":251,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":252,"author":{"gitId":"candyhy"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2021-03-12"},{"lineNumber":253,"author":{"gitId":"candyhy"},"content":"     * {@code versionedAppointmentBook}","lastModifiedDate":"2021-03-12"},{"lineNumber":254,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":255,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":256,"author":{"gitId":"candyhy"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":257,"author":{"gitId":"candyhy"},"content":"        return filteredAppointments;","lastModifiedDate":"2021-03-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":261,"author":{"gitId":"candyhy"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":263,"author":{"gitId":"candyhy"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":264,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":266,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":267,"author":{"gitId":"w2vgd"},"content":"    public int getAppointmentListSize() {","lastModifiedDate":"2021-03-24"},{"lineNumber":268,"author":{"gitId":"w2vgd"},"content":"        return appointmentBook.getAppointmentList().size();","lastModifiedDate":"2021-03-22"},{"lineNumber":269,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":270,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":271,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":272,"author":{"gitId":"w2vgd"},"content":"     * Sorts appointment list using the specified comparator {@code comparator}.","lastModifiedDate":"2021-03-22"},{"lineNumber":273,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":274,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":275,"author":{"gitId":"w2vgd"},"content":"    public void sortAppointmentList(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2021-03-22"},{"lineNumber":276,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2021-03-22"},{"lineNumber":277,"author":{"gitId":"w2vgd"},"content":"        this.appointmentBook.sortAppointments(comparator);","lastModifiedDate":"2021-03-22"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":280,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":281,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"w2vgd"},"content":"        return userPrefs.equals(other.userPrefs)","lastModifiedDate":"2021-03-22"},{"lineNumber":297,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 propertyBook.equals(other.propertyBook)","lastModifiedDate":"2021-03-22"},{"lineNumber":298,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 filteredProperties.equals(other.filteredProperties)","lastModifiedDate":"2021-03-22"},{"lineNumber":299,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 appointmentBook.equals(other.appointmentBook)","lastModifiedDate":"2021-03-17"},{"lineNumber":300,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 filteredAppointments.equals(other.filteredAppointments);","lastModifiedDate":"2021-03-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dvdweien":18,"Cp-John":11,"candyhy":82,"-":111,"w2vgd":81}},{"path":"src/main/java/seedu/address/model/PropertyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.util.List;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.UniquePropertyList;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":" * Wraps all data at the property-book level.","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":" * Duplicates are not allowed (by .isSameProperty comparison).","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"public class PropertyBook implements ReadOnlyPropertyBook {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    private final UniquePropertyList properties;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /*","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        properties \u003d new UniquePropertyList();","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public PropertyBook() {","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * Creates a Property Book using the properties in the {@code toBeCopied}.","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    public PropertyBook(ReadOnlyPropertyBook toBeCopied) {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        this();","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  List overwrite operations  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     * Replaces the contents of the property list with {@code properties}.","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     * {@code properties} must not contain duplicate properties.","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    public void setProperties(List\u003cProperty\u003e properties) {","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        this.properties.setProperties(properties);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"     * Resets the existing data of this {@code PropertyBook} with {@code newData}.","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    public void resetData(ReadOnlyPropertyBook newData) {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        setProperties(newData.getPropertyList());","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  Property-level operations  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"     * Returns true if a property with the same identity as {@code property} exists in the app.","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * @param property The property to check.","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     * @return True if there is a property with the same identity, otherwise false.","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public boolean hasProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        return properties.contains(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"     * Adds a property to the app.","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"     * The property must not already exist in the property book.","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"     * @param property The property to be added.","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"    public void addProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"        properties.add(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"dvdweien"},"content":"    public Property getProperty(int i) {","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"dvdweien"},"content":"        return properties.asUnmodifiableObservableList().get(i);","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"dvdweien"},"content":"     * Replaces the property at {@code i} in the list with {@code property}.","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"dvdweien"},"content":"     * {@code i} must exist in the property book.","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"dvdweien"},"content":"     * The property identity of {@code property} must not be the same as another","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"dvdweien"},"content":"     * existing property in the property book.","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"dvdweien"},"content":"    public void setProperty(int i, Property property) {","lastModifiedDate":"2021-03-11"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"        properties.setProperty(getProperty(i), property);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"     * Replaces the given property {@code target} in the list with {@code editedProperty}.","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"     * {@code target} must exist in the property book.","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"     * The property identity of {@code editedProperty} must not be the same as another","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"     * existing property in the property book.","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"    public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"        requireNonNull(editedProperty);","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"        properties.setProperty(target, editedProperty);","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"     * Removes {@code key} from this {@code PropertyBook}.","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"     * {@code key} must exist in the property book.","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"    public void removeProperty(Property key) {","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"        properties.remove(key);","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"Cp-John"},"content":"     * Sorts property list using the specified comparator {@code comparator}.","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"Cp-John"},"content":"    public void sortProperties(Comparator\u003cProperty\u003e comparator) {","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"Cp-John"},"content":"        properties.sortProperties(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  Utility methods  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"    public String toString() {","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"        return properties.asUnmodifiableObservableList().size() + \" properties\";","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"    public ObservableList\u003cProperty\u003e getPropertyList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"        return properties.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"candyhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"candyhy"},"content":"                || (other instanceof PropertyBook // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":139,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 properties.equals(((PropertyBook) other).properties));","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"candyhy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"        return properties.hashCode();","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"dvdweien":11,"Cp-John":8,"candyhy":67,"w2vgd":60}},{"path":"src/main/java/seedu/address/model/ReadOnlyAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":" * Unmodifiable view of an Appointment Book","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"public interface ReadOnlyAppointmentBook {","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     * Returns an unmodifiable view of the appointment list.","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyPropertyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":" * Unmodifiable view of a property book","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"public interface ReadOnlyPropertyBook {","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     * Returns an unmodifiable view of the property list.","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     * This list will not contain any duplicate properties.","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    ObservableList\u003cProperty\u003e getPropertyList();","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    Path getPropertyBookFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"candyhy":2,"-":14}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    private Path propertyBookFilePath \u003d Paths.get(\"data\", \"propertybook.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private Path appointmentBookFilePath \u003d Paths.get(\"data\", \"appointmentbook.json\");","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public UserPrefs() {","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        setAppointmentBookFilePath(newUserPrefs.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"        setPropertyBookFilePath(newUserPrefs.getPropertyBookFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    public Path getPropertyBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        return propertyBookFilePath;","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    public void setPropertyBookFilePath(Path propertyBookFilePath) {","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(propertyBookFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        this.propertyBookFilePath \u003d propertyBookFilePath;","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        return appointmentBookFilePath;","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        requireNonNull(appointmentBookFilePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        this.appointmentBookFilePath \u003d appointmentBookFilePath;","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 propertyBookFilePath.equals(o.propertyBookFilePath)","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 appointmentBookFilePath.equals(o.appointmentBookFilePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"        return Objects.hash(guiSettings, propertyBookFilePath, appointmentBookFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        sb.append(\"\\nLocal property data file location : \" + propertyBookFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"        sb.append(\"\\nLocal appointment data file location : \" + appointmentBookFilePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"candyhy":11,"-":80,"w2vgd":10}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":" * Represents an Appointment in the appointment book.","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":" * Guarantees: field values are validated, immutable.","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"public class Appointment {","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    private final Name name;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    private final Remark remarks;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    private final Date date;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private final Time time;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * Constructs an {@code Appointment} with all information.","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public Appointment(Name name, Remark remarks, Date date, Time time) {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        requireAllNonNull(name, remarks, date, time);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        return name;","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public Remark getRemarks() {","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        return remarks;","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    public Date getDate() {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        return date;","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    public Time getTime() {","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        return time;","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     * Returns true if both appointments have the same date and time.","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherAppointment.getDate().equals(getDate())","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherAppointment.getTime().equals(getTime());","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     * Returns true if both appointments have the same identity and data fields.","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * This defines a stronger notion of equality between two appointments.","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        return otherAppointment.getName().equals(getName())","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"            \u0026\u0026 otherAppointment.getRemarks().equals(getRemarks())","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"            \u0026\u0026 otherAppointment.getDate().equals(getDate())","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"            \u0026\u0026 otherAppointment.getTime().equals(getTime());","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"        return Objects.hash(name, remarks, date, time);","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"            .append(\"; Remarks: \")","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"            .append(getRemarks())","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"            .append(\"; Date: \")","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"            .append(getDate())","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"            .append(\"; Time: \")","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"            .append(getTime());","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"w2vgd":102}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":" * Tests that a {@code Appointment}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"public class AppointmentContainsKeywordsPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    public AppointmentContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(appointment.getName().name, keyword));","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"                || (other instanceof AppointmentContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"                \u0026\u0026 keywords.equals(((AppointmentContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"w-yuchen":31}},{"path":"src/main/java/seedu/address/model/appointment/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.util.DateTimeFormat;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" * Represents an Appointment\u0027s meeting date.","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable.","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            \"Meeting dates should be valid dates specified in the format DD-MM-YY.\";","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * @param date A valid meeting date.","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public Date(LocalDate date) {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        return date.format(DateTimeFormat.OUTPUT_DATE_FORMAT);","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Date)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        Date otherDate \u003d (Date) other;","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        return date.equals(otherDate.date);","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    public int compareTo(Date another) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"        return this.date.compareTo(another.date);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        return date.hashCode();","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"Cp-John":6,"w2vgd":49}},{"path":"src/main/java/seedu/address/model/appointment/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.util.DateTimeFormat;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" * Represents an Appointment\u0027s meeting time.","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable.","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"public class Time implements Comparable\u003cTime\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            \"Meeting times should be valid times specified in 24-hour clock in the format HHMM\";","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public final LocalTime time;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * @param time A valid meeting time.","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public Time(LocalTime time) {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        return time.format(DateTimeFormat.OUTPUT_TIME_FORMAT);","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Time)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        Time otherTime \u003d (Time) other;","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        return time.equals(otherTime.time);","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    public int compareTo(Time another) {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"        return this.time.compareTo(another.time);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        return time.hashCode();","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"Cp-John":6,"w2vgd":49}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":" * As such, adding and updating of appointments uses Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":" * for equality so as to ensure that the appointment being added or updated is","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":" * unique in terms of identity in the UniqueAppointmentList. However, the removal of an appointment uses","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":" * Appointment#equals(Object) so as to ensure that the appointment with exactly the same fields will be removed.","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":" *","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":" * @see Appointment#isSameAppointment(Appointment) (Appointment)","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"     * Returns true if the list contains an equivalent Appointment as the given argument.","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     * Adds a Appointment to the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     * The Appointment must not already exist in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"     * Replaces the Appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"     * The Appointment identity of {@code editedAppointment} must not be the same as another","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"     * existing Appointment in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        if (!target.isSameAppointment(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"     * Removes the equivalent Appointment from the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"     * The Appointment must exist in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"    public void setAppointments(UniqueAppointmentList replacement) {","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"     * {@code Appointments} must not contain duplicate Appointments.","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"Cp-John"},"content":"     * Sorts appointment list using the specified comparator {@code comparator}.","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"Cp-John"},"content":"    public void sortAppointments(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"Cp-John"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"                || (other instanceof UniqueAppointmentList // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 internalList.equals(((UniqueAppointmentList) other).internalList));","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"     * Returns true if {@code Appointments} contains only unique Appointments.","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"candyhy"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"candyhy"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2021-03-12"},{"lineNumber":139,"author":{"gitId":"candyhy"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"candyhy"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"candyhy"},"content":"                    return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"candyhy"},"content":"                }","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"candyhy"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"candyhy"},"content":"        return true;","lastModifiedDate":"2021-03-12"},{"lineNumber":146,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":148,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Cp-John":8,"candyhy":140}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"public class AppointmentNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"    public AppointmentNotFoundException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"        super(\"Appointment not found\");","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":7}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":7}},{"path":"src/main/java/seedu/address/model/name/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.name;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a name.","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}.","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public final String name;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * @return True if the given string is a valid name, otherwise false.","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        return name;","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        return name.equals(otherName.name);","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"    public int compareTo(Name another) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"        return name.compareTo(another.name);","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        return name.hashCode();","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"Cp-John":3,"w2vgd":22,"-":44}},{"path":"src/main/java/seedu/address/model/property/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a Property\u0027s address.","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}.","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"public class Address implements Comparable\u003cAddress\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any value, but it should not be blank\";","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    /*","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    private static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    public final String propertyAddress;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param propertyAddress A valid address.","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public Address(String propertyAddress) {","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(propertyAddress);","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        checkArgument(isValidAddress(propertyAddress), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        this.propertyAddress \u003d propertyAddress;","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     * Returns true if a given string is a valid property address.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * @return True if the given string is a valid property address, otherwise false.","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        return propertyAddress;","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        return propertyAddress.equals(otherAddress.propertyAddress);","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"    public int compareTo(Address another) {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"        return this.propertyAddress.compareTo(another.propertyAddress);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        return propertyAddress.hashCode();","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"Cp-John":6,"w2vgd":62}},{"path":"src/main/java/seedu/address/model/property/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-04"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.util.DateTimeFormat;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" * Represents a Property\u0027s deadline for selling.","lastModifiedDate":"2021-03-04"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable.","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"public class Deadline implements Comparable\u003cDeadline\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            \"Deadline dates should be valid dates specified in the format DD-MM-YY.\";","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public final LocalDate deadline;","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-04"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2021-03-04"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-04"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * @param deadline A valid deadline date.","lastModifiedDate":"2021-03-04"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public Deadline(LocalDate deadline) {","lastModifiedDate":"2021-03-04"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-04"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-04"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-04"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        return deadline.format(DateTimeFormat.OUTPUT_DATE_FORMAT);","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-04"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-04"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-04"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-04"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-04"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2021-03-04"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-04"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-04"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        Deadline otherDeadline \u003d (Deadline) other;","lastModifiedDate":"2021-03-04"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        return deadline.equals(otherDeadline.deadline);","lastModifiedDate":"2021-03-04"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    public int compareTo(Deadline another) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"        return this.deadline.compareTo(another.deadline);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-04"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-04"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        return deadline.hashCode();","lastModifiedDate":"2021-03-04"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-04"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-04"}],"authorContributionMap":{"Cp-John":6,"w2vgd":49}},{"path":"src/main/java/seedu/address/model/property/PostalCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a Property\u0027s postal code.","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPostal(String)}.","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"public class PostalCode implements Comparable\u003cPostalCode\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"            \"Postal code should contain only numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    private static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public final String postal;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code PostalCode}.","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * @param postal A valid postal.","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public PostalCode(String postal) {","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(postal);","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        checkArgument(isValidPostal(postal), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.postal \u003d postal;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     * Returns true if a given string is a valid property postal code.","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     * @return True if the given string is a valid property postal code, otherwise false.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public static boolean isValidPostal(String test) {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        return postal;","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof PostalCode)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        PostalCode otherPostalCode \u003d (PostalCode) other;","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        return postal.equals(otherPostalCode.postal);","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"    public int compareTo(PostalCode another) {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"        return this.postal.compareTo(another.postal);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        return postal.hashCode();","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"Cp-John":6,"w2vgd":59}},{"path":"src/main/java/seedu/address/model/property/Property.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.property.client.AskingPrice;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Client;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Status;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":" * Represents a Property in the property book.","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":" * Guarantees: field values are validated, immutable.","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"public class Property {","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    // Mandatory fields","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    private final Name name;","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    private final Type propertyType;","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    private final Address address;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    private final PostalCode postalCode;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    private final Deadline deadline;","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    // Optional fields","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    private final Remark remarks;","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    private final Client client;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"    private final Status status;","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Property} without any optional fields.","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * Every field passed in must be not null.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public Property(Name name, Type propertyType, Address address, PostalCode postalCode, Deadline deadline,","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"                    Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        requireAllNonNull(name, propertyType, address, postalCode, deadline, tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        this.propertyType \u003d propertyType;","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        this.remarks \u003d null;","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        this.client \u003d null;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"        this.status \u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Property} with remarks but without client\u0027s information.","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"     * Every field passed in must be not null.","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    public Property(Name name, Type propertyType, Address address, PostalCode postalCode, Deadline deadline,","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"                    Remark remarks, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        // requireAllNonNull(name, propertyType, address, postalCode, deadline, remarks, tags);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-05"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        this.propertyType \u003d propertyType;","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-05"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        this.client \u003d null;","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"dvdweien"},"content":"        this.status \u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Property} with client\u0027s information but without remarks.","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"     * Every field passed in must be not null.","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    public Property(Name name, Type propertyType, Address address, PostalCode postalCode, Deadline deadline,","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"                    Client client, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        // requireAllNonNull(name, propertyType, address, postalCode, deadline, client, tags);","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"        this.propertyType \u003d propertyType;","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"        this.remarks \u003d null;","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"dvdweien"},"content":"        this.status \u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Property} with all information.","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"    public Property(Name name, Type propertyType, Address address, PostalCode postalCode, Deadline deadline,","lastModifiedDate":"2021-03-04"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"                    Remark remarks, Client client, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"        // requireAllNonNull(name, propertyType, address, postalCode, deadline, remarks, client, tags);","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"        this.propertyType \u003d propertyType;","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"dvdweien"},"content":"        this.status \u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"dvdweien"},"content":"     * Constructs a {@code Property} with all information.","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"dvdweien"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"dvdweien"},"content":"    public Property(Name name, Type propertyType, Address address, PostalCode postalCode, Deadline deadline,","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"dvdweien"},"content":"                    Remark remarks, Client client, Set\u003cTag\u003e tags, Status status) {","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"dvdweien"},"content":"        // requireAllNonNull(name, propertyType, address, postalCode, deadline, remarks, client, tags);","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"dvdweien"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"dvdweien"},"content":"        this.propertyType \u003d propertyType;","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"dvdweien"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"dvdweien"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"dvdweien"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"dvdweien"},"content":"        this.remarks \u003d remarks;","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"dvdweien"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"dvdweien"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"dvdweien"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-03"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"        return name;","lastModifiedDate":"2021-03-03"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"    public Type getPropertyType() {","lastModifiedDate":"2021-03-03"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"        return propertyType;","lastModifiedDate":"2021-03-03"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-03-03"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"        return address;","lastModifiedDate":"2021-03-03"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"    public PostalCode getPostalCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":"        return postalCode;","lastModifiedDate":"2021-03-03"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2021-03-04"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"        return deadline;","lastModifiedDate":"2021-03-03"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"    public Remark getRemarks() {","lastModifiedDate":"2021-03-05"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"        return remarks;","lastModifiedDate":"2021-03-03"},{"lineNumber":147,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":149,"author":{"gitId":"dvdweien"},"content":"    public Status getStatus() {","lastModifiedDate":"2021-03-21"},{"lineNumber":150,"author":{"gitId":"dvdweien"},"content":"        return status;","lastModifiedDate":"2021-03-21"},{"lineNumber":151,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":152,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":153,"author":{"gitId":"w2vgd"},"content":"    public Client getClient() {","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"        return client;","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":157,"author":{"gitId":"Cp-John"},"content":"    public AskingPrice getAskingPrice() {","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"w-yuchen"},"content":"        return client \u003d\u003d null ? null : client.getClientAskingPrice();","lastModifiedDate":"2021-03-19"},{"lineNumber":159,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"w2vgd"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"w2vgd"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":170,"author":{"gitId":"w2vgd"},"content":"     * Returns true if both properties have the same postal code and same address.","lastModifiedDate":"2021-03-06"},{"lineNumber":171,"author":{"gitId":"w2vgd"},"content":"     * This defines a weaker notion of equality between two properties.","lastModifiedDate":"2021-03-06"},{"lineNumber":172,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"    public boolean isSameProperty(Property otherProperty) {","lastModifiedDate":"2021-03-06"},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":"        if (otherProperty \u003d\u003d this) {","lastModifiedDate":"2021-03-06"},{"lineNumber":175,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-06"},{"lineNumber":176,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":177,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":178,"author":{"gitId":"w2vgd"},"content":"        return otherProperty !\u003d null","lastModifiedDate":"2021-03-06"},{"lineNumber":179,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherProperty.getPostalCode().equals(getPostalCode())","lastModifiedDate":"2021-03-06"},{"lineNumber":180,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherProperty.getAddress().equals(getAddress());","lastModifiedDate":"2021-03-06"},{"lineNumber":181,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":182,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"     * Returns true if both properties have the all same mandatory data fields.","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"     * This defines a stronger notion of equality between two properties.","lastModifiedDate":"2021-03-06"},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-06"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-06"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-06"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Property)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":194,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-06"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"        Property otherProperty \u003d (Property) other;","lastModifiedDate":"2021-03-06"},{"lineNumber":198,"author":{"gitId":"w2vgd"},"content":"        return otherProperty.getName().equals(getName())","lastModifiedDate":"2021-03-06"},{"lineNumber":199,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherProperty.getPropertyType().equals(getPropertyType())","lastModifiedDate":"2021-03-06"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherProperty.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-06"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherProperty.getPostalCode().equals(getPostalCode())","lastModifiedDate":"2021-03-06"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherProperty.getDeadline().equals(getDeadline())","lastModifiedDate":"2021-03-18"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherProperty.getTags().equals(getTags());","lastModifiedDate":"2021-03-18"},{"lineNumber":204,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":205,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":206,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":207,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-06"},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-06"},{"lineNumber":209,"author":{"gitId":"w2vgd"},"content":"        return Objects.hash(name, propertyType, address, postalCode, deadline, tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":211,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":212,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":213,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-06"},{"lineNumber":214,"author":{"gitId":"w2vgd"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-06"},{"lineNumber":215,"author":{"gitId":"w2vgd"},"content":"        builder.append(name.toString())","lastModifiedDate":"2021-03-09"},{"lineNumber":216,"author":{"gitId":"w2vgd"},"content":"                .append(\"; Type: \")","lastModifiedDate":"2021-03-06"},{"lineNumber":217,"author":{"gitId":"w2vgd"},"content":"                .append(propertyType.toString())","lastModifiedDate":"2021-03-09"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-03-06"},{"lineNumber":219,"author":{"gitId":"w2vgd"},"content":"                .append(address.toString())","lastModifiedDate":"2021-03-09"},{"lineNumber":220,"author":{"gitId":"w2vgd"},"content":"                .append(\"; Postal Code: \")","lastModifiedDate":"2021-03-06"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"                .append(postalCode.toString())","lastModifiedDate":"2021-03-09"},{"lineNumber":222,"author":{"gitId":"w2vgd"},"content":"                .append(\"; Deadline: \")","lastModifiedDate":"2021-03-06"},{"lineNumber":223,"author":{"gitId":"w2vgd"},"content":"                .append(deadline.toString());","lastModifiedDate":"2021-03-09"},{"lineNumber":224,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":225,"author":{"gitId":"dvdweien"},"content":"        if (status !\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":226,"author":{"gitId":"dvdweien"},"content":"            builder.append(\"; Status: \").append(status.toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":227,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":228,"author":{"gitId":"w2vgd"},"content":"        if (remarks !\u003d null) {","lastModifiedDate":"2021-03-06"},{"lineNumber":229,"author":{"gitId":"w2vgd"},"content":"            builder.append(\"; Remarks: \").append(remarks.toString());","lastModifiedDate":"2021-03-09"},{"lineNumber":230,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":231,"author":{"gitId":"w2vgd"},"content":"        if (client !\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":232,"author":{"gitId":"w2vgd"},"content":"            builder.append(\"; \").append(client.toString());","lastModifiedDate":"2021-03-09"},{"lineNumber":233,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":234,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"w2vgd"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"w2vgd"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"w2vgd"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"w2vgd"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"w2vgd"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-06"},{"lineNumber":242,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":243,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"dvdweien":31,"Cp-John":4,"w2vgd":207,"w-yuchen":1}},{"path":"src/main/java/seedu/address/model/property/PropertyContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":" * Tests that a {@code Property}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"public class PropertyContainsKeywordsPredicate implements Predicate\u003cProperty\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    public PropertyContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"    public boolean test(Property property) {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(property.getName().name, keyword));","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"                || (other instanceof PropertyContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"                \u0026\u0026 keywords.equals(((PropertyContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"w-yuchen":31}},{"path":"src/main/java/seedu/address/model/property/PropertyPredicateList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":" * List of {@code Predicate\u003cProperty\u003e}, supports equality comparisons","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":" * with other {@code PropertyPredicateLists}, and combining of all","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":" * predicates it holds into a single predicate.","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"public class PropertyPredicateList {","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    private List\u003cPredicate\u003cProperty\u003e\u003e predicates;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    public PropertyPredicateList(List\u003cPredicate\u003cProperty\u003e\u003e predicates) {","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"     * Combines all predicates in its internal list into a single","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"     * predicate.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"     * @return {@code Predicate\u003cProperty\u003e} that is combined with logical AND","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"    public Predicate\u003cProperty\u003e combine() {","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"        return this.predicates.stream().reduce(Predicate::and).orElse(x -\u003e true);","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"                || (other instanceof PropertyPredicateList","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"                    \u0026\u0026 this.predicates.equals(((PropertyPredicateList) other).predicates));","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"w-yuchen":33}},{"path":"src/main/java/seedu/address/model/property/PropertyPricePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import java.text.NumberFormat;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":" * Tests that a {@code Property}\u0027s {@code Client} {@code AskingPrice} is within the range given.","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"public class PropertyPricePredicate implements Predicate\u003cProperty\u003e {","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"    private final int price;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    private final boolean isLess;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"     * Constructs a {@code PropertyPricePredicate}","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"     * @param price Value to be compared against","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"     * @param isLess Whether this predicate is a less than comparison,","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"     *               note that regardless of this value, any askingPrice","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"     *               that is equals to the given price will return true","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":"    public PropertyPricePredicate(String price, boolean isLess) {","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"        this.price \u003d Integer.parseInt(price);","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"        this.isLess \u003d isLess;","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"    public boolean test(Property property) {","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"        if (property.getAskingPrice() \u003d\u003d null) {","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"            return false;","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"        NumberFormat format \u003d NumberFormat.getCurrencyInstance();","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"        int otherPrice;","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"        try {","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"            otherPrice \u003d format.parse(property.getAskingPrice().askingPrice).intValue();","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"            return false;","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"        if (isLess) {","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"            return otherPrice \u003c\u003d this.price;","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"        } else {","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"            return otherPrice \u003e\u003d this.price;","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"                || (other instanceof PropertyPricePredicate // instanceof handles nulls","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"                \u0026\u0026 price \u003d\u003d ((PropertyPricePredicate) other).price","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"                \u0026\u0026 isLess \u003d\u003d ((PropertyPricePredicate) other).isLess); // state check","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"w-yuchen":54}},{"path":"src/main/java/seedu/address/model/property/Type.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a Property\u0027s type.","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidType(String)}.","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class Type {","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"            \"Property types should only be either hdb, condo or landed\";","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    /*","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * The property types should only be one of three types: hdb, condo, or landed.","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    private static final String VALIDATION_REGEX \u003d \"^(hdb|condo|landed)$\";","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    private final String propertyType;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Type}.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param propertyType A valid type.","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public Type(String propertyType) {","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(propertyType);","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        checkArgument(isValidType(propertyType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"        this.propertyType \u003d propertyType.substring(0, 1).toUpperCase()","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"                + propertyType.substring(1).toLowerCase();","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * Returns true if a given string is a valid property type.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * @return True if the given string is a valid property type, otherwise false.","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public static boolean isValidType(String test) {","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        String lowercaseTest \u003d test.toLowerCase();","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        return lowercaseTest.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        return propertyType;","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Type)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        Type otherType \u003d (Type) other;","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"        return propertyType.equalsIgnoreCase(otherType.propertyType);","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        return propertyType.hashCode();","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"w2vgd":62,"w-yuchen":3}},{"path":"src/main/java/seedu/address/model/property/UniquePropertyList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.exceptions.DuplicatePropertyException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.exceptions.PropertyNotFoundException;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"public class UniquePropertyList implements Iterable\u003cProperty\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    private final ObservableList\u003cProperty\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    private final ObservableList\u003cProperty\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Returns true if the list contains an equivalent Property as the given argument.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    public boolean contains(Property toCheck) {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        return internalList.stream().anyMatch(toCheck::isSameProperty);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * Adds a Property to the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * The Property must not already exist in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public void add(Property toAdd) {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"            throw new DuplicatePropertyException();","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     * Replaces the Property {@code target} in the list with {@code editedProperty}.","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     * The Property identity of {@code editedProperty} must not be the same as another existing Property in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        requireAllNonNull(target, editedProperty);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            throw new PropertyNotFoundException();","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        if (!target.isSameProperty(editedProperty) \u0026\u0026 contains(editedProperty)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"            throw new DuplicatePropertyException();","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        internalList.set(index, editedProperty);","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"     * Removes the equivalent Property from the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"     * The Property must exist in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    public void remove(Property toRemove) {","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"            throw new PropertyNotFoundException();","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    public void setProperties(UniquePropertyList replacement) {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"     * Replaces the contents of this list with {@code properties}.","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"     * {@code properties} must not contain duplicate Properties.","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"    public void setProperties(List\u003cProperty\u003e properties) {","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"        requireAllNonNull(properties);","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"        if (!propertiesAreUnique(properties)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"            throw new DuplicatePropertyException();","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"        internalList.setAll(properties);","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"     * Sorts property list using the specified comparator {@code comparator}.","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"    public void sortProperties(Comparator\u003cProperty\u003e comparator) {","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"    public ObservableList\u003cProperty\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"    public Iterator\u003cProperty\u003e iterator() {","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"                || (other instanceof UniquePropertyList // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 internalList.equals(((UniquePropertyList) other).internalList));","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"     * Returns true if {@code Properties} contains only unique Properties.","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"    private boolean propertiesAreUnique(List\u003cProperty\u003e properties) {","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"        for (int i \u003d 0; i \u003c properties.size() - 1; i++) {","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"            for (int j \u003d i + 1; j \u003c properties.size(); j++) {","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"                if (properties.get(i).isSameProperty(properties.get(j))) {","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"                    return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":"                }","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"        return true;","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Cp-John":8,"candyhy":127}},{"path":"src/main/java/seedu/address/model/property/client/AskingPrice.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property.client;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a client\u0027s asking price for a property.","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAskingPrice(String)}.","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"public class AskingPrice implements Comparable\u003cAskingPrice\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Note the following conditions for specifying an asking price:\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"            + \"1. The dollar sign is optional.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"            + \"2. There should not be any leading zeros in the number specified.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"3. The cents part is optional but if specified, it has to be exactly 2 decimal places.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"4. Either do not use commas at all or be consistent in the usage of commas throughout, \"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"where each comma should separate every three digits from the back.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            + \"   E.g.\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            + \"   $1000000 or $1,000,000 are valid but $1000,000 or $100,00,00 are not valid.\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    /*","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * Dollar sign is optional.","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * No leading zeros.","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Either do not specify decimal portion or specify exactly two decimal places.","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * Either no commas at all or consistent usage of commas throughout.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\$?([1-9]\\\\d*|0|[1-9]\\\\d{0,2}(,\\\\d{3})*)(\\\\.\\\\d{2})?\";","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    public final String askingPrice;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     * Constructs an {@code AskingPrice}.","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * @param askingPrice A valid asking price.","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    public AskingPrice(String askingPrice) {","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(askingPrice);","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        checkArgument(isValidAskingPrice(askingPrice), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        this.askingPrice \u003d askingPrice;","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     * Returns true if a given string is a valid asking price.","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     * @return True if the given string is a valid asking price, otherwise false.","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    public static boolean isValidAskingPrice(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        return askingPrice;","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof AskingPrice)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        AskingPrice otherAskingPrice \u003d (AskingPrice) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        return askingPrice.equals(otherAskingPrice.askingPrice);","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"    public int compareTo(AskingPrice another) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"        return this.askingPrice.compareTo(another.askingPrice);","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        return askingPrice.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"Cp-John":6,"w2vgd":70}},{"path":"src/main/java/seedu/address/model/property/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property.client;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Represents the seller of a Property.","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Guarantees: field values are validated, immutable.","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"public class Client {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    public static final String STRING_CLIENT_NAME \u003d \"Client Name: \";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    public static final String STRING_CLIENT_CONTACT \u003d \"Client Contact: \";","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public static final String STRING_CLIENT_EMAIL \u003d \"Client Email: \";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    public static final String STRING_CLIENT_PRICE \u003d \"Client Asking Price: \";","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    public static final String DELIMITER \u003d \"; \";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private final Name clientName;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    private final Contact clientContact;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    private final Email clientEmail;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    private final AskingPrice clientAskingPrice;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"     * Constructs a null {@code Client}.","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"    public Client() {","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"        this.clientName \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"        this.clientContact \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"        this.clientEmail \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"        this.clientAskingPrice \u003d null;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Client}.","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public Client(Name clientName, Contact clientContact, Email clientEmail, AskingPrice clientAskingPrice) {","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        this.clientName \u003d clientName;","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        this.clientContact \u003d clientContact;","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        this.clientEmail \u003d clientEmail;","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        this.clientAskingPrice \u003d clientAskingPrice;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    public Name getClientName() {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        return clientName;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    public Contact getClientContact() {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        return clientContact;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    public Email getClientEmail() {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        return clientEmail;","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    public AskingPrice getClientAskingPrice() {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        return clientAskingPrice;","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     * Returns true if both client have the same name.","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherClient.getClientName().equals(getClientName());","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        return otherClient.getClientName().equals(getClientName())","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherClient.getClientContact().equals(getClientContact())","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherClient.getClientEmail().equals(getClientEmail())","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"                \u0026\u0026 otherClient.getClientAskingPrice().equals(getClientAskingPrice());","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        return Objects.hash(clientName, clientContact, clientEmail, clientAskingPrice);","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"        if (clientName !\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"            builder.append(STRING_CLIENT_NAME).append(getClientName());","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"        if (clientContact !\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"            if (builder.length() !\u003d 0) {","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"                builder.append(DELIMITER);","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"            builder.append(STRING_CLIENT_CONTACT).append(getClientContact());","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"        if (clientEmail !\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"            if (builder.length() !\u003d 0) {","lastModifiedDate":"2021-03-09"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"                builder.append(DELIMITER);","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"            builder.append(STRING_CLIENT_EMAIL).append(getClientEmail());","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"        if (clientAskingPrice !\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"            if (builder.length() !\u003d 0) {","lastModifiedDate":"2021-03-09"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"                builder.append(DELIMITER);","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"            }","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"            builder.append(STRING_CLIENT_PRICE).append(getClientAskingPrice());","lastModifiedDate":"2021-03-19"},{"lineNumber":123,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"dvdweien":13,"candyhy":5,"w2vgd":109}},{"path":"src/main/java/seedu/address/model/property/client/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property.client;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a client\u0027s contact number.","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidContact(String)}.","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class Contact {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"            \"Contact numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public final String contact;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Contact}.","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * @param contact A valid contact number.","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public Contact(String contact) {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(contact);","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        checkArgument(isValidContact(contact), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     * Returns true if a given string is a valid contact number.","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     * @return True if the given string is a valid contact number, otherwise false.","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public static boolean isValidContact(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        return contact;","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Contact)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        Contact otherContact \u003d (Contact) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        return contact.equals(otherContact.contact);","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        return contact.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"w2vgd":60}},{"path":"src/main/java/seedu/address/model/property/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property.client;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a client\u0027s email.","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}.","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class Email {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"_.-\";","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format prefix@domain \"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"1. The prefix should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). \"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"A special character cannot appear as the first or last character in the prefix \"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            + \"or appear consecutively two or more times.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then the domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"            + \"    - end with a top level domain label that is at least 2 characters long\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    private static final String ALPHANUMERIC \u003d \"[^\\\\W_]+\";","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    private static final String PREFIX_REGEX \u003d ALPHANUMERIC + \"([\" + SPECIAL_CHARACTERS + \"]\" + ALPHANUMERIC + \")*\";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    private static final String DOMAIN_REGEX \u003d ALPHANUMERIC + \"(-\" + ALPHANUMERIC + \")*\";","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    private static final String TOP_LEVEL_DOMAIN_REGEX \u003d \"(\" + DOMAIN_REGEX + \"){2,}\";","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    public static final String VALIDATION_REGEX \u003d PREFIX_REGEX + \"@\" + \"(\" + DOMAIN_REGEX","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"            + \"\\\\.)*\" + TOP_LEVEL_DOMAIN_REGEX;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    public final String email;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * @param email A valid email address.","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public Email(String email) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     * Returns true if a given string is a valid email address.","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     * @return True if the given string is a valid email address, otherwise false.","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        return email;","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        return email.equals(otherEmail.email);","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        return email.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"w2vgd":76}},{"path":"src/main/java/seedu/address/model/property/exceptions/DuplicatePropertyException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.model.property.exceptions;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"public class DuplicatePropertyException extends RuntimeException {","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"    public DuplicatePropertyException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"        super(\"Operation would result in duplicate properties\");","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":7}},{"path":"src/main/java/seedu/address/model/property/exceptions/PropertyNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.model.property.exceptions;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"public class PropertyNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"    public PropertyNotFoundException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"        super(\"No such property found.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":7}},{"path":"src/main/java/seedu/address/model/property/status/Completion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.model.property.status;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"public class Completion implements Status {","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"    public static final String TOSTRING_MESSAGE \u003d \"Completed sale at \";","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"    private final Offer amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"    Completion(Offer amount) {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"    public Completion next() {","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"        return this;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"    public Offer getAmount() {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"        return amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"    public String toString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"        return TOSTRING_MESSAGE + amount.toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":26}},{"path":"src/main/java/seedu/address/model/property/status/Offer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.model.property.status;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":" * Represents a buyer\u0027s offer price for a property.","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidOffer(String)}.","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"public class Offer implements Comparable\u003cOffer\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Note the following conditions for specifying an offer:\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"            + \"1. The dollar sign is optional.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"            + \"2. There should not be any leading zeros in the number specified.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"            + \"3. The cents part is optional but if specified, it has to be exactly 2 decimal places.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"            + \"4. Either do not use commas at all or be consistent in the usage of commas throughout, \"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"            + \"where each comma should separate every three digits from the back.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"            + \"   E.g.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"            + \"   $1000000 or $1,000,000 are valid but $1000,000 or $100,00,00 are not valid.\";","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"    /*","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"     * Dollar sign is optional.","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"     * No leading zeros.","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"     * Either do not specify decimal portion or specify exactly two decimal places.","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"     * Either no commas at all or consistent usage of commas throughout.","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\$?([1-9]\\\\d*|0|[1-9]\\\\d{0,2}(,\\\\d{3})*)(\\\\.\\\\d{2})?\";","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"    public final String offer;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"     * Constructs an {@code Offer}.","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"     * @param offer A valid offer price.","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"    public Offer(String offer) {","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"        requireNonNull(offer);","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"        checkArgument(isValidOffer(offer), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"        this.offer \u003d offer;","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"     * Returns true if a given string is a valid offer price.","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"     * @return True if the given string is a valid offer price, otherwise false.","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"    public static boolean isValidOffer(String test) {","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"    public String toString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"        return offer;","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"            return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"dvdweien"},"content":"        if (!(other instanceof Offer)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"dvdweien"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"dvdweien"},"content":"        Offer otherAskingPrice \u003d (Offer) other;","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"dvdweien"},"content":"        return offer.equals(otherAskingPrice.offer);","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"dvdweien"},"content":"    public int compareTo(Offer another) {","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"dvdweien"},"content":"        return this.offer.compareTo(another.offer);","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"dvdweien"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"dvdweien"},"content":"        return offer.hashCode();","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":76}},{"path":"src/main/java/seedu/address/model/property/status/Option.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.model.property.status;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"public class Option implements Status {","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"    public static final String TOSTRING_MESSAGE \u003d \"Option to Purchase at \";","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"    private final Offer amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"    public Option(Offer amount) {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"    public SalesAgreement next() {","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"        return new SalesAgreement(amount);","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"    public Offer getAmount() {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"        return amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"    public String toString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"        return TOSTRING_MESSAGE + amount.toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":26}},{"path":"src/main/java/seedu/address/model/property/status/SalesAgreement.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.model.property.status;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"public class SalesAgreement implements Status {","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"    public static final String TOSTRING_MESSAGE \u003d \"Sales and Purchase Agreement at \";","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"    private final Offer amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"    SalesAgreement(Offer amount) {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"    public Completion next() {","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"        return new Completion(amount);","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"    public Offer getAmount() {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"        return amount;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"    public String toString() {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"        return TOSTRING_MESSAGE + amount.toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":26}},{"path":"src/main/java/seedu/address/model/property/status/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.model.property.status;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"public interface Status {","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"     * @return the next status, representing the next stage of the property buying process.","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"    Status next();","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"     * @return the amount offered","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"    Offer getAmount();","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"dvdweien":13}},{"path":"src/main/java/seedu/address/model/remark/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a remark.","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}.","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class Remark {","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remarks can take any value, but it should not be blank\";","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    private static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public final String remark;","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * Returns true if a given string is a valid remark.","lastModifiedDate":"2021-03-05"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     *","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * @return True if the given string is a valid remark, otherwise false.","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public String toString() {","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        return remark;","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"            return true;","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"            return false;","lastModifiedDate":"2021-03-05"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        return remark.equals(otherRemark.remark);","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        return remark.hashCode();","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"w2vgd":59}},{"path":"src/main/java/seedu/address/model/sort/descriptor/AppointmentSortingKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.model.sort.descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":" * Represents a value.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAppointmentSortingKey(String)}.","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"public class AppointmentSortingKey {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"AppointmentSortingKey can take value of either datetime or name\"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"            + \", and it should not be any other values\";","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    private static final String VALIDATION_REGEX \u003d \"datetime|name\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    private static final String DATETIME_STRING \u003d \"datetime\";","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    private static final String NAME_STRING \u003d \"name\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    public final String value;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"     * Constructs a {@code AppointmentSortingKey}.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"     * @param value A valid value representing an AppointmentSortingKey.","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"    public AppointmentSortingKey(String value) {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        checkArgument(isValidAppointmentSortingKey(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"     * Returns true if a given string is a valid value.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"     * @return True if the given string is a valid value, otherwise false.","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"    public static boolean isValidAppointmentSortingKey(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"     * Tests whether the sorting key is datetime.","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"     * @return True if the sorting key is datetime, otherwise false.","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"    public boolean isDatetime() {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"        return this.value.equals(DATETIME_STRING);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"     * Tests whether the sorting key is name.","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"     * @return True if the sorting key is name, otherwise false.","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"    public boolean isName() {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"        return this.value.equals(NAME_STRING);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"        return value;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"        if (!(other instanceof AppointmentSortingKey)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"        AppointmentSortingKey otherAppointmentSortingKey \u003d (AppointmentSortingKey) other;","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"        return value.equals(otherAppointmentSortingKey.value);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Cp-John":82}},{"path":"src/main/java/seedu/address/model/sort/descriptor/PropertySortingKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.model.sort.descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":" * Represents a value.","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPropertySortingKey(String)}.","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"public class PropertySortingKey {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"PropertySortingKey can take value of name, price,\"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"            + \"postalcode, address, or deadline, and it should not be any other values\";","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    private static final String VALIDATION_REGEX \u003d \"name|price|postalcode|address|deadline\";","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    private static final String PRICE_STRING \u003d \"price\";","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    private static final String NAME_STRING \u003d \"name\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    private static final String POSTAL_CODE_STRING \u003d \"postalcode\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"    private static final String DEADLINE_STRING \u003d \"deadline\";","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"    private static final String ADDRESS_STRING \u003d \"address\";","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"    public final String value;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"     * Constructs a {@code PropertySortingKey}.","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"     * @param value A valid value representing an PropertySortingKey.","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"    public PropertySortingKey(String value) {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        checkArgument(isValidPropertySortingKey(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"     * Returns true if a given string is a valid value.","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"     * @return True if the given string is a valid value, otherwise false.","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"    public static boolean isValidPropertySortingKey(String test) {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"     * Tests whether the sorting key is deadline.","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"     * @return True if the sorting key is deadline, otherwise false.","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"    public boolean isDeadline() {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"        return this.value.equals(DEADLINE_STRING);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"     * Tests whether the sorting key is postalcode.","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"     * @return True if the sorting key is postalcode, otherwise false.","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"    public boolean isPostalCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"        return this.value.equals(POSTAL_CODE_STRING);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"     * Tests whether the sorting key is price.","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"     * @return True if the sorting key is price, otherwise false.","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"    public boolean isPrice() {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"        return this.value.equals(PRICE_STRING);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"     * Tests whether the sorting key is name.","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"     * @return True if the sorting key is name, otherwise false.","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"    public boolean isName() {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"        return this.value.equals(NAME_STRING);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"     * Tests whether the sorting key is address.","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"     * @return True if the sorting key is address, otherwise false.","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"    public boolean isAddress() {","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"        return this.value.equals(ADDRESS_STRING);","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"        return value;","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"Cp-John"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"Cp-John"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"        if (!(other instanceof PropertySortingKey)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"        PropertySortingKey otherPropertySortingKey \u003d (PropertySortingKey) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"Cp-John"},"content":"        return value.equals(otherPropertySortingKey.value);","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"Cp-John"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"Cp-John"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":115}},{"path":"src/main/java/seedu/address/model/sort/descriptor/SortingOrder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.model.sort.descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":" * Represents a value.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSortingOrder(String)}.","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"public class SortingOrder {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"SortingOrder can take value of either asc or desc\"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"            + \", and it should not be any other values\";","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    private static final String ASC_ORDER_STRING \u003d \"asc\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    private static final String DESC_ORDER_STRING \u003d \"desc\";","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public final String value;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"     * Constructs a {@code SortingOrder}.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"     * @param value A valid value.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"    public SortingOrder(String value) {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        checkArgument(isValidSortingOrder(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"     * Returns true if a given string is a valid value.","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"     * @param test The string to test.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"     * @return True if the given string is a valid value, otherwise false.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"    public static boolean isValidSortingOrder(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        return test.equals(ASC_ORDER_STRING) || test.equals(DESC_ORDER_STRING);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"     * Tests whether the sorting order is ascending.","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"     * @return True if the sorting order is ascending, or otherwise false.","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"    public boolean isAscendingOrder() {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"        return value.equals(ASC_ORDER_STRING);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"     * Tests whether the sorting order is descending.","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"     * @return True if the sorting order is descending, or otherwise false.","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"    public boolean isDescendingOrder() {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"        return value.equals(DESC_ORDER_STRING);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"        return value;","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"            return true;","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"        if (!(other instanceof SortingOrder)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"        SortingOrder otherSortingOrder \u003d (SortingOrder) other;","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"        return value.equals(otherSortingOrder.value);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Cp-John":80}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a Tag in the app.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} ]+\";","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":51,"w2vgd":3}},{"path":"src/main/java/seedu/address/model/util/DateTimeFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-04"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-04"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Specify the date and time formats used as input and output.","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-04"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class DateTimeFormat {","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-04"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"     * User input date format, e.g. 23-1-2021.","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter INPUT_DATE_FORMAT \u003d","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-03-04"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     * User input time format in 24-hour clock, e.g. 1800.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter INPUT_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-04"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Output date format, e.g. Jan 23, 2021.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-04"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d, u\");","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"     * Output time format, e.g. 7:33PM.","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter OUTPUT_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"h:mma\");","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-04"}],"authorContributionMap":{"w2vgd":30}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Date;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.AskingPrice;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Client;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Contact;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Email;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":" * Contains utility methods for populating both {@code PropertyBook} and {@code AppointmentBook} with sample data.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public static Property[] getSampleProperties() {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        return new Property[]{","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"            new Property(new Name(\"Mayfair\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"                new Type(\"Condo\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"                new Address(\"1 Jurong East Street 32, #08-111\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"                new PostalCode(\"609477\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"                new Deadline(LocalDate.parse(\"31-12-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"                    getTagSet(\"4 bedrooms\", \"No need for renovation\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"            new Property(new Name(\"Burghley Drive\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"                new Type(\"Landed\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"                new Address(\"12 Burghley Drive\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"                new PostalCode(\"123456\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"                new Deadline(LocalDate.parse(\"21-07-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"                new Remark(\"99 year leasehold, lowest selling price is $5,040,0000\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"                    getTagSet(\"99 year leasehold\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"            new Property(new Name(\"Woodlands Crescent\"), new Type(\"Hdb\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"                    new Address(\"Blk 784 Woodlands Crescent #01-01\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"                    new PostalCode(\"730784\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"                    new Deadline(LocalDate.parse(\"01-08-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"                    new Client(new Name(\"Alice\"), new Contact(\"91234567\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"                            new Email(\"alice@gmail.com\"), new AskingPrice(\"$800,000\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"                    getTagSet(\"2 bedrooms\", \"65 square metres\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"            new Property(new Name(\"The Interlace\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"                new Type(\"Condo\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"                new Address(\"180 Depot Rd\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"                new PostalCode(\"109684\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"                new Deadline(LocalDate.parse(\"10-04-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"                new Remark(\"Urgent!!!\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"                new Client(new Name(\"Alex Yeoh\"), new Contact(\"87438807\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"                    new Email(\"alexyeoh@example.com\"), new AskingPrice(\"$1,000,000\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"                    getTagSet(\"Labrador Park MRT\", \"2015 World Building of the Year\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"            new Property(new Name(\"Marina One Residences\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"                new Type(\"Condo\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"                new Address(\"21 Marina Way\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"                new PostalCode(\"018936\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"                new Deadline(LocalDate.parse(\"01-06-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"                new Remark(\"Has overlooking city view and 99-year leasehold\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"                new Client(new Name(\"Simon Lee\"), new Contact(\"91048774\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"                    new Email(\"simon_lee@hotmail.com\"), new AskingPrice(\"$2,500,000\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"                    getTagSet(\"Freehold\")),","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"            new Property(new Name(\"Compassvale Walk\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"                new Type(\"Hdb\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"                new Address(\"226A Compassvale Walk #10-07\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"                new PostalCode(\"540236\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"                new Deadline(LocalDate.parse(\"01-10-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"                new Remark(\"3 bedrooms\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"                    getTagSet(\"3 bedrooms\", \"Renovation needed\"))","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"    public static Appointment[] getSampleAppointments() {","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"        return new Appointment[]{","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"            new Appointment(new Name(\"Meet Alex\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"                new Remark(\"At M Hotel\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"                new Date(LocalDate.parse(\"25-12-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"                new Time(LocalTime.parse(\"1500\", DateTimeFormat.INPUT_TIME_FORMAT))),","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"            new Appointment(new Name(\"Meet Bob\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"                new Remark(\"At Plaza Singapore Starbucks\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"                new Date(LocalDate.parse(\"01-02-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"                new Time(LocalTime.parse(\"2000\", DateTimeFormat.INPUT_TIME_FORMAT))),","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"            new Appointment(new Name(\"Meet Alice\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"                new Remark(\"At client\u0027s house\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"                new Date(LocalDate.parse(\"17-08-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"                new Time(LocalTime.parse(\"1500\", DateTimeFormat.INPUT_TIME_FORMAT))),","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"            new Appointment(new Name(\"Meet Caleb\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"                new Remark(\"At void deck of his house\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"                new Date(LocalDate.parse(\"07-03-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"                new Time(LocalTime.parse(\"1030\", DateTimeFormat.INPUT_TIME_FORMAT))),","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"            new Appointment(new Name(\"Meet Simon\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"                new Remark(\"At Queenstown MRT station\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"                new Date(LocalDate.parse(\"20-09-2021\", DateTimeFormat.INPUT_DATE_FORMAT)),","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"                new Time(LocalTime.parse(\"1200\", DateTimeFormat.INPUT_TIME_FORMAT))),","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"            new Appointment(new Name(\"Meet Darren\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"                new Remark(\"At MBS Starbucks\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"                new Date(LocalDate.parse(\"12-10-2021\",","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"                    DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT))),","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"                new Time(LocalTime.parse(\"1400\", DateTimeFormatter.ofPattern(\"HHmm\")))),","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"            new Appointment(new Name(\"Meet Emily\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"                    new Remark(\"At MayFair Gardens\"),","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"                    new Date(LocalDate.parse(\"15-06-2021\",","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"                        DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT))),","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"                    new Time(LocalTime.parse(\"1100\", DateTimeFormatter.ofPattern(\"HHmm\"))))","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"        };","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"     * Returns a property book containing some sample properties.","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"    public static ReadOnlyPropertyBook getSamplePropertyBook() {","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"        PropertyBook samplePropertyBook \u003d new PropertyBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"        for (Property sampleProperty : getSampleProperties()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"            samplePropertyBook.addProperty(sampleProperty);","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"        return samplePropertyBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"     * Returns an appointment book containing some sample appointments.","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"    public static ReadOnlyAppointmentBook getSampleAppointmentBook() {","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"        AppointmentBook sampleAppointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"        for (Appointment sampleAppointment : getSampleAppointments()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"            sampleAppointmentBook.addAppointment(sampleAppointment);","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"        return sampleAppointmentBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"candyhy":31,"-":27,"w2vgd":93}},{"path":"src/main/java/seedu/address/storage/AppointmentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" * Represents a storage for {@link seedu.address.model.AppointmentBook}.","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public interface AppointmentBookStorage {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * Returns AppointmentBook data as a {@link seedu.address.model.ReadOnlyAppointmentBook}.","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * @see #getAppointmentBookFilePath()","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     * Saves the given {@link ReadOnlyAppointmentBook} to the storage.","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param appointmentBook cannot be null.","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException;","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     * @see #saveAppointmentBook(ReadOnlyAppointmentBook)","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Date;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.util.DateTimeFormat;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    private final String name;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    private final String remark;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    private final String date;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    private final String time;","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"name\") String name, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"                                  @JsonProperty(\"date\") String date, @JsonProperty(\"time\") String time) {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        remark \u003d source.getRemarks().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        time \u003d source.getTime().toString();","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        if (!Remark.isValidRemark(remark)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"        final Date modelDate \u003d new Date(LocalDate.parse(date, DateTimeFormat.OUTPUT_DATE_FORMAT));","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"        final Time modelTime \u003d new Time(LocalTime.parse(time, DateTimeFormat.OUTPUT_TIME_FORMAT));","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"        return new Appointment(modelName, modelRemark, modelDate, modelTime);","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":78,"w2vgd":8}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedProperty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.AskingPrice;","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.client.Client;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Contact;","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Email;","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Completion;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Offer;","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Option;","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.SalesAgreement;","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.status.Status;","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.util.DateTimeFormat;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":" * Jackson-friendly version of {@link Property}.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"class JsonAdaptedProperty {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Property\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    public static final String INCORRECT_CLIENT_FIELD_MESSAGE \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"            \"Different client fields should be delimited with a semicolon \"","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"            + \"and each client field should be in their respective formats shown below:\\n\"","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"            + Name.MESSAGE_CONSTRAINTS + \"\\n\"","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"            + Contact.MESSAGE_CONSTRAINTS + \"\\n\"","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"            + Email.MESSAGE_CONSTRAINTS + \"\\n\"","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"            + AskingPrice.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    public static final String CLIENT_STRING_REGEX \u003d \"(Client Name: (?\u003cclientName\u003e\" + Name.VALIDATION_REGEX + \"))?\"","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"            + \"(; )?\"","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"            + \"(Client Contact: (?\u003cclientContact\u003e\" + Contact.VALIDATION_REGEX + \"))?\"","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"            + \"(; )?\"","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"            + \"(Client Email: (?\u003cclientEmail\u003e\" + Email.VALIDATION_REGEX + \"))?\"","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"            + \"(; )?\"","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"            + \"(Client Asking Price: (?\u003cclientAskingPrice\u003e\" + AskingPrice.VALIDATION_REGEX + \"))?\";","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    public static final Pattern CLIENT_STRING_FORMAT \u003d Pattern.compile(CLIENT_STRING_REGEX);","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    private final String name;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"    private final String propertyType;","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    private final String address;","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    private final String postalCode;","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    private final String deadline;","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    private final String remark;","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    private final String client;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"dvdweien"},"content":"    private final String status;","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"     * Constructs a {@code JsonAdaptedProperty} with the given property details.","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"    public JsonAdaptedProperty(@JsonProperty(\"name\") String name, @JsonProperty(\"propertyType\") String propertyType,","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"                               @JsonProperty(\"address\") String address, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"                               @JsonProperty(\"postalCode\") String postalCode,","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"                               @JsonProperty(\"deadline\") String deadline, @JsonProperty(\"client\") String client,","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"dvdweien"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"dvdweien"},"content":"                               @JsonProperty(\"status\") String status) {","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        this.propertyType \u003d propertyType;","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"        this.postalCode \u003d postalCode;","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"dvdweien"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"     * Converts a given {@code Property} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"    public JsonAdaptedProperty(Property source) {","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"        propertyType \u003d source.getPropertyType().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"        address \u003d source.getAddress().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"        postalCode \u003d source.getPostalCode().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"        deadline \u003d source.getDeadline().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"        if (source.getRemarks() !\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"            remark \u003d source.getRemarks().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"            remark \u003d null;","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"        if (source.getClient() !\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"            client \u003d source.getClient().toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"            client \u003d null;","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"dvdweien"},"content":"        if (source.getStatus() !\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"dvdweien"},"content":"            status \u003d source.getStatus().toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"dvdweien"},"content":"        } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"dvdweien"},"content":"            status \u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"     * Converts this Jackson-friendly adapted property object into the model\u0027s {@code Property} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted property.","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"    public Property toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"        final List\u003cTag\u003e propertyTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"            propertyTags.add(tag.toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(propertyTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"candyhy"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"candyhy"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"candyhy"},"content":"        if (propertyType \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"                    Type.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"candyhy"},"content":"        if (!Type.isValidType(propertyType)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(Type.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"candyhy"},"content":"        final Type modelType \u003d new Type(propertyType);","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"candyhy"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"candyhy"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"candyhy"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"candyhy"},"content":"        if (postalCode \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"candyhy"},"content":"                    PostalCode.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"candyhy"},"content":"        if (!PostalCode.isValidPostal(postalCode)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"candyhy"},"content":"        final PostalCode modelPostal \u003d new PostalCode(postalCode);","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"candyhy"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"candyhy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"candyhy"},"content":"                    Deadline.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"candyhy"},"content":"        final Deadline modelDeadline \u003d new Deadline(LocalDate.parse(deadline, DateTimeFormat.OUTPUT_DATE_FORMAT));","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"dvdweien"},"content":"        final Status modelStatus \u003d parseToStatus(status);","lastModifiedDate":"2021-03-21"},{"lineNumber":175,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":176,"author":{"gitId":"dvdweien"},"content":"        final Remark modelRemark \u003d parseToRemark(remark);","lastModifiedDate":"2021-03-21"},{"lineNumber":177,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":178,"author":{"gitId":"dvdweien"},"content":"        final Client modelClient \u003d parseToClient(client);","lastModifiedDate":"2021-03-21"},{"lineNumber":179,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":180,"author":{"gitId":"candyhy"},"content":"        return new Property(modelName, modelType, modelAddress, modelPostal, modelDeadline, modelRemark,","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"dvdweien"},"content":"                modelClient, modelTags, modelStatus);","lastModifiedDate":"2021-03-21"},{"lineNumber":182,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"     * Converts toString of client back to Client object.","lastModifiedDate":"2021-03-19"},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":"    public static Client fromStringToClient(String toString) throws IllegalValueException {","lastModifiedDate":"2021-03-19"},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"        Matcher matcher \u003d CLIENT_STRING_FORMAT.matcher(toString);","lastModifiedDate":"2021-03-19"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-19"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"            throw new IllegalValueException(INCORRECT_CLIENT_FIELD_MESSAGE);","lastModifiedDate":"2021-03-19"},{"lineNumber":191,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"        String clientName \u003d matcher.group(\"clientName\");","lastModifiedDate":"2021-03-19"},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"        String clientContact \u003d matcher.group(\"clientContact\");","lastModifiedDate":"2021-03-19"},{"lineNumber":194,"author":{"gitId":"w2vgd"},"content":"        String clientEmail \u003d matcher.group(\"clientEmail\");","lastModifiedDate":"2021-03-19"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"        String clientAskingPrice \u003d matcher.group(\"clientAskingPrice\");","lastModifiedDate":"2021-03-19"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"        Name name \u003d ParserUtil.parseName(clientName);","lastModifiedDate":"2021-03-19"},{"lineNumber":198,"author":{"gitId":"w2vgd"},"content":"        Contact contact \u003d ParserUtil.parseClientContact(clientContact);","lastModifiedDate":"2021-03-19"},{"lineNumber":199,"author":{"gitId":"w2vgd"},"content":"        Email email \u003d ParserUtil.parseClientEmail(clientEmail);","lastModifiedDate":"2021-03-19"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":"        AskingPrice askingPrice \u003d ParserUtil.parseClientAskingPrice(clientAskingPrice);","lastModifiedDate":"2021-03-19"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"        return new Client(name, contact, email, askingPrice);","lastModifiedDate":"2021-03-19"},{"lineNumber":203,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":205,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":206,"author":{"gitId":"dvdweien"},"content":"     * Converts toString of status back to Status object.","lastModifiedDate":"2021-03-21"},{"lineNumber":207,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":208,"author":{"gitId":"dvdweien"},"content":"    public static Status parseToStatus(String toString) {","lastModifiedDate":"2021-03-21"},{"lineNumber":209,"author":{"gitId":"dvdweien"},"content":"        if (toString \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":210,"author":{"gitId":"dvdweien"},"content":"            return null;","lastModifiedDate":"2021-03-21"},{"lineNumber":211,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":212,"author":{"gitId":"dvdweien"},"content":"        Status status \u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":213,"author":{"gitId":"dvdweien"},"content":"        if (toString.startsWith(Option.TOSTRING_MESSAGE)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":214,"author":{"gitId":"dvdweien"},"content":"            Offer amount \u003d new Offer(toString.substring(Option.TOSTRING_MESSAGE.length()));","lastModifiedDate":"2021-03-21"},{"lineNumber":215,"author":{"gitId":"dvdweien"},"content":"            status \u003d new Option(amount);","lastModifiedDate":"2021-03-21"},{"lineNumber":216,"author":{"gitId":"dvdweien"},"content":"        } else if (toString.startsWith(SalesAgreement.TOSTRING_MESSAGE)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":217,"author":{"gitId":"dvdweien"},"content":"            Offer amount \u003d new Offer(toString.substring(SalesAgreement.TOSTRING_MESSAGE.length()));","lastModifiedDate":"2021-03-21"},{"lineNumber":218,"author":{"gitId":"dvdweien"},"content":"            status \u003d new Option(amount).next();","lastModifiedDate":"2021-03-21"},{"lineNumber":219,"author":{"gitId":"dvdweien"},"content":"        } else if (toString.startsWith(Completion.TOSTRING_MESSAGE)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":220,"author":{"gitId":"dvdweien"},"content":"            Offer amount \u003d new Offer(toString.substring(Completion.TOSTRING_MESSAGE.length()));","lastModifiedDate":"2021-03-21"},{"lineNumber":221,"author":{"gitId":"dvdweien"},"content":"            status \u003d new Option(amount).next().next();","lastModifiedDate":"2021-03-21"},{"lineNumber":222,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":223,"author":{"gitId":"dvdweien"},"content":"        return status;","lastModifiedDate":"2021-03-21"},{"lineNumber":224,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":225,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":226,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":227,"author":{"gitId":"dvdweien"},"content":"     * Converts toString of remark back to Remark object.","lastModifiedDate":"2021-03-21"},{"lineNumber":228,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":229,"author":{"gitId":"dvdweien"},"content":"    public static Remark parseToRemark(String toString) throws IllegalValueException {","lastModifiedDate":"2021-03-21"},{"lineNumber":230,"author":{"gitId":"dvdweien"},"content":"        Remark remark \u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":231,"author":{"gitId":"dvdweien"},"content":"        if (toString !\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":232,"author":{"gitId":"dvdweien"},"content":"            if (!Remark.isValidRemark(toString)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":233,"author":{"gitId":"dvdweien"},"content":"                throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":234,"author":{"gitId":"dvdweien"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":235,"author":{"gitId":"dvdweien"},"content":"            remark \u003d new Remark(toString);","lastModifiedDate":"2021-03-21"},{"lineNumber":236,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":237,"author":{"gitId":"dvdweien"},"content":"        return remark;","lastModifiedDate":"2021-03-21"},{"lineNumber":238,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":239,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":240,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":241,"author":{"gitId":"dvdweien"},"content":"     * Converts toString of client back to Client object.","lastModifiedDate":"2021-03-21"},{"lineNumber":242,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":243,"author":{"gitId":"dvdweien"},"content":"    public static Client parseToClient(String toString) throws IllegalValueException {","lastModifiedDate":"2021-03-21"},{"lineNumber":244,"author":{"gitId":"dvdweien"},"content":"        Client client \u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":245,"author":{"gitId":"dvdweien"},"content":"        if (toString !\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":246,"author":{"gitId":"dvdweien"},"content":"            //TODO add test to validate client","lastModifiedDate":"2021-03-21"},{"lineNumber":247,"author":{"gitId":"dvdweien"},"content":"            client \u003d fromStringToClient(toString);;","lastModifiedDate":"2021-03-21"},{"lineNumber":248,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":249,"author":{"gitId":"dvdweien"},"content":"        return client;","lastModifiedDate":"2021-03-21"},{"lineNumber":250,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":251,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"dvdweien":67,"candyhy":121,"w2vgd":63}},{"path":"src/main/java/seedu/address/storage/JsonAppointmentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":" * A class to access AppointmentBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"public class JsonAppointmentBookStorage implements AppointmentBookStorage {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAppointmentBookStorage.class);","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    public JsonAppointmentBookStorage(Path filePath) {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        return filePath;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        return readAppointmentBook(filePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     * Similar to {@link #readAppointmentBook()}.","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        Optional\u003cJsonSerializableAppointmentBook\u003e jsonAppointmentBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"                filePath, JsonSerializableAppointmentBook.class);","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        if (!jsonAppointmentBook.isPresent()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        try {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"            return Optional.of(jsonAppointmentBook.get().toModelType());","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        } catch (IllegalValueException | DateTimeParseException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException {","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"        saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"     * Similar to {@link #saveAppointmentBook(ReadOnlyAppointmentBook)}.","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        requireNonNull(appointmentBook);","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAppointmentBook(appointmentBook), filePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":77,"w2vgd":4}},{"path":"src/main/java/seedu/address/storage/JsonPropertyBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":" * A class to access PropertyBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"public class JsonPropertyBookStorage implements PropertyBookStorage {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPropertyBookStorage.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    public JsonPropertyBookStorage(Path filePath) {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    public Path getPropertyBookFilePath() {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        return filePath;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    public Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook() throws DataConversionException {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        return readPropertyBook(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     * Similar to {@link #readPropertyBook()}.","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    public Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        Optional\u003cJsonSerializablePropertyBook\u003e jsonPropertyBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"                filePath, JsonSerializablePropertyBook.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        if (!jsonPropertyBook.isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"            return Optional.of(jsonPropertyBook.get().toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        } catch (IllegalValueException | DateTimeParseException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    public void savePropertyBook(ReadOnlyPropertyBook propertyBook) throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"        savePropertyBook(propertyBook, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"     * Similar to {@link #savePropertyBook(ReadOnlyPropertyBook)}.","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"    public void savePropertyBook(ReadOnlyPropertyBook propertyBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        requireNonNull(propertyBook);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePropertyBook(propertyBook), filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"candyhy":81}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAppointmentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":" * An Immutable AppointmentBook that is serializable to JSON format.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"@JsonRootName(value \u003d \"appointmentbook\")","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"class JsonSerializableAppointmentBook {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointment list contains duplicate appointment(s).\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * Constructs a {@code JsonSerializableAppointmentBook} with the given appointments.","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    public JsonSerializableAppointmentBook(@JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     * Converts a given {@code ReadOnlyAppointmentBook} into this class for Jackson use.","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAppointmentBook}.","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    public JsonSerializableAppointmentBook(ReadOnlyAppointmentBook source) {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        appointments.addAll(source.getAppointmentList().stream().map(JsonAdaptedAppointment::new)","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     * Converts this appointment book into the model\u0027s {@code AppointmentBook} object.","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"    public AppointmentBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        AppointmentBook appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"            if (appointmentBook.hasAppointment(appointment)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"            appointmentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        return appointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":61}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePropertyBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":" * An Immutable PropertyBook that is serializable to JSON format.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"@JsonRootName(value \u003d \"propertybook\")","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"class JsonSerializablePropertyBook {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    public static final String MESSAGE_DUPLICATE_PROPERTY \u003d \"Property list contains duplicate properties.\";","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    private final List\u003cJsonAdaptedProperty\u003e properties \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * Constructs a {@code JsonSerializablePropertyBook} with the given property.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    public JsonSerializablePropertyBook(@JsonProperty(\"properties\") List\u003cJsonAdaptedProperty\u003e properties) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        this.properties.addAll(properties);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     * Converts a given {@code ReadOnlyPropertyBook} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePropertyBook}.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    public JsonSerializablePropertyBook(ReadOnlyPropertyBook source) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        properties.addAll(source.getPropertyList().stream().map(JsonAdaptedProperty::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     * Converts this property book into the model\u0027s {@code PropertyBook} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"    public PropertyBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        PropertyBook propertyBook \u003d new PropertyBook();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        for (JsonAdaptedProperty jsonAdaptedProperty : properties) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"            Property property \u003d jsonAdaptedProperty.toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"            if (propertyBook.hasProperty(property)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"            propertyBook.addProperty(property);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        return propertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"candyhy":61}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"candyhy":1,"-":47}},{"path":"src/main/java/seedu/address/storage/PropertyBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" * Represents a storage for {@link seedu.address.model.PropertyBook}.","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public interface PropertyBookStorage {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    Path getPropertyBookFilePath();","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * Returns PropertyBook data as a {@link seedu.address.model.ReadOnlyPropertyBook}.","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * @see #getPropertyBookFilePath()","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     * Saves the given {@link ReadOnlyPropertyBook} to the storage.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param propertyBook cannot be null.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    void savePropertyBook(ReadOnlyPropertyBook propertyBook) throws IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     * @see #savePropertyBook(ReadOnlyPropertyBook)","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    void savePropertyBook(ReadOnlyPropertyBook propertyBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"candyhy":47}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"public interface Storage extends PropertyBookStorage, AppointmentBookStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    Path getPropertyBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    void savePropertyBook(ReadOnlyPropertyBook propertyBook) throws IOException;","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    void savePropertyBook(ReadOnlyPropertyBook propertyBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    Path getAppointmentBookFilePath();","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException;","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"candyhy":8,"-":32,"w2vgd":16}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":" * Manages storage of PropertyBook and AppointmentBook data in local storage.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    private PropertyBookStorage propertyBookStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    private AppointmentBookStorage appointmentBookStorage;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code StorageManager} with the given {@code AppointmentBookStorage}, {@code PropertyBookStorage}","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public StorageManager(AppointmentBookStorage appointmentBookStorage, PropertyBookStorage propertyBookStorage,","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        this.appointmentBookStorage \u003d appointmentBookStorage;","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        this.propertyBookStorage \u003d propertyBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  PropertyBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    public Path getPropertyBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        return propertyBookStorage.getPropertyBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    public Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        return readPropertyBook(propertyBookStorage.getPropertyBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    public Optional\u003cReadOnlyPropertyBook\u003e readPropertyBook(Path filePath)","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        return propertyBookStorage.readPropertyBook(filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    public void savePropertyBook(ReadOnlyPropertyBook propertyBook) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        savePropertyBook(propertyBook, propertyBookStorage.getPropertyBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"    public void savePropertyBook(ReadOnlyPropertyBook propertyBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        propertyBookStorage.savePropertyBook(propertyBook, filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d  AppointmentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"    public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        return appointmentBookStorage.getAppointmentBookFilePath();","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        return readAppointmentBook(appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"    public Optional\u003cReadOnlyAppointmentBook\u003e readAppointmentBook(Path filePath)","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"        return appointmentBookStorage.readAppointmentBook(filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"        saveAppointmentBook(appointmentBook, appointmentBookStorage.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"    public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"        appointmentBookStorage.saveAppointmentBook(appointmentBook, filePath);","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"candyhy":19,"-":68,"w2vgd":26}},{"path":"src/main/java/seedu/address/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"candyhy":2,"-":36}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":" * An UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public final Appointment appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    private Label name;","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    private Label id;","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    private Label remarks;","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    private Label date;","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    private Label time;","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code AppointmentCode} with the given {@code Appointment} and index to display.","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        super(FXML);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        name.setText(appointment.getName().name);","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        remarks.setText(appointment.getRemarks().remark);","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        date.setText(appointment.getDate().toString());","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        time.setText(appointment.getTime().toString());","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        Date currentDate \u003d new Date(LocalDate.now());","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        Time currentTime \u003d new Time(LocalTime.now());","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        if (currentDate.compareTo(appointment.getDate()) \u003e 0) {","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            cardPane.setStyle(\"-fx-background-color: #696969\");","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        } else if (currentDate.compareTo(appointment.getDate()) \u003d\u003d 0","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 currentTime.compareTo(appointment.getTime()) \u003e 0) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"            cardPane.setStyle(\"-fx-background-color: #696969\");","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"            return true;","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        if (!(other instanceof AppointmentCard)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"            return false;","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"        // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 appointment.equals(card.appointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":84}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        super(FXML);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"                setText(null);","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"            } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":48}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    private PropertyListPanel propertyListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    private HBox listDisplayBox;","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"    private StackPane propertyListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    private StackPane statusAppointmentBarPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"        propertyListPanel \u003d new PropertyListPanel(logic.getFilteredPropertyList());","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"        propertyListPanelPlaceholder.getChildren().add(propertyListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"        // TODO","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"        StatusBarFooter statusAppointmentBarFooter \u003d new StatusBarFooter(logic.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"        //StatusBarFooter statusPropertyBarFooter \u003d new StatusBarFooter(logic.getPropertyBookFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"        statusAppointmentBarPlaceholder.getChildren().add(statusAppointmentBarFooter.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"candyhy"},"content":"    public AppointmentListPanel getAppointmentListPanel() {","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"candyhy"},"content":"        return appointmentListPanel;","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"candyhy"},"content":"    public PropertyListPanel getPropertyListPanel() {","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"candyhy"},"content":"        return propertyListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"candyhy":22,"-":191,"w2vgd":1}},{"path":"src/main/java/seedu/address/ui/PropertyCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.client.Client;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":" * An UI component that displays information of a {@code Property}.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"public class PropertyCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    private static final String FXML \u003d \"PropertyListCard.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    public final Property property;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    private Label name;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    private Label id;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    private Label propertyType;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    private Label address;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    private Label postalCode;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    private Label deadline;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    private Label askingPrice;","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"    private Label clientName;","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    private Label clientContact;","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"    private Label clientEmail;","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"    private Label remarks;","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    @FXML","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"    private Label status;","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code PropertyCode} with the given {@code Property} and index to display.","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    public PropertyCard(Property property, int displayedIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"        this.property \u003d property;","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        name.setText(property.getName().toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        propertyType.setText(property.getPropertyType().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"        address.setText(property.getAddress().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        deadline.setText(property.getDeadline().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        postalCode.setText(property.getPostalCode().toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"        property.getTags().stream()","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"        Deadline currentDate \u003d new Deadline(LocalDate.now());","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"        if (currentDate.compareTo(property.getDeadline()) \u003e 0) {","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"            cardPane.setStyle(\"-fx-background-color: #696969\");","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"        if (property.getRemarks() \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"            remarks.setManaged(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"            remarks.setText(property.getRemarks().toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"        if (property.getClient() \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"            askingPrice.setManaged(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"            clientName.setManaged(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"            clientContact.setManaged(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"            clientEmail.setManaged(false);","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"            askingPrice.setText(property.getAskingPrice().toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"            clientName.setText(Client.STRING_CLIENT_NAME + property.getClient().getClientName().toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"            clientContact.setText(Client.STRING_CLIENT_CONTACT + property.getClient().getClientContact().toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"            clientEmail.setText(Client.STRING_CLIENT_EMAIL + property.getClient().getClientEmail().toString());","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"dvdweien"},"content":"        if (property.getStatus() \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"dvdweien"},"content":"            status.setText(\"\");","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"dvdweien"},"content":"        } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"dvdweien"},"content":"            status.setText(property.getStatus().toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"        if (!(other instanceof PropertyCard)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"        // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"        PropertyCard card \u003d (PropertyCard) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"                \u0026\u0026 property.equals(card.property);","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"dvdweien":8,"candyhy":109,"w2vgd":8}},{"path":"src/main/java/seedu/address/ui/PropertyListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":" * Panel containing the list of property.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"public class PropertyListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    private static final String FXML \u003d \"PropertyListPanel.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    private ListView\u003cProperty\u003e propertyListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code PropertyListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    public PropertyListPanel(ObservableList\u003cProperty\u003e propertyList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        propertyListView.setItems(propertyList);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        propertyListView.setCellFactory(listView -\u003e new PropertyListViewCell());","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Property} using a {@code PropertyCard}.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    class PropertyListViewCell extends ListCell\u003cProperty\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        protected void updateItem(Property property, boolean empty) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"            super.updateItem(property, empty);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"            if (empty || property \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"                setText(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"                setGraphic(new PropertyCard(property, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"candyhy":49}},{"path":"src/main/java/seedu/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"candyhy":3,"-":12}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/LightTheme.css\");","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"candyhy":1,"-":88}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"candyhy":6,"-":87}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"remarks\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":34}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":8}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":".background {","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"    background-color: #FFFFFF; /* Used in the default.html file */","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":".label {","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":".label-bright {","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":".label-header {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":".text-field {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":".tab-pane {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":".table-view {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    -fx-base: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    -fx-control-inner-background: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    -fx-size: 35;","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    -fx-border-color:","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        transparent","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        transparent","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":".table-view .column-header .label {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":".split-pane {","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":".list-view {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":".list-cell {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 0.05 0.05 0.05 0.05;","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"    -fx-border-radius: 12 12 12 12;","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"    -fx-background-radius: 12 12 12 12;","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: #B0C4DE;","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: #F0F8FF;","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: #DCDCDC;","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"    -fx-background-opacity: 0.01","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"    -fx-border-color: #FFFFFF;","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"    -fx-border-radius: 12 12 12 12;","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"    -fx-background-radius: 12 12 12 12;","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":".list-cell .label {","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":".cell_big_label {","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":".cell_small_label {","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"candyhy"},"content":".stack-pane {","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"candyhy"},"content":"     -fx-background-color: derive(#FFFFFF, 20%);","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"candyhy"},"content":".pane-with-border {","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"candyhy"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"candyhy"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"candyhy"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"candyhy"},"content":".status-bar {","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(white, 30%);","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"candyhy"},"content":".result-display {","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"candyhy"},"content":".result-display .label {","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"candyhy"},"content":".status-bar .label {","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"candyhy"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"candyhy"},"content":".status-bar-with-border {","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"candyhy"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"candyhy"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"candyhy"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"candyhy"},"content":".grid-pane {","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"candyhy"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"candyhy"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"candyhy"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"candyhy"},"content":".context-menu {","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"candyhy"},"content":".context-menu .label {","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"candyhy"},"content":".menu-bar {","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"candyhy"},"content":".menu-bar .label {","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"candyhy"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"candyhy"},"content":".menu .left-container {","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"candyhy"},"content":"/*","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"candyhy"},"content":" * Metro style Push Button","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"candyhy"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"candyhy"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"candyhy"},"content":".button {","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"candyhy"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"candyhy"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"candyhy"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"candyhy"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"candyhy"},"content":".button:hover {","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"candyhy"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"candyhy"},"content":"  -fx-background-color: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"candyhy"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"candyhy"},"content":".button:focused {","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"candyhy"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2021-03-24"},{"lineNumber":244,"author":{"gitId":"candyhy"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"candyhy"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"candyhy"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"candyhy"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"candyhy"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-03-24"},{"lineNumber":251,"author":{"gitId":"candyhy"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"candyhy"},"content":".button:default {","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":259,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":260,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":261,"author":{"gitId":"candyhy"},"content":".button:default:hover {","lastModifiedDate":"2021-03-24"},{"lineNumber":262,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-03-24"},{"lineNumber":263,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":264,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":265,"author":{"gitId":"candyhy"},"content":".dialog-pane {","lastModifiedDate":"2021-03-24"},{"lineNumber":266,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-24"},{"lineNumber":267,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":268,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":269,"author":{"gitId":"candyhy"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2021-03-24"},{"lineNumber":270,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2021-03-24"},{"lineNumber":271,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":272,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":273,"author":{"gitId":"candyhy"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2021-03-24"},{"lineNumber":274,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-03-24"},{"lineNumber":275,"author":{"gitId":"candyhy"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-03-24"},{"lineNumber":276,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":277,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":278,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"candyhy"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(white, 25%);","lastModifiedDate":"2021-03-24"},{"lineNumber":281,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":282,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":283,"author":{"gitId":"candyhy"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-03-24"},{"lineNumber":284,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"candyhy"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"candyhy"},"content":"    -fx-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":287,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"candyhy"},"content":".scroll-bar {","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-24"},{"lineNumber":292,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"candyhy"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"candyhy"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"candyhy"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":304,"author":{"gitId":"candyhy"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"candyhy"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":308,"author":{"gitId":"candyhy"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":311,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":312,"author":{"gitId":"candyhy"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-03-24"},{"lineNumber":313,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":314,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":315,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":316,"author":{"gitId":"candyhy"},"content":"#cardPane {","lastModifiedDate":"2021-03-24"},{"lineNumber":317,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":318,"author":{"gitId":"candyhy"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":319,"author":{"gitId":"candyhy"},"content":"    -fx-border-radius: 12 12 12 12;","lastModifiedDate":"2021-03-24"},{"lineNumber":320,"author":{"gitId":"candyhy"},"content":"    -fx-background-radius: 12 12 12 12;","lastModifiedDate":"2021-03-24"},{"lineNumber":321,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":322,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":323,"author":{"gitId":"candyhy"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-03-24"},{"lineNumber":324,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-03-24"},{"lineNumber":325,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":326,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":327,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":328,"author":{"gitId":"candyhy"},"content":"#commandTextField {","lastModifiedDate":"2021-03-24"},{"lineNumber":329,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2021-03-24"},{"lineNumber":330,"author":{"gitId":"candyhy"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":331,"author":{"gitId":"candyhy"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2021-03-24"},{"lineNumber":332,"author":{"gitId":"candyhy"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":333,"author":{"gitId":"candyhy"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":334,"author":{"gitId":"candyhy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-24"},{"lineNumber":335,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":337,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":338,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":339,"author":{"gitId":"candyhy"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2021-03-24"},{"lineNumber":340,"author":{"gitId":"candyhy"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2021-03-24"},{"lineNumber":341,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":342,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":343,"author":{"gitId":"candyhy"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-03-24"},{"lineNumber":344,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: transparent, white, white, white;","lastModifiedDate":"2021-03-24"},{"lineNumber":345,"author":{"gitId":"candyhy"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":346,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":347,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":348,"author":{"gitId":"candyhy"},"content":"#tags {","lastModifiedDate":"2021-03-24"},{"lineNumber":349,"author":{"gitId":"candyhy"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-24"},{"lineNumber":350,"author":{"gitId":"candyhy"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-24"},{"lineNumber":351,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":352,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":353,"author":{"gitId":"candyhy"},"content":"#tags .label {","lastModifiedDate":"2021-03-24"},{"lineNumber":354,"author":{"gitId":"candyhy"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-24"},{"lineNumber":355,"author":{"gitId":"candyhy"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-03-24"},{"lineNumber":356,"author":{"gitId":"candyhy"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-24"},{"lineNumber":357,"author":{"gitId":"candyhy"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-24"},{"lineNumber":358,"author":{"gitId":"candyhy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-24"},{"lineNumber":359,"author":{"gitId":"candyhy"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-24"},{"lineNumber":360,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"candyhy":360}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"         title\u003d\"Pocket Estate\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        \u003cHBox fx:id\u003d\"listDisplayBox\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"          \u003cVBox fx:id\u003d\"propertylist\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"            \u003cStackPane fx:id\u003d\"propertyListPanelPlaceholder\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"          \u003cVBox fx:id\u003d\"appointmentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"           \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" minWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"        \u003cStackPane fx:id\u003d\"statusAppointmentBarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"candyhy":11,"-":59}},{"path":"src/main/resources/view/PropertyListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"         \u003cLabel fx:id\u003d\"status\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"propertyType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$propertyType\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"postalCode\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$postalCode\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"askingPrice\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$askingPrice\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"clientName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$clientName\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"clientContact\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$clientContact\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"clientEmail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$clientEmail\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"remarks\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"dvdweien":9,"candyhy":36,"w2vgd":2}},{"path":"src/main/resources/view/PropertyListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    \u003cListView fx:id\u003d\"propertyListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"candyhy":2,"-":7}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"  \"propertyBookFilePath\" : \"propertybook.json\",","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"  \"appointmentBookFilePath\" : \"appointmentbook.json\"","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":12,"w2vgd":2}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"  \"propertyBookFilePath\" : \"propertybook.json\",","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"  \"appointmentBookFilePath\" : \"appointmentbook.json\"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":10,"w2vgd":2}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"import seedu.address.storage.JsonAppointmentBookStorage;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"import seedu.address.storage.JsonPropertyBookStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                new JsonAppointmentBookStorage(temporaryFolder.resolve(\"appointmentBook.json\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"        JsonPropertyBookStorage propertyBookStorage \u003d new JsonPropertyBookStorage(","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                temporaryFolder.resolve(\"propertyBook.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"        StorageManager storage \u003d new StorageManager(appointmentBookStorage, propertyBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        String deleteCommand \u003d \"delete appointment 9\";","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public void getFilteredAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredAppointmentList().remove(0));","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"        Model expectedModel \u003d new ModelManager(model.getAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"    private static class JsonAppointmentBookIoExceptionThrowingStub extends JsonAppointmentBookStorage {","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"        private JsonAppointmentBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"        public void saveAppointmentBook(ReadOnlyAppointmentBook appointmentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"candyhy":13,"-":120,"w2vgd":5}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public void execute_appointmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        CommandResult commandResult \u003d new AddAppointmentCommand(validAppointment).execute(modelStub);","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        assertEquals(String.format(AddAppointmentCommand.MESSAGE_SUCCESS, validAppointment),","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        assertEquals(Arrays.asList(validAppointment), modelStub.appointmentsAdded);","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    public void execute_duplicateAppointment_throwsCommandException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(validAppointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        ModelStub modelStub \u003d new ModelStubWithAppointment(validAppointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"                AddAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT, () -\u003e addAppointmentCommand.execute(modelStub));","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    public void equals() {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        Appointment meetAlex \u003d new AppointmentBuilder().withName(\"Meet Alex\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        Appointment meetBob \u003d new AppointmentBuilder().withName(\"Meet Bob\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        AddAppointmentCommand addMeetAlexCommand \u003d new AddAppointmentCommand(meetAlex);","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        AddAppointmentCommand addMeetBobCommand \u003d new AddAppointmentCommand(meetBob);","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        assertTrue(addMeetAlexCommand.equals(addMeetAlexCommand));","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        AddAppointmentCommand addMeetAlexCommandCopy \u003d new AddAppointmentCommand(meetAlex);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        assertTrue(addMeetAlexCommand.equals(addMeetAlexCommandCopy));","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        assertFalse(addMeetAlexCommand.equals(1));","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"        assertFalse(addMeetAlexCommand.equals(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        // different appointments -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        assertFalse(addMeetAlexCommand.equals(addMeetBobCommand));","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"        public void setPropertyBook(ReadOnlyPropertyBook propertyBook) {","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"        public Path getPropertyBookFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"        public void setPropertyBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"        public ReadOnlyPropertyBook getPropertyBook() {","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"        public boolean hasProperty(Property property) {","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"        public void addProperty(Property property) {","lastModifiedDate":"2021-03-07"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":135,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"        public int getPropertyListSize() {","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"candyhy"},"content":"        public void deleteProperty(Property target) {","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":146,"author":{"gitId":"dvdweien"},"content":"        public Property getProperty(int i) {","lastModifiedDate":"2021-03-11"},{"lineNumber":147,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":148,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":151,"author":{"gitId":"candyhy"},"content":"        public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":152,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"dvdweien"},"content":"        public void setProperty(int i, Property property) {","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"dvdweien"},"content":"        public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":166,"author":{"gitId":"candyhy"},"content":"        public void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":168,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":169,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"Cp-John"},"content":"        public void sortPropertyList(Comparator\u003cProperty\u003e comparator) {","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"Cp-John"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":176,"author":{"gitId":"candyhy"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook newData) {","lastModifiedDate":"2021-03-12"},{"lineNumber":177,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":178,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"candyhy"},"content":"        public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":183,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":186,"author":{"gitId":"candyhy"},"content":"        public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":189,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":191,"author":{"gitId":"candyhy"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":193,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":194,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":198,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":199,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":204,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":205,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":206,"author":{"gitId":"candyhy"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2021-03-12"},{"lineNumber":207,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":208,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":209,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":210,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":211,"author":{"gitId":"candyhy"},"content":"        public void setAppointment(Appointment target, Appointment editedPerson) {","lastModifiedDate":"2021-03-12"},{"lineNumber":212,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":213,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":214,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":215,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":216,"author":{"gitId":"dvdweien"},"content":"        public Appointment getAppointment(int i) {","lastModifiedDate":"2021-03-13"},{"lineNumber":217,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":218,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"        public int getAppointmentListSize() {","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":225,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":226,"author":{"gitId":"candyhy"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":227,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":228,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":229,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":230,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":231,"author":{"gitId":"candyhy"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":232,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":233,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":234,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":235,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"Cp-John"},"content":"        public void sortAppointmentList(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"Cp-John"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":240,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":241,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":242,"author":{"gitId":"w2vgd"},"content":"     * A Model stub that contains a single appointment.","lastModifiedDate":"2021-03-07"},{"lineNumber":243,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":244,"author":{"gitId":"w2vgd"},"content":"    private class ModelStubWithAppointment extends ModelStub {","lastModifiedDate":"2021-03-07"},{"lineNumber":245,"author":{"gitId":"w2vgd"},"content":"        private final Appointment appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":246,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":247,"author":{"gitId":"w2vgd"},"content":"        ModelStubWithAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":248,"author":{"gitId":"w2vgd"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":249,"author":{"gitId":"w2vgd"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":250,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":251,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":252,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":253,"author":{"gitId":"w2vgd"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":254,"author":{"gitId":"w2vgd"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":255,"author":{"gitId":"w2vgd"},"content":"            return this.appointment.isSameAppointment(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":256,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":257,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":258,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":259,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":260,"author":{"gitId":"w2vgd"},"content":"     * A Model stub that always accept the appointment being added.","lastModifiedDate":"2021-03-07"},{"lineNumber":261,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":262,"author":{"gitId":"w2vgd"},"content":"    private class ModelStubAcceptingAppointmentAdded extends ModelStub {","lastModifiedDate":"2021-03-07"},{"lineNumber":263,"author":{"gitId":"w2vgd"},"content":"        final ArrayList\u003cAppointment\u003e appointmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":264,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":265,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":266,"author":{"gitId":"w2vgd"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":267,"author":{"gitId":"w2vgd"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":268,"author":{"gitId":"w2vgd"},"content":"            return appointmentsAdded.stream().anyMatch(appointment::isSameAppointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":269,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":270,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":271,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":272,"author":{"gitId":"w2vgd"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":273,"author":{"gitId":"w2vgd"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":274,"author":{"gitId":"w2vgd"},"content":"            appointmentsAdded.add(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":275,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":276,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":277,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"dvdweien":28,"Cp-John":16,"candyhy":70,"w2vgd":163}},{"path":"src/test/java/seedu/address/logic/commands/AddPropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyPropertyBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import seedu.address.testutil.PropertyBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"public class AddPropertyCommandTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public void constructor_nullProperty_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPropertyCommand(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public void execute_propertyAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        ModelStubAcceptingPropertyAdded modelStub \u003d new ModelStubAcceptingPropertyAdded();","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        Property validProperty \u003d new PropertyBuilder().build();","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        CommandResult commandResult \u003d new AddPropertyCommand(validProperty).execute(modelStub);","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        assertEquals(String.format(AddPropertyCommand.MESSAGE_SUCCESS, validProperty),","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        assertEquals(Arrays.asList(validProperty), modelStub.propertiesAdded);","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    public void execute_duplicateProperty_throwsCommandException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        Property validProperty \u003d new PropertyBuilder().build();","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        AddPropertyCommand addPropertyCommand \u003d new AddPropertyCommand(validProperty);","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        ModelStub modelStub \u003d new ModelStubWithProperty(validProperty);","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"                AddPropertyCommand.MESSAGE_DUPLICATE_PROPERTY, () -\u003e addPropertyCommand.execute(modelStub));","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    public void equals() {","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        Property mayfair \u003d new PropertyBuilder().withName(\"Mayfair\").build();","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        Property burghleyDrive \u003d new PropertyBuilder().withName(\"Burghley Drive\").build();","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        AddPropertyCommand addMayfairCommand \u003d new AddPropertyCommand(mayfair);","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        AddPropertyCommand addBurghleyDriveCommand \u003d new AddPropertyCommand(burghleyDrive);","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        assertTrue(addMayfairCommand.equals(addMayfairCommand));","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        AddPropertyCommand addMayfairCommandCopy \u003d new AddPropertyCommand(mayfair);","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        assertTrue(addMayfairCommand.equals(addMayfairCommandCopy));","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        assertFalse(addMayfairCommand.equals(1));","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"        assertFalse(addMayfairCommand.equals(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        // different property -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        assertFalse(addMayfairCommand.equals(addBurghleyDriveCommand));","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"        public void sortAppointmentList(Comparator\u003cAppointment\u003e comparator) {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"        public void sortPropertyList(Comparator\u003cProperty\u003e comparator) {","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-06"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-06"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-06"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-06"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"        public Path getPropertyBookFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"        public void setPropertyBookFilePath(Path propertyBookFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":125,"author":{"gitId":"Cp-John"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"Cp-John"},"content":"        public void setPropertyBook(ReadOnlyPropertyBook propertyBook) {","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"Cp-John"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"Cp-John"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"        public ReadOnlyPropertyBook getPropertyBook() {","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"        public boolean hasProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"        public void addProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-06"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":145,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"        public int getPropertyListSize() {","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"dvdweien"},"content":"        public Property getProperty(int i) {","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"dvdweien"},"content":"        public void setProperty(int i, Property property) {","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"dvdweien"},"content":"        public void setProperty(Property target, Property editedProperty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":166,"author":{"gitId":"candyhy"},"content":"        public void deleteProperty(Property target) {","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":168,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":169,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":171,"author":{"gitId":"candyhy"},"content":"        public ObservableList\u003cProperty\u003e getFilteredPropertyList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":172,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":173,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":174,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":175,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":176,"author":{"gitId":"candyhy"},"content":"        public void updateFilteredPropertyList(Predicate\u003cProperty\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":177,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":178,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"candyhy"},"content":"        public Path getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-12"},{"lineNumber":182,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":183,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":186,"author":{"gitId":"candyhy"},"content":"        public void setAppointmentBookFilePath(Path appointmentBookFilePath) {","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":189,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":190,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":191,"author":{"gitId":"candyhy"},"content":"        public void setAppointmentBook(ReadOnlyAppointmentBook newData) {","lastModifiedDate":"2021-03-12"},{"lineNumber":192,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":193,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":194,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":195,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":196,"author":{"gitId":"candyhy"},"content":"        public ReadOnlyAppointmentBook getAppointmentBook() {","lastModifiedDate":"2021-03-12"},{"lineNumber":197,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":198,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":199,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":200,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":201,"author":{"gitId":"dvdweien"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":203,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":204,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":205,"author":{"gitId":"dvdweien"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":206,"author":{"gitId":"dvdweien"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"dvdweien"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":208,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":209,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":210,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":211,"author":{"gitId":"dvdweien"},"content":"        public Appointment getAppointment(int i) {","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":213,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":214,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":215,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":216,"author":{"gitId":"w2vgd"},"content":"        public int getAppointmentListSize() {","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":218,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":219,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":220,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-07"},{"lineNumber":222,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-07"},{"lineNumber":223,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":224,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":225,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":226,"author":{"gitId":"candyhy"},"content":"        public void deleteAppointment(Appointment target) {","lastModifiedDate":"2021-03-12"},{"lineNumber":227,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":228,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":229,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":230,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":231,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":232,"author":{"gitId":"candyhy"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":233,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":234,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":235,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":236,"author":{"gitId":"candyhy"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":237,"author":{"gitId":"candyhy"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":238,"author":{"gitId":"candyhy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-12"},{"lineNumber":239,"author":{"gitId":"candyhy"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":240,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":241,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":242,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":243,"author":{"gitId":"w2vgd"},"content":"     * A Model stub that contains a single property.","lastModifiedDate":"2021-03-06"},{"lineNumber":244,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":245,"author":{"gitId":"w2vgd"},"content":"    private class ModelStubWithProperty extends ModelStub {","lastModifiedDate":"2021-03-06"},{"lineNumber":246,"author":{"gitId":"w2vgd"},"content":"        private final Property property;","lastModifiedDate":"2021-03-06"},{"lineNumber":247,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":248,"author":{"gitId":"w2vgd"},"content":"        ModelStubWithProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":249,"author":{"gitId":"w2vgd"},"content":"            requireNonNull(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":250,"author":{"gitId":"w2vgd"},"content":"            this.property \u003d property;","lastModifiedDate":"2021-03-06"},{"lineNumber":251,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":252,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":253,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":254,"author":{"gitId":"w2vgd"},"content":"        public boolean hasProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":255,"author":{"gitId":"w2vgd"},"content":"            requireNonNull(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":256,"author":{"gitId":"w2vgd"},"content":"            return this.property.isSameProperty(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":257,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":258,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":259,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":260,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":261,"author":{"gitId":"w2vgd"},"content":"     * A Model stub that always accept the property being added.","lastModifiedDate":"2021-03-06"},{"lineNumber":262,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":263,"author":{"gitId":"w2vgd"},"content":"    private class ModelStubAcceptingPropertyAdded extends ModelStub {","lastModifiedDate":"2021-03-06"},{"lineNumber":264,"author":{"gitId":"w2vgd"},"content":"        final ArrayList\u003cProperty\u003e propertiesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-06"},{"lineNumber":265,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":266,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":267,"author":{"gitId":"w2vgd"},"content":"        public boolean hasProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":268,"author":{"gitId":"w2vgd"},"content":"            requireNonNull(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":269,"author":{"gitId":"w2vgd"},"content":"            return propertiesAdded.stream().anyMatch(property::isSameProperty);","lastModifiedDate":"2021-03-06"},{"lineNumber":270,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":271,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":272,"author":{"gitId":"w2vgd"},"content":"        @Override","lastModifiedDate":"2021-03-06"},{"lineNumber":273,"author":{"gitId":"w2vgd"},"content":"        public void addProperty(Property property) {","lastModifiedDate":"2021-03-06"},{"lineNumber":274,"author":{"gitId":"w2vgd"},"content":"            requireNonNull(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":275,"author":{"gitId":"w2vgd"},"content":"            propertiesAdded.add(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":276,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":277,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":278,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"dvdweien":29,"Cp-John":16,"candyhy":72,"w2vgd":161}},{"path":"src/test/java/seedu/address/logic/commands/ClearAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"public class ClearAllCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public void execute_emptyAppointmentBook_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(new ClearAllCommand(), model, ClearAllCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"                expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"    public void execute_nonEmptyAppointmentBook_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"        Model model \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        expectedModel.setAppointmentBook(new AppointmentBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(new ClearAllCommand(), model, ClearAllCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"                expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"    public void execute_emptyPropertyBook_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(new ClearAllCommand(), model, ClearAllCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"                expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"    public void execute_nonEmptyPropertyBook_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"        Model model \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"        expectedModel.setPropertyBook(new PropertyBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(new ClearAllCommand(), model, ClearAllCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"                expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Cp-John":55}},{"path":"src/test/java/seedu/address/logic/commands/ClearAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"public class ClearAppointmentCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    public void execute_emptyAppointmentBook_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(new ClearAppointmentCommand(), model, ClearAppointmentCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"                expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"    public void execute_nonEmptyAppointmentBook_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"        Model model \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"        expectedModel.setAppointmentBook(new AppointmentBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(new ClearAppointmentCommand(), model, ClearAppointmentCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"                expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Cp-John":12,"-":22}},{"path":"src/test/java/seedu/address/logic/commands/ClearPropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"class ClearPropertyCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"    public void execute_emptyPropertyBook_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(new ClearPropertyCommand(), model, ClearPropertyCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"                expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"    public void execute_nonEmptyPropertyBook_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"        Model model \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        expectedModel.setPropertyBook(new PropertyBook());","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(new ClearPropertyCommand(), model, ClearPropertyCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"                expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Cp-John":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSTAL;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORTING_ORDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAGS;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.PropertyContainsKeywordsPredicate;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"import seedu.address.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"import seedu.address.testutil.SortAppointmentDescriptorBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"import seedu.address.testutil.SortPropertyDescriptorBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    // For testing properties","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_NAME_MAYFAIR \u003d \"Mayfair\";","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_NAME_BURGHLEY_DRIVE \u003d \"Burghley Drive\";","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_TYPE_MAYFAIR \u003d \"Condo\";","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_TYPE_BURGHLEY_DRIVE \u003d \"Landed\";","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_ADDRESS_MAYFAIR \u003d \"1 Jurong East Street 32, #08-111\";","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_ADDRESS_BURGHLEY_DRIVE \u003d \"12 Burghley Drive\";","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_POSTAL_MAYFAIR \u003d \"609477\";","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_POSTAL_BURGHLEY_DRIVE \u003d \"123456\";","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_DEADLINE_MAYFAIR \u003d \"31-12-2021\";","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    public static final LocalDate VALID_DEADLINE_LOCALDATE_MAYFAIR \u003d LocalDate.parse(VALID_DEADLINE_MAYFAIR,","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_DEADLINE_BURGHLEY_DRIVE \u003d \"31-07-2021\";","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    public static final LocalDate VALID_DEADLINE_LOCALDATE_BURGHLEY_DRIVE \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"            LocalDate.parse(VALID_DEADLINE_BURGHLEY_DRIVE,","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_TAG_FREEHOLD \u003d \"Freehold\";","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_TAG_4_BEDROOMS \u003d \"4 bedrooms\";","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_TAG_99_YEAR_LEASEHOLD \u003d \"99 year leasehold\";","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    public static final String NAME_DESC_MAYFAIR \u003d \" \" + PREFIX_NAME + VALID_NAME_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"    public static final String NAME_DESC_BURGHLEY_DRIVE \u003d \" \" + PREFIX_NAME + VALID_NAME_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    public static final String TYPE_DESC_MAYFAIR \u003d \" \" + PREFIX_TYPE + VALID_TYPE_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public static final String TYPE_DESC_BURGHLEY_DRIVE \u003d \" \" + PREFIX_TYPE + VALID_TYPE_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    public static final String ADDRESS_DESC_MAYFAIR \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    public static final String ADDRESS_DESC_BURGHLEY_DRIVE \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    public static final String POSTAL_DESC_MAYFAIR \u003d \" \" + PREFIX_POSTAL + VALID_POSTAL_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    public static final String POSTAL_DESC_BURGHLEY_DRIVE \u003d \" \" + PREFIX_POSTAL + VALID_POSTAL_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"    public static final String DEADLINE_DESC_MAYFAIR \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    public static final String DEADLINE_DESC_BURGHLEY_DRIVE \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"    public static final String TAG_DESC_FREEHOLD \u003d \" \" + PREFIX_TAGS + VALID_PROPERTY_TAG_FREEHOLD;","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    public static final String TAG_DESC_4_BEDROOMS \u003d \" \" + PREFIX_TAGS + VALID_PROPERTY_TAG_4_BEDROOMS;","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"    public static final String TAG_DESC_99_YEAR_LEASEHOLD \u003d \" \" + PREFIX_TAGS + VALID_PROPERTY_TAG_99_YEAR_LEASEHOLD;","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"    public static final String TAG_DESC_FREEHOLD_AND_99_YEAR_LEASEHOLD \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_TAGS + VALID_PROPERTY_TAG_FREEHOLD + \", \" + VALID_PROPERTY_TAG_99_YEAR_LEASEHOLD;","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_NAME_DESC \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_NAME + \"Mayfair\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_TYPE_DESC \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_TYPE + \"apartment\"; // \u0027apartment\u0027 is not a valid type","lastModifiedDate":"2021-03-06"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_ADDRESS_DESC \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2021-03-06"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_POSTAL_DESC \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_POSTAL + \"12a\"; // \u0027a\u0027 not allowed in postal codes","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_DEADLINE_DESC \u003d","lastModifiedDate":"2021-03-06"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_DEADLINE + \"31-04-2021\"; // 31st April not valid","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_TAG_DESC \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_TAGS + \"4 bedrooms*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"    // For testing appointments","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_NAME_MEET_ALEX \u003d \"Meet Alex\";","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_NAME_MEET_BOB \u003d \"Meet Bob\";","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_REMARK_MEET_ALEX \u003d \"At M Hotel\";","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_REMARK_MEET_BOB \u003d \"At Plaza Sing Starbucks\";","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_DATE_MEET_ALEX \u003d \"25-12-2021\";","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"    public static final LocalDate VALID_DATE_LOCALDATE_MEET_ALEX \u003d LocalDate.parse(VALID_DATE_MEET_ALEX,","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_DATE_MEET_BOB \u003d \"25-02-2021\";","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"    public static final LocalDate VALID_DATE_LOCALDATE_MEET_BOB \u003d LocalDate.parse(VALID_DATE_MEET_BOB,","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"        DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_TIME_MEET_ALEX \u003d \"1500\";","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"    public static final LocalTime VALID_TIME_LOCALTIME_MEET_ALEX \u003d LocalTime.parse(VALID_TIME_MEET_ALEX,","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"        DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_TIME_MEET_BOB \u003d \"2000\";","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"    public static final LocalTime VALID_TIME_LOCALTIME_MEET_BOB \u003d LocalTime.parse(VALID_TIME_MEET_BOB,","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"        DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"    public static final String NAME_DESC_MEET_ALEX \u003d \" \" + PREFIX_NAME + VALID_NAME_MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"    public static final String NAME_DESC_MEET_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_MEET_BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"    public static final String REMARK_DESC_MEET_ALEX \u003d \" \" + PREFIX_REMARK + VALID_REMARK_MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"    public static final String REMARK_DESC_MEET_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_MEET_BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"    public static final String DATE_DESC_MEET_ALEX \u003d \" \" + PREFIX_DATE + VALID_DATE_MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"    public static final String DATE_DESC_MEET_BOB \u003d \" \" + PREFIX_DATE + VALID_DATE_MEET_BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"    public static final String TIME_DESC_MEET_ALEX \u003d \" \" + PREFIX_TIME + VALID_TIME_MEET_ALEX;","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"    public static final String TIME_DESC_MEET_BOB \u003d \" \" + PREFIX_TIME + VALID_TIME_MEET_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_APPOINTMENT_NAME_DESC \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_NAME + \"Meet Alex\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-03-07"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_APPOINTMENT_REMARK_DESC \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_REMARK; // empty string not allowed for remark","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_APPOINTMENT_DATE_DESC \u003d","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"            \" \" + PREFIX_DATE + \"31-04-2021\"; // 31st April not valid","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_APPOINTMENT_TIME_DESC \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"        \" \" + PREFIX_TIME + \"1260\"; // 60 is not valid for the minute component","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"Cp-John"},"content":"    // For testing of SortAppointmentDescriptor and SortPropertyDescriptor","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"Cp-John"},"content":"    public static final String VALID_SORTING_ORDER_ASC \u003d \"asc\";","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"Cp-John"},"content":"    public static final String VALID_SORTING_ORDER_DESC \u003d \"desc\";","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"Cp-John"},"content":"    public static final String VALID_SORTING_KEY_APPOINTMENT_DATETIME \u003d \"datetime\";","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"Cp-John"},"content":"    public static final String VALID_SORTING_KEY_APPOINTMENT_NAME \u003d \"name\";","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"Cp-John"},"content":"    public static final String VALID_SORTING_KEY_PROPERTY_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"Cp-John"},"content":"    public static final String VALID_SORTING_KEY_PROPERTY_NAME \u003d \"name\";","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"Cp-John"},"content":"    public static final String VALID_SORTING_KEY_PROPERTY_POSTAL_CODE \u003d \"postalcode\";","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"Cp-John"},"content":"    public static final String VALID_SORTING_KEY_PROPERTY_PRICE \u003d \"price\";","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"Cp-John"},"content":"    public static final String DESC_SORTING_ORDER \u003d \" \" + PREFIX_SORTING_ORDER + VALID_SORTING_ORDER_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"Cp-John"},"content":"    public static final String DATETIME_APPOINTMENT_SORTING_KEY \u003d \" \" + PREFIX_SORTING_KEY","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"Cp-John"},"content":"            + VALID_SORTING_KEY_APPOINTMENT_DATETIME;","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"Cp-John"},"content":"    public static final String DEADLINE_PROPERTY_SORTING_KEY \u003d \" \" + PREFIX_SORTING_KEY","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"Cp-John"},"content":"            + VALID_SORTING_KEY_PROPERTY_DEADLINE;","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"Cp-John"},"content":"    public static final String INVALID_SORTING_ORDER \u003d \" \" + PREFIX_SORTING_ORDER + \"des\"; // can only be desc and asc","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"Cp-John"},"content":"    public static final String INVALID_APPOINTMENT_SORTING_KEY \u003d \" \" + PREFIX_SORTING_KEY","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"Cp-John"},"content":"            + \"deadline\"; // can only be datetime and name","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"Cp-John"},"content":"    public static final String INVALID_PROPERTY_SORTING_KEY \u003d \" \" + PREFIX_SORTING_KEY","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"Cp-John"},"content":"            + \"datetime\"; // can only be name, price, postalcode, address, and deadline","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"Cp-John"},"content":"    public static final SortAppointmentCommand.SortAppointmentDescriptor ASC_DATETIME;","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"Cp-John"},"content":"    public static final SortAppointmentCommand.SortAppointmentDescriptor DESC_APPOINTMENT_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"Cp-John"},"content":"    public static final SortPropertyCommand.SortPropertyDescriptor ASC_DEADLINE;","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"Cp-John"},"content":"    public static final SortPropertyCommand.SortPropertyDescriptor DESC_PROPERTY_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"dvdweien"},"content":"    public static final EditPropertyCommand.EditPropertyDescriptor DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"dvdweien"},"content":"    public static final EditPropertyCommand.EditPropertyDescriptor DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":164,"author":{"gitId":"dvdweien"},"content":"        DESC_MAYFAIR \u003d new EditPropertyDescriptorBuilder().withName(VALID_NAME_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"dvdweien"},"content":"                .withPostalCode(VALID_POSTAL_MAYFAIR).withDeadline(VALID_DEADLINE_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"dvdweien"},"content":"                .withAddress(VALID_ADDRESS_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"dvdweien"},"content":"                .withType(VALID_TYPE_MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"dvdweien"},"content":"        DESC_BURGHLEY_DRIVE \u003d new EditPropertyDescriptorBuilder().withName(VALID_NAME_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"dvdweien"},"content":"                .withPostalCode(VALID_POSTAL_BURGHLEY_DRIVE).withDeadline(VALID_DEADLINE_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"dvdweien"},"content":"                .withAddress(VALID_ADDRESS_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"dvdweien"},"content":"                .withType(VALID_TYPE_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"Cp-John"},"content":"        ASC_DATETIME \u003d new SortAppointmentDescriptorBuilder().withSortingOrder(VALID_SORTING_ORDER_ASC)","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_DATETIME).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"Cp-John"},"content":"        DESC_APPOINTMENT_NAME \u003d new SortAppointmentDescriptorBuilder().withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_NAME).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"Cp-John"},"content":"        ASC_DEADLINE \u003d new SortPropertyDescriptorBuilder().withSortingOrder(VALID_SORTING_ORDER_ASC)","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_DEADLINE).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"Cp-John"},"content":"        DESC_PROPERTY_NAME \u003d new SortPropertyDescriptorBuilder().withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_NAME).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":209,"author":{"gitId":"w2vgd"},"content":"     * Executes the given {@code command}, and confirms that \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":212,"author":{"gitId":"w2vgd"},"content":"     * - the property book, filtered property list and selected property in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":214,"author":{"gitId":"w2vgd"},"content":"    public static void assertPropertyCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-03-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":217,"author":{"gitId":"w2vgd"},"content":"        PropertyBook expectedPropertyBook \u003d new PropertyBook(actualModel.getPropertyBook());","lastModifiedDate":"2021-03-22"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"        List\u003cProperty\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPropertyList());","lastModifiedDate":"2021-03-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedPropertyBook, actualModel.getPropertyBook());","lastModifiedDate":"2021-03-22"},{"lineNumber":222,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPropertyList());","lastModifiedDate":"2021-03-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":224,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":226,"author":{"gitId":"w2vgd"},"content":"     * Executes the given {@code command}, and confirms that \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":227,"author":{"gitId":"w2vgd"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":228,"author":{"gitId":"w2vgd"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":229,"author":{"gitId":"w2vgd"},"content":"     * - the appointment book, filtered appointment list and selected appointment in {@code actualModel} remain","lastModifiedDate":"2021-03-22"},{"lineNumber":230,"author":{"gitId":"w2vgd"},"content":"     * unchanged","lastModifiedDate":"2021-03-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":232,"author":{"gitId":"w2vgd"},"content":"    public static void assertAppointmentCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-03-22"},{"lineNumber":233,"author":{"gitId":"w2vgd"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2021-03-22"},{"lineNumber":234,"author":{"gitId":"w2vgd"},"content":"        // only do so by copying its components.","lastModifiedDate":"2021-03-22"},{"lineNumber":235,"author":{"gitId":"w2vgd"},"content":"        AppointmentBook expectedAppointmentBook \u003d new AppointmentBook(actualModel.getAppointmentBook());","lastModifiedDate":"2021-03-22"},{"lineNumber":236,"author":{"gitId":"w2vgd"},"content":"        List\u003cAppointment\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredAppointmentList());","lastModifiedDate":"2021-03-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":238,"author":{"gitId":"w2vgd"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-03-22"},{"lineNumber":239,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedAppointmentBook, actualModel.getAppointmentBook());","lastModifiedDate":"2021-03-22"},{"lineNumber":240,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredAppointmentList());","lastModifiedDate":"2021-03-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":244,"author":{"gitId":"Cp-John"},"content":"     * Updates {@code model}\u0027s filtered list to show only the appointment at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-15"},{"lineNumber":245,"author":{"gitId":"Cp-John"},"content":"     * {@code model}\u0027s appointment book.","lastModifiedDate":"2021-03-15"},{"lineNumber":246,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":247,"author":{"gitId":"Cp-John"},"content":"    public static void showAppointmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":248,"author":{"gitId":"Cp-John"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredAppointmentList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":250,"author":{"gitId":"Cp-John"},"content":"        Appointment appointment \u003d model.getFilteredAppointmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":251,"author":{"gitId":"Cp-John"},"content":"        final String[] splitName \u003d appointment.getName().name.split(\"\\\\s+\");","lastModifiedDate":"2021-03-15"},{"lineNumber":252,"author":{"gitId":"Cp-John"},"content":"        model.updateFilteredAppointmentList(new AppointmentContainsKeywordsPredicate(Arrays.asList(splitName[1])));","lastModifiedDate":"2021-03-15"},{"lineNumber":253,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":254,"author":{"gitId":"Cp-John"},"content":"        assertEquals(1, model.getFilteredAppointmentList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":257,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"dvdweien"},"content":"     * Updates {@code model}\u0027s filtered list to show only the property at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"dvdweien"},"content":"     * {@code model}\u0027s property book.","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":261,"author":{"gitId":"dvdweien"},"content":"    public static void showPropertyAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"dvdweien"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPropertyList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"dvdweien"},"content":"        Property property \u003d model.getFilteredPropertyList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"dvdweien"},"content":"        final String[] splitName \u003d property.getName().name.split(\"\\\\s+\");","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"dvdweien"},"content":"        model.updateFilteredPropertyList(new PropertyContainsKeywordsPredicate(Arrays.asList(splitName[1])));","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"dvdweien"},"content":"        assertEquals(1, model.getFilteredPropertyList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"dvdweien":26,"Cp-John":52,"-":74,"w2vgd":118}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertAppointmentCommandFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showAppointmentAtIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":" * {@code DeleteAppointmentCommand}.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"    private Model model \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"                appointmentToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAppointmentList().size() + 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        assertAppointmentCommandFailure(deleteAppointmentCommand, model,","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"                Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"        Appointment appointmentToDelete \u003d model.getFilteredAppointmentList()","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"                .get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"                appointmentToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(model.getAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"        expectedModel.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"        showNoAppointment(expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"        showAppointmentAtIndex(model, INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_APPOINTMENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"        // ensures that outOfBoundIndex is still in bounds of appointment book list","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAppointmentBook().getAppointmentList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        assertAppointmentCommandFailure(deleteAppointmentCommand, model,","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"                Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"        DeleteAppointmentCommand deleteFirstCommand \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"        DeleteAppointmentCommand deleteSecondCommand \u003d new DeleteAppointmentCommand(INDEX_SECOND_APPOINTMENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"        DeleteAppointmentCommand deleteFirstCommandCopy \u003d new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"Cp-John"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"Cp-John"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"Cp-John"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"Cp-John"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"        // different delete commands -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"Cp-John"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"Cp-John"},"content":"    private void showNoAppointment(Model model) {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"Cp-John"},"content":"        model.updateFilteredAppointmentList(p -\u003e false);","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"Cp-John"},"content":"        assertTrue(model.getFilteredAppointmentList().isEmpty());","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"Cp-John":110,"w2vgd":5}},{"path":"src/test/java/seedu/address/logic/commands/DeletePropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPropertyCommandFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPropertyAtIndex;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PROPERTY;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PROPERTY;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":" * {@code DeletePropertyCommand}.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"public class DeletePropertyCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"    private Model model \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"        Property propertyToDelete \u003d model.getFilteredPropertyList()","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"                .get(INDEX_FIRST_PROPERTY.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        DeletePropertyCommand deletePropertyCommand \u003d new DeletePropertyCommand(INDEX_FIRST_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(DeletePropertyCommand.MESSAGE_DELETE_PROPERTY_SUCCESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"                propertyToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"        expectedModel.deleteProperty(propertyToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(deletePropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPropertyList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"        DeletePropertyCommand deletePropertyCommand \u003d new DeletePropertyCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        assertPropertyCommandFailure(deletePropertyCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"        showPropertyAtIndex(model, INDEX_FIRST_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"        Property propertyToDelete \u003d model.getFilteredPropertyList()","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"                .get(INDEX_FIRST_PROPERTY.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"        DeletePropertyCommand deletePropertyCommand \u003d new DeletePropertyCommand(INDEX_FIRST_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(DeletePropertyCommand.MESSAGE_DELETE_PROPERTY_SUCCESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"                propertyToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(model.getPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"        expectedModel.deleteProperty(propertyToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"        showNoProperty(expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(deletePropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"        showPropertyAtIndex(model, INDEX_FIRST_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PROPERTY;","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"        // ensures that outOfBoundIndex is still in bounds of property book list","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPropertyBook().getPropertyList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"        DeletePropertyCommand deletePropertyCommand \u003d new DeletePropertyCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        assertPropertyCommandFailure(deletePropertyCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"        DeletePropertyCommand deleteFirstCommand \u003d new DeletePropertyCommand(INDEX_FIRST_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"        DeletePropertyCommand deleteSecondCommand \u003d new DeletePropertyCommand(INDEX_SECOND_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"        DeletePropertyCommand deleteFirstCommandCopy \u003d new DeletePropertyCommand(INDEX_FIRST_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"Cp-John"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"Cp-John"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"Cp-John"},"content":"        // different delete commands -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"Cp-John"},"content":"    private void showNoProperty(Model model) {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"Cp-John"},"content":"        model.updateFilteredPropertyList(p -\u003e false);","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"Cp-John"},"content":"        assertTrue(model.getFilteredPropertyList().isEmpty());","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Cp-John":110,"w2vgd":3}},{"path":"src/test/java/seedu/address/logic/commands/EditPropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSTAL_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPE_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertPropertyCommandFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPropertyAtIndex;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PROPERTY;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PROPERTY;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"import seedu.address.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"import seedu.address.testutil.PropertyBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPropertyCommand.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"public class EditPropertyCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"    private Model model \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"        Property editedProperty \u003d new PropertyBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder(editedProperty).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(INDEX_FIRST_PROPERTY, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"        String expectedMessage \u003d String.format(editPropertyCommand.MESSAGE_SUCCESS, editedProperty);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"        Model expectedModel \u003d new ModelManager(new PropertyBook(model.getPropertyBook()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"        expectedModel.setProperty(model.getFilteredPropertyList().get(0), editedProperty);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"        assertCommandSuccess(editPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"        Index indexLastProperty \u003d Index.fromOneBased(model.getFilteredPropertyList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"        Property lastProperty \u003d model.getFilteredPropertyList().get(indexLastProperty.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"        PropertyBuilder propertyInList \u003d new PropertyBuilder(lastProperty);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"        Property editedProperty \u003d propertyInList.withName(VALID_NAME_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"                .withPostal(VALID_POSTAL_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"                .withType(VALID_TYPE_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withName(VALID_NAME_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"dvdweien"},"content":"                .withPostalCode(VALID_POSTAL_BURGHLEY_DRIVE).withType(VALID_TYPE_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(indexLastProperty, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"dvdweien"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_SUCCESS, editedProperty);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"dvdweien"},"content":"        Model expectedModel \u003d new ModelManager(new PropertyBook(model.getPropertyBook()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"dvdweien"},"content":"        expectedModel.setProperty(lastProperty, editedProperty);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"dvdweien"},"content":"        assertCommandSuccess(editPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"dvdweien"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(INDEX_FIRST_PROPERTY,","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"dvdweien"},"content":"                new EditPropertyDescriptor());","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"dvdweien"},"content":"        Property editedProperty \u003d model.getFilteredPropertyList().get(INDEX_FIRST_PROPERTY.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"dvdweien"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_SUCCESS, editedProperty);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"dvdweien"},"content":"        Model expectedModel \u003d new ModelManager(new PropertyBook(model.getPropertyBook()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"dvdweien"},"content":"        assertCommandSuccess(editPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"dvdweien"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"dvdweien"},"content":"        showPropertyAtIndex(model, INDEX_FIRST_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"dvdweien"},"content":"        Property propertyInFilteredList \u003d model.getFilteredPropertyList().get(INDEX_FIRST_PROPERTY.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"dvdweien"},"content":"        Property editedProperty \u003d new PropertyBuilder(propertyInFilteredList)","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"dvdweien"},"content":"                .withName(VALID_NAME_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(INDEX_FIRST_PROPERTY,","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"dvdweien"},"content":"                new EditPropertyDescriptorBuilder().withName(VALID_NAME_BURGHLEY_DRIVE).build());","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"dvdweien"},"content":"        String expectedMessage \u003d String.format(EditPropertyCommand.MESSAGE_SUCCESS, editedProperty);","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"dvdweien"},"content":"        Model expectedModel \u003d new ModelManager(new PropertyBook(model.getPropertyBook()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"dvdweien"},"content":"        expectedModel.setProperty(model.getFilteredPropertyList().get(0), editedProperty);","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"dvdweien"},"content":"        assertCommandSuccess(editPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"dvdweien"},"content":"    public void execute_duplicatePropertyUnfilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"dvdweien"},"content":"        Property firstProperty \u003d model.getFilteredPropertyList().get(INDEX_FIRST_PROPERTY.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder(firstProperty).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(INDEX_SECOND_PROPERTY, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"        assertPropertyCommandFailure(editPropertyCommand, model, EditPropertyCommand.MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"dvdweien"},"content":"    public void execute_duplicatePropertyFilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"dvdweien"},"content":"        showPropertyAtIndex(model, INDEX_FIRST_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"dvdweien"},"content":"        // edit Property in filtered list into a duplicate in property book","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"dvdweien"},"content":"        Property propertyInList \u003d model.getPropertyBook().getPropertyList().get(INDEX_SECOND_PROPERTY.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(INDEX_FIRST_PROPERTY,","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"dvdweien"},"content":"                new EditPropertyDescriptorBuilder(propertyInList).build());","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"        assertPropertyCommandFailure(editPropertyCommand, model, EditPropertyCommand.MESSAGE_DUPLICATE_PROPERTY);","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"dvdweien"},"content":"    public void execute_invalidPropertyIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"dvdweien"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPropertyList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"dvdweien"},"content":"                .withName(VALID_NAME_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"        assertPropertyCommandFailure(editPropertyCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"dvdweien"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"dvdweien"},"content":"     * but smaller than size of property book","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"dvdweien"},"content":"    public void execute_invalidPropertyIndexFilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"dvdweien"},"content":"        showPropertyAtIndex(model, INDEX_FIRST_PROPERTY);","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"dvdweien"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PROPERTY;","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"dvdweien"},"content":"        // ensures that outOfBoundIndex is still in bounds of property book list","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"dvdweien"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPropertyBook().getPropertyList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand editPropertyCommand \u003d new EditPropertyCommand(outOfBoundIndex,","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"dvdweien"},"content":"                new EditPropertyDescriptorBuilder().withName(VALID_NAME_BURGHLEY_DRIVE).build());","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"        assertPropertyCommandFailure(editPropertyCommand, model, Messages.MESSAGE_INVALID_PROPERTY_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"dvdweien"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"dvdweien"},"content":"        final EditPropertyCommand standardCommand \u003d new EditPropertyCommand(INDEX_FIRST_PROPERTY, DESC_MAYFAIR);","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"dvdweien"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor copyDescriptor \u003d new EditPropertyDescriptor(DESC_MAYFAIR);","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand commandWithSameValues \u003d new EditPropertyCommand(INDEX_FIRST_PROPERTY, copyDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"dvdweien"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"dvdweien"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"dvdweien"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"dvdweien"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"dvdweien"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"dvdweien"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"dvdweien"},"content":"        assertFalse(standardCommand.equals(new ClearAppointmentCommand()));","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"dvdweien"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"dvdweien"},"content":"        assertFalse(standardCommand.equals(new EditPropertyCommand(INDEX_SECOND_PROPERTY, DESC_MAYFAIR)));","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"dvdweien"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"dvdweien"},"content":"        assertFalse(standardCommand.equals(new EditPropertyCommand(INDEX_FIRST_PROPERTY, DESC_BURGHLEY_DRIVE)));","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"dvdweien":172,"w2vgd":5}},{"path":"src/test/java/seedu/address/logic/commands/EditPropertyDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSTAL_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPE_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"import seedu.address.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"public class EditPropertyDescriptorTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptorWithSameValues \u003d new EditPropertyDescriptor(DESC_MAYFAIR);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"        assertTrue(DESC_MAYFAIR.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"        assertTrue(DESC_MAYFAIR.equals(DESC_MAYFAIR));","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"        assertFalse(DESC_MAYFAIR.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"        assertFalse(DESC_MAYFAIR.equals(5));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"        assertFalse(DESC_MAYFAIR.equals(DESC_BURGHLEY_DRIVE));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor editedAmy \u003d new EditPropertyDescriptorBuilder(DESC_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"                .withName(VALID_NAME_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"        assertFalse(DESC_MAYFAIR.equals(editedAmy));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"        // different postalcode -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"        editedAmy \u003d new EditPropertyDescriptorBuilder(DESC_MAYFAIR).withPostalCode(VALID_POSTAL_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"        assertFalse(DESC_MAYFAIR.equals(editedAmy));","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"        editedAmy \u003d new EditPropertyDescriptorBuilder(DESC_MAYFAIR).withDeadline(VALID_DEADLINE_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"        assertFalse(DESC_MAYFAIR.equals(editedAmy));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"        editedAmy \u003d new EditPropertyDescriptorBuilder(DESC_MAYFAIR).withAddress(VALID_ADDRESS_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"        assertFalse(DESC_MAYFAIR.equals(editedAmy));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"        editedAmy \u003d new EditPropertyDescriptorBuilder(DESC_MAYFAIR).withType(VALID_TYPE_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"        assertFalse(DESC_MAYFAIR.equals(editedAmy));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"dvdweien":59}},{"path":"src/test/java/seedu/address/logic/commands/FindAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_APPOINTMENT_LISTED_OVERVIEW_SINGULAR;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"w-yuchen"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"w-yuchen"},"content":" * Contains integration tests (interaction with the Model) for {@code FindAppointmentCommand}.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"public class FindAppointmentCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"    private Model model \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"w-yuchen"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"w-yuchen"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"w-yuchen"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"w-yuchen"},"content":"        AppointmentContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"w-yuchen"},"content":"                new AppointmentContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"w-yuchen"},"content":"        AppointmentContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"w-yuchen"},"content":"                new AppointmentContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"w-yuchen"},"content":"        FindAppointmentCommand findFirstCommand \u003d new FindAppointmentCommand(firstPredicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"w-yuchen"},"content":"        FindAppointmentCommand findSecondCommand \u003d new FindAppointmentCommand(secondPredicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"w-yuchen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"w-yuchen"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"w-yuchen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"w-yuchen"},"content":"        FindAppointmentCommand findFirstCommandCopy \u003d new FindAppointmentCommand(firstPredicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"w-yuchen"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"w-yuchen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"    public void execute_zeroKeywords_noAppointmentsFound() {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENT_LISTED_OVERVIEW_SINGULAR, 0);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"        FindAppointmentCommand command \u003d new FindAppointmentCommand(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"w-yuchen"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":"     * Parses {@code userInput} into a {@code AppointmentContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"    private AppointmentContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"        return new AppointmentContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"w-yuchen":69,"w2vgd":1}},{"path":"src/test/java/seedu/address/logic/commands/SortAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ASC_DATETIME;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_KEY_APPOINTMENT_DATETIME;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_KEY_APPOINTMENT_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_ORDER_ASC;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_ORDER_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortAppointmentCommand.SortAppointmentDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"import seedu.address.testutil.SortAppointmentDescriptorBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"public class SortAppointmentCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"    private Model model \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"    public void execute_sortByDatetimeInAscendingOrder_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor descriptor \u003d new SortAppointmentDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_ASC)","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_DATETIME)","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentCommand sortAppointmentCommand \u003d new SortAppointmentCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(SortAppointmentCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cAppointment\u003e comparator \u003d (o1, o2) -\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"            if (o1.getDate().compareTo(o2.getDate()) \u003d\u003d 0) {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"                return o1.getTime().compareTo(o2.getTime());","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"                return o1.getDate().compareTo(o2.getDate());","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"        };","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"        expectedModel.sortAppointmentList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(sortAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"    public void execute_sortByDatetimeInDescendingOrder_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor descriptor \u003d new SortAppointmentDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_DATETIME)","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentCommand sortAppointmentCommand \u003d new SortAppointmentCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(SortAppointmentCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cAppointment\u003e comparator \u003d (o1, o2) -\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"            if (o1.getDate().compareTo(o2.getDate()) \u003d\u003d 0) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"                return -1 * o1.getTime().compareTo(o2.getTime());","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"                return -1 * o1.getDate().compareTo(o2.getDate());","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"        };","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"        expectedModel.sortAppointmentList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(sortAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"    public void execute_sortByNameInAscendingOrder_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor descriptor \u003d new SortAppointmentDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_ASC)","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_NAME)","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentCommand sortAppointmentCommand \u003d new SortAppointmentCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(SortAppointmentCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cAppointment\u003e comparator \u003d (o1, o2) -\u003e o1.getName().compareTo(o2.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"        expectedModel.sortAppointmentList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(sortAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"Cp-John"},"content":"    public void execute_sortByNameInDescendingOrder_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor descriptor \u003d new SortAppointmentDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_NAME)","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentCommand sortAppointmentCommand \u003d new SortAppointmentCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(SortAppointmentCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAppointmentBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cAppointment\u003e comparator \u003d (o1, o2) -\u003e -1 * o1.getName().compareTo(o2.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"Cp-John"},"content":"        expectedModel.sortAppointmentList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(sortAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"Cp-John"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"Cp-John"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor descriptorWithSameValues \u003d new SortAppointmentDescriptor(ASC_DATETIME);","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"Cp-John"},"content":"        assertTrue(ASC_DATETIME.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"Cp-John"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"Cp-John"},"content":"        assertTrue(ASC_DATETIME.equals(ASC_DATETIME));","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"Cp-John"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DATETIME.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"Cp-John"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DATETIME.equals(5));","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"Cp-John"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DATETIME.equals(DESC_APPOINTMENT_NAME));","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"Cp-John"},"content":"        // different sorting orders -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor editedDescriptor \u003d new SortAppointmentDescriptorBuilder(ASC_DATETIME)","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DATETIME.equals(editedDescriptor));","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"Cp-John"},"content":"        // different sorting keys -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"Cp-John"},"content":"        editedDescriptor \u003d new SortAppointmentDescriptorBuilder(ASC_DATETIME)","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_NAME).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DATETIME.equals(editedDescriptor));","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":146}},{"path":"src/test/java/seedu/address/logic/commands/SortAppointmentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ASC_DATETIME;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPOINTMENT_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_KEY_APPOINTMENT_DATETIME;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_ORDER_ASC;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortAppointmentCommand.SortAppointmentDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"import seedu.address.testutil.SortAppointmentDescriptorBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"public class SortAppointmentDescriptorTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor descriptorWithSameValues \u003d new SortAppointmentDescriptor(DESC_APPOINTMENT_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"        assertTrue(DESC_APPOINTMENT_NAME.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"        assertTrue(DESC_APPOINTMENT_NAME.equals(DESC_APPOINTMENT_NAME));","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_APPOINTMENT_NAME.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_APPOINTMENT_NAME.equals(5));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_APPOINTMENT_NAME.equals(ASC_DATETIME));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        // different sorting orders -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor ascName \u003d new SortAppointmentDescriptorBuilder(DESC_APPOINTMENT_NAME)","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_ASC).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_APPOINTMENT_NAME.equals(ascName));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"        // different sorting keys -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor desDatetime \u003d new SortAppointmentDescriptorBuilder(DESC_APPOINTMENT_NAME)","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_DATETIME).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_APPOINTMENT_NAME.equals(desDatetime));","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":45}},{"path":"src/test/java/seedu/address/logic/commands/SortPropertyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ASC_DEADLINE;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_PROPERTY_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_KEY_PROPERTY_DEADLINE;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_KEY_PROPERTY_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_ORDER_ASC;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_ORDER_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalProperties.getTypicalPropertyBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortPropertyCommand.SortPropertyDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"import seedu.address.testutil.SortPropertyDescriptorBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"public class SortPropertyCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"    private Model model \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"    public void execute_sortByDeadlineInAscendingOrder_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor descriptor \u003d new SortPropertyDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_ASC)","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_DEADLINE)","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"        SortPropertyCommand sortPropertyCommand \u003d new SortPropertyCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(SortPropertyCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cProperty\u003e comparator \u003d (o1, o2) -\u003e o1.getDeadline().compareTo(o2.getDeadline());","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"        expectedModel.sortPropertyList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(sortPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"    public void execute_sortByDeadlineInDescendingOrder_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor descriptor \u003d new SortPropertyDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_DEADLINE)","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"        SortPropertyCommand sortPropertyCommand \u003d new SortPropertyCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(SortPropertyCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cProperty\u003e comparator \u003d (o1, o2) -\u003e -1 * o1.getDeadline().compareTo(o2.getDeadline());","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"        expectedModel.sortPropertyList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(sortPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"    public void execute_sortByNameInAscendingOrder_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor descriptor \u003d new SortPropertyDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_ASC)","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_NAME)","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"        SortPropertyCommand sortPropertyCommand \u003d new SortPropertyCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(SortPropertyCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cProperty\u003e comparator \u003d (o1, o2) -\u003e o1.getName().compareTo(o2.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"        expectedModel.sortPropertyList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(sortPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"    public void execute_sortByNameInDescendingOrder_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor descriptor \u003d new SortPropertyDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_NAME)","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"        SortPropertyCommand sortPropertyCommand \u003d new SortPropertyCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"        String expectedMessage \u003d String.format(SortPropertyCommand.MESSAGE_SUCCESS, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"Cp-John"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPropertyBook(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"Cp-John"},"content":"        Comparator\u003cProperty\u003e comparator \u003d (o1, o2) -\u003e -1 * o1.getName().compareTo(o2.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"Cp-John"},"content":"        expectedModel.sortPropertyList(comparator);","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"        assertCommandSuccess(sortPropertyCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"Cp-John"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor descriptorWithSameValues \u003d new SortPropertyDescriptor(ASC_DEADLINE);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"Cp-John"},"content":"        assertTrue(ASC_DEADLINE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"Cp-John"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"Cp-John"},"content":"        assertTrue(ASC_DEADLINE.equals(ASC_DEADLINE));","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"Cp-John"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DEADLINE.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"Cp-John"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DEADLINE.equals(5));","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"Cp-John"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DEADLINE.equals(DESC_PROPERTY_NAME));","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"Cp-John"},"content":"        // different sorting orders -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor editedDescriptor \u003d new SortPropertyDescriptorBuilder(ASC_DEADLINE)","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DEADLINE.equals(editedDescriptor));","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"Cp-John"},"content":"        // different sorting keys -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"Cp-John"},"content":"        editedDescriptor \u003d new SortPropertyDescriptorBuilder(ASC_DEADLINE)","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_NAME).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"Cp-John"},"content":"        assertFalse(ASC_DEADLINE.equals(editedDescriptor));","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":134}},{"path":"src/test/java/seedu/address/logic/commands/SortPropertyDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ASC_DEADLINE;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_PROPERTY_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_KEY_PROPERTY_DEADLINE;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_ORDER_ASC;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortPropertyCommand.SortPropertyDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"import seedu.address.testutil.SortPropertyDescriptorBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"public class SortPropertyDescriptorTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor descriptorWithSameValues \u003d new SortPropertyDescriptor(DESC_PROPERTY_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"        assertTrue(DESC_PROPERTY_NAME.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"        assertTrue(DESC_PROPERTY_NAME.equals(DESC_PROPERTY_NAME));","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_PROPERTY_NAME.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_PROPERTY_NAME.equals(5));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_PROPERTY_NAME.equals(ASC_DEADLINE));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        // different sorting orders -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor ascName \u003d new SortPropertyDescriptorBuilder(DESC_PROPERTY_NAME)","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_ASC).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_PROPERTY_NAME.equals(ascName));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"        // different sorting keys -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor desDatetime \u003d new SortPropertyDescriptorBuilder(DESC_PROPERTY_NAME)","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_DEADLINE).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"        assertFalse(DESC_PROPERTY_NAME.equals(desDatetime));","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":45}},{"path":"src/test/java/seedu/address/logic/parser/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_MEET_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_DATE_DESC;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_NAME_DESC;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_REMARK_DESC;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_TIME_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_MEET_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_MEET_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_MEET_ALEX;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_MEET_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_MEET_ALEX;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.TypicalAppointments.MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Date;","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"public class AddAppointmentCommandParserTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    private AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        Appointment expectedAppointment \u003d new AppointmentBuilder(MEET_ALEX).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_MEET_ALEX + REMARK_DESC_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"            + DATE_DESC_MEET_ALEX + TIME_DESC_MEET_ALEX, new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_MEET_BOB + NAME_DESC_MEET_ALEX + REMARK_DESC_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            + DATE_DESC_MEET_ALEX + TIME_DESC_MEET_ALEX, new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        // multiple remarks - last remark accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_MEET_ALEX + REMARK_DESC_MEET_BOB + REMARK_DESC_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"            + DATE_DESC_MEET_ALEX + TIME_DESC_MEET_ALEX, new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_MEET_ALEX + REMARK_DESC_MEET_ALEX + DATE_DESC_MEET_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"            + DATE_DESC_MEET_ALEX + TIME_DESC_MEET_ALEX, new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        // multiple times - last time accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_MEET_ALEX + REMARK_DESC_MEET_ALEX + DATE_DESC_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"            + TIME_DESC_MEET_BOB + TIME_DESC_MEET_ALEX, new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, VALID_NAME_MEET_ALEX + REMARK_DESC_MEET_ALEX + DATE_DESC_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"            + TIME_DESC_MEET_ALEX, expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"        // missing remark prefix","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MEET_ALEX + VALID_REMARK_MEET_ALEX + DATE_DESC_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"            + TIME_DESC_MEET_ALEX, expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        // missing date prefix","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MEET_ALEX + REMARK_DESC_MEET_ALEX + VALID_DATE_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"            + TIME_DESC_MEET_ALEX, expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        // missing time prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MEET_ALEX + REMARK_DESC_MEET_ALEX + VALID_DATE_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"            + VALID_TIME_MEET_ALEX, expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, VALID_NAME_MEET_ALEX + VALID_REMARK_MEET_ALEX + VALID_DATE_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"            + VALID_TIME_MEET_ALEX, expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        // invalid name","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, INVALID_APPOINTMENT_NAME_DESC + REMARK_DESC_MEET_ALEX + DATE_DESC_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"            + TIME_DESC_MEET_ALEX, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        // invalid remark","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MEET_ALEX + INVALID_APPOINTMENT_REMARK_DESC + DATE_DESC_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"            + TIME_DESC_MEET_ALEX, Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        // invalid date","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MEET_ALEX + REMARK_DESC_MEET_ALEX + INVALID_APPOINTMENT_DATE_DESC","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"            + TIME_DESC_MEET_ALEX, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"        // invalid time","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MEET_ALEX + REMARK_DESC_MEET_ALEX + DATE_DESC_MEET_ALEX","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"            + INVALID_APPOINTMENT_TIME_DESC, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, INVALID_APPOINTMENT_NAME_DESC + REMARK_DESC_MEET_ALEX","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"                + INVALID_APPOINTMENT_DATE_DESC + TIME_DESC_MEET_ALEX, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_MEET_ALEX","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"                + REMARK_DESC_MEET_ALEX + DATE_DESC_MEET_ALEX + TIME_DESC_MEET_ALEX,","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"w2vgd":117}},{"path":"src/test/java/seedu/address/logic/parser/AddPropertyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_ADDRESS_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_DEADLINE_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_NAME_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_POSTAL_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_TYPE_DESC;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSTAL_DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSTAL_DESC_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_99_YEAR_LEASEHOLD;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FREEHOLD_AND_99_YEAR_LEASEHOLD;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPE_DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPE_DESC_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSTAL_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROPERTY_TAG_99_YEAR_LEASEHOLD;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROPERTY_TAG_FREEHOLD;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPE_MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.TypicalProperties.BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.TypicalProperties.MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"import seedu.address.logic.commands.AddPropertyCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"import seedu.address.testutil.PropertyBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"public class AddPropertyCommandParserTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    private AddPropertyCommandParser parser \u003d new AddPropertyCommandParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        Property expectedProperty \u003d new PropertyBuilder(BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"                .withTags(VALID_PROPERTY_TAG_99_YEAR_LEASEHOLD).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BURGHLEY_DRIVE + TYPE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"                + ADDRESS_DESC_BURGHLEY_DRIVE + POSTAL_DESC_BURGHLEY_DRIVE + DEADLINE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"                + TAG_DESC_99_YEAR_LEASEHOLD, new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_MAYFAIR + NAME_DESC_BURGHLEY_DRIVE + TYPE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"                + ADDRESS_DESC_BURGHLEY_DRIVE + POSTAL_DESC_BURGHLEY_DRIVE + DEADLINE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"                + TAG_DESC_99_YEAR_LEASEHOLD, new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        // multiple types - last phone accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGHLEY_DRIVE + TYPE_DESC_MAYFAIR + TYPE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"                + ADDRESS_DESC_BURGHLEY_DRIVE + POSTAL_DESC_BURGHLEY_DRIVE + DEADLINE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"                + TAG_DESC_99_YEAR_LEASEHOLD, new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGHLEY_DRIVE + TYPE_DESC_BURGHLEY_DRIVE + ADDRESS_DESC_MAYFAIR","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"                + ADDRESS_DESC_BURGHLEY_DRIVE + POSTAL_DESC_BURGHLEY_DRIVE + DEADLINE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"                + TAG_DESC_99_YEAR_LEASEHOLD, new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"        // multiple postal codes - last postal code accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGHLEY_DRIVE + TYPE_DESC_BURGHLEY_DRIVE + ADDRESS_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"                + POSTAL_DESC_MAYFAIR + POSTAL_DESC_BURGHLEY_DRIVE + DEADLINE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"                + TAG_DESC_99_YEAR_LEASEHOLD, new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        // multiple deadlines - last deadline accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGHLEY_DRIVE + TYPE_DESC_BURGHLEY_DRIVE + ADDRESS_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"                + POSTAL_DESC_BURGHLEY_DRIVE + DEADLINE_DESC_MAYFAIR + DEADLINE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"                + TAG_DESC_99_YEAR_LEASEHOLD, new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"        Property expectedPropertyMultipleTags \u003d new PropertyBuilder(BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"                .withTags(VALID_PROPERTY_TAG_99_YEAR_LEASEHOLD, VALID_PROPERTY_TAG_FREEHOLD)","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"                .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_BURGHLEY_DRIVE + TYPE_DESC_BURGHLEY_DRIVE + ADDRESS_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"                + POSTAL_DESC_BURGHLEY_DRIVE + DEADLINE_DESC_BURGHLEY_DRIVE + TAG_DESC_FREEHOLD_AND_99_YEAR_LEASEHOLD,","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"                new AddPropertyCommand(expectedPropertyMultipleTags));","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-06"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        // zero tags","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"        Property expectedProperty \u003d new PropertyBuilder(MAYFAIR).withTags().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        assertParseSuccess(parser, NAME_DESC_MAYFAIR + TYPE_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"                        + POSTAL_DESC_MAYFAIR + DEADLINE_DESC_MAYFAIR, new AddPropertyCommand(expectedProperty));","lastModifiedDate":"2021-03-06"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-06"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPropertyCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-06"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-06"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, VALID_NAME_MAYFAIR + TYPE_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR + POSTAL_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"                + DEADLINE_DESC_MAYFAIR, expectedMessage);","lastModifiedDate":"2021-03-06"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"        // missing type prefix","lastModifiedDate":"2021-03-06"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MAYFAIR + VALID_TYPE_MAYFAIR + ADDRESS_DESC_MAYFAIR + POSTAL_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"                + DEADLINE_DESC_MAYFAIR, expectedMessage);","lastModifiedDate":"2021-03-06"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"        // missing address prefix","lastModifiedDate":"2021-03-06"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MAYFAIR + TYPE_DESC_MAYFAIR + VALID_ADDRESS_MAYFAIR + POSTAL_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"                + DEADLINE_DESC_MAYFAIR, expectedMessage);","lastModifiedDate":"2021-03-06"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"        // missing postal prefix","lastModifiedDate":"2021-03-06"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MAYFAIR + TYPE_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR + VALID_POSTAL_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"                + DEADLINE_DESC_MAYFAIR, expectedMessage);","lastModifiedDate":"2021-03-06"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"        // missing deadline prefix","lastModifiedDate":"2021-03-06"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MAYFAIR + TYPE_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR + POSTAL_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"                + VALID_DEADLINE_MAYFAIR, expectedMessage);","lastModifiedDate":"2021-03-06"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-06"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, VALID_NAME_MAYFAIR + VALID_TYPE_MAYFAIR + VALID_ADDRESS_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"                        + VALID_POSTAL_MAYFAIR + VALID_DEADLINE_MAYFAIR, expectedMessage);","lastModifiedDate":"2021-03-06"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-06"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"        // invalid name","lastModifiedDate":"2021-03-06"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, INVALID_PROPERTY_NAME_DESC + TYPE_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"                + POSTAL_DESC_MAYFAIR + DEADLINE_DESC_MAYFAIR, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"        // invalid type","lastModifiedDate":"2021-03-06"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MAYFAIR + INVALID_PROPERTY_TYPE_DESC + ADDRESS_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"                + POSTAL_DESC_MAYFAIR + DEADLINE_DESC_MAYFAIR, Type.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"        // invalid address","lastModifiedDate":"2021-03-06"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MAYFAIR + TYPE_DESC_MAYFAIR + INVALID_PROPERTY_ADDRESS_DESC","lastModifiedDate":"2021-03-06"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"                + POSTAL_DESC_MAYFAIR + DEADLINE_DESC_MAYFAIR, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"        // invalid postal","lastModifiedDate":"2021-03-06"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MAYFAIR + TYPE_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":147,"author":{"gitId":"w2vgd"},"content":"                + INVALID_PROPERTY_POSTAL_DESC + DEADLINE_DESC_MAYFAIR, PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"        // invalid deadline","lastModifiedDate":"2021-03-06"},{"lineNumber":150,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, NAME_DESC_MAYFAIR + TYPE_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":"                + POSTAL_DESC_MAYFAIR + INVALID_PROPERTY_DEADLINE_DESC, Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":152,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":153,"author":{"gitId":"w2vgd"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-06"},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, INVALID_PROPERTY_NAME_DESC + TYPE_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":155,"author":{"gitId":"w2vgd"},"content":"                        + INVALID_PROPERTY_POSTAL_DESC + DEADLINE_DESC_MAYFAIR, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-06"},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":157,"author":{"gitId":"w2vgd"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-06"},{"lineNumber":158,"author":{"gitId":"w2vgd"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_MAYFAIR + TYPE_DESC_MAYFAIR","lastModifiedDate":"2021-03-06"},{"lineNumber":159,"author":{"gitId":"w2vgd"},"content":"                + ADDRESS_DESC_MAYFAIR + POSTAL_DESC_MAYFAIR + DEADLINE_DESC_MAYFAIR,","lastModifiedDate":"2021-03-06"},{"lineNumber":160,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-06"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"w2vgd":162}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":" * outside of the DeleteAppointmentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":" * same path through the DeleteAppointmentCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"public class DeleteAppointmentCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"    private DeleteAppointmentCommandParser parser \u003d new DeleteAppointmentCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"    public void parse_validArgs_returnsDeleteAppointmentCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"        assertParseSuccess(parser, \"1\", new DeleteAppointmentCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"                DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Cp-John":33}},{"path":"src/test/java/seedu/address/logic/parser/DeletePropertyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.DeletePropertyCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":" * outside of the DeletePropertyCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":" * same path through the DeletePropertyCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"public class DeletePropertyCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"    private DeletePropertyCommandParser parser \u003d new DeletePropertyCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"    public void parse_validArgs_returnsDeletePropertyCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"        assertParseSuccess(parser, \"1\", new DeletePropertyCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"                DeletePropertyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Cp-John":9,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/EditPropertyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_ADDRESS_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_DEADLINE_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_NAME_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_POSTAL_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_TYPE_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSTAL_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPE_DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPE_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSTAL_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPE_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPE_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditPropertyCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"import seedu.address.testutil.EditPropertyDescriptorBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"public class EditPropertyCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPropertyCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"    private EditPropertyCommandParser parser \u003d new EditPropertyCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"        // no index specified","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, VALID_NAME_MAYFAIR, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"        // no field specified","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1\", EditPropertyCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"        // no index and no field specified","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"dvdweien"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"dvdweien"},"content":"        // negative index","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_MAYFAIR, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"dvdweien"},"content":"        // zero index","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_MAYFAIR, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"dvdweien"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"dvdweien"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"dvdweien"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"dvdweien"},"content":"        // invalid name","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROPERTY_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"dvdweien"},"content":"        // invalid postalcode","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROPERTY_POSTAL_DESC, PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"dvdweien"},"content":"        // invalid deadline","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROPERTY_DEADLINE_DESC, Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"dvdweien"},"content":"        // invalid address","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROPERTY_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"dvdweien"},"content":"        // invalid type","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROPERTY_TYPE_DESC, Type.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"dvdweien"},"content":"        // invalid postalcode followed by valid deadline","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROPERTY_POSTAL_DESC + DEADLINE_DESC_MAYFAIR,","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"dvdweien"},"content":"                PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"dvdweien"},"content":"        // valid postalcode followed by invalid postalcode. The test case for invalid postalcode","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"dvdweien"},"content":"        // followed by valid postalcode","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"dvdweien"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1\" + POSTAL_DESC_MAYFAIR + INVALID_PROPERTY_POSTAL_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"dvdweien"},"content":"                PostalCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"dvdweien"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"dvdweien"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROPERTY_NAME_DESC","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"dvdweien"},"content":"                        + INVALID_PROPERTY_DEADLINE_DESC + VALID_ADDRESS_MAYFAIR + VALID_POSTAL_MAYFAIR,","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"dvdweien"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"dvdweien"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"dvdweien"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"dvdweien"},"content":"        String userInput \u003d targetIndex.getOneBased() + POSTAL_DESC_MAYFAIR + TYPE_DESC_MAYFAIR","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"dvdweien"},"content":"                + DEADLINE_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR + NAME_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withName(VALID_NAME_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"dvdweien"},"content":"                .withPostalCode(VALID_POSTAL_MAYFAIR).withDeadline(VALID_DEADLINE_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"dvdweien"},"content":"                .withAddress(VALID_ADDRESS_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"dvdweien"},"content":"                .withType(VALID_TYPE_MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"dvdweien"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"dvdweien"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"dvdweien"},"content":"        String userInput \u003d targetIndex.getOneBased() + POSTAL_DESC_MAYFAIR + DEADLINE_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withPostalCode(VALID_POSTAL_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"dvdweien"},"content":"                .withDeadline(VALID_DEADLINE_MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"dvdweien"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"dvdweien"},"content":"        // name","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"dvdweien"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"dvdweien"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withName(VALID_NAME_MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"dvdweien"},"content":"        // postalcode","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"dvdweien"},"content":"        userInput \u003d targetIndex.getOneBased() + POSTAL_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"dvdweien"},"content":"        descriptor \u003d new EditPropertyDescriptorBuilder().withPostalCode(VALID_POSTAL_MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"dvdweien"},"content":"        expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"dvdweien"},"content":"        // deadline","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"dvdweien"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"dvdweien"},"content":"        descriptor \u003d new EditPropertyDescriptorBuilder().withDeadline(VALID_DEADLINE_MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"dvdweien"},"content":"        expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"dvdweien"},"content":"        // address","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"dvdweien"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"dvdweien"},"content":"        descriptor \u003d new EditPropertyDescriptorBuilder().withAddress(VALID_ADDRESS_MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"dvdweien"},"content":"        expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"dvdweien"},"content":"        // type","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"dvdweien"},"content":"        userInput \u003d targetIndex.getOneBased() + TYPE_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"dvdweien"},"content":"        descriptor \u003d new EditPropertyDescriptorBuilder().withType(VALID_TYPE_MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"dvdweien"},"content":"        expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"dvdweien"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"dvdweien"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"dvdweien"},"content":"        String userInput \u003d targetIndex.getOneBased() + POSTAL_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"dvdweien"},"content":"                + DEADLINE_DESC_MAYFAIR","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"dvdweien"},"content":"                + TYPE_DESC_MAYFAIR + POSTAL_DESC_MAYFAIR + ADDRESS_DESC_MAYFAIR","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"dvdweien"},"content":"                + DEADLINE_DESC_MAYFAIR + TYPE_DESC_MAYFAIR","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"dvdweien"},"content":"                + POSTAL_DESC_MAYFAIR + ADDRESS_DESC_BURGHLEY_DRIVE + DEADLINE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"dvdweien"},"content":"                + TYPE_DESC_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder().withPostalCode(VALID_POSTAL_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"dvdweien"},"content":"                .withDeadline(VALID_DEADLINE_BURGHLEY_DRIVE).withAddress(VALID_ADDRESS_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"dvdweien"},"content":"                .withType(VALID_TYPE_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"dvdweien"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"dvdweien"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"dvdweien"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"dvdweien"},"content":"        // no other valid values specified","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"dvdweien"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"dvdweien"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PROPERTY_POSTAL_DESC + POSTAL_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"dvdweien"},"content":"        EditPropertyDescriptor descriptor \u003d new EditPropertyDescriptorBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"dvdweien"},"content":"                .withPostalCode(VALID_POSTAL_MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"dvdweien"},"content":"        EditPropertyCommand expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"dvdweien"},"content":"        // other valid values specified","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"dvdweien"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"dvdweien"},"content":"                + INVALID_PROPERTY_POSTAL_DESC + ADDRESS_DESC_BURGHLEY_DRIVE","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"dvdweien"},"content":"                + POSTAL_DESC_MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"dvdweien"},"content":"        descriptor \u003d new EditPropertyDescriptorBuilder().withPostalCode(VALID_POSTAL_MAYFAIR)","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"dvdweien"},"content":"                .withDeadline(VALID_DEADLINE_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"dvdweien"},"content":"                .withAddress(VALID_ADDRESS_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"dvdweien"},"content":"        expectedCommand \u003d new EditPropertyCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"dvdweien"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"dvdweien":206}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Date;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.AskingPrice;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Contact;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.client.Email;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_NAME \u003d \"Mayfair\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_TYPE \u003d \"apartment\"; // \u0027apartment\u0027 is not a valid type","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_ADDRESS \u003d \"\"; // empty string not allowed for addresses","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_POSTAL \u003d \"12a\"; // \u0027a\u0027 not allowed in postal codes","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_DEADLINE \u003d \"31-04-2021\"; // 31st April not valid","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_REMARK \u003d \"\"; // empty string not allowed for remarks","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_PROPERTY_TAG \u003d \"#Freehold\"; // \u0027#\u0027 not allowed in tags","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_NAME \u003d \"Mayfair\";","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_TYPE \u003d \"Condo\";","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_ADDRESS \u003d \"1 Jurong East Street 32, #08-111\";","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_POSTAL \u003d \"609477\";","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_DEADLINE \u003d \"31-12-2021\";","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    public static final LocalDate VALID_PROPERTY_DEADLINE_LOCALDATE \u003d LocalDate.parse(VALID_PROPERTY_DEADLINE,","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_REMARK \u003d \"Urgent to sell!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_TAG_1 \u003d \"Freehold\";","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_PROPERTY_TAG_2 \u003d \"5 bedrooms\";","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_APPOINTMENT_NAME \u003d \"Meet Alex\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_APPOINTMENT_REMARK \u003d \"\"; // empty string not allowed for remarks","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_APPOINTMENT_DATE \u003d \"31-04-2021\"; // 31st April not valid","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_APPOINTMENT_TIME \u003d \"1860\"; // 1260 not valid","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_APPOINTMENT_NAME \u003d \"Meet Alex\";","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_APPOINTMENT_REMARK \u003d \"At M Hotel\";","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_APPOINTMENT_DATE \u003d \"25-12-2021\";","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    public static final LocalDate VALID_APPOINTMENT_DATE_LOCALDATE \u003d LocalDate.parse(VALID_APPOINTMENT_DATE,","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_APPOINTMENT_TIME \u003d \"1900\";","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"    public static final LocalTime VALID_APPOINTMENT_TIME_LOCALTIME \u003d LocalTime.parse(VALID_APPOINTMENT_TIME,","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_CLIENT_NAME \u003d \"Alice\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_CLIENT_CONTACT \u003d \"+91234567\"; // + not allowed","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_CLIENT_EMAIL \u003d \"alice.example.com\"; // missing @","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    public static final String INVALID_CLIENT_ASKING_PRICE \u003d \"$00800000\"; // leading zeros not allowed","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_CLIENT_NAME \u003d \"Alice\";","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_CLIENT_CONTACT \u003d \"91234567\";","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_CLIENT_EMAIL \u003d \"alice@gmail.com\";","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"    public static final String VALID_CLIENT_ASKING_PRICE \u003d \"$800,000\";","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d Tests for general shared parser methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"    public void parseName_null_returnsNull() throws Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"        assertNull(ParserUtil.parseName((String) null));","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_PROPERTY_NAME));","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_APPOINTMENT_NAME));","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_CLIENT_NAME));","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"        Name expectedName \u003d new Name(VALID_PROPERTY_NAME);","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_PROPERTY_NAME));","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"        expectedName \u003d new Name(VALID_APPOINTMENT_NAME);","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_APPOINTMENT_NAME));","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"        expectedName \u003d new Name(VALID_CLIENT_NAME);","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_CLIENT_NAME));","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_PROPERTY_NAME + WHITESPACE;","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"        Name expectedName \u003d new Name(VALID_PROPERTY_NAME);","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"        nameWithWhitespace \u003d WHITESPACE + VALID_APPOINTMENT_NAME + WHITESPACE;","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"        expectedName \u003d new Name(VALID_APPOINTMENT_NAME);","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"        nameWithWhitespace \u003d WHITESPACE + VALID_CLIENT_NAME + WHITESPACE;","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"        expectedName \u003d new Name(VALID_CLIENT_NAME);","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"    public void parseRemark_null_returnsNull() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"        assertNull(ParserUtil.parseRemark((String) null));","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"w2vgd"},"content":"    public void parseRemark_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRemark(INVALID_PROPERTY_REMARK));","lastModifiedDate":"2021-03-08"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRemark(INVALID_APPOINTMENT_REMARK));","lastModifiedDate":"2021-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":153,"author":{"gitId":"w2vgd"},"content":"    public void parseRemark_validValueWithoutWhitespace_returnsRemark() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"        Remark expectedRemark \u003d new Remark(VALID_PROPERTY_REMARK);","lastModifiedDate":"2021-03-08"},{"lineNumber":155,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_PROPERTY_REMARK));","lastModifiedDate":"2021-03-08"},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":157,"author":{"gitId":"w2vgd"},"content":"        expectedRemark \u003d new Remark(VALID_APPOINTMENT_REMARK);","lastModifiedDate":"2021-03-08"},{"lineNumber":158,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_APPOINTMENT_REMARK));","lastModifiedDate":"2021-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"    public void parseRemark_validValueWithWhitespace_returnsTrimmedRemark() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":163,"author":{"gitId":"w2vgd"},"content":"        String remarkWithWhitespace \u003d WHITESPACE + VALID_PROPERTY_REMARK + WHITESPACE;","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"w2vgd"},"content":"        Remark expectedRemark \u003d new Remark(VALID_PROPERTY_REMARK);","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(remarkWithWhitespace));","lastModifiedDate":"2021-03-08"},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"        remarkWithWhitespace \u003d WHITESPACE + VALID_APPOINTMENT_REMARK + WHITESPACE;","lastModifiedDate":"2021-03-08"},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"        expectedRemark \u003d new Remark(VALID_APPOINTMENT_REMARK);","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(remarkWithWhitespace));","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":178,"author":{"gitId":"w2vgd"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_PROPERTY_TAG));","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"        Tag expectedTag \u003d new Tag(VALID_PROPERTY_TAG_1);","lastModifiedDate":"2021-03-22"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_PROPERTY_TAG_1));","lastModifiedDate":"2021-03-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_PROPERTY_TAG_1 + WHITESPACE;","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"        Tag expectedTag \u003d new Tag(VALID_PROPERTY_TAG_1);","lastModifiedDate":"2021-03-22"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2021-03-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"    public void parseTags_null_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"        assertTrue(ParserUtil.parseTags(null).isEmpty());","lastModifiedDate":"2021-03-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"    public void parseTags_stringWithInvalidTags_throwsParseException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(VALID_PROPERTY_TAG_1 + \", \"","lastModifiedDate":"2021-03-22"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"                + INVALID_PROPERTY_TAG));","lastModifiedDate":"2021-03-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":207,"author":{"gitId":"w2vgd"},"content":"    public void parseTags_emptyString_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"        assertTrue(ParserUtil.parseTags(\"\").isEmpty());","lastModifiedDate":"2021-03-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":212,"author":{"gitId":"w2vgd"},"content":"    public void parseTags_whitespacesString_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":213,"author":{"gitId":"w2vgd"},"content":"        assertTrue(ParserUtil.parseTags(\"     \").isEmpty());","lastModifiedDate":"2021-03-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":217,"author":{"gitId":"w2vgd"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(VALID_PROPERTY_TAG_1 + \", \" + VALID_PROPERTY_TAG_2);","lastModifiedDate":"2021-03-22"},{"lineNumber":219,"author":{"gitId":"w2vgd"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_PROPERTY_TAG_1),","lastModifiedDate":"2021-03-22"},{"lineNumber":220,"author":{"gitId":"w2vgd"},"content":"                new Tag(VALID_PROPERTY_TAG_2)));","lastModifiedDate":"2021-03-22"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":222,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2021-03-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":225,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d Tests for property parser methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":226,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":228,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyType_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":229,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePropertyType((String) null));","lastModifiedDate":"2021-03-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":233,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyType_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":234,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePropertyType(INVALID_PROPERTY_TYPE));","lastModifiedDate":"2021-03-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":238,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyType_validValueWithoutWhitespace_returnsType() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":239,"author":{"gitId":"w2vgd"},"content":"        Type expectedType \u003d new Type(VALID_PROPERTY_TYPE);","lastModifiedDate":"2021-03-07"},{"lineNumber":240,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedType, ParserUtil.parsePropertyType(VALID_PROPERTY_TYPE));","lastModifiedDate":"2021-03-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":244,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyType_validValueWithWhitespace_returnsTrimmedType() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":245,"author":{"gitId":"w2vgd"},"content":"        String typeWithWhitespace \u003d WHITESPACE + VALID_PROPERTY_TYPE + WHITESPACE;","lastModifiedDate":"2021-03-07"},{"lineNumber":246,"author":{"gitId":"w2vgd"},"content":"        Type expectedType \u003d new Type(VALID_PROPERTY_TYPE);","lastModifiedDate":"2021-03-07"},{"lineNumber":247,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedType, ParserUtil.parsePropertyType(typeWithWhitespace));","lastModifiedDate":"2021-03-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":251,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyAddress_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":252,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePropertyAddress((String) null));","lastModifiedDate":"2021-03-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":256,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":257,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePropertyAddress(INVALID_PROPERTY_ADDRESS));","lastModifiedDate":"2021-03-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":261,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":262,"author":{"gitId":"w2vgd"},"content":"        Address expectedAddress \u003d new Address(VALID_PROPERTY_ADDRESS);","lastModifiedDate":"2021-03-07"},{"lineNumber":263,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedAddress, ParserUtil.parsePropertyAddress(VALID_PROPERTY_ADDRESS));","lastModifiedDate":"2021-03-07"},{"lineNumber":264,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":266,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":267,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":268,"author":{"gitId":"w2vgd"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_PROPERTY_ADDRESS + WHITESPACE;","lastModifiedDate":"2021-03-07"},{"lineNumber":269,"author":{"gitId":"w2vgd"},"content":"        Address expectedAddress \u003d new Address(VALID_PROPERTY_ADDRESS);","lastModifiedDate":"2021-03-07"},{"lineNumber":270,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedAddress, ParserUtil.parsePropertyAddress(addressWithWhitespace));","lastModifiedDate":"2021-03-07"},{"lineNumber":271,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":272,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":273,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":274,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyPostal_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":275,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePropertyPostal((String) null));","lastModifiedDate":"2021-03-07"},{"lineNumber":276,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":277,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":278,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":279,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyPostal_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":280,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePropertyPostal(INVALID_PROPERTY_POSTAL));","lastModifiedDate":"2021-03-07"},{"lineNumber":281,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":282,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":283,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":284,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyPostal_validValueWithoutWhitespace_returnsPostal() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":285,"author":{"gitId":"w2vgd"},"content":"        PostalCode expectedPostal \u003d new PostalCode(VALID_PROPERTY_POSTAL);","lastModifiedDate":"2021-03-07"},{"lineNumber":286,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedPostal, ParserUtil.parsePropertyPostal(VALID_PROPERTY_POSTAL));","lastModifiedDate":"2021-03-07"},{"lineNumber":287,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":288,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":289,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":290,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyPostal_validValueWithWhitespace_returnsTrimmedPostal() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":291,"author":{"gitId":"w2vgd"},"content":"        String postalWithWhitespace \u003d WHITESPACE + VALID_PROPERTY_POSTAL + WHITESPACE;","lastModifiedDate":"2021-03-07"},{"lineNumber":292,"author":{"gitId":"w2vgd"},"content":"        PostalCode expectedPostal \u003d new PostalCode(VALID_PROPERTY_POSTAL);","lastModifiedDate":"2021-03-07"},{"lineNumber":293,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedPostal, ParserUtil.parsePropertyPostal(postalWithWhitespace));","lastModifiedDate":"2021-03-07"},{"lineNumber":294,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":295,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":296,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":297,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyDeadline_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":298,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePropertyDeadline((String) null));","lastModifiedDate":"2021-03-07"},{"lineNumber":299,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":300,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":301,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":302,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyDeadline_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":303,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePropertyDeadline(INVALID_PROPERTY_DEADLINE));","lastModifiedDate":"2021-03-07"},{"lineNumber":304,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":305,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":306,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":307,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyDeadline_validValueWithoutWhitespace_returnsDeadline() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":308,"author":{"gitId":"w2vgd"},"content":"        Deadline expectedDeadline \u003d new Deadline(VALID_PROPERTY_DEADLINE_LOCALDATE);","lastModifiedDate":"2021-03-08"},{"lineNumber":309,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedDeadline, ParserUtil.parsePropertyDeadline(VALID_PROPERTY_DEADLINE));","lastModifiedDate":"2021-03-07"},{"lineNumber":310,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":311,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":312,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":313,"author":{"gitId":"w2vgd"},"content":"    public void parsePropertyDeadline_validValueWithWhitespace_returnsTrimmedDeadline() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":314,"author":{"gitId":"w2vgd"},"content":"        String deadlineWithWhitespace \u003d WHITESPACE + VALID_PROPERTY_DEADLINE + WHITESPACE;","lastModifiedDate":"2021-03-07"},{"lineNumber":315,"author":{"gitId":"w2vgd"},"content":"        Deadline expectedDeadline \u003d new Deadline(VALID_PROPERTY_DEADLINE_LOCALDATE);","lastModifiedDate":"2021-03-08"},{"lineNumber":316,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedDeadline, ParserUtil.parsePropertyDeadline(deadlineWithWhitespace));","lastModifiedDate":"2021-03-07"},{"lineNumber":317,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":318,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":319,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d Tests for client parser methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":320,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":321,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":322,"author":{"gitId":"w2vgd"},"content":"    public void parseClientContact_null_returnsNull() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":323,"author":{"gitId":"w2vgd"},"content":"        assertNull(ParserUtil.parseClientContact((String) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":325,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":326,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":327,"author":{"gitId":"w2vgd"},"content":"    public void parseClientContact_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":328,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClientContact(INVALID_CLIENT_CONTACT));","lastModifiedDate":"2021-03-10"},{"lineNumber":329,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":330,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":331,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":332,"author":{"gitId":"w2vgd"},"content":"    public void parseClientContact_validValueWithoutWhitespace_returnsContact() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":333,"author":{"gitId":"w2vgd"},"content":"        Contact expectedContact \u003d new Contact(VALID_CLIENT_CONTACT);","lastModifiedDate":"2021-03-10"},{"lineNumber":334,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedContact, ParserUtil.parseClientContact(VALID_CLIENT_CONTACT));","lastModifiedDate":"2021-03-10"},{"lineNumber":335,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":336,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":337,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":338,"author":{"gitId":"w2vgd"},"content":"    public void parseClientContact_validValueWithWhitespace_returnsTrimmedContact() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":339,"author":{"gitId":"w2vgd"},"content":"        String contactWithWhitespace \u003d WHITESPACE + VALID_CLIENT_CONTACT + WHITESPACE;","lastModifiedDate":"2021-03-10"},{"lineNumber":340,"author":{"gitId":"w2vgd"},"content":"        Contact expectedContact \u003d new Contact(VALID_CLIENT_CONTACT);","lastModifiedDate":"2021-03-10"},{"lineNumber":341,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedContact, ParserUtil.parseClientContact(contactWithWhitespace));","lastModifiedDate":"2021-03-10"},{"lineNumber":342,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":343,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":344,"author":{"gitId":"w2vgd"},"content":"    public void parseClientEmail_null_returnsNull() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":345,"author":{"gitId":"w2vgd"},"content":"        assertNull(ParserUtil.parseClientEmail((String) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":346,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":347,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":348,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":349,"author":{"gitId":"w2vgd"},"content":"    public void parseClientEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":350,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClientEmail(INVALID_CLIENT_EMAIL));","lastModifiedDate":"2021-03-10"},{"lineNumber":351,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":352,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":353,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":354,"author":{"gitId":"w2vgd"},"content":"    public void parseClientEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":355,"author":{"gitId":"w2vgd"},"content":"        Email expectedEmail \u003d new Email(VALID_CLIENT_EMAIL);","lastModifiedDate":"2021-03-10"},{"lineNumber":356,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedEmail, ParserUtil.parseClientEmail(VALID_CLIENT_EMAIL));","lastModifiedDate":"2021-03-10"},{"lineNumber":357,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":358,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":359,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":360,"author":{"gitId":"w2vgd"},"content":"    public void parseClientEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":361,"author":{"gitId":"w2vgd"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_CLIENT_EMAIL + WHITESPACE;","lastModifiedDate":"2021-03-10"},{"lineNumber":362,"author":{"gitId":"w2vgd"},"content":"        Email expectedEmail \u003d new Email(VALID_CLIENT_EMAIL);","lastModifiedDate":"2021-03-10"},{"lineNumber":363,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedEmail, ParserUtil.parseClientEmail(emailWithWhitespace));","lastModifiedDate":"2021-03-10"},{"lineNumber":364,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":365,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":366,"author":{"gitId":"w2vgd"},"content":"    public void parseClientAskingPrice_null_returnsNull() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":367,"author":{"gitId":"w2vgd"},"content":"        assertNull(ParserUtil.parseClientAskingPrice((String) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":368,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":369,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":370,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":371,"author":{"gitId":"w2vgd"},"content":"    public void parseClientAskingPrice_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":372,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClientAskingPrice(INVALID_CLIENT_ASKING_PRICE));","lastModifiedDate":"2021-03-10"},{"lineNumber":373,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":374,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":375,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":376,"author":{"gitId":"w2vgd"},"content":"    public void parseClientAskingPrice_validValueWithoutWhitespace_returnsAskingPrice() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":377,"author":{"gitId":"w2vgd"},"content":"        AskingPrice expectedAskingPrice \u003d new AskingPrice(VALID_CLIENT_ASKING_PRICE);","lastModifiedDate":"2021-03-10"},{"lineNumber":378,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedAskingPrice, ParserUtil.parseClientAskingPrice(VALID_CLIENT_ASKING_PRICE));","lastModifiedDate":"2021-03-10"},{"lineNumber":379,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":380,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":381,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":382,"author":{"gitId":"w2vgd"},"content":"    public void parseClientAskingPrice_validValueWithWhitespace_returnsTrimmedAskingPrice() throws Exception {","lastModifiedDate":"2021-03-10"},{"lineNumber":383,"author":{"gitId":"w2vgd"},"content":"        String askingPriceWithWhitespace \u003d WHITESPACE + VALID_CLIENT_ASKING_PRICE + WHITESPACE;","lastModifiedDate":"2021-03-10"},{"lineNumber":384,"author":{"gitId":"w2vgd"},"content":"        AskingPrice expectedAskingPrice \u003d new AskingPrice(VALID_CLIENT_ASKING_PRICE);","lastModifiedDate":"2021-03-10"},{"lineNumber":385,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedAskingPrice, ParserUtil.parseClientAskingPrice(askingPriceWithWhitespace));","lastModifiedDate":"2021-03-10"},{"lineNumber":386,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":387,"author":{"gitId":"w2vgd"},"content":"    // \u003d\u003d\u003d\u003d\u003d Tests for appointment parser methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":388,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":390,"author":{"gitId":"w2vgd"},"content":"    public void parseAppointmentDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":391,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAppointmentDate((String) null));","lastModifiedDate":"2021-03-08"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":395,"author":{"gitId":"w2vgd"},"content":"    public void parseAppointmentDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":396,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDate(INVALID_APPOINTMENT_DATE));","lastModifiedDate":"2021-03-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":400,"author":{"gitId":"w2vgd"},"content":"    public void parseAppointmentDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":401,"author":{"gitId":"w2vgd"},"content":"        Date expectedDate \u003d new Date(VALID_APPOINTMENT_DATE_LOCALDATE);","lastModifiedDate":"2021-03-08"},{"lineNumber":402,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedDate, ParserUtil.parseAppointmentDate(VALID_APPOINTMENT_DATE));","lastModifiedDate":"2021-03-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":406,"author":{"gitId":"w2vgd"},"content":"    public void parseAppointmentDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":407,"author":{"gitId":"w2vgd"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_APPOINTMENT_DATE + WHITESPACE;","lastModifiedDate":"2021-03-08"},{"lineNumber":408,"author":{"gitId":"w2vgd"},"content":"        Date expectedDate \u003d new Date(VALID_APPOINTMENT_DATE_LOCALDATE);","lastModifiedDate":"2021-03-08"},{"lineNumber":409,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedDate, ParserUtil.parseAppointmentDate(dateWithWhitespace));","lastModifiedDate":"2021-03-08"},{"lineNumber":410,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":411,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":412,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":413,"author":{"gitId":"w2vgd"},"content":"    public void parseAppointmentTime_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":414,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAppointmentTime((String) null));","lastModifiedDate":"2021-03-15"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":417,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":418,"author":{"gitId":"w2vgd"},"content":"    public void parseAppointmentTime_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":419,"author":{"gitId":"w2vgd"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentTime(INVALID_APPOINTMENT_TIME));","lastModifiedDate":"2021-03-08"},{"lineNumber":420,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":421,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":422,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":423,"author":{"gitId":"w2vgd"},"content":"    public void parseAppointmentTime_validValueWithoutWhitespace_returnsTime() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":424,"author":{"gitId":"w2vgd"},"content":"        Time expectedTime \u003d new Time(VALID_APPOINTMENT_TIME_LOCALTIME);","lastModifiedDate":"2021-03-08"},{"lineNumber":425,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedTime, ParserUtil.parseAppointmentTime(VALID_APPOINTMENT_TIME));","lastModifiedDate":"2021-03-08"},{"lineNumber":426,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":427,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":428,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":429,"author":{"gitId":"w2vgd"},"content":"    public void parseAppointmentTime_validValueWithWhitespace_returnsTrimmedTime() throws Exception {","lastModifiedDate":"2021-03-08"},{"lineNumber":430,"author":{"gitId":"w2vgd"},"content":"        String timeWithWhitespace \u003d WHITESPACE + VALID_APPOINTMENT_TIME + WHITESPACE;","lastModifiedDate":"2021-03-08"},{"lineNumber":431,"author":{"gitId":"w2vgd"},"content":"        Time expectedTime \u003d new Time(VALID_APPOINTMENT_TIME_LOCALTIME);","lastModifiedDate":"2021-03-08"},{"lineNumber":432,"author":{"gitId":"w2vgd"},"content":"        assertEquals(expectedTime, ParserUtil.parseAppointmentTime(timeWithWhitespace));","lastModifiedDate":"2021-03-08"},{"lineNumber":433,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":434,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":435,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"-":130,"w2vgd":305}},{"path":"src/test/java/seedu/address/logic/parser/PocketEstateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.ClearAppointmentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.FindAppointmentCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.logic.commands.FindPropertyCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.PropertyContainsKeywordsPredicate;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.PropertyPredicateList;","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"public class PocketEstateParserTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    private final PocketEstateParser parser \u003d new PocketEstateParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        assertTrue(parser.parseCommand(ClearAppointmentCommand.COMMAND_WORD) instanceof ClearAppointmentCommand);","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        assertTrue(parser.parseCommand(ClearAppointmentCommand.COMMAND_WORD + \" 3\") instanceof ClearAppointmentCommand);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"w-yuchen"},"content":"    public void parseCommand_find_appointment() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"w-yuchen"},"content":"        FindAppointmentCommand command \u003d (FindAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"                FindAppointmentCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"w-yuchen"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(new FindAppointmentCommand(new AppointmentContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"w-yuchen"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"w-yuchen"},"content":"    public void parseCommand_find_property() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"w-yuchen"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"w-yuchen"},"content":"        FindPropertyCommand command \u003d (FindPropertyCommand) parser.parseCommand(","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"w-yuchen"},"content":"                FindPropertyCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"w-yuchen"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(new FindPropertyCommand(new PropertyPredicateList(","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"w-yuchen"},"content":"                Arrays.asList(new PropertyContainsKeywordsPredicate[]{","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"                    new PropertyContainsKeywordsPredicate(keywords)}))), command);","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Cp-John":3,"-":58,"w-yuchen":21,"w2vgd":2}},{"path":"src/test/java/seedu/address/logic/parser/SortAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATETIME_APPOINTMENT_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SORTING_ORDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SORTING_ORDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_KEY_APPOINTMENT_DATETIME;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_ORDER_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortAppointmentCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortAppointmentCommand.SortAppointmentDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.AppointmentSortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.SortingOrder;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"import seedu.address.testutil.SortAppointmentDescriptorBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"public class SortAppointmentCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"    private SortAppointmentCommandParser parser \u003d new SortAppointmentCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        // no sorting order specified","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortAppointmentCommand.COMMAND_WORD + DATETIME_APPOINTMENT_SORTING_KEY,","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"        // no sorting key specified","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortAppointmentCommand.COMMAND_WORD + DESC_SORTING_ORDER,","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        // no sorting order and no sorting key specified","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortAppointmentCommand.COMMAND_WORD, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortAppointmentCommand.COMMAND_WORD + \" or/desc\"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"                + DATETIME_APPOINTMENT_SORTING_KEY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortAppointmentCommand.COMMAND_WORD + INVALID_SORTING_ORDER","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"                + DATETIME_APPOINTMENT_SORTING_KEY, SortingOrder.MESSAGE_CONSTRAINTS); // invalid sorting order","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortAppointmentCommand.COMMAND_WORD + DESC_SORTING_ORDER","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"                + INVALID_APPOINTMENT_SORTING_KEY,","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"                AppointmentSortingKey.MESSAGE_CONSTRAINTS); // invalid appointment sorting key","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortAppointmentCommand.COMMAND_WORD + INVALID_SORTING_ORDER","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"                        + INVALID_APPOINTMENT_SORTING_KEY, SortingOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"        String userInput \u003d SortAppointmentCommand.COMMAND_WORD + DESC_SORTING_ORDER + DATETIME_APPOINTMENT_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor descriptor \u003d new SortAppointmentDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_DATETIME).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentCommand expectedCommand \u003d new SortAppointmentCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"        String userInput \u003d SortAppointmentCommand.COMMAND_WORD + DESC_SORTING_ORDER + DATETIME_APPOINTMENT_SORTING_KEY","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"                + DESC_SORTING_ORDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor descriptor \u003d new SortAppointmentDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_DATETIME).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentCommand expectedCommand \u003d new SortAppointmentCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"        String userInput \u003d SortAppointmentCommand.COMMAND_WORD + INVALID_SORTING_ORDER + DESC_SORTING_ORDER","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"                + DATETIME_APPOINTMENT_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentDescriptor descriptor \u003d new SortAppointmentDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"                .withAppointmentSortingKey(VALID_SORTING_KEY_APPOINTMENT_DATETIME).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"        SortAppointmentCommand expectedCommand \u003d new SortAppointmentCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":96}},{"path":"src/test/java/seedu/address/logic/parser/SortPropertyCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_PROPERTY_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SORTING_ORDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PROPERTY_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SORTING_ORDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_KEY_PROPERTY_DEADLINE;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SORTING_ORDER_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortPropertyCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortPropertyCommand.SortPropertyDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.PropertySortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.SortingOrder;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"import seedu.address.testutil.SortPropertyDescriptorBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"public class SortPropertyCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortPropertyCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"    private SortPropertyCommandParser parser \u003d new SortPropertyCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"        // no sorting order specified","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortPropertyCommand.COMMAND_WORD + DEADLINE_PROPERTY_SORTING_KEY,","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"        // no sorting key specified","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortPropertyCommand.COMMAND_WORD + DESC_SORTING_ORDER,","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"                MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        // no sorting order and no sorting key specified","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortPropertyCommand.COMMAND_WORD, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortPropertyCommand.COMMAND_WORD + \" or/desc\"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"                + DEADLINE_PROPERTY_SORTING_KEY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortPropertyCommand.COMMAND_WORD + INVALID_SORTING_ORDER","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"                + DEADLINE_PROPERTY_SORTING_KEY, SortingOrder.MESSAGE_CONSTRAINTS); // invalid sorting order","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortPropertyCommand.COMMAND_WORD + DESC_SORTING_ORDER","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Cp-John"},"content":"                        + INVALID_PROPERTY_SORTING_KEY,","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Cp-John"},"content":"                PropertySortingKey.MESSAGE_CONSTRAINTS); // invalid property sorting key","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Cp-John"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Cp-John"},"content":"        assertParseFailure(parser, SortPropertyCommand.COMMAND_WORD + INVALID_SORTING_ORDER","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"                + INVALID_PROPERTY_SORTING_KEY, SortingOrder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":"        String userInput \u003d SortPropertyCommand.COMMAND_WORD + DESC_SORTING_ORDER + DEADLINE_PROPERTY_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor descriptor \u003d new SortPropertyDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_DEADLINE).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"        SortPropertyCommand expectedCommand \u003d new SortPropertyCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"        String userInput \u003d SortPropertyCommand.COMMAND_WORD + DESC_SORTING_ORDER + DEADLINE_PROPERTY_SORTING_KEY","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"                + DESC_SORTING_ORDER;","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor descriptor \u003d new SortPropertyDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_DEADLINE).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"        SortPropertyCommand expectedCommand \u003d new SortPropertyCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"        String userInput \u003d SortPropertyCommand.COMMAND_WORD + INVALID_SORTING_ORDER + DESC_SORTING_ORDER","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"                + DEADLINE_PROPERTY_SORTING_KEY;","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"        SortPropertyDescriptor descriptor \u003d new SortPropertyDescriptorBuilder()","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"                .withSortingOrder(VALID_SORTING_ORDER_DESC)","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"                .withPropertySortingKey(VALID_SORTING_KEY_PROPERTY_DEADLINE).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"        SortPropertyCommand expectedCommand \u003d new SortPropertyCommand(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":96}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import static seedu.address.testutil.TypicalAppointments.MEET_ALEX;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import static seedu.address.testutil.TypicalAppointments.MEET_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import static seedu.address.testutil.TypicalProperties.MAYFAIR;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import static seedu.address.testutil.TypicalProperties.WOODLANDS_CRESCENT;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"import seedu.address.testutil.AppointmentBookBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"import seedu.address.testutil.PropertyBookBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        assertEquals(new AppointmentBook(), new AppointmentBook(modelManager.getAppointmentBook()));","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        userPrefs.setAppointmentBookFilePath(Paths.get(\"appointment/book/file/path\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        userPrefs.setAppointmentBookFilePath(Paths.get(\"appointment/address/book/file/path\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    public void setAppointmentBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAppointmentBookFilePath(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"    public void setAppointmentBookFilePath_validPath_setsAppointmentBookFilePath() {","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        Path path \u003d Paths.get(\"appointment/book/file/path\");","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        modelManager.setAppointmentBookFilePath(path);","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        assertEquals(path, modelManager.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"    public void hasAppointment_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasAppointment(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"    public void hasAppointment_appointmentNotInAppointmentBook_returnsFalse() {","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"        assertFalse(modelManager.hasAppointment(MEET_ALEX));","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"    public void hasAppointment_appointmentInAppointmentBook_returnsTrue() {","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"        modelManager.addAppointment(MEET_ALEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"        assertTrue(modelManager.hasAppointment(MEET_ALEX));","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"    public void getFilteredAppointmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredAppointmentList().remove(0));","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"        AppointmentBook appointmentBook \u003d new AppointmentBookBuilder().withAppointment(MEET_ALEX)","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"                .withAppointment(MEET_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"        AppointmentBook differentAppointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"        PropertyBook propertyBook \u003d new PropertyBookBuilder().withProperty(WOODLANDS_CRESCENT)","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"                .withProperty(MAYFAIR).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"        PropertyBook differentPropertyBook \u003d new PropertyBook();","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"        modelManager \u003d new ModelManager(appointmentBook, propertyBook, userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(appointmentBook, propertyBook, userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"        // different appointmentBook -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAppointmentBook, propertyBook, userPrefs)));","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"        //different propertyBook -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"        assertFalse(modelManager.equals(new ModelManager(appointmentBook, differentPropertyBook, userPrefs)));","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"        // different filteredAppointmentList -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"        modelManager.updateFilteredAppointmentList(unused -\u003e false);","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":"        assertFalse(modelManager.equals(new ModelManager(appointmentBook, propertyBook, userPrefs)));","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"        modelManager.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"        // different filteredPropertyList -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"        modelManager.updateFilteredPropertyList(unused -\u003e false);","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"        assertFalse(modelManager.equals(new ModelManager(appointmentBook, propertyBook, userPrefs)));","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"candyhy"},"content":"        modelManager.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"candyhy"},"content":"        differentUserPrefs.setAppointmentBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"        assertFalse(modelManager.equals(new ModelManager(appointmentBook, propertyBook, differentUserPrefs)));","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"candyhy":48,"-":95,"w2vgd":3}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public void setPropertyBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPropertyBookFilePath(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    public void setAppointmentBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAppointmentBookFilePath(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":19,"w2vgd":8}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_LOCALDATE_MEET_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MEET_BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_MEET_BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_LOCALTIME_MEET_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.TypicalAppointments.MEET_ALEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.TypicalAppointments.MEET_BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"public class AppointmentTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    public void isSameAppointment() {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        assertTrue(MEET_ALEX.isSameAppointment(MEET_ALEX));","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.isSameAppointment(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        // same date and time, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        Appointment editedMeetAlex \u003d new AppointmentBuilder(MEET_ALEX).withName(VALID_NAME_MEET_BOB)","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"            .withRemark(VALID_REMARK_MEET_BOB).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assertTrue(MEET_ALEX.isSameAppointment(editedMeetAlex));","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        // different date, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        editedMeetAlex \u003d new AppointmentBuilder(MEET_ALEX).withDate(VALID_DATE_LOCALDATE_MEET_BOB).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.isSameAppointment(editedMeetAlex));","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        // different time, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        editedMeetAlex \u003d new AppointmentBuilder(MEET_ALEX).withTime(VALID_TIME_LOCALTIME_MEET_BOB).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.isSameAppointment(editedMeetAlex));","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    public void equals() {","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        Appointment meetAlexCopy \u003d new AppointmentBuilder(MEET_ALEX).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        assertTrue(MEET_ALEX.equals(meetAlexCopy));","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        assertTrue(MEET_ALEX.equals(MEET_ALEX));","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.equals(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.equals(5));","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.equals(MEET_BOB));","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        Appointment editedMeetAlex \u003d new AppointmentBuilder(MEET_ALEX).withName(VALID_NAME_MEET_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.equals(editedMeetAlex));","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        editedMeetAlex \u003d new AppointmentBuilder(MEET_ALEX).withRemark(VALID_REMARK_MEET_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.equals(editedMeetAlex));","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        editedMeetAlex \u003d new AppointmentBuilder(MEET_ALEX).withDate(VALID_DATE_LOCALDATE_MEET_BOB).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.equals(editedMeetAlex));","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        editedMeetAlex \u003d new AppointmentBuilder(MEET_ALEX).withTime(VALID_TIME_LOCALTIME_MEET_BOB).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MEET_ALEX.equals(editedMeetAlex));","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"w2vgd":74}},{"path":"src/test/java/seedu/address/model/appointment/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class DateTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Jan 24, 2021\",","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"                new Date(LocalDate.parse(\"2021-01-24\")).toString());","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Feb 29, 2000\",","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"                new Date(LocalDate.parse(\"2000-02-29\")).toString());","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"w2vgd":24}},{"path":"src/test/java/seedu/address/model/appointment/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class TimeTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"9:00AM\",","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"                new Time(LocalTime.parse(\"09:00\")).toString());","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"11:59PM\",","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"                new Time(LocalTime.parse(\"23:59\")).toString());","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"w2vgd":24}},{"path":"src/test/java/seedu/address/model/name/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.name;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Name.isValidName(\"mayfair*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Name.isValidName(\"mayfair\")); // alphabets only","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Name.isValidName(\"mayfair 2\")); // alphanumeric characters","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Name.isValidName(\"The Mayfair\")); // with capital letters","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Name.isValidName(\"The Best But Most Expensive Building In Singapore\")); // long names","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"w2vgd":6,"-":34}},{"path":"src/test/java/seedu/address/model/property/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"w2vgd":1,"-":35}},{"path":"src/test/java/seedu/address/model/property/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Jan 24, 2021\",","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"                new Deadline(LocalDate.parse(\"2021-01-24\")).toString());","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Feb 29, 2000\",","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"                new Deadline(LocalDate.parse(\"2000-02-29\")).toString());","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"w2vgd":24}},{"path":"src/test/java/seedu/address/model/property/PostalCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class PostalCodeTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PostalCode(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public void constructor_invalidPostal_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"        String invalidPostal \u003d \"\";","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PostalCode(invalidPostal));","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public void isValidPostal() {","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        // null postal code","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e PostalCode.isValidPostal(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        // invalid postal codes","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        assertFalse(PostalCode.isValidPostal(\"\")); // empty string","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assertFalse(PostalCode.isValidPostal(\" \")); // spaces only","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        assertFalse(PostalCode.isValidPostal(\"12\")); // less than 3 numbers","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        assertFalse(PostalCode.isValidPostal(\"postal\")); // non-numeric","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        assertFalse(PostalCode.isValidPostal(\"12post34\")); // alphabets within digits","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        assertFalse(PostalCode.isValidPostal(\"123 456\")); // spaces within digits","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        // valid postal codes","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        assertTrue(PostalCode.isValidPostal(\"123\")); // exactly 3 numbers","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        assertTrue(PostalCode.isValidPostal(\"123456\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        assertTrue(PostalCode.isValidPostal(\"123456789123456789\")); // long postal code","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"w2vgd":40}},{"path":"src/test/java/seedu/address/model/property/PropertyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_LOCALDATE_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_MAYFAIR;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSTAL_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PROPERTY_TAG_FREEHOLD;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TYPE_BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"import static seedu.address.testutil.TypicalClients.CLIENT_ALICE;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.TypicalProperties.BURGHLEY_DRIVE;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.TypicalProperties.MAYFAIR;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"w-yuchen"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import seedu.address.testutil.PropertyBuilder;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"public class PropertyTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        Property property \u003d new PropertyBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e property.getTags().remove(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public void isSameProperty() {","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        assertTrue(MAYFAIR.isSameProperty(MAYFAIR));","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.isSameProperty(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        // same address and postal code, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        Property editedMayfair \u003d new PropertyBuilder(MAYFAIR).withName(VALID_NAME_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"                .withType(VALID_TYPE_BURGHLEY_DRIVE).withDeadline(VALID_DEADLINE_LOCALDATE_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"                .build();","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        assertTrue(MAYFAIR.isSameProperty(editedMayfair));","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        // different address, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        editedMayfair \u003d new PropertyBuilder(MAYFAIR).withAddress(VALID_ADDRESS_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.isSameProperty(editedMayfair));","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        // different postal, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        editedMayfair \u003d new PropertyBuilder(MAYFAIR).withPostal(VALID_POSTAL_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.isSameProperty(editedMayfair));","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        // address has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        String addressWithTrailingSpaces \u003d VALID_NAME_MAYFAIR + \" \";","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        editedMayfair \u003d new PropertyBuilder(MAYFAIR).withAddress(addressWithTrailingSpaces).build();","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.isSameProperty(editedMayfair));","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Test for getAskingPrice method, which checks for existence of client. \")","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"w-yuchen"},"content":"    public void getAskingPrice() {","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"w-yuchen"},"content":"        // no client","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"w-yuchen"},"content":"        Property mayfair \u003d new PropertyBuilder(MAYFAIR).build();","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"w-yuchen"},"content":"        assertNull(mayfair.getAskingPrice());","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"w-yuchen"},"content":"        // with client","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"w-yuchen"},"content":"        Property mayFairWithClient \u003d new PropertyBuilder(MAYFAIR)","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"w-yuchen"},"content":"                .withClient(CLIENT_ALICE).build();","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"w-yuchen"},"content":"        assertEquals(mayFairWithClient.getAskingPrice(), CLIENT_ALICE.getClientAskingPrice());","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"w-yuchen"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"w-yuchen"},"content":"    @DisplayName(\"Tests for equals. \")","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    public void equals() {","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        Property mayfairCopy \u003d new PropertyBuilder(MAYFAIR).build();","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        assertTrue(MAYFAIR.equals(mayfairCopy));","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        assertTrue(MAYFAIR.equals(MAYFAIR));","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.equals(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.equals(5));","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.equals(BURGHLEY_DRIVE));","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"        Property editedMayfair \u003d new PropertyBuilder(MAYFAIR).withName(VALID_NAME_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.equals(editedMayfair));","lastModifiedDate":"2021-03-06"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"        editedMayfair \u003d new PropertyBuilder(MAYFAIR).withType(VALID_TYPE_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.equals(editedMayfair));","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"        editedMayfair \u003d new PropertyBuilder(MAYFAIR).withAddress(VALID_ADDRESS_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.equals(editedMayfair));","lastModifiedDate":"2021-03-06"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"        // different postal -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"        editedMayfair \u003d new PropertyBuilder(MAYFAIR).withPostal(VALID_POSTAL_BURGHLEY_DRIVE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.equals(editedMayfair));","lastModifiedDate":"2021-03-06"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2021-03-06"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"        editedMayfair \u003d new PropertyBuilder(MAYFAIR).withDeadline(VALID_DEADLINE_LOCALDATE_BURGHLEY_DRIVE)","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"                .build();","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.equals(editedMayfair));","lastModifiedDate":"2021-03-06"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"        editedMayfair \u003d new PropertyBuilder(MAYFAIR).withTags(VALID_PROPERTY_TAG_FREEHOLD).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"        assertFalse(MAYFAIR.equals(editedMayfair));","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"w2vgd":97,"w-yuchen":20}},{"path":"src/test/java/seedu/address/model/property/TypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class TypeTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Type(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public void constructor_invalidType_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"        String invalidType \u003d \"\";","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Type(invalidType));","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public void isValidType() {","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        // null type","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e Type.isValidType(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        // invalid type","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Type.isValidType(\"\")); // empty string","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Type.isValidType(\" \")); // spaces only","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Type.isValidType(\"hdb \")); // contains extraneous trailing spaces","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Type.isValidType(\"hdb1\")); // contains extraneous trailing characters","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Type.isValidType(\"1hdb\")); // contains extraneous leading characters","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        // valid type","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Type.isValidType(\"hdb\")); // hdb type","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Type.isValidType(\"condo\")); // condo only","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Type.isValidType(\"landed\")); // landed type","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Type.isValidType(\"Hdb\")); // hdb in title case","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Type.isValidType(\"Condo\")); // condo in title case","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Type.isValidType(\"Landed\")); // landed in title case","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Type.isValidType(\"HDB\")); // hdb in uppercase","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Type.isValidType(\"CONDO\")); // condo in uppercase","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Type.isValidType(\"LANDED\")); // landed in uppercase","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"w2vgd":45}},{"path":"src/test/java/seedu/address/model/property/client/AskingPriceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property.client;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class AskingPriceTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AskingPrice(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public void constructor_invalidAskingPrice_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"        String invalidAskingPrice \u003d \"\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AskingPrice(invalidAskingPrice));","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public void isValidAskingPrice() {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        // null asking price","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e AskingPrice.isValidAskingPrice(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        // invalid asking price","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"\")); // empty string","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\" \")); // spaces only","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$01000\")); // leading zeros","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$00\")); // double zeros","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$1000.0\")); // only 1 decimal place","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$1000.000\")); // 3 decimal places","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$100 000\")); // spaces within digits","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$1000,000\")); // inconsistent commas","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$10,00,00\")); // inconsistent commas","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$1,000000\")); // inconsistent commas","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$100K\")); // alphabets within digits","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$100000.\")); // ends with a decimal point","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\" $1000000\")); // leading space","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        assertFalse(AskingPrice.isValidAskingPrice(\"$1000000 \")); // trailing space","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        // valid asking price without dollar sign","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"1000000\")); // without any commas","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"1000000.00\")); // with cents","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"1,000,000\")); // consistent commas","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"1,000,000.00\")); // consistent commas with cents","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"0\")); // zero dollars","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"99999999999\")); // large number","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        // valid asking price with dollar sign","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"$1000000\")); // without any commas","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"$1000000.00\")); // with cents","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"$1,000,000\")); // consistent commas","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"$1,000,000.00\")); // consistent commas with cents","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"$0\")); // zero dollars","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        assertTrue(AskingPrice.isValidAskingPrice(\"$99,999,999,999\")); // large number","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"w2vgd":59}},{"path":"src/test/java/seedu/address/model/property/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property.client;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class ClientTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    private static final String DEFAULT_CLIENT_NAME_STRING \u003d \"Alice\";","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    private static final String DEFAULT_CLIENT_CONTACT_STRING \u003d \"91234567\";","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    private static final String DEFAULT_CLIENT_EMAIL_STRING \u003d \"alice@gmail.com\";","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    private static final String DEFAULT_CLIENT_ASKING_PRICE_STRING \u003d \"$800,000\";","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    private static final Name DEFAULT_CLIENT_NAME \u003d new Name(DEFAULT_CLIENT_NAME_STRING);","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    private static final Contact DEFAULT_CLIENT_CONTACT \u003d new Contact(DEFAULT_CLIENT_CONTACT_STRING);","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    private static final Email DEFAULT_CLIENT_EMAIL \u003d new Email(DEFAULT_CLIENT_EMAIL_STRING);","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private static final AskingPrice DEFAULT_CLIENT_ASKING_PRICE \u003d new AskingPrice(DEFAULT_CLIENT_ASKING_PRICE_STRING);","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"        // Missing all fields","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"\",","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"                new Client(null, null, null, null).toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        // All fields present","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Client Name: Alice; Client Contact: 91234567; Client Email: alice@gmail.com;\"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"                + \" Client Asking Price: $800,000\",","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"                new Client(DEFAULT_CLIENT_NAME, DEFAULT_CLIENT_CONTACT, DEFAULT_CLIENT_EMAIL,","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"                        DEFAULT_CLIENT_ASKING_PRICE).toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        // Missing name","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Client Contact: 91234567; Client Email: alice@gmail.com; Client Asking Price: $800,000\",","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"                new Client(null, DEFAULT_CLIENT_CONTACT, DEFAULT_CLIENT_EMAIL, DEFAULT_CLIENT_ASKING_PRICE)","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"                        .toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        // Missing contact","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Client Name: Alice; Client Email: alice@gmail.com; Client Asking Price: $800,000\",","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"                new Client(DEFAULT_CLIENT_NAME, null, DEFAULT_CLIENT_EMAIL, DEFAULT_CLIENT_ASKING_PRICE)","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"                        .toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        // Missing email","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Client Name: Alice; Client Contact: 91234567; Client Asking Price: $800,000\",","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"                new Client(DEFAULT_CLIENT_NAME, DEFAULT_CLIENT_CONTACT, null, DEFAULT_CLIENT_ASKING_PRICE)","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"                        .toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        // Missing asking price","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Client Name: Alice; Client Contact: 91234567; Client Email: alice@gmail.com\",","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"                new Client(DEFAULT_CLIENT_NAME, DEFAULT_CLIENT_CONTACT, DEFAULT_CLIENT_EMAIL, null)","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"                        .toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        // Missing two fields","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Client Name: Alice; Client Email: alice@gmail.com\",","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"                new Client(DEFAULT_CLIENT_NAME, null, DEFAULT_CLIENT_EMAIL, null).toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Client Contact: 91234567; Client Asking Price: $800,000\",","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"                new Client(null, DEFAULT_CLIENT_CONTACT, null, DEFAULT_CLIENT_ASKING_PRICE).toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        // Missing three fields","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Client Name: Alice\",","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"                new Client(DEFAULT_CLIENT_NAME, null, null, null).toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Client Asking Price: $800,000\",","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"                new Client(null, null, null, DEFAULT_CLIENT_ASKING_PRICE).toString());","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"w2vgd":64}},{"path":"src/test/java/seedu/address/model/property/client/ContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property.client;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class ContactTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Contact(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public void constructor_invalidContact_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"        String invalidContact \u003d \"\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Contact(invalidContact));","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public void isValidContact() {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        // null contact number","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e Contact.isValidContact(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        // invalid contact numbers","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Contact.isValidContact(\"\")); // empty string","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Contact.isValidContact(\" \")); // spaces only","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Contact.isValidContact(\"91\")); // less than 3 numbers","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Contact.isValidContact(\"contact\")); // non-numeric","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Contact.isValidContact(\"9123p456\")); // alphabets within digits","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Contact.isValidContact(\"9123 4567\")); // spaces within digits","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        // valid contact numbers","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Contact.isValidContact(\"911\")); // exactly 3 numbers","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Contact.isValidContact(\"91234567\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Contact.isValidContact(\"8124293842033123\")); // long contact numbers","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"w2vgd":40}},{"path":"src/test/java/seedu/address/model/property/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.property.client;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        // missing some parts of the email","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing prefix part","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain part","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        // invalid emails","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Email.isValidEmail(\"_peterjack@example.com\")); // prefix starts with an underscore","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Email.isValidEmail(\"peterjack_@example.com\")); // prefix ends with an underscore","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // prefix has two consecutive periods","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // less than two characters in top level domain","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // prefix with underscore","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // prefix with hyphen","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // prefix with period","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Email.isValidEmail(\"peterjack@example\")); // alphabets only","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric only","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Email.isValidEmail(\"a1_bc-d2e.f3@examp1e.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Email.isValidEmail(\"peterjack@example-com\")); // hyphen only in domain name","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu.sg\")); // multiple domain parts in domain name","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"w2vgd":20,"-":48}},{"path":"src/test/java/seedu/address/model/remark/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.model.remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class RemarkTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public void constructor_invalidRemark_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"        String invalidRemark \u003d \"\";","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemark));","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public void isValidRemark() {","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        // null remark","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        // invalid remark","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Remark.isValidRemark(\"\")); // empty string","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assertFalse(Remark.isValidRemark(\" \")); // spaces only","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        // valid remark","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Remark.isValidRemark(\"Urgent to sell\"));","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Remark.isValidRemark(\"-\")); // one character","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        assertTrue(Remark.isValidRemark(\"The remark for this property is a very very long string\")); // long remark","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"w2vgd":36}},{"path":"src/test/java/seedu/address/model/sort/descriptor/AppointmentSortingKeyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.model.sort.descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"public class AppointmentSortingKeyTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppointmentSortingKey(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    public void constructor_invalidAppointmentSortingKey_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"        String invalidAppointmentSortingKey \u003d \"\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentSortingKey(invalidAppointmentSortingKey));","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    public void isValidAppointmentSortingKey() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"        // null appointmentSortingKey","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppointmentSortingKey.isValidAppointmentSortingKey(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        // invalid appointmentSortingKey","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"        assertFalse(AppointmentSortingKey.isValidAppointmentSortingKey(\"\")); // empty string","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        assertFalse(AppointmentSortingKey.isValidAppointmentSortingKey(\" \")); // spaces only","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"        // valid appointmentSortingKey","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        assertTrue(AppointmentSortingKey.isValidAppointmentSortingKey(\"datetime\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        assertTrue(AppointmentSortingKey.isValidAppointmentSortingKey(\"name\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":35}},{"path":"src/test/java/seedu/address/model/sort/descriptor/PropertySortingKeyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.model.sort.descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"public class PropertySortingKeyTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PropertySortingKey(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    public void constructor_invalidPropertySortingKey_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"        String invalidPropertySortingKey \u003d \"\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new PropertySortingKey(invalidPropertySortingKey));","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    public void isValidPropertySortingKey() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"        // null propertySortingKey","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"        assertThrows(NullPointerException.class, () -\u003e PropertySortingKey.isValidPropertySortingKey(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        // invalid propertySortingKey","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"        assertFalse(PropertySortingKey.isValidPropertySortingKey(\"\")); // empty string","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        assertFalse(PropertySortingKey.isValidPropertySortingKey(\" \")); // spaces only","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"        // valid propertySortingKey","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        assertTrue(PropertySortingKey.isValidPropertySortingKey(\"deadline\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        assertTrue(PropertySortingKey.isValidPropertySortingKey(\"name\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"        assertTrue(PropertySortingKey.isValidPropertySortingKey(\"postalcode\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"        assertTrue(PropertySortingKey.isValidPropertySortingKey(\"price\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":37}},{"path":"src/test/java/seedu/address/model/sort/descriptor/SortingOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.model.sort.descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"public class SortingOrderTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortingOrder(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    public void constructor_invalidSortingOrder_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"        String invalidSortingOrder \u003d \"\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new SortingOrder(invalidSortingOrder));","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    public void isValidSortingOrder() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"        // null sortingOrder","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"        assertThrows(NullPointerException.class, () -\u003e SortingOrder.isValidSortingOrder(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"        // invalid sortingOrder","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"        assertFalse(SortingOrder.isValidSortingOrder(\"\")); // empty string","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        assertFalse(SortingOrder.isValidSortingOrder(\" \")); // spaces only","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"        // valid sortingOrder","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        assertTrue(SortingOrder.isValidSortingOrder(\"asc\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        assertTrue(SortingOrder.isValidSortingOrder(\"desc\")); // one character","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":35}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        userPrefs.setPropertyBookFilePath(Paths.get(\"propertybook.json\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        userPrefs.setAppointmentBookFilePath(Paths.get(\"appointmentbook.json\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"w2vgd":2}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.ReadOnlyAppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        JsonAppointmentBookStorage appointmentBookStorage \u003d new JsonAppointmentBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        JsonPropertyBookStorage propertyBookStorage \u003d new JsonPropertyBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        storageManager \u003d new StorageManager(appointmentBookStorage, propertyBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    public void appointmentBookReadSave() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"         * {@link JsonAppointmentBookStorage} class.","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAppointmentBookStorageTest} class.","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        AppointmentBook original \u003d getTypicalAppointmentBook();","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        storageManager.saveAppointmentBook(original);","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        ReadOnlyAppointmentBook retrieved \u003d storageManager.readAppointmentBook().get();","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        assertEquals(original, new AppointmentBook(retrieved));","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    public void getAppointmentBookFilePath() {","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"        assertNotNull(storageManager.getAppointmentBookFilePath());","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"candyhy":15,"-":54}},{"path":"src/test/java/seedu/address/testutil/AppointmentBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":" * A utility class to help with building Appointmentbook objects.","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"public class AppointmentBookBuilder {","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    private AppointmentBook appointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    public AppointmentBookBuilder() {","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"        appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    public AppointmentBookBuilder(AppointmentBook appointmentBook) {","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        this.appointmentBook \u003d appointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Adds a new {@code appointment} to the {@code AppointmentBook} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    public AppointmentBookBuilder withAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        appointmentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        return this;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public AppointmentBook build() {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        return appointmentBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"candyhy":32}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Date;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.remark.Remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public static final String DEFAULT_NAME \u003d \"Meet Alex\";","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public static final String DEFAULT_REMARK \u003d \"At M Hotel\";","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    public static final LocalDate DEFAULT_DATE \u003d LocalDate.parse(\"2021-12-25\");","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public static final LocalTime DEFAULT_TIME \u003d LocalTime.parse(\"15:00\");","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    private Name name;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    private Remark remark;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    private Date date;","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    private Time time;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     * Creates an {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        time \u003d new Time(DEFAULT_TIME);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        name \u003d appointmentToCopy.getName();","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        remark \u003d appointmentToCopy.getRemarks();","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        date \u003d appointmentToCopy.getDate();","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        time \u003d appointmentToCopy.getTime();","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * Sets the {@code Name} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    public AppointmentBuilder withName(String name) {","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"     * Sets the {@code Remark} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    public AppointmentBuilder withRemark(String type) {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        this.remark \u003d new Remark(type);","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * Sets the {@code Date} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    public AppointmentBuilder withDate(LocalDate date) {","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"     * Sets the {@code Time} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"    public AppointmentBuilder withTime(LocalTime time) {","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"        this.time \u003d new Time(time);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"    public Appointment build() {","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        return new Appointment(name, remark, date, time);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"w2vgd":82}},{"path":"src/test/java/seedu/address/testutil/EditPropertyDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dvdweien"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.commands.EditPropertyCommand.EditPropertyDescriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"dvdweien"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"dvdweien"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"dvdweien"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"dvdweien"},"content":" * A utility class to help with building EditPropertyDescriptor objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"dvdweien"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"dvdweien"},"content":"public class EditPropertyDescriptorBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"    private EditPropertyDescriptor descriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyDescriptorBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"        descriptor \u003d new EditPropertyDescriptor();","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyDescriptorBuilder(EditPropertyDescriptor descriptor) {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"dvdweien"},"content":"        this.descriptor \u003d new EditPropertyDescriptor(descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"dvdweien"},"content":"     * Returns an {@code EditPropertyDescriptor} with fields containing {@code property}\u0027s details","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyDescriptorBuilder(Property property) {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"dvdweien"},"content":"        descriptor \u003d new EditPropertyDescriptor();","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"dvdweien"},"content":"        descriptor.setName(property.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"dvdweien"},"content":"        descriptor.setPostalCode(property.getPostalCode());","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"dvdweien"},"content":"        descriptor.setDeadline(property.getDeadline());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"dvdweien"},"content":"        descriptor.setAddress(property.getAddress());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"dvdweien"},"content":"        descriptor.setType(property.getPropertyType());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        descriptor.setTags(property.getTags());","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"dvdweien"},"content":"     * Sets the {@code Name} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"dvdweien"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"dvdweien"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"dvdweien"},"content":"     * Sets the {@code PostalCode} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyDescriptorBuilder withPostalCode(String postal) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"dvdweien"},"content":"        descriptor.setPostalCode(new PostalCode(postal));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"dvdweien"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"dvdweien"},"content":"     * Sets the {@code Deadline} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"dvdweien"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"dvdweien"},"content":"            descriptor.setDeadline(ParserUtil.parsePropertyDeadline(deadline));","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"dvdweien"},"content":"            return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"dvdweien"},"content":"        } catch (ParseException ex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"dvdweien"},"content":"            return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"dvdweien"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"dvdweien"},"content":"     * Sets the {@code Address} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"dvdweien"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"dvdweien"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"dvdweien"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"dvdweien"},"content":"     * Sets the {@code Type} of the {@code EditPropertyDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"dvdweien"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyDescriptorBuilder withType(String type) {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"dvdweien"},"content":"        descriptor.setType(new Type(type));","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"dvdweien"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"dvdweien"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPropertyDescriptor}","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"     * that we are building.","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"    public EditPropertyDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"dvdweien"},"content":"    public EditPropertyDescriptor build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"dvdweien"},"content":"        return descriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"dvdweien"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"dvdweien"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"dvdweien":86,"w2vgd":16}},{"path":"src/test/java/seedu/address/testutil/PropertyBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":" * A utility class to help with building PropertyBook objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"public class PropertyBookBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    private PropertyBook propertyBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    public PropertyBookBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"        propertyBook \u003d new PropertyBook();","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    public PropertyBookBuilder(PropertyBook propertyBook) {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        this.propertyBook \u003d propertyBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Adds a new {@code Property} to the {@code PropertyBook} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    public PropertyBookBuilder withProperty(Property property) {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        propertyBook.addProperty(property);","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public PropertyBook build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        return propertyBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"candyhy":32}},{"path":"src/test/java/seedu/address/testutil/PropertyBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Address;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Deadline;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.PostalCode;","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Type;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.client.Client;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":" * A utility class to help with building Property objects.","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"public class PropertyBuilder {","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"dvdweien"},"content":"    public static final String DEFAULT_NAME \u003d \"Block 123\";","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"dvdweien"},"content":"    public static final String DEFAULT_TYPE \u003d \"HDB\";","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"dvdweien"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"456 Chua Chu Kang Street 88, #06-123\";","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"dvdweien"},"content":"    public static final String DEFAULT_POSTAL \u003d \"609456\";","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"dvdweien"},"content":"    public static final LocalDate DEFAULT_DEADLINE \u003d LocalDate.parse(\"2021-08-23\");","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    private Name name;","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    private Type type;","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    private Address address;","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    private PostalCode postal;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    private Deadline deadline;","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"w-yuchen"},"content":"    private Client client;","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code PropertyBuilder} with the default details.","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public PropertyBuilder() {","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        type \u003d new Type(DEFAULT_TYPE);","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        postal \u003d new PostalCode(DEFAULT_POSTAL);","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        deadline \u003d new Deadline(DEFAULT_DEADLINE);","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"w-yuchen"},"content":"        client \u003d null;","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * Initializes the PropertyBuilder with the data of {@code propertyToCopy}.","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public PropertyBuilder(Property propertyToCopy) {","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        name \u003d propertyToCopy.getName();","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        type \u003d propertyToCopy.getPropertyType();","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        address \u003d propertyToCopy.getAddress();","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        postal \u003d propertyToCopy.getPostalCode();","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        deadline \u003d propertyToCopy.getDeadline();","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        tags \u003d new HashSet\u003c\u003e(propertyToCopy.getTags());","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"w-yuchen"},"content":"        client \u003d null;","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     * Sets the {@code Name} of the {@code Property} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"    public PropertyBuilder withName(String name) {","lastModifiedDate":"2021-03-06"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-06"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"     * Sets the {@code Type} of the {@code Property} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    public PropertyBuilder withType(String type) {","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        this.type \u003d new Type(type);","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"     * Sets the {@code Address} of the {@code Property} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"    public PropertyBuilder withAddress(String address) {","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-06"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"     * Sets the {@code PostalCode} of the {@code Property} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"    public PropertyBuilder withPostal(String postal) {","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"        this.postal \u003d new PostalCode(postal);","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"     * Sets the {@code Deadline} of the {@code Property} that we are building.","lastModifiedDate":"2021-03-06"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"    public PropertyBuilder withDeadline(LocalDate deadline) {","lastModifiedDate":"2021-03-06"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        this.deadline \u003d new Deadline(deadline);","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-06"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":102,"author":{"gitId":"w-yuchen"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"w-yuchen"},"content":"     * Sets the {@code Client} of the {@code Property} that we are building. TEMPORARY","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"w-yuchen"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"w-yuchen"},"content":"    public PropertyBuilder withClient(Client client) {","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"w-yuchen"},"content":"        this.client \u003d client;","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"w-yuchen"},"content":"        return this;","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"w-yuchen"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Property} that we are building.","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"    public PropertyBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"        return this;","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"w-yuchen"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"w-yuchen"},"content":"     * Builds the {@code Property}.","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"w-yuchen"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"    public Property build() {","lastModifiedDate":"2021-03-06"},{"lineNumber":122,"author":{"gitId":"w-yuchen"},"content":"        return new Property(name, type, address, postal, deadline, client, tags);","lastModifiedDate":"2021-03-20"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"dvdweien":5,"w2vgd":103,"w-yuchen":16}},{"path":"src/test/java/seedu/address/testutil/SortAppointmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortAppointmentCommand.SortAppointmentDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.AppointmentSortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.SortingOrder;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":" * A utility class to help with building SortAppointmentDescriptor objects.","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"public class SortAppointmentDescriptorBuilder {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"    private SortAppointmentDescriptor descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    public SortAppointmentDescriptorBuilder() {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"        descriptor \u003d new SortAppointmentDescriptor();","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public SortAppointmentDescriptorBuilder(SortAppointmentDescriptor descriptor) {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        this.descriptor \u003d new SortAppointmentDescriptor(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"     * Sets the {@code SortingOrder} of the {@code SortAppointmentDescriptor} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"    public SortAppointmentDescriptorBuilder withSortingOrder(String sortingOrder) {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"        descriptor.setSortingOrder(new SortingOrder(sortingOrder));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"     * Sets the {@code AppointmentSortingKey} of the {@code SortAppointmentDescriptor} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"    public SortAppointmentDescriptorBuilder withAppointmentSortingKey(String appointmentSortingKey) {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        descriptor.setAppointmentSortingKey(new AppointmentSortingKey(appointmentSortingKey));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"    public SortAppointmentDescriptor build() {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        return descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":40}},{"path":"src/test/java/seedu/address/testutil/SortPropertyDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"import seedu.address.logic.commands.SortPropertyCommand.SortPropertyDescriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.PropertySortingKey;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"import seedu.address.model.sort.descriptor.SortingOrder;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":" * A utility class to help with building SortPropertyDescriptor objects.","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"public class SortPropertyDescriptorBuilder {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"    private SortPropertyDescriptor descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    public SortPropertyDescriptorBuilder() {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"        descriptor \u003d new SortPropertyDescriptor();","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public SortPropertyDescriptorBuilder(SortPropertyDescriptor descriptor) {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"        this.descriptor \u003d new SortPropertyDescriptor(descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"     * Sets the {@code SortingOrder} of the {@code SortPropertyDescriptor} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"    public SortPropertyDescriptorBuilder withSortingOrder(String sortingOrder) {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"        descriptor.setSortingOrder(new SortingOrder(sortingOrder));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"     * Sets the {@code PropertySortingKey} of the {@code SortPropertyDescriptor} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"    public SortPropertyDescriptorBuilder withPropertySortingKey(String propertySortingKey) {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        descriptor.setPropertySortingKey(new PropertySortingKey(propertySortingKey));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"    public SortPropertyDescriptor build() {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"        return descriptor;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Cp-John":40}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.util.List;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.AppointmentBook;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"public class TypicalAppointments {","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    public static final Appointment MEET_ALEX \u003d new AppointmentBuilder().withName(\"Meet Alex\")","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        .withRemark(\"At M Hotel\")","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        .withDate(LocalDate.parse(\"25-12-2021\",","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT)))","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        .withTime(LocalTime.parse(\"1500\", DateTimeFormatter.ofPattern(\"HHmm\"))).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public static final Appointment MEET_BOB \u003d new AppointmentBuilder().withName(\"Meet Bob\")","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        .withRemark(\"At Plaza Sing Starbucks\")","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        .withDate(LocalDate.parse(\"25-02-2021\",","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT)))","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        .withTime(LocalTime.parse(\"2000\", DateTimeFormatter.ofPattern(\"HHmm\"))).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    public static final Appointment MEET_CHARLIE \u003d new AppointmentBuilder().withName(\"Meet Charlie\")","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        .withRemark(\"At client\u0027s house\")","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        .withDate(LocalDate.parse(\"17-08-2021\",","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT)))","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        .withTime(LocalTime.parse(\"1230\", DateTimeFormatter.ofPattern(\"HHmm\"))).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    public static final Appointment MEET_DARREN \u003d new AppointmentBuilder().withName(\"Meet Darren\")","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"            .withRemark(\"At MBS Starbucks\")","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"            .withDate(LocalDate.parse(\"12-10-2021\",","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"                    DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT)))","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"            .withTime(LocalTime.parse(\"1400\", DateTimeFormatter.ofPattern(\"HHmm\"))).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    public static final Appointment MEET_EMILY \u003d new AppointmentBuilder().withName(\"Meet Emily\")","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"            .withRemark(\"At MayFair Gardens\")","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"            .withDate(LocalDate.parse(\"15-06-2021\",","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                    DateTimeFormatter.ofPattern(\"d-M-u\").withResolverStyle(ResolverStyle.STRICT)))","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"            .withTime(LocalTime.parse(\"1100\", DateTimeFormatter.ofPattern(\"HHmm\"))).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    private TypicalAppointments() {} // prevents instantiation","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * Returns an {@code AppointmentBook} with all the typical appointments.","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    public static AppointmentBook getTypicalAppointmentBook() {","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        AppointmentBook appointmentBook \u003d new AppointmentBook();","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"            appointmentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        return appointmentBook;","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEET_ALEX, MEET_BOB, MEET_CHARLIE, MEET_DARREN, MEET_EMILY));","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"candyhy":11,"w2vgd":50}},{"path":"src/test/java/seedu/address/testutil/TypicalClients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w-yuchen"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.name.Name;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.client.AskingPrice;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.client.Client;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.client.Contact;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"w-yuchen"},"content":"import seedu.address.model.property.client.Email;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"w-yuchen"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"w-yuchen"},"content":"public class TypicalClients {","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"w-yuchen"},"content":"    public static final Client CLIENT_ALICE \u003d new Client(new Name(\"Alice\"), new Contact(\"91234567\"),","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"w-yuchen"},"content":"                            new Email(\"alice@gmail.com\"), new AskingPrice(\"$800,000\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"w-yuchen"},"content":"    public static final Client CLIENT_BOB \u003d new Client(new Name(\"Bob\"), new Contact(\"91234567\"),","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"w-yuchen"},"content":"            new Email(\"bob@yandex.com\"), new AskingPrice(\"$2,000,000\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"w-yuchen"},"content":"    public static final Client CLIENT_EVE \u003d new Client(new Name(\"Eve\"), new Contact(\"91234567\"),","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"w-yuchen"},"content":"            new Email(\"eve@hotmail.com\"), new AskingPrice(\"$100,000\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"w-yuchen"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"w-yuchen":16}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"    public static final Index INDEX_FIRST_APPOINTMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    public static final Index INDEX_SECOND_APPOINTMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"    public static final Index INDEX_THIRD_APPOINTMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    public static final Index INDEX_FIRST_PROPERTY \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    public static final Index INDEX_SECOND_PROPERTY \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"    public static final Index INDEX_THIRD_PROPERTY \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Cp-John":8,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalProperties.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.util.List;","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.PropertyBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import seedu.address.model.property.Property;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":" * A utility class containing a list of {@code Property} objects to be used in tests.","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"public class TypicalProperties {","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public static final Property WOODLANDS_CRESCENT \u003d new PropertyBuilder().withName(\"Woodlands Crescent\")","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            .withType(\"Hdb\").withAddress(\"Woodlands Crescent, #01-01\")","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            .withPostal(\"731784\").withDeadline(LocalDate.parse(\"2021-08-31\"))","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"            .withTags(\"2 bedrooms\", \"65 square metres\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public static final Property MAYFAIR \u003d new PropertyBuilder().withName(\"Mayfair\")","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"            .withType(\"Condo\").withAddress(\"1 Jurong East Street 32, #08-111\")","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"            .withPostal(\"609477\").withDeadline(LocalDate.parse(\"2021-12-31\"))","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"            .withTags(\"4 bedrooms\", \"No need for renovation\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public static final Property BURGHLEY_DRIVE \u003d new PropertyBuilder().withName(\"Burghley Drive\")","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"            .withType(\"Landed\").withAddress(\"12 Burghley Drive\")","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"            .withPostal(\"123456\").withDeadline(LocalDate.parse(\"2021-07-31\"))","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"            .withTags(\"99 year leasehold\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    private TypicalProperties() {} // prevents instantiation","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * Returns a {@code PropertyBook} with all the typical properties.","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    public static PropertyBook getTypicalPropertyBook() {","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        PropertyBook propertyBook \u003d new PropertyBook();","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        for (Property property : getTypicalProperties()) {","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"            propertyBook.addProperty(property);","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        }","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        return propertyBook;","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    public static List\u003cProperty\u003e getTypicalProperties() {","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(WOODLANDS_CRESCENT, MAYFAIR, BURGHLEY_DRIVE));","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"w2vgd":45}}]
