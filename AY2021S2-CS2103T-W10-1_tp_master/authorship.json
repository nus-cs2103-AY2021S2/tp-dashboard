[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyueyang"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-1/tp/actions)","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"* This is a project to allow drivers and passengers to sign up for carpooling.\u003cbr\u003e","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"  * as a listing for passengers to indicate their interest to carpool","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"  * as a central location for drivers to find passengers to carpool with","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"* The project is an ongoing software project for a desktop application (called _GreenMileageEfforts_) used to encourage carpooling.","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"  * It comes with a **[user](https://ay2021s2-cs2103t-w10-1.github.io/tp/UserGuide.html) and [developer guide](https://ay2021s2-cs2103t-w10-1.github.io/tp/DeveloperGuide.html)** .","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"* It is named GreenMileageEfforts as we want to encourage users to carpool.","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"lyueyang":8,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    systemProperties \u003d [","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"            \u0027testfx.robot\u0027: \u0027glass\u0027,","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"            \u0027testfx.headless\u0027: \u0027true\u0027,","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"            \u0027prism.order\u0027: \u0027sw\u0027,","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"            \u0027prism.text\u0027: \u0027t2k\u0027,","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"            \u0027testfx.setup.timeout\u0027: \u002760000\u0027,","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"    ]","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"run {","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"    testImplementation \"org.testfx:testfx-core:4.0.16-alpha\"","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"    testImplementation \"org.testfx:testfx-junit5:4.0.16-alpha\"","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u0027jdk-12.0.1+2\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"    archiveName \u003d \u0027GreenMileageEfforts.jar\u0027","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"markmcwong":13,"-":71,"JoelHo":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"You can reach us at the email `chewterence@u.nus.edu`","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"### Yue Yang Lee","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"\u003cimg src\u003d\"images/lyueyang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"[Homepage](https://www.lyueyang.space) | [Github](https://github.com/lyueyang) | [Portfolio](team/lyueyang.md)","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"* Role: Integration","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"* Responsibilities: In charge of CRD commands","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"### Joel Ho","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"\u003cimg src\u003d\"images/joelho.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"[Homepage](https://www.joels.space) | [Github](http://github.com/joelho) | [Portfolio](team/joelho.md)","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"* Role: Code Quality","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"* Responsibilities: In charge of UI","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"### Zechariah Tan","lastModifiedDate":"2021-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"\u003cimg src\u003d\"images/zechariahtan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"[Homepage](https://www.zechariahtan.com) | [Github](http://github.com/zechariahtan) | [Portfolio](team/zechariahtan.md)","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"* Role: Testing","lastModifiedDate":"2021-02-19"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"* Responsibilities: In charge of Storage","lastModifiedDate":"2021-02-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"### Terence Chew","lastModifiedDate":"2021-02-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"\u003cimg src\u003d\"images/chewterence.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"[Homepage](https://www.chewterence.com) | [Github](http://github.com/chewterence) | [Portfolio](team/chewterence.md)","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"* Role: Team Lead","lastModifiedDate":"2021-02-19"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"* Responsibilities: In charge of Model","lastModifiedDate":"2021-02-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"### Mark Wong","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"\u003cimg src\u003d\"images/markmcwong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"[Github](http://github.com/markmcwong) | [Portfolio](team/markmcwong.md)","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"* Role: Documentation","lastModifiedDate":"2021-02-19"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"* Responsibilities: In charge of Logic","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"chewterence":2,"lyueyang":1,"ZechariahTan":16,"-":29,"JoelHo":7}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W10-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W10-1/tp) in that page reflects the coverage of your project.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadow`).","lastModifiedDate":"2020-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":77,"JoelHo":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PassengerListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"1. The command execution can affect the `Model` (e.g. adding a passenger).","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"lyueyang"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1 2\")` API call.","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"lyueyang"},"content":"![Interactions Inside the Logic Component for the `delete 1 2` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"chewterence"},"content":"* stores the GME terminal data.","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"chewterence"},"content":"* exposes an unmodifiable `ObservableList\u003cPassenger\u003e` and `ObservableList\u003cPool\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Passenger` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Passenger` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"JoelHo"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103T-W10-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":131,"author":{"gitId":"chewterence"},"content":"## Implementation","lastModifiedDate":"2021-04-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-04-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":134,"author":{"gitId":"chewterence"},"content":"### Pool feature","lastModifiedDate":"2021-04-10"},{"lineNumber":135,"author":{"gitId":"chewterence"},"content":"This feature allows users to create and add a pool to the list of pools, through the use of a `pool` command.","lastModifiedDate":"2021-04-10"},{"lineNumber":136,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"ZechariahTan"},"content":"Design considerations include the `pool` command being able to be used in conjunction with the `find` command. For instance, the user would","lastModifiedDate":"2021-04-11"},{"lineNumber":138,"author":{"gitId":"chewterence"},"content":"first use `find tag/female` and then followed by `pool n/Alice p/91234567 d/MONDAY t/1930 c/2 c/3`.","lastModifiedDate":"2021-04-10"},{"lineNumber":139,"author":{"gitId":"chewterence"},"content":"The `find tag/female` command first filters the list of displayed passengers, such that only passengers with the `female` tag would be displayed. Calling the `pool` command","lastModifiedDate":"2021-04-10"},{"lineNumber":140,"author":{"gitId":"chewterence"},"content":"would then assign `Alice` with number `91234567` to be the driver of the passengers specified by the indices for the currently displayed list.","lastModifiedDate":"2021-04-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":142,"author":{"gitId":"chewterence"},"content":"The activity diagram below encapsulates the user workflow of adding passengers, finding passengers and then pooling the passengers:","lastModifiedDate":"2021-04-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":144,"author":{"gitId":"chewterence"},"content":"![Activity Diagram for a User Using Pool](images/PoolActivityDiagram.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":146,"author":{"gitId":"chewterence"},"content":"The rationale behind this implementation was because once the GME terminal is populated with a large number of passengers, it would be rather difficult for the user to find a specific passenger.","lastModifiedDate":"2021-04-10"},{"lineNumber":147,"author":{"gitId":"chewterence"},"content":"By allowing the user to first filter the passengers then subsequently pooling from the filtered list would greatly enhance the feature, thereby making the product much more cohesive as features work well together.","lastModifiedDate":"2021-04-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":149,"author":{"gitId":"chewterence"},"content":"Given below is the Sequence Diagram for interactions within the Logic component for the `execute(\"pool n/Alice p/91234567 d/monday t/1930 c/2 c/3\")` command.","lastModifiedDate":"2021-04-10"},{"lineNumber":150,"author":{"gitId":"chewterence"},"content":"![Interactions Inside the Logic Component for the `pool n/Alice p/91234567 d/monday t/1930 c/2 c/3` Command](images/PoolSequenceDiagram.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":152,"author":{"gitId":"chewterence"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**  The `command` argument that is passed into","lastModifiedDate":"2021-04-10"},{"lineNumber":153,"author":{"gitId":"chewterence"},"content":"`execute()`, represents the string `\"pool n/Alice p/91234567 d/monday t/1930 c/2 c/3\"`, and has been abstracted for readability.","lastModifiedDate":"2021-04-10"},{"lineNumber":154,"author":{"gitId":"chewterence"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":155,"author":{"gitId":"chewterence"},"content":"The lifeline for `PoolCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-10"},{"lineNumber":156,"author":{"gitId":"chewterence"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":157,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":158,"author":{"gitId":"chewterence"},"content":"From the diagram illustrated above:","lastModifiedDate":"2021-04-10"},{"lineNumber":159,"author":{"gitId":"chewterence"},"content":"1. `LogicManager` has its `execute()` method called when a user enters the `\"pool n/Alice p/91234567 d/monday t/1930 c/2 c/3\"` command.","lastModifiedDate":"2021-04-10"},{"lineNumber":160,"author":{"gitId":"chewterence"},"content":"1. `AddressBookParser` class is then instantiated, which subsequently instantiates `PoolCommandParser` class to help parse the user\u0027s command.","lastModifiedDate":"2021-04-10"},{"lineNumber":161,"author":{"gitId":"chewterence"},"content":"1. `AddressBookParser` would then have its `parse()` method invoked to parse the arguments of `\"n/Alice p/91234567 d/monday t/1930 c/2 c/3\"` to","lastModifiedDate":"2021-04-10"},{"lineNumber":162,"author":{"gitId":"chewterence"},"content":"   `PoolCommandParser` which creates and returns a `PoolCommand`.","lastModifiedDate":"2021-04-10"},{"lineNumber":163,"author":{"gitId":"chewterence"},"content":"1. `LogicManager` would subsequently invoke the `execute()` method of the `PoolCommand`, which in turn calls its own method of `getPassengersFromIndexes()`","lastModifiedDate":"2021-04-10"},{"lineNumber":164,"author":{"gitId":"chewterence"},"content":"    that gets a list of passengers from `Model` by calling `getFilteredPassengerList()`.","lastModifiedDate":"2021-04-10"},{"lineNumber":165,"author":{"gitId":"chewterence"},"content":"1. A `Pool` object is then created with the list of passengers returned by `getPassengersFromIndexes()`, and then added to the model by the `addPool()` method.","lastModifiedDate":"2021-04-10"},{"lineNumber":166,"author":{"gitId":"chewterence"},"content":"1. The model filtered pool list is then updated with `updateFilteredPoolList()` with a predicate to show all pools in the list `PREDICATE_SHOW_ALL_POOLS`.","lastModifiedDate":"2021-04-10"},{"lineNumber":167,"author":{"gitId":"chewterence"},"content":"1. Finally, a `CommandResult` would be returned back to `LogicManager` to indicate the completion status of the command.","lastModifiedDate":"2021-04-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":169,"author":{"gitId":"chewterence"},"content":"It is worth noting that in the case of adding a passenger, a `Passenger` object is created by `AddCommandParser` and used in the constructor of `AddCommand`.","lastModifiedDate":"2021-04-10"},{"lineNumber":170,"author":{"gitId":"chewterence"},"content":"However, in the case of adding a pool, a `PoolCommand` is constructed using the details specified and parsed from `PoolCommandParser`, instead of creating and passing a `Pool` object.","lastModifiedDate":"2021-04-10"},{"lineNumber":171,"author":{"gitId":"chewterence"},"content":"The rationale is due the fact that a list of passengers have to be obtained from the indexes specified, which requires interactions with the model.","lastModifiedDate":"2021-04-10"},{"lineNumber":172,"author":{"gitId":"chewterence"},"content":"The current implementation thus encapsulates all the interactions with model, within the methods of `PoolCommand`.","lastModifiedDate":"2021-04-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":174,"author":{"gitId":"chewterence"},"content":"### Unpool feature","lastModifiedDate":"2021-04-10"},{"lineNumber":175,"author":{"gitId":"chewterence"},"content":"This feature allows users to remove a pool from the pool list through the specification of an index.","lastModifiedDate":"2021-04-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":177,"author":{"gitId":"ZechariahTan"},"content":"Design considerations include the `findPool` command being able to be used in conjunction with the `unpool` command. For instance, the user might first use `findPool n/Alice` and then followed by `unpool 1`.","lastModifiedDate":"2021-04-11"},{"lineNumber":178,"author":{"gitId":"ZechariahTan"},"content":"The `findPool n/Alice` command first filters the list of displayed pools, such that only pools in which there is a passenger named Alice will be displayed. Calling the `unpool` command would then remove the pool specified by the provided indices from the currently displayed list, removing it from the system. The `findPool` command works similarly to the `find` command, except that it currently only supports the use of the name prefix: \"/n\"","lastModifiedDate":"2021-04-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":180,"author":{"gitId":"ZechariahTan"},"content":"The activity diagram below encapsulates the user workflow of adding passengers, finding passengers and then pooling the passengers:","lastModifiedDate":"2021-04-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":182,"author":{"gitId":"ZechariahTan"},"content":"![Activity Diagram for a user using Unpool](images/UnpoolActivityDiagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":184,"author":{"gitId":"ZechariahTan"},"content":"The rationale behind this implementation was because once the GME terminal is populated with a large number of pools, it would be rather difficult for the user to find a specific pool with a specific passenger.","lastModifiedDate":"2021-04-11"},{"lineNumber":185,"author":{"gitId":"ZechariahTan"},"content":"By allowing the user to first filter the pools before subsequently removing the pool from the filtered list, the findPool feature greatly enhances the unpool feature, thereby making the product much more cohesive as features work well together.","lastModifiedDate":"2021-04-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":187,"author":{"gitId":"chewterence"},"content":"Given below is the Sequence Diagram for interactions within the Logic component for the `execute(\"unpool 1\")`.","lastModifiedDate":"2021-04-10"},{"lineNumber":188,"author":{"gitId":"chewterence"},"content":"![Interactions Inside the Logic Component for the `unpool 1` Command](images/UnpoolSequenceDiagram.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":190,"author":{"gitId":"chewterence"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UnpoolCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":193,"author":{"gitId":"chewterence"},"content":"From the diagram illustrated above:","lastModifiedDate":"2021-04-10"},{"lineNumber":194,"author":{"gitId":"chewterence"},"content":"1. `LogicManager` has its `execute()` method called when a user enters the `\"unpool 1\"` command.","lastModifiedDate":"2021-04-10"},{"lineNumber":195,"author":{"gitId":"chewterence"},"content":"1. `AddressBookParser` class is then instantiated, which subsequently instantiates `UnpoolCommandParser` class to help parse the user\u0027s command.","lastModifiedDate":"2021-04-10"},{"lineNumber":196,"author":{"gitId":"chewterence"},"content":"1. `AddressBookParser` would then have its `parse()` method invoked, passing the argument `\"1\"` to `UnpoolCommandParser`.","lastModifiedDate":"2021-04-10"},{"lineNumber":197,"author":{"gitId":"chewterence"},"content":"1. Given that the index `\"1\"` is a valid index, an `UnpoolCommand` object would be created and returned to `LogicManager`.","lastModifiedDate":"2021-04-10"},{"lineNumber":198,"author":{"gitId":"chewterence"},"content":"1. `LogicManager` would subsequently invoke the `execute()` method of the `UnpoolCommand` which in turn invokes `deletePool()` method with an argument of `1`.","lastModifiedDate":"2021-04-10"},{"lineNumber":199,"author":{"gitId":"chewterence"},"content":"1. This would update the model by deleting the specified pool at the first index, then the result of the command execution `CommandResult` would be created and returned back to `LogicManager`.","lastModifiedDate":"2021-04-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":201,"author":{"gitId":"ZechariahTan"},"content":"### findPool feature","lastModifiedDate":"2021-04-11"},{"lineNumber":202,"author":{"gitId":"ZechariahTan"},"content":"This feature allows users to find a pool that contains a passenger with a provided keyword in their name. ","lastModifiedDate":"2021-04-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":204,"author":{"gitId":"ZechariahTan"},"content":"Given below is the Sequence Diagram for interactions within the Logic component for the `execute(\"findPool n/Alice\")` command.","lastModifiedDate":"2021-04-11"},{"lineNumber":205,"author":{"gitId":"ZechariahTan"},"content":"![Interactions Inside the Logic Component for the `findPool n/Alice` Command](images/FindPoolSequenceDiagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":207,"author":{"gitId":"ZechariahTan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**  The `command` argument that is passed into","lastModifiedDate":"2021-04-11"},{"lineNumber":208,"author":{"gitId":"ZechariahTan"},"content":"`execute()`, represents the string `\"findPool n/Alice\"`, and has been abstracted for readability.","lastModifiedDate":"2021-04-11"},{"lineNumber":209,"author":{"gitId":"ZechariahTan"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":210,"author":{"gitId":"ZechariahTan"},"content":"The lifeline for `FindPoolCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":213,"author":{"gitId":"ZechariahTan"},"content":"From the diagram illustrated above:","lastModifiedDate":"2021-04-11"},{"lineNumber":214,"author":{"gitId":"ZechariahTan"},"content":"1. `LogicManager` has its `execute()` method called when a user enters the `\"findPool n/Alice\"` command.","lastModifiedDate":"2021-04-11"},{"lineNumber":215,"author":{"gitId":"ZechariahTan"},"content":"1. `AddressBookParser` class is then created, which subsequently creates `FindPoolCommandParser` class to help parse the user\u0027s command.","lastModifiedDate":"2021-04-11"},{"lineNumber":216,"author":{"gitId":"ZechariahTan"},"content":"1. `AddressBookParser` would then have its `parse()` method invoked to parse the argument `\"n/Alice\"` and passes it to","lastModifiedDate":"2021-04-11"},{"lineNumber":217,"author":{"gitId":"ZechariahTan"},"content":"   `FindPoolCommandParser`.","lastModifiedDate":"2021-04-11"},{"lineNumber":218,"author":{"gitId":"ZechariahTan"},"content":"1. `FindPoolCommandParser` parses the argument `\"n/Alice\"` and creates a `PooledPassengerContainsKeywordPredicate` which is returned to the `FindPoolCommandParser`.","lastModifiedDate":"2021-04-11"},{"lineNumber":219,"author":{"gitId":"lyueyang"},"content":"1. `FindPoolCommandParser` then creates a `FindPoolCommand`, and provides the newly created `PooledPassengerContainsKeywordPredicate` to it. The `FindPoolCommand` object is then returned to `LogicManager`.","lastModifiedDate":"2021-04-11"},{"lineNumber":220,"author":{"gitId":"lyueyang"},"content":"1. `LogicManager` would subsequently invoke the `execute()` method of the `FindPoolCommand`, which in turn calls the `updateFilteredPoolList()` method in `Model`, causing the shown pool list to be updated according to the predicate in the `FindPoolCommand` object.","lastModifiedDate":"2021-04-11"},{"lineNumber":221,"author":{"gitId":"ZechariahTan"},"content":"1. A `Pool` object is then created with the list of passengers returned by `getPassengersFromIndexes()`, and then added to the model by the `addPool()` method.","lastModifiedDate":"2021-04-11"},{"lineNumber":222,"author":{"gitId":"ZechariahTan"},"content":"1. Finally, a `CommandResult` would be returned to `LogicManager` to indicate the completion status of the command.","lastModifiedDate":"2021-04-11"},{"lineNumber":223,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":224,"author":{"gitId":"lyueyang"},"content":"### Find feature","lastModifiedDate":"2021-04-11"},{"lineNumber":225,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":226,"author":{"gitId":"lyueyang"},"content":"The rationale behind expanding on the find feature is to allow for the user to find passengers by more attributes to improve usability. ","lastModifiedDate":"2021-04-11"},{"lineNumber":227,"author":{"gitId":"lyueyang"},"content":"Instead of being restricted to searching for names only, the user can now find other passengers with the same day or of a certain area. ","lastModifiedDate":"2021-04-11"},{"lineNumber":228,"author":{"gitId":"lyueyang"},"content":"This is vital as it is necessary to improve the usability for the user when attempting to find passengers to carpool with drivers.","lastModifiedDate":"2021-04-11"},{"lineNumber":229,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":230,"author":{"gitId":"lyueyang"},"content":"![Interactions Inside the Logic Component for the `find n/Lucy n/Adam` Command](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":231,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":232,"author":{"gitId":"lyueyang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**  The `command` argument that is passed into","lastModifiedDate":"2021-04-11"},{"lineNumber":233,"author":{"gitId":"lyueyang"},"content":"`execute()`, represents the string `\"find n/Lucy n/Adam\"`, and has been abstracted for readability.","lastModifiedDate":"2021-04-11"},{"lineNumber":234,"author":{"gitId":"lyueyang"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":235,"author":{"gitId":"lyueyang"},"content":"The lifeline for `FindCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-11"},{"lineNumber":236,"author":{"gitId":"lyueyang"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":238,"author":{"gitId":"lyueyang"},"content":"From the diagram illustrated above:","lastModifiedDate":"2021-04-11"},{"lineNumber":239,"author":{"gitId":"lyueyang"},"content":"1. `LogicManager` has its `execute()` method called when a user enters the `\"find n/Lucy n/Adam\"` command.","lastModifiedDate":"2021-04-11"},{"lineNumber":240,"author":{"gitId":"lyueyang"},"content":"1. Object of `AddressBookParser` class is then accessed, which then subsequently creates `FindCommandParser` class object to help parse the user\u0027s command.","lastModifiedDate":"2021-04-11"},{"lineNumber":241,"author":{"gitId":"lyueyang"},"content":"1. `AddressBookParser` would then invoke the `parse()` method of `FindCommandParser`, with parameters `n/Lucy n/Adam`, to parse the arguments `n/Lucy n/Adam`.","lastModifiedDate":"2021-04-11"},{"lineNumber":242,"author":{"gitId":"lyueyang"},"content":"1. `FindCommandParser` parses the arguments `n/Lucy n/Adam` and creates a `NameContainsKeywordPredicate` object named `predicate` which is returned to the `FindCommandParser` object.","lastModifiedDate":"2021-04-11"},{"lineNumber":243,"author":{"gitId":"lyueyang"},"content":"1. `FindCommandParser` then instantiates a `FindCommand` object with `predicate` as a parameter. The `FindCommand` object is then returned to `LogicManager`.","lastModifiedDate":"2021-04-11"},{"lineNumber":244,"author":{"gitId":"lyueyang"},"content":"1. `LogicManager` would subsequently invoke the `execute()` method of `FindCommand`, which in turn calls the `updateFilteredPoolList()` method in `Model`, causing the shown pool list to be updated according to `predicate` in the `FindCommand` object.","lastModifiedDate":"2021-04-11"},{"lineNumber":245,"author":{"gitId":"lyueyang"},"content":"1. A `CommandResult` object is then created with a message which includes the number of passengers found on the list updated by `updateFilteredPoolList()`.","lastModifiedDate":"2021-04-11"},{"lineNumber":246,"author":{"gitId":"lyueyang"},"content":"1. Finally, the `CommandResult` object is returned to `LogicManager`.","lastModifiedDate":"2021-04-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"chewterence"},"content":"- a HR executive who is required to find and pool passengers with drivers from an already existing database.","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"markmcwong"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2021-02-25"},{"lineNumber":269,"author":{"gitId":"chewterence"},"content":"- is able to type fast","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"markmcwong"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2021-02-25"},{"lineNumber":271,"author":{"gitId":"markmcwong"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2021-02-25"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"lyueyang"},"content":"**Value proposition**: Greater ease of use in managing driver and passenger profiles as compared to an Excel sheet.","lastModifiedDate":"2021-03-28"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":275,"author":{"gitId":"markmcwong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"JoelHo"},"content":"### User Stories","lastModifiedDate":"2021-03-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"JoelHo"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2021-03-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"markmcwong"},"content":"|Priority|As a …​    |I want to …​                                                  |So that                                                                                         |","lastModifiedDate":"2021-02-25"},{"lineNumber":282,"author":{"gitId":"lyueyang"},"content":"|--------|--------------|-----------------------------------------------------------------|------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-03-28"},{"lineNumber":283,"author":{"gitId":"lyueyang"},"content":"|* * *   |HR Executive  |allocate drivers to passengers to be picked up                   |I can arrange carpooling trips for my colleagues                                                |","lastModifiedDate":"2021-03-28"},{"lineNumber":284,"author":{"gitId":"lyueyang"},"content":"|* * *   |HR Executive  |search for specific type of passengers                           |I can see if any passengers fulfil a criteria and view their carpool details                    |","lastModifiedDate":"2021-03-28"},{"lineNumber":285,"author":{"gitId":"lyueyang"},"content":"|* * *   |HR Executive  |list all passengers                                              |I can see all the passengers available                                                          |","lastModifiedDate":"2021-03-28"},{"lineNumber":286,"author":{"gitId":"lyueyang"},"content":"|* * *   |HR Executive  |create a profile                                                 |I can easily manage and track drivers and passengers                                            |","lastModifiedDate":"2021-03-28"},{"lineNumber":287,"author":{"gitId":"lyueyang"},"content":"|* * *   |HR Executive  |delete employee profile                                          |passenger\u0027s data will not be stored when they are no longer looking to carpool                  |","lastModifiedDate":"2021-03-28"},{"lineNumber":288,"author":{"gitId":"lyueyang"},"content":"|* *     |HR Executive  |filter passengers\u0027 destination and pickup point based on location|drivers are not heavily inconvenienced to pick up passengers                                    |","lastModifiedDate":"2021-03-28"},{"lineNumber":289,"author":{"gitId":"lyueyang"},"content":"|* *     |HR Executive  |match only with female drivers                                   |so that female colleagues looking to carpool only with female drivers can be easily accomodated |","lastModifiedDate":"2021-03-28"},{"lineNumber":290,"author":{"gitId":"lyueyang"},"content":"|* *     |HR Executive  |edit drop off location                                           |passengers and drivers who have negotiated a new drop off location can be easily updated        |","lastModifiedDate":"2021-03-28"},{"lineNumber":291,"author":{"gitId":"lyueyang"},"content":"|*       |HR Executive  |indicate the price willing to pay                                |drivers are more likely to choose these passengers                                              |","lastModifiedDate":"2021-03-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":294,"author":{"gitId":"JoelHo"},"content":"## Use Cases","lastModifiedDate":"2021-03-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"lyueyang"},"content":"**Use case: Allocate drivers to passengers to be picked up**","lastModifiedDate":"2021-03-28"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"lyueyang"},"content":"**MSS:**","lastModifiedDate":"2021-03-28"},{"lineNumber":299,"author":{"gitId":"lyueyang"},"content":"1. Search or list out passengers available to be picked up.","lastModifiedDate":"2021-03-28"},{"lineNumber":300,"author":{"gitId":"lyueyang"},"content":"2. GME shows a list of passengers.","lastModifiedDate":"2021-03-28"},{"lineNumber":301,"author":{"gitId":"lyueyang"},"content":"3. HR executive chooses and view the details of the specific passenger.","lastModifiedDate":"2021-03-28"},{"lineNumber":302,"author":{"gitId":"lyueyang"},"content":"4. HR executive allocates drivers to specific passenger to the driver\u0027s carpooling group.","lastModifiedDate":"2021-03-28"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"JoelHo"},"content":"    Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"markmcwong"},"content":"***Extensions***","lastModifiedDate":"2021-02-25"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"JoelHo"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"JoelHo"},"content":"    Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-25"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":314,"author":{"gitId":"markmcwong"},"content":"**Use case: Search for specific type of passengers**","lastModifiedDate":"2021-02-25"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"lyueyang"},"content":"**MSS:**","lastModifiedDate":"2021-03-28"},{"lineNumber":317,"author":{"gitId":"lyueyang"},"content":"1. HR executive chooses the criteria that the passengers need to fulfil in order to be picked up.","lastModifiedDate":"2021-03-28"},{"lineNumber":318,"author":{"gitId":"lyueyang"},"content":"2. HR exective initiates the search.","lastModifiedDate":"2021-03-28"},{"lineNumber":319,"author":{"gitId":"lyueyang"},"content":"3. GME shows a list of passengers that fulfils the criteria.","lastModifiedDate":"2021-03-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"markmcwong"},"content":"***Extensions***","lastModifiedDate":"2021-02-25"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"lyueyang"},"content":"* 3a. No passenger fulfils the criteria.","lastModifiedDate":"2021-03-28"},{"lineNumber":326,"author":{"gitId":"lyueyang"},"content":"  * 3a1. GME shows empty list.","lastModifiedDate":"2021-03-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"markmcwong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-25"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":332,"author":{"gitId":"lyueyang"},"content":"**Use case: Create a passenger profile**","lastModifiedDate":"2021-03-28"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"lyueyang"},"content":"**MSS:**","lastModifiedDate":"2021-03-28"},{"lineNumber":335,"author":{"gitId":"lyueyang"},"content":"1. HR exeuctive fills out the passenger\u0027s name, contact number and pickup address.","lastModifiedDate":"2021-03-28"},{"lineNumber":336,"author":{"gitId":"lyueyang"},"content":"2. GME verifies that all the required fields are not empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":337,"author":{"gitId":"lyueyang"},"content":"3. GME adds passenger\u0027s details to GME.","lastModifiedDate":"2021-03-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"lyueyang"},"content":"   Use case ends.","lastModifiedDate":"2021-03-28"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"markmcwong"},"content":"***Extensions***","lastModifiedDate":"2021-02-25"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"lyueyang"},"content":"* 2a. Any required field is missing.","lastModifiedDate":"2021-03-28"},{"lineNumber":344,"author":{"gitId":"lyueyang"},"content":"  * 2a1. GME warns the user to input the data missing.","lastModifiedDate":"2021-03-28"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":346,"author":{"gitId":"JoelHo"},"content":"    Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"markmcwong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-25"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":350,"author":{"gitId":"lyueyang"},"content":"**Use case: Delete a passenger profile**","lastModifiedDate":"2021-03-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":352,"author":{"gitId":"lyueyang"},"content":"**MSS:**","lastModifiedDate":"2021-03-28"},{"lineNumber":353,"author":{"gitId":"lyueyang"},"content":"1. HR exeuctive indicates they would like to delete a passenger profile.","lastModifiedDate":"2021-03-28"},{"lineNumber":354,"author":{"gitId":"lyueyang"},"content":"2. GME verifies that passenger exists.","lastModifiedDate":"2021-03-28"},{"lineNumber":355,"author":{"gitId":"lyueyang"},"content":"3. GME deletes the specific passenger\u0027s profile.","lastModifiedDate":"2021-03-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":357,"author":{"gitId":"lyueyang"},"content":"   Use case ends.","lastModifiedDate":"2021-03-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":359,"author":{"gitId":"markmcwong"},"content":"***Extensions***","lastModifiedDate":"2021-02-25"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":361,"author":{"gitId":"lyueyang"},"content":"* 2a. Index number of passenger does not exist.","lastModifiedDate":"2021-03-28"},{"lineNumber":362,"author":{"gitId":"lyueyang"},"content":"  * 2a1. GME warns that no such passenger exists.","lastModifiedDate":"2021-03-28"},{"lineNumber":363,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":364,"author":{"gitId":"JoelHo"},"content":"    Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":366,"author":{"gitId":"markmcwong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-25"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":368,"author":{"gitId":"lyueyang"},"content":"**Use case:** **Match only with female drivers**","lastModifiedDate":"2021-03-28"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":370,"author":{"gitId":"lyueyang"},"content":"**Pre-conditions:** Female passenger profile indicating that they are looking for female drivers only have been created","lastModifiedDate":"2021-03-28"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":372,"author":{"gitId":"lyueyang"},"content":"**MSS:**","lastModifiedDate":"2021-03-28"},{"lineNumber":373,"author":{"gitId":"lyueyang"},"content":"1. HR Executive finds passengers only looking for female drivers.","lastModifiedDate":"2021-03-28"},{"lineNumber":374,"author":{"gitId":"chewterence"},"content":"2. HR Executive then matches female drivers to female passengers looking for female drivers only.","lastModifiedDate":"2021-03-29"},{"lineNumber":375,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":376,"author":{"gitId":"lyueyang"},"content":"    Use case ends.","lastModifiedDate":"2021-03-28"},{"lineNumber":377,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":378,"author":{"gitId":"markmcwong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-25"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":380,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-03-24"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":382,"author":{"gitId":"markmcwong"},"content":"1. **Usability**:","lastModifiedDate":"2021-02-25"},{"lineNumber":383,"author":{"gitId":"JoelHo"},"content":"    - GME shall work on any *mainstream OS* as long as it has Java `11` or above installed.","lastModifiedDate":"2021-03-25"},{"lineNumber":384,"author":{"gitId":"JoelHo"},"content":"    - GME\u0027s interface shall be user-friendly and easy to use by using mouse when not using commands, meaning all buttons and interaction should be self-explanatory and intuitive which can be used by people without training.","lastModifiedDate":"2021-03-25"},{"lineNumber":385,"author":{"gitId":"JoelHo"},"content":"    - A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-25"},{"lineNumber":386,"author":{"gitId":"markmcwong"},"content":"2. **Reliability**:","lastModifiedDate":"2021-02-25"},{"lineNumber":387,"author":{"gitId":"JoelHo"},"content":"    - GME shall allow drivers to pick passengers throughout the week ant any time during the day, up to 6 passengers depending on car size.","lastModifiedDate":"2021-03-25"},{"lineNumber":388,"author":{"gitId":"JoelHo"},"content":"    - GME Should be able to hold up to 1000 persons (drivers and passengers included) without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-25"},{"lineNumber":389,"author":{"gitId":"markmcwong"},"content":"3. **Security:**","lastModifiedDate":"2021-02-25"},{"lineNumber":390,"author":{"gitId":"markmcwong"},"content":"    - Only users that creates their own profile can view their private information and change the privacy settings","lastModifiedDate":"2021-02-25"},{"lineNumber":391,"author":{"gitId":"markmcwong"},"content":"4. **Integrity**","lastModifiedDate":"2021-02-25"},{"lineNumber":392,"author":{"gitId":"markmcwong"},"content":"    - All monetary amounts (including passenger\u0027s tips) must be accurate to two decimal places and in SGD.","lastModifiedDate":"2021-02-25"},{"lineNumber":393,"author":{"gitId":"markmcwong"},"content":"    - All geolocation coordinates must be accurate to six decimal places.","lastModifiedDate":"2021-02-25"},{"lineNumber":394,"author":{"gitId":"markmcwong"},"content":"    - All email and phone numbers provided by users must pass through format check.","lastModifiedDate":"2021-02-25"},{"lineNumber":395,"author":{"gitId":"markmcwong"},"content":"    - All time-related data that is presented to user must be accurate to minutes, and use `DD-MM-YYYY` format","lastModifiedDate":"2021-02-25"},{"lineNumber":396,"author":{"gitId":"JoelHo"},"content":"    - All timestamps for any events occurred recorded by the GME shall be in UTC (Universal Time Coordinated) when placed into permanent storage.","lastModifiedDate":"2021-03-25"},{"lineNumber":397,"author":{"gitId":"markmcwong"},"content":"5. **Flexibility**","lastModifiedDate":"2021-02-25"},{"lineNumber":398,"author":{"gitId":"markmcwong"},"content":"    - GME shall be able to process different date formats input by user and converts to `DD-MM-YYYY`","lastModifiedDate":"2021-02-25"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":400,"author":{"gitId":"markmcwong"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-25"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":402,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2021-02-25"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"chewterence"},"content":"- **Driver**: An employee that is in-charge of driving passengers within the pool to their location.","lastModifiedDate":"2021-03-29"},{"lineNumber":405,"author":{"gitId":"chewterence"},"content":"- **GME**: GreenMileageEfforts, this software that is used to arrange carpooling.","lastModifiedDate":"2021-03-29"},{"lineNumber":406,"author":{"gitId":"chewterence"},"content":"- **Mainstream OS**: Windows, Linux, Unix, MacOS.","lastModifiedDate":"2021-03-29"},{"lineNumber":407,"author":{"gitId":"chewterence"},"content":"- **Pool**: A group of employees carpooling together. Consists of one driver and at least one passenger.","lastModifiedDate":"2021-03-29"},{"lineNumber":408,"author":{"gitId":"chewterence"},"content":"- **Passenger**: An employee carpooling with at least one driver.","lastModifiedDate":"2021-03-29"},{"lineNumber":409,"author":{"gitId":"chewterence"},"content":"- **Tag**: A miscellaneous piece of information about the pool, passenger, or driver that isn\u0027t captured by the other fields but is good to have.","lastModifiedDate":"2021-03-29"},{"lineNumber":410,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":412,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2021-03-25"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"JoelHo"},"content":"### Deleting a passenger","lastModifiedDate":"2021-03-14"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"JoelHo"},"content":"1. Deleting a passenger while all passengers are being shown","lastModifiedDate":"2021-03-14"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"JoelHo"},"content":"   1. Prerequisites: List all passengers using the `list` command. Multiple passengers in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-03-25"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"JoelHo"},"content":"      Expected: No passenger is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-14"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chewterence":57,"lyueyang":70,"ZechariahTan":24,"markmcwong":28,"-":255,"JoelHo":29}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"GreenMileageEfforts (GME) is a platform that helps the HR executive of any company quickly arrange carpooling among its employees in order to lower the carbon footprint of the company.","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"# 1. Introduction","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"## 1.1 About Green Mileage Efforts","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"Green Mileage Efforts(GME) is an efficient carpooling management solution designed to help corporations reduce their carbon footprint. The GME system allows for the simple creation and management of weekly carpooling groups of employees looking to carpool to and from their office. These [pools](#6-glossary) of employees can then carpool from the office regularly on the specified days and times every week. Through the GME system, users can find employees based on their carpooling preferences and quickly group them with drivers. The system also maintains a database of the arranged carpooling groups for easy management.","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"GME is a platform that follows a [Command-Line Interface (CLI)](#6-glossary) such that power users that are familiar can efficiently navigate the program.","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"## 1.2 Navigating the User Guide","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"For help regarding the set up of GME, refer to the [“Quick Start\"](#2-quick-start-) section.","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"For a full list and more information about GME\u0027s features and commands, use the [“Features”](#3-features-) section.","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"For a quick overview of GME’s commands, refer to the [“Command Summary”](#5-command-summary-) section.","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"Please note the following symbols used in the User Guide which may serve as points of interests:","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"* `command`: The grey highlight indicates commands that can be executed by GME.","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"* :information_source: : This symbol indicates noteworthy information.","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"* :warning: : This symbol indicates information that may irrevesibly corrupt data.","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"# 2. Quick start \u003ca name \u003d \"quickstart\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"1. Ensure you have Java 11 or above installed in your computer.","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"2. Download the latest GreenMileageEfforts.jar from [here](https://github.com/AY2021S2-CS2103T-W10-1/tp/releases).","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"3. Copy the file to the folder you want to use as the [home folder](#6-glossary) for your **GreenMileageEfforts**.","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"4. Double click the file to start the aplication.","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"5. Type the command in the command box and press the Enter key to execute it. Some examples of commands you could try are:","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"   * `list`: Lists all [passengers](#6-glossary) currently stored in the GME system.","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"   * `pool n/Doctor Iver p/92385810 d/MONDAY t/0930 c/1 c/2 c/3`: adds the employees shown at indexes 1, 2, and 3 as passengers to a new [pool](#6-glossary) with Dr. Iver as the driver.","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"   * `listPool`: Lists all [pools](#6-glossary) currently stored in the GME system.","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"   * `unpool 2`: Removes the pool at index 2.","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"   * `exit`: closes the GME application.","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"6. Refer to the [Features](#3-features-) below for the details on each command.","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"# 3. Features \u003ca name \u003d \"features\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"  e.g `n/NAME [tag/TAG]` can be used as `n/John Doe tag/finance` or as `n/John Doe`.","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"  e.g. `[tag/TAG]…​` can be used as ` ` (i.e. 0 times), `tag/finance`, `tag/finance tag/management` etc.","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"## 3.1 General Purpose Features","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"## 3.1.1 User Interface","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"The various sections of the User Interface are described as in the picture below.","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"![Ui_labelled](images/Ui_labelled.png)","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"### 3.1.1 Viewing help : `help`","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"ZechariahTan"},"content":"**Format:** `help`","lastModifiedDate":"2021-04-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":"### 3.1.2 Clearing all entries : `clear`","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":97,"author":{"gitId":"ZechariahTan"},"content":"Clears all entries from the passenger list and pool list.","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":99,"author":{"gitId":"ZechariahTan"},"content":"**Format:** `clear`","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"ZechariahTan"},"content":"### 3.1.3 Exiting the program : `exit`","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":103,"author":{"gitId":"ZechariahTan"},"content":"Exits the program.","lastModifiedDate":"2021-04-08"},{"lineNumber":104,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":105,"author":{"gitId":"ZechariahTan"},"content":"**Format:** `exit`","lastModifiedDate":"2021-04-08"},{"lineNumber":106,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":107,"author":{"gitId":"ZechariahTan"},"content":"### 3.1.4 Saving the data","lastModifiedDate":"2021-04-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":109,"author":{"gitId":"ZechariahTan"},"content":"GME data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-04-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":111,"author":{"gitId":"ZechariahTan"},"content":"### 3.1.5 Editing the data file","lastModifiedDate":"2021-04-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":113,"author":{"gitId":"ZechariahTan"},"content":"GME data is saved as a JSON file `[JAR file location]/data/GMEdata.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"**:warning: GME will replace the JSON file with a new one if it cannot read the file**\u003cbr\u003e ","lastModifiedDate":"2021-04-10"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"* Make a backup before any changes","lastModifiedDate":"2021-04-10"},{"lineNumber":119,"author":{"gitId":"JoelHo"},"content":"* Edit at your own risk","lastModifiedDate":"2021-04-10"},{"lineNumber":120,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":121,"author":{"gitId":"ZechariahTan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":122,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"## 3.2 Passenger Features","lastModifiedDate":"2021-04-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"ZechariahTan"},"content":"### 3.2.1 Adding passengers: `add`","lastModifiedDate":"2021-04-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"chewterence"},"content":"Adds a new passenger in the GME terminal.","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"ZechariahTan"},"content":"**Format:** `add n/NAME p/PHONE a/ADDRESS d/TRIPDAY t/TRIPTIME [pr/PRICE] [tag/TAG tag/TAG ...]`","lastModifiedDate":"2021-04-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"ZechariahTan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":132,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":133,"author":{"gitId":"ZechariahTan"},"content":"**:information_source: Notes about the add command:**\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":134,"author":{"gitId":"ZechariahTan"},"content":"* [TripDay](#6-glossary) is required to be a valid day of the week. e.g. `SUNDAY` or `FRIDAY`","lastModifiedDate":"2021-04-08"},{"lineNumber":135,"author":{"gitId":"ZechariahTan"},"content":"* [TripTime](#6-glossary) is required to be in the 24-hour format. e.g. `0530` or `2359` ","lastModifiedDate":"2021-04-08"},{"lineNumber":136,"author":{"gitId":"ZechariahTan"},"content":"* [Tag](#6-glossary) is required to be an alphanumeric input and can only have a maximum of 30 characters in length.","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"ZechariahTan"},"content":"* [Price](#6-glossary) is an optional amount that the passenger can include that describes how much they are willing to pay for a carpooling trip. It is required to be a positive whole number or a positive decimal number rounded to 2 decimal places.","lastModifiedDate":"2021-04-10"},{"lineNumber":138,"author":{"gitId":"ZechariahTan"},"content":"* The tripday and triptime specified are intended as weekly specifications for the day and time that the passenger intends to carpool every week.","lastModifiedDate":"2021-04-10"},{"lineNumber":139,"author":{"gitId":"JoelHo"},"content":"* As the current iteration of GME(`v1.4`) is only a minimum viable product, each passenger can only specify one day and time a week for their carpooling time.","lastModifiedDate":"2021-04-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"JoelHo"},"content":"**Examples:**","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"JoelHo"},"content":"* `add n/Ben Dover p/91234567 a/Geylang d/FRIDAY t/1800`","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"JoelHo"},"content":"* `add n/Jenny Talia p/98765432 a/Yishun Avenue 4 d/SATURDAY t/0830 tag/female`","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"JoelHo"},"content":"* `add n/Jane Wong p/97654321 a/Create Way d/MONDAY t/1200 tag/female tag/finance tag/management`","lastModifiedDate":"2021-04-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"ZechariahTan"},"content":"### 3.2.2 Listing all passengers : `list`","lastModifiedDate":"2021-04-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"markmcwong"},"content":"Lists the passengers currently stored in the GME terminal.","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"ZechariahTan"},"content":"**Format:** `list`","lastModifiedDate":"2021-04-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"ZechariahTan"},"content":"### 3.2.3 Editing a person : `edit`","lastModifiedDate":"2021-04-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":155,"author":{"gitId":"chewterence"},"content":"Edits an existing person in the GME terminal.","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":157,"author":{"gitId":"ZechariahTan"},"content":"**Format:** `edit INDEX [n/NAME] [p/PHONE] [a/ADDRESS] [d/DAY] [t/TIME] [tag/TAG tag/TAG ...]​`","lastModifiedDate":"2021-04-08"},{"lineNumber":158,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":159,"author":{"gitId":"ZechariahTan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"ZechariahTan"},"content":"**:information_source: Notes about the edit command:**\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"ZechariahTan"},"content":"* [Tag](#6-glossary) is required to be an alphanumeric input and can only have a maximum of 30 characters in length.","lastModifiedDate":"2021-04-10"},{"lineNumber":164,"author":{"gitId":"JoelHo"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed passenger list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"chewterence"},"content":"* You can remove all the person’s tags by typing `tag/` without","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"chewterence"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"ZechariahTan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":172,"author":{"gitId":"JoelHo"},"content":"**Examples:**","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"markmcwong"},"content":"* `edit 1 p/91234567` Edits the phone number of the 1st person to be `91234567` respectively.","lastModifiedDate":"2021-04-05"},{"lineNumber":174,"author":{"gitId":"JoelHo"},"content":"* `edit 2 n/Betsy Crower tag/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":176,"author":{"gitId":"ZechariahTan"},"content":"### 3.2.4 Locating passengers by prefixes: `find`","lastModifiedDate":"2021-04-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"JoelHo"},"content":"Finds passengers whose names contain any of the given keywords.","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"ZechariahTan"},"content":"**Format:** `find PREFIX/KEYWORD` where PREFIX is one of the following: `n`, `a`, `p`, `tag`, `pr`, `all`, `d`, `t`","lastModifiedDate":"2021-04-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"ZechariahTan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"ZechariahTan"},"content":"**:information_source: Notes about the find command:**\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"ZechariahTan"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2021-04-10"},{"lineNumber":187,"author":{"gitId":"ZechariahTan"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2021-04-10"},{"lineNumber":188,"author":{"gitId":"ZechariahTan"},"content":"* Only **one type of prefix** can be specified.","lastModifiedDate":"2021-04-10"},{"lineNumber":189,"author":{"gitId":"ZechariahTan"},"content":"* More than 1 keyword can be specified for a single prefix.","lastModifiedDate":"2021-04-10"},{"lineNumber":190,"author":{"gitId":"lyueyang"},"content":"* Keywords separated by space will require both keywords to be matched.","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"ZechariahTan"},"content":"  e.g. `Hans Yang` will only return `Hans Gruber Yang` instead of `Bo Yang`.","lastModifiedDate":"2021-04-10"},{"lineNumber":192,"author":{"gitId":"ZechariahTan"},"content":"* Prefixes for searching name `n/`, address `a/`, tag `tag/`, phone number `p/`, price `pr/`, day `d/` and time `t/`.","lastModifiedDate":"2021-04-10"},{"lineNumber":193,"author":{"gitId":"ZechariahTan"},"content":"* `all` prefix for searching across names, addresses, tags and phone numbers quickly.","lastModifiedDate":"2021-04-10"},{"lineNumber":194,"author":{"gitId":"ZechariahTan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"JoelHo"},"content":"**Examples:**","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"ZechariahTan"},"content":"* `find n/John` returns `john` and `John Doe`.","lastModifiedDate":"2021-04-10"},{"lineNumber":198,"author":{"gitId":"ZechariahTan"},"content":"* `find a/serangoon` returns `Bernice Yu`, `David Li`.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":199,"author":{"gitId":"ZechariahTan"},"content":"  ![result for \u0027find serangoon\u0027](images/findAddress.png)","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"ZechariahTan"},"content":"* `find d/Monday d/Tuesday` returns `Alex Yeoh`, `Irfan Ibrahim` and `Roy Balakrishnan`.","lastModifiedDate":"2021-04-10"},{"lineNumber":201,"author":{"gitId":"lyueyang"},"content":"  ![result for \u0027find d/Monday d/Tuesday\u0027](images/findCommandExampleDay.png)","lastModifiedDate":"2021-04-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"ZechariahTan"},"content":"### 3.2.5 Deleting passengers: `delete`","lastModifiedDate":"2021-04-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"chewterence"},"content":"Deletes the specific passenger from the GME terminal.","lastModifiedDate":"2021-03-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"JoelHo"},"content":"**Format:** \u003ccode\u003edelete INDEX [\u003ca title\u003d\"These extra parameters are optional.\"\u003eINDEX INDEX...\u003c/a\u003e]\u003c/code\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"ZechariahTan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"ZechariahTan"},"content":"**:information_source: Notes about the delete command:**\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"JoelHo"},"content":"* Deletes the passenger at the specified `INDEX`.","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"lyueyang"},"content":"* Multiple passengers can be deleted by including additional indexes after the first. ","lastModifiedDate":"2021-03-30"},{"lineNumber":215,"author":{"gitId":"JoelHo"},"content":"* The index refers to the index number shown in the displayed passenger list.","lastModifiedDate":"2021-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"lyueyang"},"content":"* `search female` followed by `delete 3` deletes the *1st* passenger in the results of `search female` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"lyueyang"},"content":"* Passengers with a carpool arrangement cannot be deleted, `unpool` must first be done on the pools they are in before deletion.","lastModifiedDate":"2021-03-30"},{"lineNumber":219,"author":{"gitId":"ZechariahTan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":221,"author":{"gitId":"JoelHo"},"content":"**Examples:**","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"lyueyang"},"content":"* `list` followed by `delete 3` deletes the *3rd* person in the passenger list.","lastModifiedDate":"2021-03-30"},{"lineNumber":223,"author":{"gitId":"lyueyang"},"content":"* `delete 1 2 5` deletes the 1st, 2nd and 5th person in the passenger list. ","lastModifiedDate":"2021-04-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"ZechariahTan"},"content":"## 3.3 Pool features","lastModifiedDate":"2021-04-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":228,"author":{"gitId":"ZechariahTan"},"content":"### 3.3.1 Selecting passengers to arrange a carpool: `pool`","lastModifiedDate":"2021-04-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":230,"author":{"gitId":"ZechariahTan"},"content":"Selects passengers from the current view in the bottom left pane of the GME terminal to arrange a carpool. ","lastModifiedDate":"2021-04-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":232,"author":{"gitId":"JoelHo"},"content":"**Format:** \u003ccode\u003epool n/DRIVER_NAME p/DRIVER_PHONE d/TRIPDAY t/TRIPTIME c/INDEX [\u003ca title\u003d\"These extra parameters are optional.\"\u003ec/INDEX c/INDEX ...\u003c/a\u003e] [tag/TAG]\u003c/code\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":233,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":234,"author":{"gitId":"ZechariahTan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":236,"author":{"gitId":"JoelHo"},"content":"**:information_source: Notes about the pool command:**\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"ZechariahTan"},"content":"* [TripDay](#6-glossary) is required to be a valid day of the week. e.g. `SUNDAY` or `FRIDAY`.","lastModifiedDate":"2021-04-10"},{"lineNumber":239,"author":{"gitId":"ZechariahTan"},"content":"* [TripTime](#6-glossary) is required to be in the 24-hour format. e.g. `0530` or `2359`.","lastModifiedDate":"2021-04-10"},{"lineNumber":240,"author":{"gitId":"ZechariahTan"},"content":"* Here, c/ stands for commuter, i.e. someone to be pooled with a driver.","lastModifiedDate":"2021-04-08"},{"lineNumber":241,"author":{"gitId":"JoelHo"},"content":"* GME will not allow you to `delete` a passenger that is assigned to a Pool.","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"JoelHo"},"content":"* The index refers to the index number shown in the displayed passenger list.","lastModifiedDate":"2021-04-11"},{"lineNumber":243,"author":{"gitId":"ZechariahTan"},"content":"* The index **must be a positive integer** 1, 2, 3, …​.","lastModifiedDate":"2021-04-10"},{"lineNumber":244,"author":{"gitId":"ZechariahTan"},"content":"* The order of the passengers\u0027 index does not matter.","lastModifiedDate":"2021-04-10"},{"lineNumber":245,"author":{"gitId":"ZechariahTan"},"content":"* You must select at least 1 person to pool with one command.","lastModifiedDate":"2021-04-10"},{"lineNumber":246,"author":{"gitId":"ZechariahTan"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":247,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":248,"author":{"gitId":"JoelHo"},"content":"**Examples**:","lastModifiedDate":"2021-03-14"},{"lineNumber":249,"author":{"gitId":"chewterence"},"content":"* `find tag/female` followed by `pool n/Alice p/91234567 d/MONDAY t/1930 c/2 c/3` selects the *2nd* and *3rd* person in the","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"chewterence"},"content":"  results of `find tag/female` command, and assigns *Alice* with number *91234567* to be the driver of the passengers specified by the indices.","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"ZechariahTan"},"content":"### 3.3.2 Removing pools: `unpool`","lastModifiedDate":"2021-04-08"},{"lineNumber":254,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"ZechariahTan"},"content":"Removes the [pool](#6-glossary) specified by an index from the GME terminal.","lastModifiedDate":"2021-04-10"},{"lineNumber":256,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"ZechariahTan"},"content":"**Format:** `unpool INDEX`","lastModifiedDate":"2021-04-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"chewterence"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"chewterence"},"content":"**:information_source: Notes about the unpool command:**\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"ZechariahTan"},"content":"* Removes the [pool](#6-glossary) at the specified `INDEX`.","lastModifiedDate":"2021-04-10"},{"lineNumber":264,"author":{"gitId":"ZechariahTan"},"content":"* The index refers to the index number shown in the current displayed [pool](#6-glossary) list.","lastModifiedDate":"2021-04-10"},{"lineNumber":265,"author":{"gitId":"chewterence"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-29"},{"lineNumber":266,"author":{"gitId":"chewterence"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":267,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":268,"author":{"gitId":"chewterence"},"content":"**Examples:**","lastModifiedDate":"2021-03-29"},{"lineNumber":269,"author":{"gitId":"ZechariahTan"},"content":"* `findPool n/Aileen` followed by `unpool 3` removes the *3rd* pool listed in the results of `findPool n/Aileen` command.","lastModifiedDate":"2021-04-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":271,"author":{"gitId":"ZechariahTan"},"content":"### 3.3.3 Filtering pools: `findPool`","lastModifiedDate":"2021-04-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":273,"author":{"gitId":"ZechariahTan"},"content":"Filtering pools where the name of the pool\u0027s passengers contain any of the given keywords.","lastModifiedDate":"2021-04-10"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"JoelHo"},"content":"**Format:** \u003ccode\u003efindPool n/KEYWORD [\u003ca title\u003d\"These extra parameters are optional.\"\u003en/KEYWORD n/KEYWORD ...\u003c/a\u003e]\u003c/code\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":276,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"markmcwong"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":279,"author":{"gitId":"markmcwong"},"content":"**:information_source: Notes about the findPool command:**\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"ZechariahTan"},"content":"* The search is case-insensitive. e.g `alex` will match `Alex`.","lastModifiedDate":"2021-04-10"},{"lineNumber":282,"author":{"gitId":"ZechariahTan"},"content":"* Only full words will be matched e.g. `alex` will not match `Alexis`.","lastModifiedDate":"2021-04-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":285,"author":{"gitId":"markmcwong"},"content":"**Examples:**","lastModifiedDate":"2021-03-30"},{"lineNumber":286,"author":{"gitId":"markmcwong"},"content":"* `findPool n/alex` returns `Alex`","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"markmcwong"},"content":"![result for `findPool n/Alex`](images/findPoolAlexResult.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"ZechariahTan"},"content":"### 3.3.4 Listing all passengers : `listPool`","lastModifiedDate":"2021-04-10"},{"lineNumber":290,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":291,"author":{"gitId":"ZechariahTan"},"content":"Lists the pools currently stored in the GME terminal.","lastModifiedDate":"2021-04-10"},{"lineNumber":292,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":293,"author":{"gitId":"ZechariahTan"},"content":"**Format:** `listPool`","lastModifiedDate":"2021-04-10"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":295,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"ZechariahTan"},"content":"# 4. FAQ \u003ca name \u003d \"faq\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":299,"author":{"gitId":"chewterence"},"content":"**Q:** Where can I find the data stored by GME terminal?","lastModifiedDate":"2021-03-14"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"markmcwong"},"content":"**A:** The json file containing the data stored is named `GMEdata.json` and can be found in the `data` folder in the same directory where `GreenMileageEfforts.jar` file is saved.","lastModifiedDate":"2021-04-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"ZechariahTan"},"content":"# 5. Command summary \u003ca name \u003d \"summary\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"ZechariahTan"},"content":"**help** | `help`","lastModifiedDate":"2021-04-08"},{"lineNumber":310,"author":{"gitId":"ZechariahTan"},"content":"**add** | `add n/NAME p/PHONE a/ADDRESS d/TRIPDAY t/TRIPTIME [tag/TAG tag/TAG ...]` \u003cbr\u003e e.g., `add n/Jenny Talia p/91234567 a/Yishun Avenue 4 d/FRIDAY t/1800 tag/female`","lastModifiedDate":"2021-04-10"},{"lineNumber":311,"author":{"gitId":"chewterence"},"content":"**list** | `list` ","lastModifiedDate":"2021-02-24"},{"lineNumber":312,"author":{"gitId":"ZechariahTan"},"content":"**edit** | `edit INDEX [n/NAME] [p/PHONE] [a/ADDRESS] [d/DAY] [t/TIME] [tag/TAG tag/TAG ...]` \u003cbr\u003e e.g., `edit 8 a/Changi Airport d/SATURDAY`","lastModifiedDate":"2021-04-10"},{"lineNumber":313,"author":{"gitId":"ZechariahTan"},"content":"**delete** | `delete INDEX [INDEX INDEX...]`\u003cbr\u003e e.g.`delete 1 3`","lastModifiedDate":"2021-04-10"},{"lineNumber":314,"author":{"gitId":"ZechariahTan"},"content":"**pool** | `pool n/DRIVER_NAME p/DRIVER_PHONE d/TRIPDAY t/TRIPTIME c/INDEX [c/INDEX c/INDEX ...]`\u003cbr\u003e e.g., `pool n/Alice p/91234567 d/MONDAY t/1930 c/2 c/3`","lastModifiedDate":"2021-04-10"},{"lineNumber":315,"author":{"gitId":"chewterence"},"content":"**unpool** | `unpool INDEX`\u003cbr\u003e e.g, `unpool 3`","lastModifiedDate":"2021-03-29"},{"lineNumber":316,"author":{"gitId":"ZechariahTan"},"content":"**listpool** | `listPool`","lastModifiedDate":"2021-04-10"},{"lineNumber":317,"author":{"gitId":"ZechariahTan"},"content":"**find** | `find a/ADDRESS [a/ADDRESS a/ADDRESS ...]` or `find n/NAME [n/NAME n/NAME ...]` or `find p/PHONE NUMBER [p/PHONE NUMBER p/PHONE NUMBER ...]` or `find tag/TAG [tag/TAG tag/TAG ...]` or `find all/KEYWORD [all/KEYWORD all/KEYWORD ...]` or `find d/DAY [d/DAY d/DAY ...]` or `find t/TIME [t/TIME t/TIME ...]` \u003cbr\u003e e.g., `find tag/female`","lastModifiedDate":"2021-04-10"},{"lineNumber":318,"author":{"gitId":"ZechariahTan"},"content":"**findPool** | `findPool n/PASSENGER_NAME` \u003cbr\u003e eg., `findpool n/Alex`","lastModifiedDate":"2021-04-08"},{"lineNumber":319,"author":{"gitId":"ZechariahTan"},"content":"**clear** | `clear`","lastModifiedDate":"2021-04-08"},{"lineNumber":320,"author":{"gitId":"ZechariahTan"},"content":"**exit** | `exit`","lastModifiedDate":"2021-04-08"},{"lineNumber":321,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":322,"author":{"gitId":"ZechariahTan"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-28"},{"lineNumber":323,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":324,"author":{"gitId":"ZechariahTan"},"content":"# 6. Glossary","lastModifiedDate":"2021-04-08"},{"lineNumber":325,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":326,"author":{"gitId":"ZechariahTan"},"content":"Term used | Meaning","lastModifiedDate":"2021-03-28"},{"lineNumber":327,"author":{"gitId":"ZechariahTan"},"content":"--------|------------------","lastModifiedDate":"2021-03-28"},{"lineNumber":328,"author":{"gitId":"ZechariahTan"},"content":"Pool | A group of employees carpooling together. Consists of one driver and at least one passenger. The pools generated for a specifc day and time are the same every week unless reorganised by the user. Passenger | An employee carpooling with at least one driver.","lastModifiedDate":"2021-04-10"},{"lineNumber":329,"author":{"gitId":"ZechariahTan"},"content":"TripDay | Day of the intended carpooling trip.","lastModifiedDate":"2021-04-10"},{"lineNumber":330,"author":{"gitId":"ZechariahTan"},"content":"TripTime | Time of the intended carpooling trip.","lastModifiedDate":"2021-04-10"},{"lineNumber":331,"author":{"gitId":"ZechariahTan"},"content":"Tag | A miscellaneous piece of information about the pool, passenger, or driver that isn\u0027t captured by the other fields but is good to have.","lastModifiedDate":"2021-04-10"},{"lineNumber":332,"author":{"gitId":"ZechariahTan"},"content":"Price | The amount of money a passenger is willing to pay for the carpooling trip.","lastModifiedDate":"2021-04-10"},{"lineNumber":333,"author":{"gitId":"ZechariahTan"},"content":"Alphanumeric | A combination of letters and numbers only.","lastModifiedDate":"2021-04-10"},{"lineNumber":334,"author":{"gitId":"ZechariahTan"},"content":"Home Folder | The folder where the app\u0027s data will be stored","lastModifiedDate":"2021-04-10"},{"lineNumber":335,"author":{"gitId":"ZechariahTan"},"content":"Command Line Interface (CLI) | An interface that relies primarily on text input and little to no point and click UI elements exist.","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"chewterence":22,"lyueyang":7,"ZechariahTan":146,"markmcwong":12,"-":112,"JoelHo":36}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"JoelHo"},"content":"    content: \"GreenMileageEfforts\";","lastModifiedDate":"2021-03-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"JoelHo":1}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePassenger(p)","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"JoelHo":1}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"AddressBook *-right-\u003e \"1\" UniquePassengerList","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"UniqueTagList -[hidden]down- UniquePassengerList","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"UniqueTagList -[hidden]down- UniquePassengerList","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"UniquePassengerList o-right-\u003e Passenger","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"Passenger -up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e Name","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e Phone","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e Address","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e TripDay","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e TripTime","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e \"0..1\" Price","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e \"0..1\" Driver","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"JoelHo":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"participant \":CommandException\" as CommandException LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"[-\u003e LogicManager : execute(\"delete 1 2\")","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1 2\")","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1 2\")","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"lyueyang"},"content":"DeleteCommandParser -\u003e ParserUtil : parseDeleteIndex(\"1 2\")","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"lyueyang"},"content":"activate ParserUtil","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"loop number of tokens split by whitespace","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"    ParserUtil -\u003e ParserUtil : parseIndex(token)","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"end","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"lyueyang"},"content":"return indexes","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"lyueyang"},"content":"deactivate ParserUtil","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"lyueyang"},"content":"DeleteCommandParser -\u003e DeleteCommand : indexes","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"DeleteCommand --\u003e DeleteCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"LogicManager -\u003e DeleteCommand : execute(model)","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"DeleteCommand -\u003e Model : getFilteredPassengerList()","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"Model --\u003e DeleteCommand : lastShownList","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"loop number of passengers in lastShownList","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"    DeleteCommand -\u003e Model : hasPoolWithPassenger(passenger)","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"lyueyang"},"content":"end","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"break pools containing passenger found","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"lyueyang"},"content":"    create CommandException","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"    DeleteCommand -\u003e CommandException","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"end","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"loop number of passengers in lastShownList","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"    DeleteCommand -\u003e Model : deletePassenger(passenger)","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"    activate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"    deactivate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":86,"author":{"gitId":"lyueyang"},"content":"end","lastModifiedDate":"2021-04-11"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"DeleteCommand -\u003e CommandResult : targetedPassengers","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"DeleteCommand --\u003e LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-11"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"DeleteCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"destroy DeleteCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lyueyang":17,"-":58,"JoelHo":27}},{"path":"docs/diagrams/FindPoolSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"@startuml","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"!include style.puml","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"participant \":FindPoolCommandParser\" as FindPoolCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"participant \"alicePredicate:PooledPassengerContainsKeywordsPredicate\" as PooledPassengerContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"participant \"fp:FindPoolCommand\" as FindPoolCommand LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"[-\u003e LogicManager : execute(command)","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"activate LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(command)","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"activate AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"create FindPoolCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"AddressBookParser -\u003e FindPoolCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"activate FindPoolCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"deactivate FindPoolCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"AddressBookParser -\u003e FindPoolCommandParser : parse(\"n/Alice\")","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"activate FindPoolCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommandParser -\u003e FindPoolCommandParser : parsePredicate(\"n/\", \"Alice\")","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"activate FindPoolCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"create PooledPassengerContainsKeywordsPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommandParser -\u003e PooledPassengerContainsKeywordsPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"activate PooledPassengerContainsKeywordsPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"PooledPassengerContainsKeywordsPredicate --\u003e FindPoolCommandParser : alicePredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"deactivate PooledPassengerContainsKeywordsPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommandParser --\u003e FindPoolCommandParser : alicePredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"deactivate FindPoolCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"create FindPoolCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommandParser -\u003e FindPoolCommand : FindPoolCommand(alicePredicate)","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"activate FindPoolCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommand --\u003e FindPoolCommandParser : fp","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"deactivate FindPoolCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommandParser --\u003e AddressBookParser : fp","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"deactivate FindPoolCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"destroy FindPoolCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"AddressBookParser --\u003e LogicManager : fp","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"LogicManager -\u003e FindPoolCommand : execute(model)","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"activate FindPoolCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommand -\u003e Model : updateFilteredPoolList(alicePredicate))","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"activate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"Model --\u003e FindPoolCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"deactivate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"create CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommand -\u003e CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"activate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"CommandResult --\u003e FindPoolCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"FindPoolCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"deactivate FindPoolCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"@enduml","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"ZechariahTan":82}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyueyang"},"content":"@startuml","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"lyueyang"},"content":"!include style.puml","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"participant \"predicate:NameContainsKeywordPredicate\" as NameContainsKeywordPredicate LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"participant \"d:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"end box","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"[-\u003e LogicManager : execute(\"find n/Lucy n/Adam\")","lastModifiedDate":"2021-04-11"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":"activate LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find n/Lucy n/Adam\")","lastModifiedDate":"2021-04-11"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"activate AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"create FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"activate FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"n/Lucy n/Adam\")","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"activate FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":33,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"lyueyang"},"content":"FindCommandParser -\u003e ParserUtil","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"lyueyang"},"content":"activate ParserUtil","lastModifiedDate":"2021-04-11"},{"lineNumber":36,"author":{"gitId":"lyueyang"},"content":"return keywords","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":38,"author":{"gitId":"lyueyang"},"content":"create NameContainsKeywordPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"lyueyang"},"content":"FindCommandParser -\u003e NameContainsKeywordPredicate : NameContainsKeywordPredicate(keywords)","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"lyueyang"},"content":"activate NameContainsKeywordPredicate","lastModifiedDate":"2021-04-11"},{"lineNumber":41,"author":{"gitId":"lyueyang"},"content":"return predicate","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":43,"author":{"gitId":"lyueyang"},"content":"create FindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":44,"author":{"gitId":"lyueyang"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(predicate)","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"lyueyang"},"content":"activate FindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":46,"author":{"gitId":"lyueyang"},"content":"return d","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":48,"author":{"gitId":"lyueyang"},"content":"FindCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"lyueyang"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"lyueyang"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-11"},{"lineNumber":51,"author":{"gitId":"lyueyang"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"lyueyang"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-04-11"},{"lineNumber":53,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"lyueyang"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"lyueyang"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"lyueyang"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"lyueyang"},"content":"activate FindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"lyueyang"},"content":"FindCommand -\u003e Model : updateFilteredPassengerList(predicate)","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"lyueyang"},"content":"activate Model","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"lyueyang"},"content":"return","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"lyueyang"},"content":"create CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"lyueyang"},"content":"FindCommand -\u003e CommandResult : MESSAGE_PASSENGER_LISTED_OVERVIEW","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"lyueyang"},"content":"activate CommandResult","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"lyueyang"},"content":"return","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"lyueyang"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"lyueyang"},"content":"deactivate FindCommand","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"lyueyang"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"lyueyang"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"lyueyang"},"content":"@enduml","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"lyueyang":74}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Package Person {","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"Package Passenger {","lastModifiedDate":"2021-04-11"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"Class Passenger","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"Class Price","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"Class UniquePassengerList","lastModifiedDate":"2021-04-11"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"together {","lastModifiedDate":"2021-04-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-04-11"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"Package Driver {","lastModifiedDate":"2021-04-11"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"Class Driver","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-04-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"Package Pool {","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"Class UniquePoolList","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"Class Pool","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"Class Driver","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"together {","lastModifiedDate":"2021-04-11"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"Class TripDay","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"Class TripTime","lastModifiedDate":"2021-04-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"note bottom of Tag : The multiplicity of tag is *, hidden behind the Title","lastModifiedDate":"2021-04-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-04-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2019-07-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"AddressBook *--\u003e \"1\" UniquePassengerList","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"AddressBook *--\u003e \"1\" UniquePoolList","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"Passenger -up-|\u003e Person","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"Driver -up-|\u003e Person","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"UniquePassengerList o--\u003e \"*\" Passenger","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e \"1\" Name","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e \"1\" Phone","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e \"1\" Address","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e \"1\" TripDay","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e \"1\" TripTime","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e \"0..1\" Price","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"Passenger *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"Driver *--\u003e \"1\" Name","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"Driver *---\u003e \"1\" Phone","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"UniquePoolList o--\u003e \"*\" Pool","lastModifiedDate":"2021-04-09"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"Pool *--\u003e \"1\" Driver","lastModifiedDate":"2021-04-11"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"Pool *--\u003e \"1\" TripDay","lastModifiedDate":"2021-04-11"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"Pool *--\u003e \"1\" TripTime","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"Pool *--\u003e \"1..*\" Passenger","lastModifiedDate":"2021-04-09"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":"Pool *--\u003e \"*\" Tag","lastModifiedDate":"2021-04-09"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"ModelManager ----\u003e\"~* \" Pool : contains filtered \u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"ModelManager ----\u003e\"~* \" Passenger : contains filtered \u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markmcwong":12,"-":47,"JoelHo":34}},{"path":"docs/diagrams/PoolActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"@startuml","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"chewterence"},"content":"skinparam conditionStyle diamond","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"start","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"repeat","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"  :User adds a passenger;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"repeatwhile ([there are more passengers to add])","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":":User list all passengers;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"if () then ([not able to find desired passengers to pool])","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"    :User filters the list using find command;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"    :Filtered passenger list is updated and displayed;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"else ([able to find desired passengers to pool])","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"endif","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":":User uses pool command;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":":Indexes of passengers on currently displayed list is pooled;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"stop","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"@enduml","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"chewterence":16}},{"path":"docs/diagrams/PoolSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"@startuml","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"chewterence"},"content":"!include style.puml","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"participant \":PoolCommandParser\" as PoolCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"participant \"p:PoolCommand\" as PoolCommand LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"end box","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"participant \"toAdd:Pool\" as Pool MODEL_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"end box","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"[-\u003e LogicManager : execute(command)","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"activate LogicManager","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(command)","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"activate AddressBookParser","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"create PoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"AddressBookParser -\u003e PoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"activate PoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"PoolCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"deactivate PoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"AddressBookParser -\u003e PoolCommandParser : parse(\"n/Alice p/91234567 d/monday t/1930 c/2 c/3\")","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"activate PoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"create PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"PoolCommandParser -\u003e PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"activate PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"chewterence"},"content":"PoolCommand --\u003e PoolCommandParser : p","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"deactivate PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"PoolCommandParser --\u003e AddressBookParser : p","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"chewterence"},"content":"deactivate PoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"PoolCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"chewterence"},"content":"destroy PoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"AddressBookParser --\u003e LogicManager : p","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"chewterence"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"chewterence"},"content":"LogicManager -\u003e PoolCommand : execute(model)","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"chewterence"},"content":"activate PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"chewterence"},"content":"PoolCommand -\u003e PoolCommand : getPassengersFromIndexes()","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"chewterence"},"content":"activate PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"chewterence"},"content":"PoolCommand -\u003e Model : getFilteredPassengerList()","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"chewterence"},"content":"activate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"chewterence"},"content":"Model --\u003e PoolCommand : lastShownList","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"chewterence"},"content":"deactivate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"chewterence"},"content":"deactivate PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"chewterence"},"content":"create Pool","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"chewterence"},"content":"PoolCommand -\u003e Pool","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"chewterence"},"content":"activate Pool","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"chewterence"},"content":"Pool --\u003e PoolCommand : toAdd","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"chewterence"},"content":"deactivate Pool","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"chewterence"},"content":"PoolCommand -\u003e Model : addPool(toAdd)","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"chewterence"},"content":"activate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"chewterence"},"content":"Model --\u003e PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"chewterence"},"content":"deactivate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"chewterence"},"content":"PoolCommand -\u003e Model : updateFilteredPoolList(PREDICATE_SHOW_ALL_POOLS)","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"chewterence"},"content":"activate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"chewterence"},"content":"Model --\u003e PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"chewterence"},"content":"deactivate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"chewterence"},"content":"create CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"chewterence"},"content":"PoolCommand -\u003e CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"chewterence"},"content":"activate CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"chewterence"},"content":"CommandResult --\u003e PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"chewterence"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"chewterence"},"content":"PoolCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"chewterence"},"content":"deactivate PoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"chewterence"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"chewterence"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"chewterence"},"content":"@enduml","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"chewterence":90}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"StorageManager o--\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Storage -|\u003e UserPrefsStorage","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Storage -|\u003e AddressBookStorage","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .left.|\u003e AddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .down.\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"JsonSerializableAddressBook .right.\u003e JsonAdaptedPassenger","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"JsonSerializableAddressBook .right.\u003e JsonAdaptedPool","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"JsonAdaptedPassenger .right.\u003e JsonAdaptedTag","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"JsonAdaptedPool .right.\u003e JsonAdaptedDriver","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"JsonAdaptedPool -[hidden]up- JsonAdaptedPassenger","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"JsonAdaptedPassenger -[hidden]down- JsonAdaptedPool","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markmcwong":6,"-":25,"JoelHo":1}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"     {abstract}     \\n         UiPart         \" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"Class FilteredPassengerListPanel","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"Class PassengerCard","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"Class PoolListPanel","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"Class PoolCard","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"Class LabelWithIcon","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"MainWindow *-down-\u003e FilteredPassengerListPanel","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"MainWindow *-down-\u003e PoolListPanel","lastModifiedDate":"2021-04-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"FilteredPassengerListPanel -down-\u003e PassengerCard","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"PoolListPanel -down-\u003e PoolCard","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"FilteredPassengerListPanel ---|\u003e UiPart","lastModifiedDate":"2021-04-09"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"PoolListPanel ----|\u003e UiPart","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"PassengerCard ---|\u003e UiPart","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"PoolCard ----|\u003e UiPart","lastModifiedDate":"2021-04-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"LabelWithIcon --|\u003e UiPart","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"PoolCard ..right..\u003e Model","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"PassengerCard .down..\u003e Model","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"PoolCard *-down-\u003e LabelWithIcon","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"PassengerCard *-down-\u003e LabelWithIcon","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"FilteredPassengerListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-04-09"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"PoolCard -[hidden]left- HelpWindow","lastModifiedDate":"2021-04-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"PoolCard -[hidden]left- PassengerCard","lastModifiedDate":"2021-04-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"markmcwong":22,"-":52,"JoelHo":1}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"JoelHo":1}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":21,"JoelHo":1}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"JoelHo":1}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"JoelHo":1}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"JoelHo":1}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab3:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":20,"JoelHo":1}},{"path":"docs/diagrams/UnpoolActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"@startuml","lastModifiedDate":"2021-04-11"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"skinparam conditionStyle diamond","lastModifiedDate":"2021-04-11"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"start","lastModifiedDate":"2021-04-11"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"repeat","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"  :User adds a pool;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"repeatwhile ([there are more pools to add])","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":":User list all pools;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"if () then ([not able to find desired pool to remove])","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    :User filters the pool list using findPool command;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    :Filtered pool list is updated and displayed;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"else ([able to find desired pool remove])","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"endif","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":":User uses unpool [INDEX] command;","lastModifiedDate":"2021-04-11"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":":[INDEX] of pool on currently displayed pool list is removed;","lastModifiedDate":"2021-04-11"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"stop","lastModifiedDate":"2021-04-11"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"@enduml","lastModifiedDate":"2021-04-11"}],"authorContributionMap":{"ZechariahTan":16}},{"path":"docs/diagrams/UnpoolSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"@startuml","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"chewterence"},"content":"!include style.puml","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"participant \":UnpoolCommandParser\" as UnpoolCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"participant \"u:UnpoolCommand\" as UnpoolCommand LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"end box","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"end box","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"[-\u003e LogicManager : execute(\"unpool 1\")","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"activate LogicManager","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"unpool 1\")","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"activate AddressBookParser","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"create UnpoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"AddressBookParser -\u003e UnpoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"activate UnpoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"UnpoolCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"deactivate UnpoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"AddressBookParser -\u003e UnpoolCommandParser : parse(\"1\")","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"activate UnpoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"create UnpoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"UnpoolCommandParser -\u003e UnpoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"activate UnpoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"UnpoolCommand --\u003e UnpoolCommandParser : u","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"chewterence"},"content":"deactivate UnpoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"UnpoolCommandParser --\u003e AddressBookParser : u","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"deactivate UnpoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"chewterence"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"UnpoolCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"destroy UnpoolCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"chewterence"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"chewterence"},"content":"LogicManager -\u003e UnpoolCommand : execute(model)","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"chewterence"},"content":"activate UnpoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"UnpoolCommand -\u003e Model : deletePool(1)","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"chewterence"},"content":"activate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"chewterence"},"content":"Model --\u003e UnpoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"chewterence"},"content":"deactivate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"chewterence"},"content":"create CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"chewterence"},"content":"UnpoolCommand -\u003e CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"chewterence"},"content":"activate CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"chewterence"},"content":"CommandResult --\u003e UnpoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"chewterence"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"chewterence"},"content":"UnpoolCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"chewterence"},"content":"deactivate UnpoolCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"chewterence"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"chewterence"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"chewterence"},"content":"@enduml","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"chewterence":69}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"ecp -\u003e ec ++: index, editPassengerDescriptor","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":20,"JoelHo":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"title: GreenMileageEfforts","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-W10-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W10-1/tp/branch/master/graph/badge.svg?token\u003dC524ZEVXBI)](https://codecov.io/gh/AY2021S2-CS2103T-W10-1/tp)","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"**GreenMileageEfforts is a desktop application for managing your carpooling.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"* If you are interested in using GreenMileageEfforts, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"* If you are interested about developing GreenMileageEfforts, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"* Project based on [SE-EDU/AddressBook-Level3](https://github.com/se-edu/addressbook-level3)","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"-":13,"JoelHo":7}},{"path":"docs/team/chewterence.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"title: Chew Hong Wei Terence\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"## Project: Green Mileage Efforts","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"Green Mileage Efforts (GME) is an efficient carpooling management solution designed to help corporations reduce their ","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"carbon footprint. The GME system allows for the simple creation and management of weekly carpooling groups of employees ","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"looking to carpool to and from their office. These pools of employees can then carpool from the office ","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"regularly on the specified days and times every week.","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"* **New Feature**: Added the Pool command feature. (Pull requests [\\#121](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/121))","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"  * What it does: Allows the user to create a pool from the list of passengers, and add it to the list of pools in the GME system.","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"  * Justification: This feature is the core feature of the product, where pools are created and added to the pool list by the user.","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"* **New Feature**: Added Unpool command feature. (Pull requests [\\#101](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/101), ","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"  [\\#121](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/121))","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"  * What it does: Allows the user to remove a pool from the existing list of pools.","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"  * Justification: This feature complements the core feature of the product, as pools within the pool list could either ","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"    already be completed or entered with wrong details.","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dchewterence\u0026tabRepo\u003dAY2021S2-CS2103T-W10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"  * Updated Add and Edit commands to utilize added new fields (Pull requests [\\#52](https://github.com/AY2021S2-CS2103T-W10-1/tp/commit/cc6891e016c15be52a00996aa8a74f383efb2e7e))","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"  * Wrote additional tests for updated Add and Edit commands to increase coverage for the new fields (Pull requests [\\#56](https://github.com/AY2021S2-CS2103T-W10-1/tp/commit/85b7432bce0d7bbc5dba1b961959e919b297f6d8))","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"    * Added user guide introduction and quick start","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"    * Added documentation for the command summary and FAQ","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"    * Updated documentation for Add and Edit commands","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"    * Added documentation for Pool and Unpool commands","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#57](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/57)","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"  * Contributed to forum discussions (examples: [Streams VS Loops Discussion](https://github.com/nus-cs2103-AY2021S2/forum/issues/145))","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"chewterence"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: )","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"chewterence":28,"-":13}},{"path":"docs/team/joelho.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"title: Joel Ho\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"## Project: GreenMileageEfforts","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"GreenMileageEfforts (GME) is a platform that helps drivers and passengers of any IT company quickly arrange carpooling in order to lower their carbon footprint. The platform follows that of a command-line interface (CLI) such that power users that are familiar can efficiently navigate the program.","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"* **New Feature**: Added the ability to drive passengers.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"  * What it does: allows the user to select passengers to be driven by a driver.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"  * Justification: This is a core feature of the product whereby we assign drivers to passengers","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dJoelHo\u0026tabRepo\u003dAY2021S2-CS2103T-W10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code)","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"  * Managed releases `v1.1` - `v1.4` (4 releases) on GitHub","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"  * Augmented Person and Index to make them more testable (PR [\\#57](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/57))","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"  * Wrote additional tests for existing features to increase coverage by 1.63% (PR [\\#57](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/57)), 2.56% (PR [\\#78](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/78))","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"  * Refactored code using Java Optionals (PR [\\#225](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/225))","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"  * Prevent Passengers from being deleted if they are being referenced by a Pool (PR [\\#132](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/132))","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"  * Refactored the serialisation of Drivers and Pools such that they are stored as proper JSON (PR [\\#125](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/125), [\\#117](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/117))","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"  * Refactor toModelType of Passenger to better fit SLAP (PR [\\#117](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/117))","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"    * Added documentation for the features `drive` (PR [\\#62](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/62) [\\#32](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/32))","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"    * Did cosmetic tweaks to existing documentation examples: (PR [\\#62](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/62))","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#16](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/16),","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"  * Patched security vulnerabilities in nokogiri and kramdown versions","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"  * Added Codacy analyser to repo","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"  * Setup Codecov check to PRs to ensure we try and maintain testing","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"-":20,"JoelHo":20}},{"path":"docs/team/lyueyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lyueyang"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"lyueyang"},"content":"layout: page","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"title: Yue Yang\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"## Yue Yang\u0027s Portfolio","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"## Project: GreenMileageEfforts","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"GreenMileageEfforts (GME) is a platform that helps the HR executive of any company quickly arrange carpooling among its employees in order to lower the carbon footprint of the company.","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"* **New Feature**: Added the ability to find by more parameters. (PR #110, #122, #145)","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"  * What it does: allows the user to find passengers by other parameters not limited to name.","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"  * Justification: This is allows users to find passengers more quickly.","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dlyueyang\u0026tabRepo\u003dAY2021S2-CS2103T-W10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"lyueyang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"  * Allow for multiple deletion of passengers (PR #133)","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"  * Renamed addressbook.json to GMEdata.json (PR #133)","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"  * User Guide:","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"    * Update documentation for `find` feature updated for more parameters","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"    * Update documentation for `delete` feature updated for multi-delete","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"* **Community**:","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"  * Reviewed issues to close duplicates","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"  * Reviewed PRs such as [#226](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/226#pullrequestreview-632542191)","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"lyueyang":31}},{"path":"docs/team/markmcwong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"title: Wong Man Chun\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"## Project: Green Mileage Efforts","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"Green Mileage Efforts (GME) is an efficient carpooling management solution designed to help corporations reduce their ","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"carbon footprint. The GME system allows for the simple creation and management of weekly carpooling groups of employees ","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"looking to carpool to and from their office. These pools of employees can then carpool from the office ","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"regularly on the specified days and times every week.","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"* **New Feature**: Added the findPool command feature. (Pull requests [\\#126](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/126), [\\#216](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/216))","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"  * What it does: allows the user to find the pools in the GME system by the names of passengers in the pool.","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"  * Justification: This feature improves the product significantly because a user can easily find the pools they desired to join, leave or see the details in combination with other commands.","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"  * Updated the GUI design, including split panel with card design and new color scheme (Pull requests [\\#73](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/73), [\\#107](https://github.com/AY2021S2-CS2103T-W10-1/tp/pull/107))","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"  * Wrote additional tests for existing features to increase coverage","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    * Added documentation for the features `findPool`","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"  * PRs reviewed (with non-trivial review comments)","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"  * Contributed to forum discussions","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"  * Reported bugs and suggestions for other teams in the class","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"  * Integrated a third party library (testfx) to the project for GUI-testing","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"  * Configured the project to be able to run in headless-mode for GUI-testing on Github with Travis-CIs","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"markmcwong":18,"-":22}},{"path":"docs/team/zechariahtan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"title: Zechariah Tan\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"## Project: Green Mileage Efforts","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"Green Mileage Efforts - is a shared desktop application used to make finding groups of people to carpool with easier.","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"10 kLoC.","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"* **New Feature**:","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"  * ","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dzechariah\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dZechariahTan\u0026tabRepo\u003dAY2021S2-CS2103T-W10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs)","lastModifiedDate":"2021-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"  * Managed releases `v1.4` (1 release) on GitHub","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"  * Model:","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    * Added TripDay, TripTime, Person, Driver, and Pool classes to the model to allow for further extension of previous versions","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    * Refactored existing code to fit new model format","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"  * Logic:","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    * Added listPool command to fix feature bug where pool list cannot be refreshed to show all pools after filtering the list with findPool command","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"  * Testing\"","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    * Added test code for TripDay, TripTime, Person, and Driver classes.","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    * Added test code for Pool, and Unpool classes, as well as their respective parsers","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    * Added documentation for the features `Search` [\\#72]()","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    * Modified examples and standardised the formatting[\\#74]()","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    * Added iconography formatting and introduction paragraph","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"  * About Us:","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    * Added relevant profile pictures and modified AboutUs.md to include relevant teammembers information","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ZechariahTan":22,"-":18}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":" * Changes the remark of an existing passenger in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the passenger identified \"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"            + \"by the index number used in the last passenger listing. \"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"     * @param index of the passenger in the filtered passenger list to edit the remark","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"     * @param remark of the passenger to be updated to","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"JoelHo"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of passenger data. We achieve that by working with the `Passenger` model. Each field in a Passenger is implemented as a separate class (e.g. a `Name` object represents the passenger’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a passenger.","lastModifiedDate":"2021-03-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"JoelHo"},"content":"Create a new `Remark` in `seedu.address.model.passenger.passenger`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"JoelHo"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each passenger.","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"JoelHo"},"content":"Simply add the following to [`seedu.address.ui.PassengerCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"JoelHo"},"content":"**`PassengerCard.java`:**","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"JoelHo"},"content":"Then insert the following into [`main/resources/view/PassengerListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-03-14"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"JoelHo"},"content":"**`PassengerListCard.fxml`:**","lastModifiedDate":"2021-03-14"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"JoelHo"},"content":"## Modify `Passenger` to support a `Remark` field","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"JoelHo"},"content":"Since `PassengerCard` displays data from a `Passenger`, we need to update `Passenger` to get our `Remark` displayed!","lastModifiedDate":"2021-03-14"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"JoelHo"},"content":"### Modify `Passenger`","lastModifiedDate":"2021-03-14"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"JoelHo"},"content":"We change the constructor of `Passenger` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-03-14"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"JoelHo"},"content":"### Update other usages of `Passenger`","lastModifiedDate":"2021-03-14"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"JoelHo"},"content":"Unfortunately, a change to `Passenger` will cause other commands to break, you will have to modify these commands to use the updated `Passenger`!","lastModifiedDate":"2021-03-14"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"JoelHo"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Passenger` class to find these commands.","lastModifiedDate":"2021-03-14"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"JoelHo"},"content":"AddressBook stores data by serializing `JsonAdaptedPassenger` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPassenger` to work with our new `Passenger`!","lastModifiedDate":"2021-03-14"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"JoelHo"},"content":"Now that we have finalized the `Passenger` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-03-14"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"JoelHo"},"content":"**`PassengerCard.java`:**","lastModifiedDate":"2021-03-14"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"JoelHo"},"content":"public PassengerCard(Passenger passenger, int displayedIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"JoelHo"},"content":"    remark.setText(passenger.getRemark().value);","lastModifiedDate":"2021-03-14"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"JoelHo"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Passenger`. Since all fields in a `Passenger` are immutable, we create a new instance of a `Passenger` with the values that we want and","lastModifiedDate":"2021-03-14"},{"lineNumber":326,"author":{"gitId":"JoelHo"},"content":"save it with `Model#setPassenger()`.","lastModifiedDate":"2021-03-14"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Passenger: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":333,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Passenger: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e lastShownList \u003d model.getFilteredPassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"JoelHo"},"content":"        Passenger passengerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":344,"author":{"gitId":"JoelHo"},"content":"        Passenger editedPassenger \u003d new Passenger(passengerToEdit.getName(), passengerToEdit.getPhone(), passengerToEdit.getEmail(),","lastModifiedDate":"2021-03-14"},{"lineNumber":345,"author":{"gitId":"JoelHo"},"content":"                passengerToEdit.getAddress(), remark, passengerToEdit.getTags());","lastModifiedDate":"2021-03-14"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"JoelHo"},"content":"        model.setPassenger(passengerToEdit, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":348,"author":{"gitId":"JoelHo"},"content":"        model.updateFilteredPassengerList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"JoelHo"},"content":"        return new CommandResult(generateSuccessMessage(editedPassenger));","lastModifiedDate":"2021-03-14"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"JoelHo"},"content":"     * {@code passengerToEdit}.","lastModifiedDate":"2021-03-14"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"JoelHo"},"content":"    private String generateSuccessMessage(Passenger passengerToEdit) {","lastModifiedDate":"2021-03-14"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"JoelHo"},"content":"        return String.format(message, passengerToEdit);","lastModifiedDate":"2021-03-14"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":356,"JoelHo":38}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Passenger` model to suit your use case.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Passenger`.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"The `address` field in `Passenger` is actually an instance of the `Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPassengerDescriptor` may require more careful inspection.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"Let’s try removing references to `Address` in `EditPassengerDescriptor`.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"1. Safe delete the field `address` in `EditPassengerDescriptor`.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Passenger` class will require you to modify its constructor.","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PassengerCard` that has not been removed nor identified.","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"A quick look at the `PassengerCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"**`PassengerCard.java`**","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"**`PassengerCard.fxml`**","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"**`invalidPassengerAddressBook.json`:**","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"JoelHo"},"content":"  \"passengers\": [ {","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"    \"name\": \"Passenger with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":89,"JoelHo":14}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.address.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"JoelHo"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPassengerDescriptor`. Recall that we can verify the contents of `editPassengerDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"JoelHo"},"content":"       Passenger passengerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"JoelHo"},"content":"       Passenger editedPassenger \u003d createEditedPassenger(passengerToEdit, editPassengerDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"JoelHo"},"content":"       if (!passengerToEdit.isSamePassenger(editedPassenger) \u0026\u0026 model.hasPassenger(editedPassenger)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"JoelHo"},"content":"       model.setPassenger(passengerToEdit, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"JoelHo"},"content":"       model.updateFilteredPassengerList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"JoelHo"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPassenger));","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"JoelHo"},"content":"       passengers.addAll(","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"JoelHo"},"content":"           source.getPassengerList()","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"JoelHo"},"content":"                 .map(JsonAdaptedPassenger::new)","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"JoelHo"},"content":"1. It appears that a `JsonAdaptedPassenger` is created for each `Passenger` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"JoelHo"},"content":"    5.  Add a new field to `Passenger`","lastModifiedDate":"2021-03-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":238,"JoelHo":12}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"markmcwong"},"content":"        System.setProperty(\"testfx.robot\", \"glass\");","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"markmcwong"},"content":"        System.setProperty(\"testfx.headless\", \"true\");","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"markmcwong"},"content":"        System.setProperty(\"prism.order\", \"sw\");","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"markmcwong"},"content":"        System.setProperty(\"prism.text\", \"t2k\");","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markmcwong":6,"-":182,"JoelHo":1}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"    private static final String LOG_FILE \u003d \"gme.log\";","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"     * Prevent LogsCenter from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"    private LogsCenter() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"JoelHo":6}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"    public static final String MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX \u003d \"One of the passenger index\"","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"            + \" provided is invalid\";","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"    public static final String MESSAGE_INVALID_POOL_DISPLAYED_INDEX \u003d \"The pool index provided is invalid\";","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_PASSENGER_LISTED_OVERVIEW \u003d \"%1$d passengers listed!\";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    public static final String MESSAGE_POOLS_LISTED_OVERVIEW \u003d \"%1$d pools listed!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"     * Prevents Messages from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"    private Messages() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chewterence":3,"markmcwong":1,"-":12,"JoelHo":5}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"                versionMatcher.group(4) !\u003d null);","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"JoelHo":1}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":54,"JoelHo":5}},{"path":"src/main/java/seedu/address/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"     * Prevents AppUtil from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    private AppUtil() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":42,"JoelHo":5}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"     * Prevents CollectionUtil from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    private CollectionUtil() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":35,"JoelHo":5}},{"path":"src/main/java/seedu/address/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"     * Prevents ConfigUtil from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    private ConfigUtil() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":23,"JoelHo":5}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"     * Prevents FileUtil from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"    private FileUtil() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String, String...)},","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"JoelHo":6}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"     * Prevents StringUtil from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    private StringUtil() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"        String[] wordsInSentence \u003d sentence.split(\"\\\\s+\");","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        return Arrays.stream(wordsInSentence)","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":65,"JoelHo":7}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"     * Returns an unmodifiable view of the filtered list of passengers.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"     **/","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"    ObservableList\u003cPassenger\u003e getFilteredPassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"     * Returns an unmodifiable view of the filtered list of passengers.","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"     **/","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"    ObservableList\u003cPool\u003e getFilteredPoolList();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"markmcwong":5,"-":48,"JoelHo":5}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"    public ObservableList\u003cPassenger\u003e getFilteredPassengerList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"        return model.getFilteredPassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"    public ObservableList\u003cPool\u003e getFilteredPoolList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"        return model.getFilteredPoolList();","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"markmcwong":4,"-":80,"JoelHo":3}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":" * Adds a passenger to the passenger list.","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a passenger to passenger list. \"","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TRIPDAY + \"DAY \"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TRIPTIME + \"TIME \"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"            + PREFIX_NAME + \"Jenny Talia \"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"            + PREFIX_ADDRESS + \"369, Yishun Ave 4, #02-25 \"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TRIPDAY + \"wednesday \"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TRIPTIME + \"1930 \"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TAG + \"female\";","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New passenger added: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_DUPLICATE_PASSENGER \u003d \"This passenger already exists in the GME Terminal\";","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"    private final Passenger toAdd;","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"     * Creates an AddCommand to add the specified {@code Passenger}","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"    public AddCommand(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"        toAdd \u003d passenger;","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        if (model.hasPassenger(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PASSENGER);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"        model.addPassenger(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chewterence":9,"lyueyang":2,"-":47,"JoelHo":11}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Both passenger and pool lists have been cleared!\";","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lyueyang":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"    public String toString() {","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"        return feedbackToUser;","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":71,"JoelHo":5}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":" * Deletes a passenger identified using it\u0027s displayed index from the passenger list.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"            + \": Deletes the passenger identified by the index number used in the displayed passenger list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"    public static final String MESSAGE_DELETE_PASSENGER_SUCCESS \u003d \"Deleted Passenger(s): %1$s\";","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"    public static final String MESSAGE_DELETE_PASSENGER_FAIL_HAS_POOL \u003d \"Failed to delete. One or more Pools \"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"            + \"contain Passenger(s): %1$s.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"lyueyang"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lyueyang"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"lyueyang"},"content":"    private static String printPassengersInList(List\u003cPassenger\u003e passengers) {","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"lyueyang"},"content":"        StringJoiner sb \u003d new StringJoiner(\", \");","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"lyueyang"},"content":"        for (Passenger p : passengers) {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"lyueyang"},"content":"            sb.add(p.getName().toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"lyueyang"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e lastShownList \u003d model.getFilteredPassengerList();","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"lyueyang"},"content":"        List\u003cPassenger\u003e targetedPassengers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"lyueyang"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"            Passenger passengerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"lyueyang"},"content":"            targetedPassengers.add(passengerToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e passengersWithPools \u003d targetedPassengers.stream()","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"                .filter(model::hasPoolWithPassenger)","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"        if (passengersWithPools.size() \u003e 0) {","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"            throw new CommandException(","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"                    String.format(MESSAGE_DELETE_PASSENGER_FAIL_HAS_POOL,","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"                            printPassengersInList(passengersWithPools)","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"                    )","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"            );","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"        targetedPassengers.forEach(model::deletePassenger);","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"        return new CommandResult(","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"                String.format(MESSAGE_DELETE_PASSENGER_SUCCESS,","lastModifiedDate":"2021-04-11"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"                        printPassengersInList(targetedPassengers)","lastModifiedDate":"2021-04-11"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"                )","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"        );","lastModifiedDate":"2021-04-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"lyueyang"},"content":"                \u0026\u0026 targetIndexes.equals(((DeleteCommand) other).targetIndexes)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chewterence":1,"lyueyang":24,"-":44,"JoelHo":21}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PASSENGERS;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":" * Edits the details of an existing passenger in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the passenger identified \"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"            + \"by the index number used in the displayed passenger list. \"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"            + \"[\" + PREFIX_TRIPDAY + \"DAY] \"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"chewterence"},"content":"            + \"[\" + PREFIX_TRIPTIME + \"TIME] \"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TRIPDAY + \"friday\";","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_EDIT_PASSENGER_SUCCESS \u003d \"Edited Passenger: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_DUPLICATE_PASSENGER \u003d \"This passenger already exists in the GME Terminal.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"    private final EditPassengerDescriptor editPassengerDescriptor;","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"     * @param index of the passenger in the filtered passenger list to edit","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"     * @param editPassengerDescriptor details to edit the passenger with","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"    public EditCommand(Index index, EditPassengerDescriptor editPassengerDescriptor) {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(editPassengerDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"        this.editPassengerDescriptor \u003d new EditPassengerDescriptor(editPassengerDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e lastShownList \u003d model.getFilteredPassengerList();","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"        Passenger passengerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"        Passenger editedPassenger \u003d createEditedPassenger(passengerToEdit, editPassengerDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"        if (!passengerToEdit.isSamePassenger(editedPassenger) \u0026\u0026 model.hasPassenger(editedPassenger)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PASSENGER);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        model.setPassenger(passengerToEdit, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"chewterence"},"content":"        model.updateFilteredPassengerList(PREDICATE_SHOW_ALL_PASSENGERS);","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PASSENGER_SUCCESS, editedPassenger));","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"JoelHo"},"content":"     * Creates and returns a {@code Passenger} with the details of {@code passengerToEdit}","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"     * edited with {@code editPassengerDescriptor}.","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"    private static Passenger createEditedPassenger(Passenger passengerToEdit,","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"                                                   EditPassengerDescriptor editPassengerDescriptor) {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"        assert passengerToEdit !\u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"        Name updatedName \u003d editPassengerDescriptor.getName().orElse(passengerToEdit.getName());","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"        Phone updatedPhone \u003d editPassengerDescriptor.getPhone().orElse(passengerToEdit.getPhone());","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"        Address updatedAddress \u003d editPassengerDescriptor.getAddress().orElse(passengerToEdit.getAddress());","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"JoelHo"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPassengerDescriptor.getTags().orElse(passengerToEdit.getTags());","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"        TripDay updatedTripDay \u003d editPassengerDescriptor.getTripDay().orElse(passengerToEdit.getTripDay());","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"        TripTime updatedTripTime \u003d editPassengerDescriptor.getTripTime().orElse(passengerToEdit.getTripTime());","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"        Optional\u003cPrice\u003e updatedPrice \u003d editPassengerDescriptor.getPrice().or(passengerToEdit::getPrice);","lastModifiedDate":"2021-04-08"},{"lineNumber":108,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":109,"author":{"gitId":"ZechariahTan"},"content":"        return new Passenger(updatedName, updatedPhone, updatedAddress, updatedTripDay, updatedTripTime, updatedPrice,","lastModifiedDate":"2021-03-20"},{"lineNumber":110,"author":{"gitId":"ZechariahTan"},"content":"                updatedTags);","lastModifiedDate":"2021-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 editPassengerDescriptor.equals(e.editPassengerDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"JoelHo"},"content":"     * Stores the details to edit the passenger with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"     * corresponding field value of the passenger.","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"JoelHo"},"content":"    public static class EditPassengerDescriptor {","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-11"},{"lineNumber":140,"author":{"gitId":"ZechariahTan"},"content":"        private TripDay tripDay;","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"ZechariahTan"},"content":"        private TripTime tripTime;","lastModifiedDate":"2021-03-11"},{"lineNumber":142,"author":{"gitId":"ZechariahTan"},"content":"        private Price price;","lastModifiedDate":"2021-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"JoelHo"},"content":"        public EditPassengerDescriptor() {}","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"JoelHo"},"content":"        public EditPassengerDescriptor(EditPassengerDescriptor toCopy) {","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"chewterence"},"content":"            setTripDay(toCopy.tripDay);","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"chewterence"},"content":"            setTripTime(toCopy.tripTime);","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"chewterence"},"content":"            setPrice(toCopy.price);","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"chewterence"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, address, tripDay, tripTime, price, tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"chewterence"},"content":"        public void setTripDay(TripDay tripDay) {","lastModifiedDate":"2021-03-11"},{"lineNumber":192,"author":{"gitId":"ZechariahTan"},"content":"            this.tripDay \u003d tripDay;","lastModifiedDate":"2021-03-11"},{"lineNumber":193,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"chewterence"},"content":"        public Optional\u003cTripDay\u003e getTripDay() {","lastModifiedDate":"2021-03-11"},{"lineNumber":196,"author":{"gitId":"ZechariahTan"},"content":"            return Optional.ofNullable(tripDay);","lastModifiedDate":"2021-03-11"},{"lineNumber":197,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":198,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":199,"author":{"gitId":"chewterence"},"content":"        public void setTripTime(TripTime tripTime) {","lastModifiedDate":"2021-03-11"},{"lineNumber":200,"author":{"gitId":"ZechariahTan"},"content":"            this.tripTime \u003d tripTime;","lastModifiedDate":"2021-03-11"},{"lineNumber":201,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":202,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":203,"author":{"gitId":"chewterence"},"content":"        public Optional\u003cTripTime\u003e getTripTime() {","lastModifiedDate":"2021-03-11"},{"lineNumber":204,"author":{"gitId":"ZechariahTan"},"content":"            return Optional.ofNullable(tripTime);","lastModifiedDate":"2021-03-11"},{"lineNumber":205,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":206,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":207,"author":{"gitId":"ZechariahTan"},"content":"        public void setPrice(Price price) {","lastModifiedDate":"2021-03-20"},{"lineNumber":208,"author":{"gitId":"ZechariahTan"},"content":"            this.price \u003d price;","lastModifiedDate":"2021-03-20"},{"lineNumber":209,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":210,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":211,"author":{"gitId":"ZechariahTan"},"content":"        public Optional\u003cPrice\u003e getPrice() {","lastModifiedDate":"2021-03-20"},{"lineNumber":212,"author":{"gitId":"ZechariahTan"},"content":"            return Optional.ofNullable(price);","lastModifiedDate":"2021-03-20"},{"lineNumber":213,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":214,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"JoelHo"},"content":"            if (!(other instanceof EditPassengerDescriptor)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"JoelHo"},"content":"            EditPassengerDescriptor e \u003d (EditPassengerDescriptor) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"chewterence"},"content":"                    \u0026\u0026 getTripDay().equals(e.getTripDay())","lastModifiedDate":"2021-03-11"},{"lineNumber":251,"author":{"gitId":"chewterence"},"content":"                    \u0026\u0026 getTripTime().equals(e.getTripTime())","lastModifiedDate":"2021-03-11"},{"lineNumber":252,"author":{"gitId":"ZechariahTan"},"content":"                    \u0026\u0026 getPrice().equals(e.getPrice())","lastModifiedDate":"2021-03-20"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"chewterence":19,"ZechariahTan":28,"-":168,"JoelHo":41}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STRING_LIST;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":" * Finds and lists all passengers in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all passengers whose attributes\"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"            + \", defined by prefixes (case-sensitive),  contain any of the specified keywords (case-insensitive) and\"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"            + \" displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"            + \"Do note that only 1 type of prefix can be provided.\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"            + \"Prefixes you can use are: \" + PREFIX_STRING_LIST + \"\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"            + \"Parameters: PREFIX + KEYWORD\\n\"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"            + \"Example: \\n1. \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"alice\"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"            + \"\\n2. \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"female\"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"            + \"\\n3. \" + COMMAND_WORD + \" \" + PREFIX_PHONE + \"91031282\";","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"    private final Predicate\u003cPassenger\u003e predicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"    public FindCommand(Predicate\u003cPassenger\u003e predicate) {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"lyueyang"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"        model.updateFilteredPassengerList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"                String.format(Messages.MESSAGE_PASSENGER_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"                        model.getFilteredPassengerList().size()));","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lyueyang":15,"-":33,"JoelHo":8}},{"path":"src/main/java/seedu/address/logic/commands/FindPoolCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":" * Finds and lists all passengers in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"public class FindPoolCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    public static final String COMMAND_WORD \u003d \"findPool\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows a list of trips where passenger\u0027s name contains \"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"            + \"the keyword\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"            + \"Parameters: PREFIX + KEYWORD\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"            + \"Example: \\n1. \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"alice\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    private final Predicate\u003cPool\u003e predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    public FindPoolCommand(Predicate\u003cPool\u003e predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"        model.updateFilteredPoolList(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"                String.format(Messages.MESSAGE_POOLS_LISTED_OVERVIEW,","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"                        model.getFilteredPoolList().size()));","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"                || (other instanceof FindPoolCommand // instanceof handles nulls","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"                \u0026\u0026 predicate.equals(((FindPoolCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"markmcwong":48}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PASSENGERS;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":" * Lists all passengers in the address book to the user.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all passengers\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"        model.updateFilteredPassengerList(PREDICATE_SHOW_ALL_PASSENGERS);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"JoelHo":4}},{"path":"src/main/java/seedu/address/logic/commands/ListPoolCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_POOLS;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":" * Lists all pools in the address book to the user.","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"public class ListPoolCommand extends Command {","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    public static final String COMMAND_WORD \u003d \"listPool\";","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all pools\";","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        model.updateFilteredPoolList(PREDICATE_SHOW_ALL_POOLS);","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"ZechariahTan":24}},{"path":"src/main/java/seedu/address/logic/commands/PoolCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUTER;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_POOLS;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":" * Associates a Driver with the selected Passengers.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"public class PoolCommand extends Command {","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"    public static final String COMMAND_WORD \u003d \"pool\";","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"    public static final long MAX_TIME_DIFFERENCE \u003d 15;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Pools commuters together with a driver. \"","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"            + PREFIX_NAME + \"DRIVER NAME \"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"            + PREFIX_PHONE + \"DRIVER PHONE \"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TRIPDAY + \"TRIP DAY \"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TRIPTIME + \"TRIP TIME \"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"            + PREFIX_COMMUTER + \"COMMUTER \"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"chewterence"},"content":"            + \"[\" + PREFIX_COMMUTER + \"COMMUTER]... \"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"chewterence"},"content":"            + PREFIX_NAME + \"Florence Lee \"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TRIPDAY + \"monday \"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TRIPTIME + \"1930 \"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"            + PREFIX_COMMUTER + \"1 \"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"chewterence"},"content":"            + PREFIX_COMMUTER + \"4 \"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"chewterence"},"content":"            + PREFIX_TAG + \"female\";","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_NO_COMMUTERS \u003d \"No commuters were selected.\";","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"lyueyang"},"content":"    public static final String MESSAGE_POOL_SUCCESS \u003d \"Successfully created pool: %s, %s\";","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"lyueyang"},"content":"    public static final String MESSAGE_POOL_SUCCESS_WITH_WARNING \u003d \"Successfully created pool: %s, %s. \\nNOTE: \"","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"lyueyang"},"content":"            + \"There are passengers with time differences of more than 15 minutes with the pool time.\";","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_DUPLICATE_POOL \u003d \"This pool already exists in the GME Terminal.\";","lastModifiedDate":"2021-04-11"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_POOLS_CONTAIN_PERSON \u003d \"One or more passengers specified are already assigned \"","lastModifiedDate":"2021-04-11"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"            + \"to a pool.\";","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_TRIPDAY_MISMATCH \u003d \"One or more of the passengers specified \"","lastModifiedDate":"2021-04-11"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"            + \"have a trip day that does not match this pool driver\u0027s trip day.\";","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"    private final Driver driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"chewterence"},"content":"    private final TripDay tripDay;","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"chewterence"},"content":"    private final TripTime tripTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"chewterence"},"content":"    private final Set\u003cIndex\u003e indexes;","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"chewterence"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"chewterence"},"content":"     * Creates a PoolCommand that adds a pool specified by {@code Driver}, {@code TripDay}, {@code TripTime}","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"chewterence"},"content":"     * with passengers specified.","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"chewterence"},"content":"    public PoolCommand(Driver driver, Set\u003cIndex\u003e indexes, TripDay tripDay, TripTime tripTime, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(driver);","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"chewterence"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"chewterence"},"content":"        requireNonNull(tripDay);","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"chewterence"},"content":"        requireNonNull(tripTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"        this.driver \u003d driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"chewterence"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"chewterence"},"content":"        this.tripDay \u003d tripDay;","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"chewterence"},"content":"        this.tripTime \u003d tripTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"chewterence"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"lyueyang"},"content":"    private boolean checkTimeDifference(List\u003cPassenger\u003e passengers) {","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"lyueyang"},"content":"        return passengers.stream()","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"lyueyang"},"content":"                .anyMatch(x -\u003e x.getTripTime().compareMinutes(this.tripTime) \u003e MAX_TIME_DIFFERENCE);","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"chewterence"},"content":"    private List\u003cPassenger\u003e getPassengersFromIndexes(Set\u003cIndex\u003e indexes, Model model) throws CommandException {","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e lastShownList \u003d List.copyOf(model.getFilteredPassengerList());","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"chewterence"},"content":"        List\u003cPassenger\u003e passengers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":93,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":94,"author":{"gitId":"chewterence"},"content":"        for (Index idx : indexes) {","lastModifiedDate":"2021-04-02"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"            if (idx.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"chewterence"},"content":"            Passenger passenger \u003d lastShownList.get(idx.getZeroBased());","lastModifiedDate":"2021-04-02"},{"lineNumber":99,"author":{"gitId":"chewterence"},"content":"            assert passenger !\u003d null : \"passenger should not be null\";","lastModifiedDate":"2021-04-02"},{"lineNumber":100,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":101,"author":{"gitId":"chewterence"},"content":"            boolean isTripDayMismatch \u003d !passenger.getTripDay().equals(tripDay);","lastModifiedDate":"2021-04-02"},{"lineNumber":102,"author":{"gitId":"chewterence"},"content":"            if (isTripDayMismatch) {","lastModifiedDate":"2021-04-02"},{"lineNumber":103,"author":{"gitId":"chewterence"},"content":"                throw new CommandException(MESSAGE_TRIPDAY_MISMATCH);","lastModifiedDate":"2021-04-02"},{"lineNumber":104,"author":{"gitId":"chewterence"},"content":"            }","lastModifiedDate":"2021-04-02"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"chewterence"},"content":"            passengers.add(passenger);","lastModifiedDate":"2021-04-02"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"chewterence"},"content":"        return passengers;","lastModifiedDate":"2021-04-02"},{"lineNumber":110,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":111,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"chewterence"},"content":"    @Override","lastModifiedDate":"2021-04-02"},{"lineNumber":113,"author":{"gitId":"chewterence"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-04-02"},{"lineNumber":114,"author":{"gitId":"chewterence"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-04-02"},{"lineNumber":115,"author":{"gitId":"chewterence"},"content":"        if (indexes.size() \u003d\u003d 0) {","lastModifiedDate":"2021-04-02"},{"lineNumber":116,"author":{"gitId":"chewterence"},"content":"            throw new CommandException(MESSAGE_NO_COMMUTERS);","lastModifiedDate":"2021-04-02"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"chewterence"},"content":"        List\u003cPassenger\u003e passengers \u003d getPassengersFromIndexes(indexes, model);","lastModifiedDate":"2021-04-02"},{"lineNumber":120,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":121,"author":{"gitId":"JoelHo"},"content":"        if (passengers.stream().anyMatch(model::hasPoolWithPassenger)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":122,"author":{"gitId":"JoelHo"},"content":"            throw new CommandException(MESSAGE_POOLS_CONTAIN_PERSON);","lastModifiedDate":"2021-04-11"},{"lineNumber":123,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":124,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"lyueyang"},"content":"        boolean shouldWarn \u003d checkTimeDifference(passengers);","lastModifiedDate":"2021-04-02"},{"lineNumber":126,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"JoelHo"},"content":"        Pool toAdd \u003d new Pool(driver, tripDay, tripTime, passengers, tags);","lastModifiedDate":"2021-04-11"},{"lineNumber":128,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"JoelHo"},"content":"        if (model.hasPool(toAdd)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":130,"author":{"gitId":"chewterence"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_POOL);","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"        model.addPool(toAdd);","lastModifiedDate":"2021-04-11"},{"lineNumber":134,"author":{"gitId":"chewterence"},"content":"        model.updateFilteredPoolList(PREDICATE_SHOW_ALL_POOLS);","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"lyueyang"},"content":"        String outputMessage \u003d shouldWarn ? MESSAGE_POOL_SUCCESS_WITH_WARNING : MESSAGE_POOL_SUCCESS;","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":139,"author":{"gitId":"JoelHo"},"content":"        return new CommandResult(String.format(outputMessage, toAdd.getDriverAsStr(), toAdd.getPassengerNames()));","lastModifiedDate":"2021-04-11"},{"lineNumber":140,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"JoelHo"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"JoelHo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"JoelHo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"chewterence"},"content":"                || (other instanceof PoolCommand // instanceof handles nulls","lastModifiedDate":"2021-03-20"},{"lineNumber":146,"author":{"gitId":"chewterence"},"content":"                \u0026\u0026 (driver.equals(((PoolCommand) other).driver)","lastModifiedDate":"2021-03-20"},{"lineNumber":147,"author":{"gitId":"chewterence"},"content":"                \u0026\u0026 indexes.equals(((PoolCommand) other).indexes)));","lastModifiedDate":"2021-04-02"},{"lineNumber":148,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"chewterence":60,"lyueyang":14,"JoelHo":75}},{"path":"src/main/java/seedu/address/logic/commands/UnpoolCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":" * Deletes a passenger identified using it\u0027s displayed index from the pool list.","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"public class UnpoolCommand extends Command {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"    public static final String COMMAND_WORD \u003d \"unpool\";","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"            + \": Removes the pool identified by the index number from the displayed pool list.\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"    public static final String MESSAGE_UNPOOL_SUCCESS \u003d \"Successfully unpooled: %s\";","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"     * Creates an UnpoolCommand to remove the specified {@code Index}.","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"    public UnpoolCommand(Index targetIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"chewterence"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"        List\u003cPool\u003e lastShownList \u003d model.getFilteredPoolList();","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"chewterence"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_POOL_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"chewterence"},"content":"        Pool poolToRemove \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"        model.deletePool(poolToRemove);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"lyueyang"},"content":"        return new CommandResult(String.format(MESSAGE_UNPOOL_SUCCESS, poolToRemove.getPassengerNames()));","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"chewterence"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"chewterence"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"chewterence"},"content":"                || (other instanceof UnpoolCommand // instanceof handles nulls","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"chewterence"},"content":"                \u0026\u0026 targetIndex.equals(((UnpoolCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"chewterence"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"chewterence":55,"lyueyang":2}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":" * Represents an error which occurs during execution of a {@link seedu.address.logic.commands.Command}.","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"JoelHo":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS, PREFIX_TRIPDAY,","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"                        PREFIX_TRIPTIME, PREFIX_PRICE, PREFIX_TAG);","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS, PREFIX_TRIPDAY, PREFIX_TRIPTIME","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"                ) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"        TripDay tripDay \u003d ParserUtil.parseTripDay(argMultimap.getValue(PREFIX_TRIPDAY).get());","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"chewterence"},"content":"        TripTime tripTime \u003d ParserUtil.parseTripTime(argMultimap.getValue(PREFIX_TRIPTIME).get());","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"        Optional\u003cPrice\u003e price \u003d Optional.empty();","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PRICE)) {","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"            price \u003d Optional.of(","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"                    ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get())","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"            );","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"chewterence"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"chewterence"},"content":"        Passenger passenger \u003d new Passenger(name, phone, address, tripDay, tripTime, price, tagList);","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"        return new AddCommand(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"chewterence":11,"ZechariahTan":4,"-":51,"JoelHo":8}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"import seedu.address.logic.commands.FindPoolCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.logic.commands.ListPoolCommand;","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.PoolCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.UnpoolCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"        case FindPoolCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"            return new FindPoolCommandParser().parse(arguments);","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"        case ListPoolCommand.COMMAND_WORD:","lastModifiedDate":"2021-04-09"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"            return new ListPoolCommand();","lastModifiedDate":"2021-04-09"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"chewterence"},"content":"        case PoolCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-20"},{"lineNumber":82,"author":{"gitId":"chewterence"},"content":"            return new PoolCommandParser().parse(arguments);","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"chewterence"},"content":"        case UnpoolCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"chewterence"},"content":"            return new UnpoolCommandParser().parse(arguments);","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chewterence":7,"ZechariahTan":4,"markmcwong":4,"-":76,"JoelHo":1}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"     * Returns true if only one of the prefixes are provided.","lastModifiedDate":"2021-04-11"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"    public static boolean checkOnePrefixProvided(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-04-11"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"        return findPresentPrefixes(argumentMultimap, prefixes).size() \u003d\u003d 1;","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"     * Returns the prefixes that have values","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"    public static List\u003cPrefix\u003e findPresentPrefixes(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"        return java.util.stream.Stream.of(prefixes).filter(prefix -\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"                argumentMultimap.getValue(prefix).isPresent()).collect(java.util.stream.Collectors.toList());","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"markmcwong":15,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"     * Prevents ArgumentTokenizer from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"    private ArgumentTokenizer() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":148,"JoelHo":5}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_NAME_STRING \u003d \"n/\";","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_PHONE_STRING \u003d \"p/\";","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_ADDRESS_STRING \u003d \"a/\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_TAG_STRING \u003d \"tag/\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_ALL_STRING \u003d \"all/\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_TRIPTIME_STRING \u003d \"t/\";","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_TRIPDAY_STRING \u003d \"d/\";","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_PRICE_STRING \u003d \"pr/\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_COMMUTER_STRING \u003d \"c/\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"lyueyang"},"content":"    public static final String PREFIX_STRING_LIST \u003d joinPrefixes();","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(PREFIX_NAME_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(PREFIX_PHONE_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(PREFIX_ADDRESS_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(PREFIX_TAG_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"    public static final Prefix PREFIX_TRIPDAY \u003d new Prefix(PREFIX_TRIPDAY_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"    public static final Prefix PREFIX_TRIPTIME \u003d new Prefix(PREFIX_TRIPTIME_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"    public static final Prefix PREFIX_COMMUTER \u003d new Prefix(PREFIX_COMMUTER_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"    public static final Prefix PREFIX_PRICE \u003d new Prefix(PREFIX_PRICE_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"    public static final Prefix PREFIX_ALL \u003d new Prefix(PREFIX_ALL_STRING);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"     * Prevents CliSyntax from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"    private CliSyntax() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"lyueyang"},"content":"    private static String joinPrefixes() {","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"lyueyang"},"content":"        StringJoiner sj \u003d new StringJoiner(\", \");","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"lyueyang"},"content":"        sj.add(PREFIX_NAME_STRING);","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"lyueyang"},"content":"        sj.add(PREFIX_PHONE_STRING);","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"lyueyang"},"content":"        sj.add(PREFIX_ADDRESS_STRING);","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"lyueyang"},"content":"        sj.add(PREFIX_TAG_STRING);","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"lyueyang"},"content":"        sj.add(PREFIX_ALL_STRING);","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"lyueyang"},"content":"        sj.add(PREFIX_TRIPTIME_STRING);","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"lyueyang"},"content":"        sj.add(PREFIX_TRIPDAY_STRING);","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"lyueyang"},"content":"        sj.add(PREFIX_PRICE_STRING);","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"lyueyang"},"content":"        sj.add(PREFIX_COMMUTER_STRING);","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"lyueyang"},"content":"        return sj.toString();","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lyueyang":37,"-":10,"JoelHo":5}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.ParserUtil.parseDeleteIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"            List\u003cIndex\u003e indexes \u003d parseDeleteIndex(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"            return new DeleteCommand(indexes);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lyueyang":4,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"import seedu.address.logic.commands.EditCommand.EditPassengerDescriptor;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"chewterence"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS, PREFIX_TRIPDAY,","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"                        PREFIX_TRIPTIME, PREFIX_TAG, PREFIX_PRICE);","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"        EditPassengerDescriptor editPassengerDescriptor \u003d new EditPassengerDescriptor();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"            editPassengerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"            editPassengerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"            editPassengerDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"chewterence"},"content":"        if (argMultimap.getValue(PREFIX_TRIPDAY).isPresent()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"            editPassengerDescriptor.setTripDay(ParserUtil.parseTripDay(argMultimap.getValue(PREFIX_TRIPDAY).get()));","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"chewterence"},"content":"        if (argMultimap.getValue(PREFIX_TRIPTIME).isPresent()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"            editPassengerDescriptor.setTripTime(ParserUtil.parseTripTime(argMultimap.getValue(PREFIX_TRIPTIME).get()));","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"        if (argMultimap.getValue(PREFIX_PRICE).isPresent()) {","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"chewterence"},"content":"            editPassengerDescriptor.setPrice(ParserUtil.parsePrice(argMultimap.getValue(PREFIX_PRICE).get()));","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPassengerDescriptor::setTags);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"        if (!editPassengerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"        return new EditCommand(index, editPassengerDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chewterence":7,"ZechariahTan":5,"-":70,"JoelHo":10}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.checkOnePrefixProvided;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.findPresentPrefixes;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALL;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALL_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME_STRING;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDayContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTimeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"import seedu.address.model.person.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.person.passenger.PriceIsGreaterThanAmountPredicate;","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"lyueyang"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"lyueyang"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"lyueyang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_PRICE,","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lyueyang"},"content":"                        PREFIX_ALL, PREFIX_TRIPDAY, PREFIX_TRIPTIME);","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"        if (!checkOnePrefixProvided(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_TAG, PREFIX_PRICE,","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"lyueyang"},"content":"                PREFIX_ALL, PREFIX_TRIPDAY, PREFIX_TRIPTIME)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"lyueyang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"lyueyang"},"content":"        List\u003cPrefix\u003e presentPrefixes \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"                findPresentPrefixes(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_TAG, PREFIX_PRICE,","lastModifiedDate":"2021-04-11"},{"lineNumber":62,"author":{"gitId":"lyueyang"},"content":"                        PREFIX_ALL, PREFIX_TRIPDAY, PREFIX_TRIPTIME);","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"lyueyang"},"content":"        assert(presentPrefixes.size() \u003d\u003d 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"lyueyang"},"content":"        Prefix specifiedPrefix \u003d presentPrefixes.get(0);","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"lyueyang"},"content":"        List\u003cString\u003e keywords \u003d parseValue(argMultimap, specifiedPrefix);","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"lyueyang"},"content":"        return new FindCommand(parsePredicate(specifiedPrefix, keywords));","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"lyueyang"},"content":"     * Returns the prefixes that have values","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"lyueyang"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"lyueyang"},"content":"    private static boolean doesPrefixHaveOneValue(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"lyueyang"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getAllValues(prefix).size() \u003c\u003d 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"lyueyang"},"content":"     * Returns the value for the specified prefix","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"lyueyang"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"lyueyang"},"content":"    private static List\u003cString\u003e parseValue(ArgumentMultimap argumentMultimap, Prefix prefix) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"lyueyang"},"content":"        if (PREFIX_NAME.equals(prefix) \u0026\u0026 argumentMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"lyueyang"},"content":"            return parseValueHelper(argumentMultimap, PREFIX_NAME);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"lyueyang"},"content":"        } else if (PREFIX_ADDRESS.equals(prefix) \u0026\u0026 argumentMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"lyueyang"},"content":"            return parseValueHelper(argumentMultimap, PREFIX_ADDRESS);","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"lyueyang"},"content":"        } else if (PREFIX_PHONE.equals(prefix) \u0026\u0026 argumentMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"lyueyang"},"content":"            return parseValueHelper(argumentMultimap, PREFIX_PHONE);","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"lyueyang"},"content":"        } else if (PREFIX_TAG.equals(prefix) \u0026\u0026 argumentMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"lyueyang"},"content":"            return parseValueHelper(argumentMultimap, PREFIX_TAG);","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"lyueyang"},"content":"        } else if (PREFIX_PRICE.equals(prefix)","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"lyueyang"},"content":"                \u0026\u0026 argumentMultimap.getValue(PREFIX_PRICE).isPresent()","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"lyueyang"},"content":"                \u0026\u0026 doesPrefixHaveOneValue(argumentMultimap, PREFIX_PRICE)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"lyueyang"},"content":"            List\u003cString\u003e outputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"lyueyang"},"content":"            String parsedPriceAsString \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"lyueyang"},"content":"                    ParserUtil.parsePrice(argumentMultimap.getValue(PREFIX_PRICE).get()).toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"lyueyang"},"content":"            outputList.add(parsedPriceAsString);","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"lyueyang"},"content":"            return outputList;","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"lyueyang"},"content":"        } else if (PREFIX_ALL.equals(prefix)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"lyueyang"},"content":"            return parseValueHelper(argumentMultimap, PREFIX_ALL);","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"lyueyang"},"content":"        } else if (PREFIX_TRIPDAY.equals(prefix)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"lyueyang"},"content":"            return parseValueHelper(argumentMultimap, PREFIX_TRIPDAY);","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"lyueyang"},"content":"        } else if (PREFIX_TRIPTIME.equals(prefix)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"lyueyang"},"content":"            return parseValueHelper(argumentMultimap, PREFIX_TRIPTIME);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"lyueyang"},"content":"        } else {","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"lyueyang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"lyueyang"},"content":"     * Returns the value for the specified prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"lyueyang"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"lyueyang"},"content":"    private static List\u003cString\u003e parseValueHelper(ArgumentMultimap argumentMultimap, Prefix prefix)","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"lyueyang"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"lyueyang"},"content":"        List\u003cString\u003e outputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"lyueyang"},"content":"        for (String s : argumentMultimap.getAllValues(prefix)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"lyueyang"},"content":"            String argument \u003d \"\";","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"lyueyang"},"content":"            switch (prefix.toString()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"lyueyang"},"content":"            case PREFIX_NAME_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"lyueyang"},"content":"                argument \u003d ParserUtil.parseName(s).toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"lyueyang"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"lyueyang"},"content":"            case PREFIX_ADDRESS_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"lyueyang"},"content":"                argument \u003d ParserUtil.parseAddress(s).toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"lyueyang"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"lyueyang"},"content":"            case PREFIX_PHONE_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"lyueyang"},"content":"                argument \u003d ParserUtil.parsePhone(s).toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"lyueyang"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"lyueyang"},"content":"            case PREFIX_TAG_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"lyueyang"},"content":"                argument \u003d ParserUtil.parseTag(s).toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"lyueyang"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"lyueyang"},"content":"            case PREFIX_PRICE_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"lyueyang"},"content":"                argument \u003d ParserUtil.parsePrice(s).toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"lyueyang"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"lyueyang"},"content":"            case PREFIX_ALL_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"lyueyang"},"content":"                argument \u003d s;","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"lyueyang"},"content":"                break;","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"lyueyang"},"content":"            case PREFIX_TRIPDAY_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"lyueyang"},"content":"                argument \u003d ParserUtil.parseTripDay(s).toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"lyueyang"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"lyueyang"},"content":"            case PREFIX_TRIPTIME_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"lyueyang"},"content":"                argument \u003d ParserUtil.parseTripTime(s).toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"lyueyang"},"content":"                break;","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"lyueyang"},"content":"            default:","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"lyueyang"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"lyueyang"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"lyueyang"},"content":"            if (argument.length() \u003e 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"lyueyang"},"content":"                outputList.add(argument.trim());","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"lyueyang"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"lyueyang"},"content":"        return outputList;","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":161,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":163,"author":{"gitId":"lyueyang"},"content":"     * Returns the predicate specified by prefix","lastModifiedDate":"2021-03-10"},{"lineNumber":164,"author":{"gitId":"lyueyang"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"JoelHo"},"content":"     * @return the predicate specified.","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"lyueyang"},"content":"    private static Predicate\u003cPassenger\u003e parsePredicate(Prefix prefix, List\u003cString\u003e arguments) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"lyueyang"},"content":"        switch (prefix.toString()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"lyueyang"},"content":"        case PREFIX_NAME_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"lyueyang"},"content":"            return new NameContainsKeywordsPredicate(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"lyueyang"},"content":"        case PREFIX_ADDRESS_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"lyueyang"},"content":"            return new AddressContainsKeywordsPredicate(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"lyueyang"},"content":"        case PREFIX_PHONE_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"lyueyang"},"content":"            return new PhoneContainsKeywordsPredicate(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"lyueyang"},"content":"        case PREFIX_TAG_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"lyueyang"},"content":"            return new TagContainsKeywordsPredicate(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"lyueyang"},"content":"        case PREFIX_PRICE_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"lyueyang"},"content":"            Double price \u003d Double.parseDouble(arguments.get(0));","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"markmcwong"},"content":"            return new PriceIsGreaterThanAmountPredicate(price);","lastModifiedDate":"2021-04-10"},{"lineNumber":180,"author":{"gitId":"lyueyang"},"content":"        case PREFIX_ALL_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"lyueyang"},"content":"            return new AttributeContainsKeywordsPredicate(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"lyueyang"},"content":"        case PREFIX_TRIPDAY_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"lyueyang"},"content":"            return new TripDayContainsKeywordsPredicate(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"lyueyang"},"content":"        case PREFIX_TRIPTIME_STRING:","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"lyueyang"},"content":"            return new TripTimeContainsKeywordsPredicate(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"lyueyang"},"content":"        default:","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"lyueyang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-10"},{"lineNumber":188,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":189,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chewterence":2,"lyueyang":151,"markmcwong":6,"-":27,"JoelHo":4}},{"path":"src/main/java/seedu/address/logic/parser/FindPoolCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.checkOnePrefixProvided;","lastModifiedDate":"2021-04-11"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.ArgumentMultimap.findPresentPrefixes;","lastModifiedDate":"2021-04-11"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import seedu.address.logic.commands.FindPoolCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.PooledPassengerContainsKeywordsPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"public class FindPoolCommandParser implements Parser\u003cFindPoolCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand.","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    public FindPoolCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"        if (!checkOnePrefixProvided(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPoolCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"        List\u003cPrefix\u003e presentPrefixes \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"                findPresentPrefixes(argMultimap, PREFIX_NAME);","lastModifiedDate":"2021-04-11"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"        assert(presentPrefixes.size() \u003d\u003d 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        Prefix specifiedPrefix \u003d presentPrefixes.get(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"        List\u003cString\u003e keywords \u003d parseValue(argMultimap, specifiedPrefix);","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"        return new FindPoolCommand(parsePredicate(specifiedPrefix, keywords));","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"     * Returns the value for the specified prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"    private static List\u003cString\u003e parseValue(ArgumentMultimap argumentMultimap, Prefix prefix) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"        List\u003cString\u003e outputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"        if (PREFIX_NAME.equals(prefix) \u0026\u0026 argumentMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"            for (String s : argumentMultimap.getAllValues(PREFIX_NAME)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"                String parsedNameAsString \u003d ParserUtil.parseName(s).toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"                outputList.add(parsedNameAsString.trim());","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"        return outputList;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"     * Returns the predicate specified by prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"     * @return the predicate specified.","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"    private static Predicate\u003cPool\u003e parsePredicate(Prefix prefix, List\u003cString\u003e arguments) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"        if (PREFIX_NAME.equals(prefix)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"            return new PooledPassengerContainsKeywordsPredicate(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPoolCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"markmcwong":72}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"    public static final String MESSAGE_NO_ARGS \u003d \"No indexes were provided.\";","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"     * Prevents ParserUtil from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"    private ParserUtil() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"chewterence"},"content":"     * Parses a {@code String tripDay} into a {@code TripDay}.","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"JoelHo"},"content":"     * Leading and trailing whitespaces will be trimmed and converted to uppercase for case-insensitive enum","lastModifiedDate":"2021-04-11"},{"lineNumber":127,"author":{"gitId":"JoelHo"},"content":"     * instantiation of {@code DayOfWeek}.","lastModifiedDate":"2021-04-11"},{"lineNumber":128,"author":{"gitId":"chewterence"},"content":"     * @throws ParseException if the given {@code tripDay} is invalid.","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"chewterence"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"chewterence"},"content":"    public static TripDay parseTripDay(String tripDay) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"chewterence"},"content":"        requireNonNull(tripDay);","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"markmcwong"},"content":"        String trimmedTripDay \u003d tripDay.trim().toUpperCase();","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"ZechariahTan"},"content":"        DayOfWeek day;","lastModifiedDate":"2021-03-21"},{"lineNumber":134,"author":{"gitId":"ZechariahTan"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":135,"author":{"gitId":"ZechariahTan"},"content":"            day \u003d DayOfWeek.valueOf(trimmedTripDay);","lastModifiedDate":"2021-03-21"},{"lineNumber":136,"author":{"gitId":"ZechariahTan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-21"},{"lineNumber":137,"author":{"gitId":"chewterence"},"content":"            throw new ParseException(TripDay.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":138,"author":{"gitId":"chewterence"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":139,"author":{"gitId":"ZechariahTan"},"content":"        return new TripDay(day);","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":142,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"chewterence"},"content":"     * Parses a {@code String tripTime} into a {@code TripTime}.","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"chewterence"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"chewterence"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":146,"author":{"gitId":"chewterence"},"content":"     * @throws ParseException if the given {@code tripTime} is invalid.","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"chewterence"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":148,"author":{"gitId":"chewterence"},"content":"    public static TripTime parseTripTime(String tripTime) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"chewterence"},"content":"        requireNonNull(tripTime);","lastModifiedDate":"2021-03-11"},{"lineNumber":150,"author":{"gitId":"chewterence"},"content":"        String trimmedTripTime \u003d tripTime.trim();","lastModifiedDate":"2021-03-11"},{"lineNumber":151,"author":{"gitId":"ZechariahTan"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-03-21"},{"lineNumber":152,"author":{"gitId":"ZechariahTan"},"content":"        LocalTime parsedTimeObject;","lastModifiedDate":"2021-03-21"},{"lineNumber":153,"author":{"gitId":"ZechariahTan"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":154,"author":{"gitId":"ZechariahTan"},"content":"            parsedTimeObject \u003d LocalTime.parse(trimmedTripTime, timeFormat);","lastModifiedDate":"2021-03-21"},{"lineNumber":155,"author":{"gitId":"ZechariahTan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-21"},{"lineNumber":156,"author":{"gitId":"chewterence"},"content":"            throw new ParseException(TripTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"chewterence"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":159,"author":{"gitId":"ZechariahTan"},"content":"        return new TripTime(parsedTimeObject);","lastModifiedDate":"2021-03-21"},{"lineNumber":160,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":161,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":162,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":163,"author":{"gitId":"ZechariahTan"},"content":"     * Parses a {@code String price} into a {@code Price}.","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"ZechariahTan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-21"},{"lineNumber":165,"author":{"gitId":"ZechariahTan"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":166,"author":{"gitId":"ZechariahTan"},"content":"     * @throws ParseException if the given {@code price} is invalid.","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"chewterence"},"content":"    public static Price parsePrice(String price) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(price);","lastModifiedDate":"2021-03-21"},{"lineNumber":170,"author":{"gitId":"ZechariahTan"},"content":"        String trimmedPrice \u003d price.trim();","lastModifiedDate":"2021-03-21"},{"lineNumber":171,"author":{"gitId":"ZechariahTan"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":172,"author":{"gitId":"ZechariahTan"},"content":"            throw new ParseException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":173,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":174,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"chewterence"},"content":"        return new Price(Double.parseDouble(trimmedPrice));","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":178,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"JoelHo"},"content":"     * Parses {@code Collection\u003cString\u003e indices} into a {@code Set\u003cIndex\u003e}.","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"JoelHo"},"content":"    public static Set\u003cIndex\u003e parseIndices(Collection\u003cString\u003e indices) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(indices);","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"JoelHo"},"content":"        final Set\u003cIndex\u003e indicesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"JoelHo"},"content":"        for (String index : indices) {","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"JoelHo"},"content":"            indicesSet.add(parseIndex(index));","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"JoelHo"},"content":"        return indicesSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"lyueyang"},"content":"     * Parses {@code oneBasedIndexes} into an {@code List\u003cIndex\u003e} and returns it.","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"lyueyang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"lyueyang"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"lyueyang"},"content":"    public static List\u003cIndex\u003e parseDeleteIndex(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"lyueyang"},"content":"        String[] arguments \u003d oneBasedIndexes.split(\"\\\\s+\");","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"lyueyang"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"lyueyang"},"content":"        for (String s : arguments) {","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"lyueyang"},"content":"            if (s.length() \u003e 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"lyueyang"},"content":"                Index index \u003d ParserUtil.parseIndex(s.trim());","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"lyueyang"},"content":"                indexes.add(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":203,"author":{"gitId":"lyueyang"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":205,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":206,"author":{"gitId":"lyueyang"},"content":"        if (indexes.size() \u003e 0) {","lastModifiedDate":"2021-04-04"},{"lineNumber":207,"author":{"gitId":"lyueyang"},"content":"            return indexes;","lastModifiedDate":"2021-03-30"},{"lineNumber":208,"author":{"gitId":"lyueyang"},"content":"        } else {","lastModifiedDate":"2021-04-04"},{"lineNumber":209,"author":{"gitId":"lyueyang"},"content":"            throw new ParseException(MESSAGE_NO_ARGS);","lastModifiedDate":"2021-04-04"},{"lineNumber":210,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":211,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"chewterence":29,"lyueyang":25,"ZechariahTan":30,"markmcwong":1,"-":108,"JoelHo":19}},{"path":"src/main/java/seedu/address/logic/parser/PoolCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUTER;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.PoolCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"public class PoolCommandParser implements Parser\u003cPoolCommand\u003e {","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"     * Parses the given {@code String} of arguments in the context of the PoolCommand","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"     * and returns an PoolCommand object for execution.","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"    public PoolCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"                PREFIX_TRIPDAY, PREFIX_TRIPTIME, PREFIX_COMMUTER, PREFIX_TAG);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_TRIPDAY, PREFIX_TRIPTIME,","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"                PREFIX_COMMUTER) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PoolCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        Set\u003cIndex\u003e commuterSet \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_COMMUTER));","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"        TripDay tripDay \u003d ParserUtil.parseTripDay(argMultimap.getValue(PREFIX_TRIPDAY).get());","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"        TripTime tripTime \u003d ParserUtil.parseTripTime(argMultimap.getValue(PREFIX_TRIPTIME).get());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"chewterence"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"        Driver driver \u003d new Driver(name, phone);","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"chewterence"},"content":"        return new PoolCommand(driver, commuterSet, tripDay, tripTime, tagList);","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"chewterence":20,"JoelHo":38}},{"path":"src/main/java/seedu/address/logic/parser/UnpoolCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.UnpoolCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":" * Parses input arguments and creates a new UnpoolCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"public class UnpoolCommandParser implements Parser\u003cUnpoolCommand\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"     * Parses the given {@code String} of arguments in the context of the UnpoolCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"     * and returns a UnpoolCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"    public UnpoolCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"            return new UnpoolCommand(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnpoolCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"chewterence":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.UniquePassengerList;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.UniquePoolList;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":" * Duplicates are not allowed (by .isSamePassenger comparison)","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"    private final UniquePassengerList passengers;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    private final UniquePoolList pools;","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"        passengers \u003d new UniquePassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        pools \u003d new UniquePoolList();","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"     * Creates an AddressBook using the Passengers in the {@code toBeCopied}","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"     * Replaces the contents of the passenger list with {@code passengers}.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"     * {@code passengers} must not contain duplicate passengers.","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"    public void setPassengers(List\u003cPassenger\u003e passengers) {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        this.passengers.setPassengers(passengers);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"     * Replaces the contents of the pool list with {@code pool}.","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"     * {@code pool} must not contain duplicate pool.","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"    public void setPools(List\u003cPool\u003e pools) {","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"        this.pools.setPools(pools);","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"        setPassengers(newData.getPassengerList());","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"        setPools(newData.getPoolList());","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"    //// passenger-level operations","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"     * Returns true if a passenger with the same identity as {@code passenger} exists in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"    public boolean hasPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"        return passengers.contains(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"     * Returns true if a passenger equal to {@code passenger} exists in the address book.","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"    public boolean hasEqualPassenger(Passenger passenger) {","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(passenger);","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        return passengers.containsEqual(passenger);","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"     * Adds a passenger to the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"     * The passenger must not already exist in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"    public void addPassenger(Passenger p) {","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"        passengers.add(p);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"     * Replaces the given passenger {@code target} in the list with {@code editedPassenger}.","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"     * The passenger identity of {@code editedPassenger} must not be the same as another existing passenger in the","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"     * address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger(Passenger target, Passenger editedPassenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"        passengers.setPassenger(target, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"        pools.setPassenger(target, editedPassenger);","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"JoelHo"},"content":"    public void removePassenger(Passenger key) {","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"        passengers.remove(key);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"ZechariahTan"},"content":"    ////Pool level operations","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"ZechariahTan"},"content":"     * Returns true if a passenger with the same identity as {@code passenger} exists in the address book.","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"ZechariahTan"},"content":"    public boolean hasPool(Pool pool) {","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(pool);","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"ZechariahTan"},"content":"        return pools.contains(pool);","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":132,"author":{"gitId":"JoelHo"},"content":"     * Returns true if a pool that contains the given {@code passenger} exists in the address book.","lastModifiedDate":"2021-04-11"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":134,"author":{"gitId":"JoelHo"},"content":"    public boolean hasPoolWithPassenger(Passenger passenger) {","lastModifiedDate":"2021-04-11"},{"lineNumber":135,"author":{"gitId":"JoelHo"},"content":"        return pools.containsPassenger(passenger);","lastModifiedDate":"2021-04-11"},{"lineNumber":136,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":137,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":138,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"ZechariahTan"},"content":"     * Adds a passenger to the address book.","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"ZechariahTan"},"content":"     * The passenger must not already exist in the address book.","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"ZechariahTan"},"content":"    public void addPool(Pool p) {","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"ZechariahTan"},"content":"        pools.add(p);","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"ZechariahTan"},"content":"     * Replaces the given passenger {@code target} in the list with {@code editedPassenger}.","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"ZechariahTan"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"ZechariahTan"},"content":"     * The passenger identity of {@code editedPassenger} must not be the same as another existing passenger in the","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"ZechariahTan"},"content":"     * address book.","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"ZechariahTan"},"content":"    public void setPool(Pool target, Pool editedPool) {","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(editedPool);","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"ZechariahTan"},"content":"        pools.setPool(target, editedPool);","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"ZechariahTan"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"ZechariahTan"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"ZechariahTan"},"content":"    public void removePool(Pool key) {","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"ZechariahTan"},"content":"        pools.remove(key);","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"ZechariahTan"},"content":"        return passengers.asUnmodifiableObservableList().size() + \" passengers; \"","lastModifiedDate":"2021-03-26"},{"lineNumber":171,"author":{"gitId":"ZechariahTan"},"content":"                + pools.asUnmodifiableObservableList().size() + \" pools\";","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"JoelHo"},"content":"    public ObservableList\u003cPassenger\u003e getPassengerList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"JoelHo"},"content":"        return passengers.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":180,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"ZechariahTan"},"content":"    public ObservableList\u003cPool\u003e getPoolList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":182,"author":{"gitId":"ZechariahTan"},"content":"        return pools.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 passengers.equals(((AddressBook) other).passengers)","lastModifiedDate":"2021-03-26"},{"lineNumber":190,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 pools.equals(((AddressBook) other).pools));","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"ZechariahTan"},"content":"        return Objects.hash(passengers, pools);","lastModifiedDate":"2021-03-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZechariahTan":55,"-":98,"JoelHo":44}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"     * {@code Predicate} that always evaluate to true.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    Predicate\u003cPassenger\u003e PREDICATE_SHOW_ALL_PASSENGERS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    Predicate\u003cPool\u003e PREDICATE_SHOW_ALL_POOLS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"     * Returns true if a passenger with the same identity as {@code passenger} exists in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"    boolean hasPassenger(Passenger passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"chewterence"},"content":"     * Returns true if a pool with the same identity as {@code pool} exists in the address book.","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"chewterence"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"chewterence"},"content":"    boolean hasPool(Pool pool);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"     * Returns true if a pool that contains the given {@code passenger} exists in the address book.","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"    boolean hasPoolWithPassenger(Passenger passenger);","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"     * Deletes the given passenger.","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"     * The passenger must exist in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"    void deletePassenger(Passenger passenger);","lastModifiedDate":"2021-04-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"chewterence"},"content":"     * Deletes the given pool.","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"chewterence"},"content":"     * The pool must exist in the address book.","lastModifiedDate":"2021-04-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"chewterence"},"content":"    void deletePool(Pool pool);","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"     * Adds the given passenger.","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"     * {@code passenger} must not already exist in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"    void addPassenger(Passenger passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"chewterence"},"content":"     * Adds the given pool.","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"chewterence"},"content":"     * {@code pool} must not already exist in the address book.","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"chewterence"},"content":"    void addPool(Pool pool);","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"     * Replaces the given passenger {@code target} with {@code editedPassenger}.","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"     * The passenger identity of {@code editedPassenger} must not be the same as another existing passenger in the","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"JoelHo"},"content":"     * address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"    void setPassenger(Passenger target, Passenger editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"    /** Returns an unmodifiable view of the filtered passenger list */","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"    ObservableList\u003cPassenger\u003e getFilteredPassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"     * Updates the filter of the filtered passenger list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"    void updateFilteredPassengerList(Predicate\u003cPassenger\u003e predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"markmcwong"},"content":"    /** Returns an unmodifiable view of the filtered pool list */","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"markmcwong"},"content":"    ObservableList\u003cPool\u003e getFilteredPoolList();","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"markmcwong"},"content":"     * Updates the filter of the filtered pool list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"markmcwong"},"content":"    void updateFilteredPoolList(Predicate\u003cPool\u003e predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chewterence":12,"markmcwong":10,"-":80,"JoelHo":23}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    private final FilteredList\u003cPassenger\u003e filteredPassengers;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    private final FilteredList\u003cPool\u003e filteredPools;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"        this.filteredPassengers \u003d new FilteredList\u003c\u003e(this.addressBook.getPassengerList());","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"        this.filteredPools \u003d new FilteredList\u003c\u003e(this.addressBook.getPoolList());","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"    public boolean hasPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"        return addressBook.hasPassenger(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"chewterence"},"content":"    public boolean hasPool(Pool pool) {","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"chewterence"},"content":"        requireNonNull(pool);","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"chewterence"},"content":"        return addressBook.hasPool(pool);","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"    public boolean hasPoolWithPassenger(Passenger passenger) {","lastModifiedDate":"2021-04-11"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(passenger);","lastModifiedDate":"2021-04-11"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"        return addressBook.hasPoolWithPassenger(passenger);","lastModifiedDate":"2021-04-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"JoelHo"},"content":"    public void deletePassenger(Passenger passenger) {","lastModifiedDate":"2021-04-11"},{"lineNumber":114,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(passenger);","lastModifiedDate":"2021-04-11"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"        addressBook.removePassenger(passenger);","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"chewterence"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"chewterence"},"content":"    public void deletePool(Pool pool) {","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"chewterence"},"content":"        addressBook.removePool(pool);","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"JoelHo"},"content":"    public void addPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"JoelHo"},"content":"        addressBook.addPassenger(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"JoelHo"},"content":"        updateFilteredPassengerList(PREDICATE_SHOW_ALL_PASSENGERS);","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger(Passenger target, Passenger editedPassenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"JoelHo"},"content":"        requireAllNonNull(target, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"        addressBook.setPassenger(target, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"JoelHo"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Passenger List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"JoelHo"},"content":"     * Returns an unmodifiable view of the list of {@code Passenger} backed by the internal list of","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"JoelHo"},"content":"    public ObservableList\u003cPassenger\u003e getFilteredPassengerList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"JoelHo"},"content":"        return filteredPassengers;","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"JoelHo"},"content":"    public void updateFilteredPassengerList(Predicate\u003cPassenger\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"JoelHo"},"content":"        filteredPassengers.setPredicate(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":153,"author":{"gitId":"markmcwong"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Pool List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"markmcwong"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"markmcwong"},"content":"    public void addPool(Pool pool) {","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"markmcwong"},"content":"        addressBook.addPool(pool);","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"markmcwong"},"content":"        updateFilteredPoolList(PREDICATE_SHOW_ALL_POOLS);","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"chewterence"},"content":"     * Returns an unmodifiable view of the list of {@code Pool} backed by the internal list of","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"markmcwong"},"content":"    public ObservableList\u003cPool\u003e getFilteredPoolList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"markmcwong"},"content":"        return filteredPools;","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"markmcwong"},"content":"    public void updateFilteredPoolList(Predicate\u003cPool\u003e predicate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"markmcwong"},"content":"        filteredPools.setPredicate(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"chewterence"},"content":"                \u0026\u0026 filteredPassengers.equals(other.filteredPassengers)","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"chewterence"},"content":"                \u0026\u0026 filteredPools.equals(other.filteredPools);","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chewterence":11,"markmcwong":14,"-":147,"JoelHo":24}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"     * Returns an unmodifiable view of the passengers list.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"     * This list will not contain any duplicate passengers.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    ObservableList\u003cPassenger\u003e getPassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     * Returns an unmodifiable view of the pools list.","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     * This list will not contain any duplicate passengers.","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    ObservableList\u003cPool\u003e getPoolList();","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZechariahTan":6,"-":14,"JoelHo":4}},{"path":"src/main/java/seedu/address/model/TripDay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.model;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":" * Represents a Passenger\u0027s address in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"public class TripDay {","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"TripDay should only be monday, tuesday, wednesday, thursday, \"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"            + \"friday, saturday or sunday.\";","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    public final DayOfWeek value;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     * Constructs a {@code TripDay}.","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"     * @param dayOfWeek A valid set of tripDays.","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    public TripDay(DayOfWeek dayOfWeek) {","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(dayOfWeek);","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        value \u003d dayOfWeek;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"        return value.toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"                || (other instanceof TripDay // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 value.equals(((TripDay) other).value)); // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"chewterence":1,"ZechariahTan":44,"JoelHo":1}},{"path":"src/main/java/seedu/address/model/TripDayContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.model;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":" * Tests that a {@code Passenger}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"public class TripDayContainsKeywordsPredicate implements Predicate\u003cPassenger\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"    public TripDayContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"lyueyang"},"content":"    public boolean test(Passenger passenger) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(passenger.getTripDayAsStr(), keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"                || (other instanceof TripDayContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"                \u0026\u0026 keywords.equals(((TripDayContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"chewterence":1,"lyueyang":31}},{"path":"src/main/java/seedu/address/model/TripTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.model;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":" * Represents a Passenger\u0027s address in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"public class TripTime {","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"TripTime should only be numeric and formatted in 24h time. \"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"            + \"eg. 1400.\";","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    public final LocalTime value;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"     * Constructs a {@code TripTime}.","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"     * @param tripTime A valid trip time.","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    public TripTime(LocalTime tripTime) {","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(tripTime);","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"        this.value \u003d tripTime;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"     * Compares the time difference between 2 {@code TripTime} objects","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"     * @param otherTripTime the other {@code TripTime} to compare to.","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"     * @return long of 2 {@code TripTime} objects difference.","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"lyueyang"},"content":"    public long compareMinutes(TripTime otherTripTime) {","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"lyueyang"},"content":"        requireNonNull(otherTripTime);","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"lyueyang"},"content":"        long timeDifference \u003d ChronoUnit.MINUTES.between(this.value, otherTripTime.value);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"        return Math.abs(timeDifference);","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"        return value.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"                || (other instanceof TripTime // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"                \u0026\u0026 value.equals(((TripTime) other).value)); // state check","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"chewterence":2,"lyueyang":9,"ZechariahTan":43,"JoelHo":5}},{"path":"src/main/java/seedu/address/model/TripTimeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.model;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":" * Tests that a {@code Passenger}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"public class TripTimeContainsKeywordsPredicate implements Predicate\u003cPassenger\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"    public TripTimeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"lyueyang"},"content":"    public boolean test(Passenger passenger) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(passenger.getTripTimeAsStr(), keyword));","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"                || (other instanceof TripTimeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"                \u0026\u0026 keywords.equals(((TripTimeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"chewterence":1,"lyueyang":31}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"GMEdata.json\");","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lyueyang":1,"-":86}},{"path":"src/main/java/seedu/address/model/person/AttributeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyueyang"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"import seedu.address.model.person.passenger.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":" * Tests that a {@code Passenger}\u0027s {@code Name}, {@code Phone}, {@code Address} or {@code Tag}","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lyueyang"},"content":" * matches any of the keywords given.","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"public class AttributeContainsKeywordsPredicate implements Predicate\u003cPassenger\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"    private final Predicate\u003cPassenger\u003e predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"     * Constructs Predicate which is a logical or combination with Name, Phone, Address and Tag predicates.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"     * @param keywords search terms to perform search on.","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"    public AttributeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lyueyang"},"content":"        List\u003cString\u003e keywordsForName \u003d parseKeyword(keywords, PREFIX_NAME.toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lyueyang"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(keywordsForName);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lyueyang"},"content":"        List\u003cString\u003e keywordsForPhone \u003d parseKeyword(keywords, PREFIX_PHONE.toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lyueyang"},"content":"        PhoneContainsKeywordsPredicate phonePredicate \u003d new PhoneContainsKeywordsPredicate(keywordsForPhone);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lyueyang"},"content":"        List\u003cString\u003e keywordsForAddress \u003d parseKeyword(keywords, PREFIX_ADDRESS.toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"lyueyang"},"content":"        AddressContainsKeywordsPredicate addressPredicate \u003d new AddressContainsKeywordsPredicate(keywordsForAddress);","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lyueyang"},"content":"        List\u003cString\u003e keywordsForTags \u003d parseKeyword(keywords, PREFIX_TAG.toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lyueyang"},"content":"        TagContainsKeywordsPredicate tagPredicate \u003d new TagContainsKeywordsPredicate(keywordsForTags);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lyueyang"},"content":"        predicate \u003d namePredicate.or(phonePredicate.or(addressPredicate.or(tagPredicate)));","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lyueyang"},"content":"     * Parses the keywords for each of the predicates. If parsing fails, the keyword is dropped as it isn\u0027t a valid","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lyueyang"},"content":"     * search term.","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lyueyang"},"content":"     * @param keywords search terms to be parsed.","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lyueyang"},"content":"     * @param prefix prefix to operate on.","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lyueyang"},"content":"     * @return list of valid keywords to search on for corresponding prefix.","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"lyueyang"},"content":"    private List\u003cString\u003e parseKeyword(List\u003cString\u003e keywords, String prefix) {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lyueyang"},"content":"        List\u003cString\u003e outputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"lyueyang"},"content":"        for (String s : keywords) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"lyueyang"},"content":"            try {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"lyueyang"},"content":"                switch (prefix) {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"lyueyang"},"content":"                case \"n/\":","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"lyueyang"},"content":"                    outputList.add(ParserUtil.parseName(s).toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"lyueyang"},"content":"                    break;","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"lyueyang"},"content":"                case \"a/\":","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"lyueyang"},"content":"                    outputList.add(ParserUtil.parseAddress(s).toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"lyueyang"},"content":"                    break;","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"lyueyang"},"content":"                case \"p/\":","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"lyueyang"},"content":"                    outputList.add(ParserUtil.parsePhone(s).toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"lyueyang"},"content":"                    break;","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"lyueyang"},"content":"                case \"tag/\":","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"lyueyang"},"content":"                    outputList.add(ParserUtil.parseTag(s).toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"lyueyang"},"content":"                    break;","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"lyueyang"},"content":"                default:","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"lyueyang"},"content":"                    break;","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"lyueyang"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"lyueyang"},"content":"            } catch (ParseException ignored) {","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"lyueyang"},"content":"                // keyword is dropped as it isn\u0027t a valid term determined by parser","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"lyueyang"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"lyueyang"},"content":"        return outputList;","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"lyueyang"},"content":"    public boolean test(Passenger passenger) {","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"lyueyang"},"content":"        return predicate.test(passenger);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"lyueyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"lyueyang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"lyueyang"},"content":"                || (other instanceof AttributeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"lyueyang"},"content":"                \u0026\u0026 keywords.equals(((AttributeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"lyueyang"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lyueyang":97}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":" * Represents a Passenger\u0027s name in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":58,"JoelHo":1}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":" * Tests that a {@code Passenger}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPassenger\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"    public boolean test(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(passenger.getName().fullName, keyword));","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ZechariahTan":1,"-":27,"JoelHo":4}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":" * Represents a Person. Abstract class to group shared variables between driver and passenger.","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"public abstract class Person {","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"    protected final Name name;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    protected final Phone phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    public Person(Name name, Phone phone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        requireAllNonNull(name, phone);","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"ZechariahTan":3,"-":22,"JoelHo":3}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":" * Represents a Passenger\u0027s phone number in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"-":52,"JoelHo":1}},{"path":"src/main/java/seedu/address/model/person/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":" * Tests that a {@code Passenger}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPassenger\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"    public boolean test(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(passenger.getPhone().toString(), keyword));","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lyueyang":26,"JoelHo":6}},{"path":"src/main/java/seedu/address/model/person/driver/Driver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":" * Represents a Driver to be attached to a Driver.","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"public class Driver extends Person {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     * Every field must be present and not null. Guaranteed by parent constructor.","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    public Driver(Name name, Phone phone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        super(name, phone);","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"     * Returns true if both drivers have the same name.","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isSameDriver(Driver otherDriver) {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"        if (otherDriver \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        return otherDriver !\u003d null","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 otherDriver.getName().equals(getName())","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 otherDriver.getPhone().equals(getPhone());","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"     * Returns true if a given string is a valid representation of Driver.","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"    public static boolean isValidDriver(String driver) throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(driver);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"        /* Driver::toString print in the format of %name; Phone: %phone, therefore length \u003d 1 !\u003d 2 means","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"           the String driver is invalid */","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        String[] driverParams \u003d driver.split(\"; Phone: \");","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"        if (driverParams.length \u003d\u003d 1) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"        } else if (!Name.isValidName(driverParams[0])) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        } else if (!Phone.isValidPhone(driverParams[1])) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"     * Returns true if both drivers have the same identity and data fields.","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"     * This defines a stronger notion of equality between two drivers.","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"        if (!(other instanceof Driver)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"        Driver otherDriver \u003d (Driver) other;","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"        return otherDriver.getName().equals(getName())","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 otherDriver.getPhone().equals(getPhone());","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"        return Objects.hash(name, phone);","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"ZechariahTan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"ZechariahTan"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"ZechariahTan"},"content":"                .append(getPhone());","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"ZechariahTan":60,"JoelHo":32}},{"path":"src/main/java/seedu/address/model/person/passenger/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":" * Represents a Passenger\u0027s address in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ZechariahTan":1,"-":54,"JoelHo":2}},{"path":"src/main/java/seedu/address/model/person/passenger/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":" * Tests that a {@code Passenger}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPassenger\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"    public boolean test(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"lyueyang"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(passenger.getAddress().toString(), keyword));","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"                || (other instanceof AddressContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"                \u0026\u0026 keywords.equals(((AddressContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lyueyang":26,"JoelHo":5}},{"path":"src/main/java/seedu/address/model/person/passenger/Passenger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":" * Represents a Passenger in the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"public class Passenger extends Person {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    private static final String MESSAGE_NO_PRICE_STATED \u003d \"No price was listed by the passenger.\";","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    // Data fields","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    private final Address address;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    private final TripDay tripDay;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    private final TripTime tripTime;","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    private final Optional\u003cPrice\u003e price;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    public Passenger(Name name, Phone phone, Address address, TripDay tripDay, TripTime tripTime, Optional\u003cPrice\u003e price,","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"                     Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"        super(name, phone);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        requireAllNonNull(address, tripDay, tripTime, tags);","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"        this.tripDay \u003d tripDay;","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"        this.tripTime \u003d tripTime;","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"        return address;","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    public TripDay getTripDay() {","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"        return tripDay;","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"    public String getTripDayAsStr() {","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"        return tripDay.toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"    public TripTime getTripTime() {","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"        return tripTime;","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"    public String getTripTimeAsStr() {","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"        return tripTime.toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"    public Optional\u003cPrice\u003e getPrice() {","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"        return price;","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"chewterence"},"content":"    public String priceToString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"        return price.map(Price::toString).orElse(MESSAGE_NO_PRICE_STATED);","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"     * Returns true if both passengers have the same name.","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"    public boolean isSamePassenger(Passenger otherPassenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"        if (otherPassenger \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"ZechariahTan"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"        return otherPassenger !\u003d null","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 otherPassenger.getName().equals(getName())","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 otherPassenger.getPhone().equals(getPhone());","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"     * Returns true if both passengers have the same identity and data fields.","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"     * This defines a stronger notion of equality between two passengers.","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"ZechariahTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"ZechariahTan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"ZechariahTan"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"        if (!(other instanceof Passenger)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"ZechariahTan"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"JoelHo"},"content":"        Passenger otherPassenger \u003d (Passenger) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"JoelHo"},"content":"        return otherPassenger.getName().equals(getName())","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 otherPassenger.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 otherPassenger.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 otherPassenger.getTripDay().equals(getTripDay())","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 otherPassenger.getTripTime().equals(getTripTime())","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 otherPassenger.getPrice().equals(getPrice())","lastModifiedDate":"2021-03-20"},{"lineNumber":117,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 otherPassenger.getTags().equals(getTags());","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"ZechariahTan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"ZechariahTan"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"        return Objects.hash(name, phone, address, tripDay, tripTime, price, tags);","lastModifiedDate":"2021-03-20"},{"lineNumber":124,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"ZechariahTan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"ZechariahTan"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"ZechariahTan"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"ZechariahTan"},"content":"                .append(getPhone())","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"ZechariahTan"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"ZechariahTan"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-11"},{"lineNumber":134,"author":{"gitId":"ZechariahTan"},"content":"                .append(\"; Pool Day: \")","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"ZechariahTan"},"content":"                .append(getTripDay())","lastModifiedDate":"2021-03-11"},{"lineNumber":136,"author":{"gitId":"ZechariahTan"},"content":"                .append(\"; Pool Time: \")","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"JoelHo"},"content":"                .append(getTripTime());","lastModifiedDate":"2021-04-09"},{"lineNumber":138,"author":{"gitId":"JoelHo"},"content":"        getPrice().ifPresent(","lastModifiedDate":"2021-04-09"},{"lineNumber":139,"author":{"gitId":"JoelHo"},"content":"            price -\u003e builder.append(\"; Price: \").append(price)","lastModifiedDate":"2021-04-09"},{"lineNumber":140,"author":{"gitId":"JoelHo"},"content":"        );","lastModifiedDate":"2021-04-09"},{"lineNumber":141,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"ZechariahTan"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"ZechariahTan"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"ZechariahTan"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"ZechariahTan"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"ZechariahTan"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"chewterence":3,"ZechariahTan":119,"JoelHo":28}},{"path":"src/main/java/seedu/address/model/person/passenger/Price.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":" * Represents the highest price a passenger is willing to pay for a ride.","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPrice(String)}","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"public class Price {","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"            \"The price you are willing to pay should be entered as a positive decimal number.\";","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+(\\\\.\\\\d\\\\d?)?\";","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public final Double value;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"     * Constructs a {@code Price}.","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"     *","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     * @param price A valid price.","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    public Price(double price) {","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        checkArgument(isValidPrice(Double.toString(price)), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"        value \u003d price;","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"     * Returns true if a given string is a valid price.","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    public static boolean isValidPrice(String test) {","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"        return Double.toString(value);","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"                || (other instanceof Price // instanceof handles nulls","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 value.equals(((Price) other).value)); // state check","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"        return Double.hashCode(value);","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"ZechariahTan":51}},{"path":"src/main/java/seedu/address/model/person/passenger/PriceIsGreaterThanAmountPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyueyang"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":" * Tests that a {@code Passenger}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"public class PriceIsGreaterThanAmountPredicate implements Predicate\u003cPassenger\u003e {","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"    private final Double price;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"    public PriceIsGreaterThanAmountPredicate(Double price) {","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"        this.price \u003d price;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"    public boolean test(Passenger passenger) {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"        if (passenger.getPrice().isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":"            Price priceToCompare \u003d passenger.getPrice().get();","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"            double userPrice \u003d Double.parseDouble(priceToCompare.toString());","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"            return userPrice \u003e\u003d this.price;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"        } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"                || (other instanceof PriceIsGreaterThanAmountPredicate // instanceof handles nulls","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"                \u0026\u0026 price.equals(((PriceIsGreaterThanAmountPredicate) other).price)); // state check","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"lyueyang"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"lyueyang":30,"markmcwong":4,"JoelHo":1}},{"path":"src/main/java/seedu/address/model/person/passenger/UniquePassengerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.exceptions.DuplicatePassengerException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.exceptions.PassengerNotFoundException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":" * A list of passengers that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":" * A passenger is considered unique by comparing using {@code Passenger#isSamePassenger(Passenger)}. As such, adding and","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":" * updating of passenger uses Passenger#isSamePassenger(Passenger) for equality so as to ensure that the passenger being","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":" * added or updated is unique in terms of identity in the UniquePassengerList. However, the removal of a passenger uses","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":" * Passenger#equals(Object) so as to ensure that the passenger with exactly the same fields will be removed.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":" * @see Passenger#isSamePassenger(Passenger)","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"public class UniquePassengerList implements Iterable\u003cPassenger\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"    private final ObservableList\u003cPassenger\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"    private final ObservableList\u003cPassenger\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"     * Returns true if the list contains an equivalent passenger as the given argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    public boolean contains(Passenger toCheck) {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"     * Returns true if the list contains an equal passenger as the given argument.","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"    public boolean containsEqual(Passenger toCheck) {","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"     * Adds a passenger to the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"     * The passenger must not already exist in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"    public void add(Passenger toAdd) {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"            throw new DuplicatePassengerException();","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"     * Replaces the passenger {@code target} in the list with {@code editedPassenger}.","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"     * The passenger identity of {@code editedPassenger} must not be the same as another existing passenger in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger(Passenger target, Passenger editedPassenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"        requireAllNonNull(target, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"            throw new PassengerNotFoundException();","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"        if (!target.isSamePassenger(editedPassenger) \u0026\u0026 contains(editedPassenger)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"            throw new DuplicatePassengerException();","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"        internalList.set(index, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"     * Removes the equivalent passenger from the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"     * The passenger must exist in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"    public void remove(Passenger toRemove) {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"            throw new PassengerNotFoundException();","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"    public void setPassengers(UniquePassengerList replacement) {","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"     * Replaces the contents of this list with {@code passengers}.","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"     * {@code passengers} must not contain duplicate passengers.","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"    public void setPassengers(List\u003cPassenger\u003e passengers) {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"        requireAllNonNull(passengers);","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"        if (!passengersAreUnique(passengers)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"            throw new DuplicatePassengerException();","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"        internalList.setAll(passengers);","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"JoelHo"},"content":"    public ObservableList\u003cPassenger\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"JoelHo"},"content":"    public Iterator\u003cPassenger\u003e iterator() {","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"JoelHo"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"JoelHo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"JoelHo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"JoelHo"},"content":"                || (other instanceof UniquePassengerList // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"JoelHo"},"content":"                        \u0026\u0026 internalList.equals(((UniquePassengerList) other).internalList));","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"JoelHo"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"JoelHo"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"JoelHo"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"     * Returns true if {@code passengers} contains only unique passengers.","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"JoelHo"},"content":"    private boolean passengersAreUnique(List\u003cPassenger\u003e passengers) {","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"JoelHo"},"content":"        for (int i \u003d 0; i \u003c passengers.size() - 1; i++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"JoelHo"},"content":"            for (int j \u003d i + 1; j \u003c passengers.size(); j++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"JoelHo"},"content":"                if (passengers.get(i).isSamePassenger(passengers.get(j))) {","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"JoelHo"},"content":"                    return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"JoelHo"},"content":"                }","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"JoelHo"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"JoelHo"},"content":"        return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"JoelHo":145}},{"path":"src/main/java/seedu/address/model/person/passenger/exceptions/DuplicatePassengerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":" * Signals that the operation will result in duplicate Passengers (Passengers are considered duplicates if they have the","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":" * same identity).","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"public class DuplicatePassengerException extends RuntimeException {","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"    public DuplicatePassengerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"        super(\"Operation would result in duplicate passengers\");","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":5,"JoelHo":6}},{"path":"src/main/java/seedu/address/model/person/passenger/exceptions/PassengerNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":" * Signals that the operation is unable to find the specified passenger.","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"public class PassengerNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"-":3,"JoelHo":3}},{"path":"src/main/java/seedu/address/model/pool/Pool.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.model.pool;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":" * Represents a Pool.","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":" * Guarantees: details relevant for a trip are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"public class Pool {","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    // Data fields","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"    private final Driver driver;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    private final TripDay tripDay;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    private final TripTime tripTime;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    private final List\u003cPassenger\u003e passengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"     * Every field must be present and not null. Ensures a pool cannot be created with no passengers.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"    public Pool(Driver driver, TripDay tripDay, TripTime tripTime, List\u003cPassenger\u003e passengers, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"        requireAllNonNull(driver, tripDay, tripTime);","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"        // ensures a trip cannot be created with no passengers","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"        if (passengers.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"            throw new NullPointerException();","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"        this.tripDay \u003d tripDay;","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        this.tripTime \u003d tripTime;","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"        this.driver \u003d driver;","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        this.passengers \u003d new ArrayList\u003c\u003e(passengers);","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"    public String getTripDayAsStr() {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"        return tripDay.toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"    public TripDay getTripDay() {","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"        return tripDay;","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"    public String getTripTimeAsStr() {","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"        return tripTime.toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"    public TripTime getTripTime() {","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"        return tripTime;","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"    public String getDriverAsStr() {","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"        return driver.toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"    public Driver getDriver() {","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"        return driver;","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"     * Returns an immutable passengers list, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"    public List\u003cPassenger\u003e getPassengers() {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"        return Collections.unmodifiableList(passengers);","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"     * Replaces the passenger {@code target} in the internal passenger list with {@code editedPassenger},","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"     * if {@code target} exists.","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"    public Pool setPassenger(Passenger target, Passenger editedPassenger) {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        requireAllNonNull(target, editedPassenger);","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"        int index \u003d passengers.indexOf(target);","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"            return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e newPassengers \u003d new ArrayList\u003c\u003e(passengers);","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"        newPassengers.set(index, editedPassenger);","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"        return new Pool(driver, tripDay, tripTime, newPassengers, tags);","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"    public boolean hasPassenger(Passenger key) {","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"        return passengers.stream().anyMatch(key::equals);","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"ZechariahTan"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"ZechariahTan"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"ZechariahTan"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"ZechariahTan"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"JoelHo"},"content":"     * Returns true if both trips have same driver, date, and time.","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"ZechariahTan"},"content":"     * This defines a weaker notion of equality between two trips.","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"ZechariahTan"},"content":"    public boolean isSamePool(Pool otherPool) {","lastModifiedDate":"2021-03-26"},{"lineNumber":117,"author":{"gitId":"ZechariahTan"},"content":"        if (otherPool \u003d\u003d this) {","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"ZechariahTan"},"content":"            return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"ZechariahTan"},"content":"        return otherPool !\u003d null","lastModifiedDate":"2021-03-26"},{"lineNumber":122,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 otherPool.getDriver().equals(getDriver())","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 otherPool.getTripDay().equals(getTripDay())","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 otherPool.getTripTime().equals(getTripTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"lyueyang"},"content":"     * Presents Passenger names in a single string","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"lyueyang"},"content":"     * @return String of Passenger names","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"lyueyang"},"content":"    public String getPassengerNames() {","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"lyueyang"},"content":"        StringJoiner passengerNames \u003d new StringJoiner(\", \");","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"lyueyang"},"content":"        for (Passenger p : passengers) {","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"lyueyang"},"content":"            passengerNames.add(p.getName().toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"lyueyang"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"lyueyang"},"content":"        return passengerNames.toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"markmcwong"},"content":"     * Returns true if both pools have the same identity and data fields.","lastModifiedDate":"2021-04-06"},{"lineNumber":143,"author":{"gitId":"markmcwong"},"content":"     * This defines a stronger notion of equality between two pools.","lastModifiedDate":"2021-04-06"},{"lineNumber":144,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"ZechariahTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"ZechariahTan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"ZechariahTan"},"content":"            return true;","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"ZechariahTan"},"content":"        if (!(other instanceof Pool)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"ZechariahTan"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"ZechariahTan"},"content":"        Pool otherPool \u003d (Pool) other;","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"ZechariahTan"},"content":"        return isSamePool(otherPool)","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"ZechariahTan"},"content":"                \u0026\u0026 otherPool.getTags().equals(getTags());","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"ZechariahTan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"ZechariahTan"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"ZechariahTan"},"content":"        return Objects.hash(driver, tripDay, tripTime, passengers, tags);","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"ZechariahTan"},"content":"    public String toString() {","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"ZechariahTan"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"ZechariahTan"},"content":"        builder.append(\"Driver: \")","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"ZechariahTan"},"content":"                .append(getDriverAsStr())","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"ZechariahTan"},"content":"                .append(\"; Pool Day: \")","lastModifiedDate":"2021-03-26"},{"lineNumber":172,"author":{"gitId":"ZechariahTan"},"content":"                .append(getTripDayAsStr())","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"ZechariahTan"},"content":"                .append(\"; Pool Time: \")","lastModifiedDate":"2021-03-26"},{"lineNumber":174,"author":{"gitId":"ZechariahTan"},"content":"                .append(getTripTimeAsStr())","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"ZechariahTan"},"content":"                .append(\"; Passengers: \");","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"ZechariahTan"},"content":"        passengers.forEach(builder::append);","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"ZechariahTan"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"ZechariahTan"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"ZechariahTan"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"ZechariahTan"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"ZechariahTan"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"chewterence":2,"lyueyang":15,"ZechariahTan":136,"markmcwong":2,"JoelHo":33}},{"path":"src/main/java/seedu/address/model/pool/PooledPassengerContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.model.pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":" * Tests that a {@code Passenger}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"public class PooledPassengerContainsKeywordsPredicate implements Predicate\u003cPool\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    public PooledPassengerContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"    public boolean test(Pool pool) {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"                .anyMatch(keyword -\u003e pool.getPassengers().stream().anyMatch(passenger -\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"                        StringUtil.containsWordIgnoreCase(passenger.getName().toString(), keyword)));","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"                || (other instanceof PooledPassengerContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"                \u0026\u0026 keywords.equals(((PooledPassengerContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"markmcwong":32}},{"path":"src/main/java/seedu/address/model/pool/UniquePoolList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.model.pool;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.exceptions.DuplicatePoolException;","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.exceptions.PoolNotFoundException;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":" * A list of pools that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":" * A pool is considered unique by comparing using {@code Pool#isSamePool(Pool)}. As such, adding and","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":" * updating of pool uses Pool#isSamePool(Pool) for equality so as to ensure that the pool being","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":" * added or updated is unique in terms of identity in the UniquePoolList. However, the removal of a pool uses","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":" * Pool#equals(Object) so as to ensure that the pool with exactly the same fields will be removed.","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":" *","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":" *","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":" * @see Pool#isSamePool(Pool)","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"public class UniquePoolList implements Iterable\u003cPool\u003e {","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    private final ObservableList\u003cPool\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    private final ObservableList\u003cPool\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"     * Returns true if the list contains an equivalent pool as the given argument.","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"    public boolean contains(Pool toCheck) {","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePool);","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"     * Adds a pool to the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"     * The pool must not already exist in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"    public void add(Pool toAdd) {","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"            throw new DuplicatePoolException();","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"     * Replaces the pool {@code target} in the list with {@code editedPool}.","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"     * The pool identity of {@code editedPool} must not be the same as another existing pool in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"    public void setPool(Pool target, Pool editedPool) {","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"        requireAllNonNull(target, editedPool);","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"            throw new PoolNotFoundException();","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"        if (!target.isSamePool(editedPool) \u0026\u0026 contains(editedPool)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"            throw new DuplicatePoolException();","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"        internalList.set(index, editedPool);","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"     * Removes the equivalent pool from the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"     * The pool must exist in the list.","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"    public void remove(Pool toRemove) {","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"            throw new PoolNotFoundException();","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":"    public void setPools(UniquePoolList replacement) {","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"ZechariahTan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"ZechariahTan"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-26"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":"     * Replaces the contents of this list with {@code pools}.","lastModifiedDate":"2021-03-26"},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":"     * {@code pools} must not contain duplicate pools.","lastModifiedDate":"2021-03-26"},{"lineNumber":92,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":93,"author":{"gitId":"ZechariahTan"},"content":"    public void setPools(List\u003cPool\u003e pool) {","lastModifiedDate":"2021-03-26"},{"lineNumber":94,"author":{"gitId":"ZechariahTan"},"content":"        requireAllNonNull(pool);","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":"        if (!poolsAreUnique(pool)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"            throw new DuplicatePoolException();","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"ZechariahTan"},"content":"        internalList.setAll(pool);","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"     * Replaces the passenger {@code target} in the pools with {@code editedPassenger}, if any.","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger(Passenger target, Passenger editedPassenger) {","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"        requireAllNonNull(target, editedPassenger);","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"        List\u003cPool\u003e newList \u003d internalList.stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"                .map(pool -\u003e pool.setPassenger(target, editedPassenger))","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"JoelHo"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"        internalList.setAll(newList);","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-04-11"},{"lineNumber":116,"author":{"gitId":"JoelHo"},"content":"     * Returns true if one or more pools contain a passenger that is equal to {@code key}.","lastModifiedDate":"2021-04-11"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"     * @param key the {@code Passenger} to search for.","lastModifiedDate":"2021-04-11"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"     * @return true if at least one pool contains {@code key}, false otherwise.","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"JoelHo"},"content":"    public boolean containsPassenger(Passenger key) {","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"JoelHo"},"content":"        return internalList.stream().anyMatch(pool -\u003e pool.hasPassenger(key));","lastModifiedDate":"2021-04-11"},{"lineNumber":122,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"ZechariahTan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"ZechariahTan"},"content":"    public ObservableList\u003cPool\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"ZechariahTan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":130,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":131,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":132,"author":{"gitId":"ZechariahTan"},"content":"    public Iterator\u003cPool\u003e iterator() {","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"ZechariahTan"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-26"},{"lineNumber":134,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":135,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"ZechariahTan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"ZechariahTan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"ZechariahTan"},"content":"                || (other instanceof UniquePoolList // instanceof handles nulls","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"ZechariahTan"},"content":"                        \u0026\u0026 internalList.equals(((UniquePoolList) other).internalList));","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"ZechariahTan"},"content":"    @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"ZechariahTan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"ZechariahTan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"ZechariahTan"},"content":"     * Returns true if {@code pool} contains only unique pool.","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"ZechariahTan"},"content":"    private boolean poolsAreUnique(List\u003cPool\u003e pool) {","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"ZechariahTan"},"content":"        for (int i \u003d 0; i \u003c pool.size() - 1; i++) {","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"ZechariahTan"},"content":"            for (int j \u003d i + 1; j \u003c pool.size(); j++) {","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"ZechariahTan"},"content":"                if (pool.get(i).isSamePool(pool.get(j))) {","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"ZechariahTan"},"content":"                    return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"ZechariahTan"},"content":"                }","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"ZechariahTan"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"ZechariahTan"},"content":"        return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"ZechariahTan":137,"JoelHo":24}},{"path":"src/main/java/seedu/address/model/pool/exceptions/DuplicatePoolException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.model.pool.exceptions;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":" * Signals that the operation will result in duplicate Passengers (Passengers are considered duplicates if they have the","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":" * same identity).","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"public class DuplicatePoolException extends RuntimeException {","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"    public DuplicatePoolException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"        super(\"Operation would result in duplicate pools\");","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"ZechariahTan":11}},{"path":"src/main/java/seedu/address/model/pool/exceptions/PoolNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.model.pool.exceptions;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":" * Signals that the operation is unable to find the specified passenger.","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"public class PoolNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"ZechariahTan":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should be alphanumeric, and can only have a maximum of \"","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"            + \"30 characters.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"        if (test.length() \u003e 30) {","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"            return false;","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"        }","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chewterence":3,"ZechariahTan":2,"-":53}},{"path":"src/main/java/seedu/address/model/tag/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lyueyang"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"lyueyang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":" * Tests that a {@code Passenger}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPassenger\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"    public boolean test(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"                    passenger.getTags().stream().anyMatch(tag -\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"                        StringUtil.containsWordIgnoreCase(tag.toString(), keyword)","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"lyueyang"},"content":"                ));","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"lyueyang"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"lyueyang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"lyueyang"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"lyueyang"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"lyueyang"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lyueyang":30,"JoelHo":5}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import java.util.List;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    private static final Optional\u003cPrice\u003e NO_PRICE \u003d Optional.empty();","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    private static final DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"     * Prevents SampleDataUtil from being instantiated.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"    private SampleDataUtil() {}","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"    public static Passenger[] getSamplePassengers() {","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        return new Passenger[] {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"            new Passenger(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"                new TripDay(DayOfWeek.valueOf(\"MONDAY\")), new TripTime(LocalTime.parse(\"1400\", timeFormat)),","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"                NO_PRICE,","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"marketing\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"            new Passenger(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"                new TripDay(DayOfWeek.valueOf(\"WEDNESDAY\")), new TripTime(LocalTime.parse(\"2130\", timeFormat)),","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"                NO_PRICE,","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"finance\", \"marketing\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"            new Passenger(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"                new TripDay(DayOfWeek.valueOf(\"THURSDAY\")), new TripTime(LocalTime.parse(\"0845\", timeFormat)),","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"                NO_PRICE,","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"management\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"            new Passenger(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"                new TripDay(DayOfWeek.valueOf(\"FRIDAY\")), new TripTime(LocalTime.parse(\"1305\", timeFormat)),","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"                NO_PRICE,","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"operations\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"            new Passenger(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"                new TripDay(DayOfWeek.valueOf(\"TUESDAY\")), new TripTime(LocalTime.parse(\"1930\", timeFormat)),","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"                NO_PRICE,","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"sales\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"            new Passenger(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"                new TripDay(DayOfWeek.valueOf(\"MONDAY\")), new TripTime(LocalTime.parse(\"0915\", timeFormat)),","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"                NO_PRICE,","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"finance\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"            new Passenger(new Name(\"Kristen Woo\"), new Phone(\"85313089\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"                new Address(\"Blk 37 Toa Payoh Street 28, #15-37\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"                new TripDay(DayOfWeek.valueOf(\"MONDAY\")), new TripTime(LocalTime.parse(\"0900\", timeFormat)),","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"                NO_PRICE,","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"operations\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"            new Passenger(new Name(\"Lenny Hoon\"), new Phone(\"99750221\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"                new Address(\"Blk 27 Aljunied Street 78, #14-42\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"                new TripDay(DayOfWeek.valueOf(\"THURSDAY\")), new TripTime(LocalTime.parse(\"1200\", timeFormat)),","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"                NO_PRICE,","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"management\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"            new Passenger(new Name(\"Turner Peck\"), new Phone(\"98121532\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"                new Address(\"Blk 25 Woodlands Street 70, #10-19\"),","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"                new TripDay(DayOfWeek.valueOf(\"THURSDAY\")), new TripTime(LocalTime.parse(\"1215\", timeFormat)),","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"                NO_PRICE,","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"marketing\"))","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"        };","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"    public static Pool[] getSamplePools() {","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"        return new Pool[] {","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"            new Pool(","lastModifiedDate":"2021-04-10"},{"lineNumber":94,"author":{"gitId":"JoelHo"},"content":"                new Driver(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"                new TripDay(DayOfWeek.MONDAY),","lastModifiedDate":"2021-04-10"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"                new TripTime(LocalTime.of(12, 0)),","lastModifiedDate":"2021-04-10"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"                List.of(","lastModifiedDate":"2021-04-10"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"                    getSamplePassengers()[5],","lastModifiedDate":"2021-04-10"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"                    getSamplePassengers()[6]","lastModifiedDate":"2021-04-10"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"                ),","lastModifiedDate":"2021-04-10"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"                new HashSet\u003c\u003e()","lastModifiedDate":"2021-04-10"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"            ),","lastModifiedDate":"2021-04-10"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"            new Pool(","lastModifiedDate":"2021-04-10"},{"lineNumber":104,"author":{"gitId":"JoelHo"},"content":"                new Driver(new Name(\"Alan Poh\"), new Phone(\"88526716\")),","lastModifiedDate":"2021-04-10"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"                new TripDay(DayOfWeek.THURSDAY),","lastModifiedDate":"2021-04-11"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"                new TripTime(LocalTime.of(12, 0)),","lastModifiedDate":"2021-04-10"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"                List.of(","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"                    getSamplePassengers()[7],","lastModifiedDate":"2021-04-10"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"                    getSamplePassengers()[8]","lastModifiedDate":"2021-04-10"},{"lineNumber":110,"author":{"gitId":"JoelHo"},"content":"                ),","lastModifiedDate":"2021-04-10"},{"lineNumber":111,"author":{"gitId":"JoelHo"},"content":"                getTagSet(\"lunch\")","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"            ),","lastModifiedDate":"2021-04-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"        for (Passenger samplePassenger : getSamplePassengers()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"JoelHo"},"content":"            sampleAb.addPassenger(samplePassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":121,"author":{"gitId":"JoelHo"},"content":"        for (Pool samplePool : getSamplePools()) {","lastModifiedDate":"2021-04-10"},{"lineNumber":122,"author":{"gitId":"JoelHo"},"content":"            sampleAb.addPool(samplePool);","lastModifiedDate":"2021-04-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2021-04-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"chewterence":2,"ZechariahTan":21,"-":42,"JoelHo":71}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDriver.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":" * Jackson-friendly version of {@link Driver}.","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"class JsonAdaptedDriver {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Driver\u0027s %s field is missing!\";","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    public static final String MODEL_CLASS_NAME \u003d \"Driver\";","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"    public static final StorageUtil MODEL_UTIL \u003d new StorageUtil(MODEL_CLASS_NAME);","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"    private final String name;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"    private final String phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code name}.","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"    public JsonAdaptedDriver(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone) {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    public JsonAdaptedDriver(Driver source) {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"        this.name \u003d source.getName().fullName;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"        this.phone \u003d source.getPhone().value;","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"    public Driver toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        final Name modelName \u003d MODEL_UTIL.verifyAndReturnName(name);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"        final Phone modelPhone \u003d MODEL_UTIL.verifyAndReturnPhone(phone);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"        return new Driver(modelName, modelPhone);","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"markmcwong":1,"JoelHo":50}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPassenger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":" * Jackson-friendly version of {@link Passenger}.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"class JsonAdaptedPassenger {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Passenger\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"    public static final String MODEL_CLASS_NAME \u003d \"Passenger\";","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"    public static final StorageUtil MODEL_UTIL \u003d new StorageUtil(MODEL_CLASS_NAME);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    private final String tripDayStr;","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    private final String tripTimeStr;","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    private final String priceStr;","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"     * Constructs a {@code JsonAdaptedPassenger} with the given passenger details.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"    public JsonAdaptedPassenger(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"                                @JsonProperty(\"address\") String address, @JsonProperty(\"tripDay\") String tripDayStr,","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"                                @JsonProperty(\"tripTime\") String tripTimeStr, @JsonProperty(\"price\") String priceStr,","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"                                @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"        this.tripDayStr \u003d tripDayStr;","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"        this.tripTimeStr \u003d tripTimeStr;","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"        this.priceStr \u003d priceStr;","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"     * Converts a given {@code Passenger} into this class for Jackson use.","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"    public JsonAdaptedPassenger(Passenger source) {","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"        tripDayStr \u003d source.getTripDayAsStr();","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"        tripTimeStr \u003d source.getTripTimeAsStr();","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"        priceStr \u003d source.getPrice().map(Price::toString).orElse(\"\");","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"     * Converts this Jackson-friendly adapted passenger object into the model\u0027s {@code Passenger} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted passenger.","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"    public Passenger toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"        final Set\u003cTag\u003e modelTags \u003d MODEL_UTIL.convertAdaptedTagsToModel(tagged);","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"        final Name modelName \u003d MODEL_UTIL.verifyAndReturnName(name);","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"        final Phone modelPhone \u003d MODEL_UTIL.verifyAndReturnPhone(phone);","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"        final Address modelAddress \u003d MODEL_UTIL.verifyAndReturnAddress(address);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"        final TripDay modelTripDay \u003d MODEL_UTIL.verifyAndReturnTripDay(tripDayStr);","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"        final TripTime modelTripTime \u003d MODEL_UTIL.verifyAndReturnTripTime(tripTimeStr);","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"        final Optional\u003cPrice\u003e modelPrice \u003d Optional.ofNullable(MODEL_UTIL.verifyAndReturnPrice(priceStr));","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":"        return new Passenger(modelName, modelPhone, modelAddress, modelTripDay, modelTripTime, modelPrice,","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":"                modelTags);","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chewterence":2,"ZechariahTan":16,"-":51,"JoelHo":25}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPool.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":" * Jackson-friendly version of {@link Pool}.","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"class JsonAdaptedPool {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Pool\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"    public static final String MODEL_CLASS_NAME \u003d \"Pool\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    public static final StorageUtil MODEL_UTIL \u003d new StorageUtil(MODEL_CLASS_NAME);","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"    private final String tripDayStr;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    private final String tripTimeStr;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"    private final List\u003cJsonAdaptedPassenger\u003e passengers;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"    private final JsonAdaptedDriver driver;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"     * Constructs a {@code JsonAdaptedPool} with the given fields.","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"    public JsonAdaptedPool(@JsonProperty(\"tripDay\") String tripDayStr, @JsonProperty(\"tripTime\") String tripTimeStr,","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"                           @JsonProperty(\"passengers\") List\u003cJsonAdaptedPassenger\u003e passengers,","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"                           @JsonProperty(\"driver\") JsonAdaptedDriver driver) {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        this.tripDayStr \u003d tripDayStr;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"        this.tripTimeStr \u003d tripTimeStr;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"        this.passengers \u003d passengers;","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"        this.driver \u003d driver;","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"     * Converts a given {@code Pool} into this class for Jackson use.","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"    public JsonAdaptedPool(Pool source) {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        this.tripDayStr \u003d source.getTripDayAsStr();","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"        this.tripTimeStr \u003d source.getTripTimeAsStr();","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"        this.passengers \u003d source.getPassengers().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"                .map(JsonAdaptedPassenger::new)","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"        this.driver \u003d new JsonAdaptedDriver(source.getDriver());","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"    public Pool toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"        final Driver modelDriver \u003d driver.toModelType();","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"        final TripDay modelTripDay \u003d MODEL_UTIL.verifyAndReturnTripDay(tripDayStr);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"        final TripTime modelTripTime \u003d MODEL_UTIL.verifyAndReturnTripTime(tripTimeStr);","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"        final List\u003cPassenger\u003e modelPassengers \u003d MODEL_UTIL.convertAdaptedPassengersToModel(passengers);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"        final Set\u003cTag\u003e modelTags \u003d MODEL_UTIL.convertAdaptedTagsToModel(tagged);","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"        return new Pool(modelDriver, modelTripDay, modelTripTime, modelPassengers, modelTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"chewterence":2,"JoelHo":78}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":79,"JoelHo":1}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_DUPLICATE_PASSENGER \u003d \"Passengers list contains duplicate passenger(s).\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_DUPLICATE_POOL \u003d \"Pool list contains duplicate pool(s).\";","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_DUPLICATE_PASSENGER_REF \u003d \"Two or more Pool(s) reference the same passenger.\";","lastModifiedDate":"2021-04-11"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"    public static final String MESSAGE_POOL_PASSENGER_INVALID \u003d \"Pool(s) contain passenger(s) not in passenger list.\";","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"    private final List\u003cJsonAdaptedPassenger\u003e passengers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    private final List\u003cJsonAdaptedPool\u003e pools \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given passengers.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"passengers\") List\u003cJsonAdaptedPassenger\u003e passengers,","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"                                       @JsonProperty(\"pools\") List\u003cJsonAdaptedPool\u003e pools) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"        this.passengers.addAll(passengers);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"        this.pools.addAll(pools);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        this.passengers.addAll(source.getPassengerList().stream().map(JsonAdaptedPassenger::new)","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"        this.pools.addAll(source.getPoolList().stream().map(JsonAdaptedPool::new)","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"        for (JsonAdaptedPassenger jsonAdaptedPassenger : passengers) {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"            Passenger passenger \u003d jsonAdaptedPassenger.toModelType();","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"            if (addressBook.hasPassenger(passenger)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PASSENGER);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"            addressBook.addPassenger(passenger);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"        for (JsonAdaptedPool jsonAdaptedPool : pools) {","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"            Pool pool \u003d jsonAdaptedPool.toModelType();","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"            if (addressBook.hasPool(pool)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_POOL);","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"            if (pool.getPassengers().stream().anyMatch(addressBook::hasPoolWithPassenger)) {","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PASSENGER_REF);","lastModifiedDate":"2021-04-11"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"            }","lastModifiedDate":"2021-04-11"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"            if (pool.getPassengers().stream().anyMatch(passenger -\u003e !addressBook.hasEqualPassenger(passenger))) {","lastModifiedDate":"2021-04-11"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"                throw new IllegalValueException(MESSAGE_POOL_PASSENGER_INVALID);","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"            }","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"            addressBook.addPool(pool);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":48,"JoelHo":36}},{"path":"src/main/java/seedu/address/storage/StorageUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":" * Utility class to verify JsonAdapted classes.","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"public class StorageUtil {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"    private static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"%s\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"    private final String modelClassname;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    public StorageUtil(String modelClassname) {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"        this.modelClassname \u003d modelClassname;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"     * Converts the given {@code List\u003cJsonAdaptedTag\u003e} to a {@code Set\u003cTag\u003e} by calling","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"     * {@code JsonAdaptedTag::toModelType}.","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"     * @param tagList the List of JsonAdaptedTag to convert.","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"     * @return the Set of {@code Tag} compatible with {@code Model}.","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if any of the {@code Tag}s is invalid or empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"    public Set\u003cTag\u003e convertAdaptedTagsToModel(List\u003cJsonAdaptedTag\u003e tagList) throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"        for (JsonAdaptedTag tag : tagList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"            modelTags.add(tag.toModelType());","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"        return modelTags;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"     * Converts the given {@code List\u003cJsonAdaptedPassenger\u003e} to a {@code List\u003cPassenger\u003e} by calling","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"     * {@code JsonAdaptedPassenger::toModelType}.","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"     * @param passengerList the List of JsonAdaptedPassenger to convert.","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"     * @return the List of {@code Passenger} compatible with {@code Model}.","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if any of the {@code Passenger}s is invalid.","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"    public List\u003cPassenger\u003e convertAdaptedPassengersToModel(List\u003cJsonAdaptedPassenger\u003e passengerList)","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"            throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"        final List\u003cPassenger\u003e modelPassengers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"        for (JsonAdaptedPassenger tag : passengerList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"            modelPassengers.add(tag.toModelType());","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"        return modelPassengers;","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"     * Verifies that the given name String is a valid Name, and returns it as a {@code Name} if so.","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"     * @param name the name to verify.","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"     * @return the name, as a {@code Name}.","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if the given name is invalid or empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"    public Name verifyAndReturnName(String name) throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, modelClassname,","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"                    Name.class.getSimpleName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"        return new Name(name);","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"     * Verifies that the given phone String is a valid Phone, and returns it as a {@code Phone} if so.","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"     * @param phone the phone String to verify.","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"     * @return the phone number, as a {@code Phone}.","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if the given phone is invalid or empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"    public Phone verifyAndReturnPhone(String phone) throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, modelClassname,","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"JoelHo"},"content":"                    Phone.class.getSimpleName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"        return new Phone(phone);","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"     * Verifies that the given address String is a valid Address, and returns it as a {@code Address} if so.","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"     * @param address the address String to verify.","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"     * @return the address, as a {@code Address}.","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if the given address is invalid or empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"    public Address verifyAndReturnAddress(String address) throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"JoelHo"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, modelClassname,","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"JoelHo"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"        return new Address(address);","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"JoelHo"},"content":"     * Verifies that the given tripDay String is a valid TripDay, and returns it as a {@code TripDay} if so.","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"JoelHo"},"content":"     * @param tripDay the trip day String to verify.","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"JoelHo"},"content":"     * @return the trip day, as a {@code TripDay}.","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if the given tripDay is invalid or empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"JoelHo"},"content":"    public TripDay verifyAndReturnTripDay(String tripDay) throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"JoelHo"},"content":"        if (tripDay \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, modelClassname,","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"JoelHo"},"content":"                    TripDay.class.getSimpleName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"        final DayOfWeek day;","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"JoelHo"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"JoelHo"},"content":"            day \u003d DayOfWeek.valueOf(tripDay);","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"JoelHo"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(TripDay.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"JoelHo"},"content":"        return new TripDay(day);","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"JoelHo"},"content":"     * Verifies that the given tripTime String is a valid TripTime, and returns it as a {@code TripTime} if so.","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"JoelHo"},"content":"     * @param tripTime the trip time String to verify.","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"JoelHo"},"content":"     * @return the trip time, as a {@code TripTime}.","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if the given tripTime is invalid or empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"JoelHo"},"content":"    public TripTime verifyAndReturnTripTime(String tripTime) throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"JoelHo"},"content":"        if (tripTime \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, modelClassname,","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"JoelHo"},"content":"                    TripTime.class.getSimpleName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"JoelHo"},"content":"        final DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"JoelHo"},"content":"        final LocalTime parsedTimeObject;","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"JoelHo"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"JoelHo"},"content":"            parsedTimeObject \u003d LocalTime.parse(tripTime, timeFormat);","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"JoelHo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(TripTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"JoelHo"},"content":"        return new TripTime(parsedTimeObject);","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"JoelHo"},"content":"     * Verifies that the given price String is a valid Price, and returns it as a {@code Price} if so.","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"JoelHo"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"JoelHo"},"content":"     * @param price the price String to verify.","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"JoelHo"},"content":"     * @return the price, as a {@code Price}, if the price is not empty, null otherwise.","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"JoelHo"},"content":"     * @throws IllegalValueException if the given price is invalid.","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"JoelHo"},"content":"    public Price verifyAndReturnPrice(String price) throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"JoelHo"},"content":"        if (price \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, modelClassname,","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"JoelHo"},"content":"                    Price.class.getSimpleName()));","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":180,"author":{"gitId":"JoelHo"},"content":"        if (price.isEmpty()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"JoelHo"},"content":"            return null;","lastModifiedDate":"2021-03-28"},{"lineNumber":182,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":183,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"JoelHo"},"content":"        if (!Price.isValidPrice(price)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"JoelHo"},"content":"            throw new IllegalValueException(Price.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"JoelHo"},"content":"        return new Price(Double.parseDouble(price));","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"chewterence":2,"JoelHo":188}},{"path":"src/main/java/seedu/address/ui/FilteredPassengerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":" * Panel containing the list of passengers.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"public class FilteredPassengerListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"    private static final String FXML \u003d \"PassengerListPanel.fxml\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    private ListView\u003cPassenger\u003e passengerListView;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"     * Creates a {@code PassengerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"    public FilteredPassengerListPanel(ObservableList\u003cPassenger\u003e passengerList) {","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"        super(FXML);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"        passengerListView.setItems(passengerList);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"        passengerListView.setCellFactory(listView -\u003e new FreePassengerListViewCell());","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Passenger} using a {@code PassengerCard}.","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"    static class FreePassengerListViewCell extends ListCell\u003cPassenger\u003e {","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"        protected void updateItem(Passenger passenger, boolean empty) {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"            super.updateItem(passenger, empty);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"            if (empty || passenger \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"                setText(null);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"            } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"                setGraphic(new PassengerCard(passenger, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"JoelHo":44}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w10-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"    public static final String HELP_MESSAGE \u003d \"For more information on how to use the GreenMileageEfforts terminal,\"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"            + \" please refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chewterence":3,"-":100}},{"path":"src/main/java/seedu/address/ui/LabelWithIcon.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.control.OverrunStyle;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":" * A ui that display a group consists of an icon and a label for any card","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"public class LabelWithIcon extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    private static final String FXML \u003d \"LabelWithIcon.fxml\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    private Image icon;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    private Label text;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"    private ImageView iconHolder;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"    private HBox labelWithIcon;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"     * Creates {@code StatusBarFooter} with the given {@code String} of icon\u0027s file path and text","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"    public LabelWithIcon(String iconImgPath, String textToDisplay) {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"        super(FXML);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"        requireNonNull(iconImgPath);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"        InputStream imgStream \u003d getClass().getResourceAsStream(iconImgPath);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        requireNonNull(imgStream);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"        icon \u003d new Image(imgStream);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"        iconHolder.setImage(icon);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"        text.setText(textToDisplay);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"        text.setTextOverrun(OverrunStyle.CLIP);","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        labelWithIcon.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"markmcwong":46}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    private FilteredPassengerListPanel filteredPassengerListPanel;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"    private PoolListPanel poolListPanel;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"    private StackPane filteredPassengerListPanelPlaceholder;","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"    private StackPane poolListPanelPlaceholder;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"        filteredPassengerListPanel \u003d new FilteredPassengerListPanel(logic.getFilteredPassengerList());","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"        filteredPassengerListPanelPlaceholder.getChildren().add(filteredPassengerListPanel.getRoot());","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"        //TODO: removed creation of takenPassengerListPanel here as the logic should no longer support getting a","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"ZechariahTan"},"content":"        // passenger list by drivers","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"markmcwong"},"content":"        poolListPanel \u003d new PoolListPanel(logic.getFilteredPoolList());","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"markmcwong"},"content":"        poolListPanelPlaceholder.getChildren().add(poolListPanel.getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"JoelHo"},"content":"    public FilteredPassengerListPanel getFreePassengerListPanel() {","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"JoelHo"},"content":"        return filteredPassengerListPanel;","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"markmcwong"},"content":"    public PoolListPanel getPoolListPanel() {","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"markmcwong"},"content":"        return poolListPanel;","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ZechariahTan":2,"markmcwong":8,"-":192,"JoelHo":6}},{"path":"src/main/java/seedu/address/ui/PassengerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":" * An UI component that displays information of a {@code Passenger}.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"public class PassengerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"    private static final String FXML \u003d \"PassengerListCard.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    private static final String ICON_PATH_ADDRESS \u003d \"/images/address.png\";","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    private static final String ICON_PATH_PHONE \u003d \"/images/phone.png\";","lastModifiedDate":"2021-04-11"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    private static final String ICON_PATH_PRICE \u003d \"/images/price.png\";","lastModifiedDate":"2021-04-11"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    private static final String ICON_PATH_TIME \u003d \"/images/time.png\";","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    public final Passenger passenger;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"    private VBox cardFieldContainer;","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"     * Creates a {@code PassengerCard} with the given {@code Passenger} and index to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"    public PassengerCard(Passenger passenger, int displayedIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        this.passenger \u003d passenger;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"        name.setText(passenger.getName().fullName);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        passenger.getTags().stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"        // collect the fields that uses the icon and label format","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"        List\u003cRegion\u003e cardFields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"        cardFields.add(new LabelWithIcon(ICON_PATH_PHONE, passenger.getPhone().value).getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"        cardFields.add(new LabelWithIcon(ICON_PATH_ADDRESS, passenger.getAddress().value).getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"        cardFields.add(new LabelWithIcon(ICON_PATH_TIME,","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"                passenger.getTripDay() + \" \" + passenger.getTripTime()).getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"        passenger.getPrice()","lastModifiedDate":"2021-04-11"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"                .filter(price -\u003e price.value !\u003d 0)","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"                .ifPresent(","lastModifiedDate":"2021-04-11"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"                    presentPrice -\u003e","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"                            cardFields.add(new LabelWithIcon(ICON_PATH_PRICE, presentPrice.toString()).getRoot()));","lastModifiedDate":"2021-04-11"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"        cardFieldContainer.getChildren().addAll(cardFields);","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"        if (!(other instanceof PassengerCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"        PassengerCard card \u003d (PassengerCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"                \u0026\u0026 passenger.equals(card.passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"markmcwong":22,"-":55,"JoelHo":13}},{"path":"src/main/java/seedu/address/ui/PoolCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":" * An UI component that displays information of a {@code Passenger}.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"public class PoolCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    private static final String FXML \u003d \"PassengerListCard.fxml\";","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    private static final String ICON_PATH_PHONE \u003d \"/images/phone.png\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    private static final String ICON_PATH_DRIVER \u003d \"/images/driver.png\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    private static final String ICON_PATH_TIME \u003d \"/images/time.png\";","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"    public final Pool pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"    private Label name;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    private Label id;","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"    private VBox cardFieldContainer;","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"     * Creates a {@code PassengerCard} with the given {@code Passenger} and index to display.","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"    public PoolCard(Pool pool, int displayedIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"        super(FXML);","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"        this.pool \u003d pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"        name.setText(\"Trip by \" + pool.getDriver().getName().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"        pool.getTags().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"        // collect the fields that uses the icon and label format","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"        List\u003cRegion\u003e cardFields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"        cardFields.add(new LabelWithIcon(ICON_PATH_DRIVER, pool.getPassengers().stream().map(passenger","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"            -\u003e passenger.getName().toString()).collect(Collectors.joining(\", \"))).getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"        cardFields.add(new LabelWithIcon(ICON_PATH_PHONE, pool.getDriver().getPhone().toString()).getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"        cardFields.add(new LabelWithIcon(ICON_PATH_TIME,","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"                pool.getTripDay() + \" \" + pool.getTripTime()).getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"        cardFieldContainer.getChildren().addAll(cardFields);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"        if (!(other instanceof PoolCard)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"        // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"        PoolCard card \u003d (PoolCard) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"markmcwong"},"content":"                \u0026\u0026 pool.equals(card.pool);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"markmcwong":86}},{"path":"src/main/java/seedu/address/ui/PoolListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":" * Panel containing the list of passengers.","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"public class PoolListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    private static final String FXML \u003d \"PoolListPanel.fxml\";","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"    private ListView\u003cPool\u003e poolListView;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"     * Creates a {@code PassengerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    public PoolListPanel(ObservableList\u003cPool\u003e poolList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"        super(FXML);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"        poolListView.setItems(poolList);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"        poolListView.setCellFactory(listView -\u003e new PoolListViewCell());","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Passenger} using a {@code PassengerCard}.","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"    static class PoolListViewCell extends ListCell\u003cPool\u003e {","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        protected void updateItem(Pool pool, boolean empty) {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"            super.updateItem(pool, empty);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"            if (empty || pool \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"                setText(null);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"            } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"                setGraphic(new PoolCard(pool, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"markmcwong":12,"JoelHo":33}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/gme_icon.png\";","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"        //Load the required font.","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        Font.loadFont(MainApp.class.getResourceAsStream(\"/view/fonts/Avenir Light.ttf\"), 16);","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"markmcwong":3,"-":88,"JoelHo":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir\";","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir\";","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir Light\";","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir\";","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"    -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir Light\";","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"markmcwong"},"content":"    -fx-background-radius: 15px;","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"markmcwong"},"content":"    -fx-padding: 15 10 20 10;","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"markmcwong"},"content":"    -fx-border-insets: 0 0 0 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"markmcwong"},"content":"    -fx-background-insets: 10 10 10 10;","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: #fff2f1;","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"markmcwong"},"content":"    /*-fx-background-color: linear-gradient(from 25% 25% to 100% 100%, #fff7f7, #fccdc3);*/","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"markmcwong"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.1), 10, 0, 0, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: #e3f2f6;","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"markmcwong"},"content":"    /*-fx-background-color: linear-gradient(from 25% 25% to 100% 100%, #ffffff, #e3f2f6);*/","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"markmcwong"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.1), 10, 0, 0, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"markmcwong"},"content":".list-cell:filled #cardPane {","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"markmcwong"},"content":"    -fx-padding: -20 0 -20 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"markmcwong"},"content":"    -fx-background-insets: -40 0 -40 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"markmcwong"},"content":"    -fx-border-insets: 20 0 20 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"markmcwong"},"content":"    -fx-border-width: 0 0 0 4;","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"markmcwong"},"content":".list-cell:filled:even #cardPane {","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"markmcwong"},"content":"    -fx-border-color: #f6997c;","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"markmcwong"},"content":".list-cell:filled:odd #cardPane {","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"markmcwong"},"content":"    -fx-border-color: #0eb4e3;","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"markmcwong"},"content":".list-cell:filled:even:selected {","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"markmcwong"},"content":"    -fx-border-color: #e0643c;","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"markmcwong"},"content":".list-cell:filled:odd:selected {","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"markmcwong"},"content":"    -fx-border-color: #1368cf;","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"markmcwong"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"markmcwong"},"content":"    -fx-border-width: 1.5;","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: #535151;","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir\";","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"markmcwong"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"markmcwong"},"content":"    -fx-padding: 0 0 10 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: #000 !important;","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir Light\";","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"markmcwong"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":171,"author":{"gitId":"markmcwong"},"content":".pane-with-shadow {","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"markmcwong"},"content":"    -fx-background-insets: 25 20 25 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"markmcwong"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.5), 10, 0, 0, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"markmcwong"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":184,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir Light\";","lastModifiedDate":"2021-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":186,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir Light\";","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"markmcwong"},"content":"    -fx-border-color: derive(#ffffff, 25%);","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir Light\";","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2021-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":266,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"markmcwong"},"content":"    -fx-border-color: grey, grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2021-03-14"},{"lineNumber":280,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"markmcwong"},"content":"    -fx-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":314,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir Light\";","lastModifiedDate":"2021-03-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: grey;","lastModifiedDate":"2021-03-14"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"JoelHo"},"content":"#filterField, #passengerListPanel, #passengerWebpage {","lastModifiedDate":"2021-03-14"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":382,"author":{"gitId":"markmcwong"},"content":"#driverCardPane {","lastModifiedDate":"2021-03-23"},{"lineNumber":383,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2021-03-23"},{"lineNumber":384,"author":{"gitId":"markmcwong"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2021-03-23"},{"lineNumber":385,"author":{"gitId":"markmcwong"},"content":"    -fx-border-color: #989898;","lastModifiedDate":"2021-03-23"},{"lineNumber":386,"author":{"gitId":"markmcwong"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-03-23"},{"lineNumber":387,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":388,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":389,"author":{"gitId":"markmcwong"},"content":"#driverCardPane .cell_small_label {","lastModifiedDate":"2021-03-23"},{"lineNumber":390,"author":{"gitId":"markmcwong"},"content":"    -fx-padding: 3 0 3 10;","lastModifiedDate":"2021-03-24"},{"lineNumber":391,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":392,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":393,"author":{"gitId":"markmcwong"},"content":".panel_tab_bar {","lastModifiedDate":"2021-03-29"},{"lineNumber":394,"author":{"gitId":"markmcwong"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2021-03-29"},{"lineNumber":395,"author":{"gitId":"markmcwong"},"content":"    -fx-alignment: bottom-center;","lastModifiedDate":"2021-03-29"},{"lineNumber":396,"author":{"gitId":"markmcwong"},"content":"    -fx-border-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-03-29"},{"lineNumber":397,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":398,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":399,"author":{"gitId":"markmcwong"},"content":".panel_tab_label {","lastModifiedDate":"2021-03-29"},{"lineNumber":400,"author":{"gitId":"markmcwong"},"content":"    -fx-font-family: \"Avenir\";","lastModifiedDate":"2021-03-29"},{"lineNumber":401,"author":{"gitId":"markmcwong"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2021-03-29"},{"lineNumber":402,"author":{"gitId":"markmcwong"},"content":"    -fx-padding: 5 0 5 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":403,"author":{"gitId":"markmcwong"},"content":"    -fx-text-fill: #fff !important;","lastModifiedDate":"2021-03-29"},{"lineNumber":404,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"markmcwong":99,"-":304,"JoelHo":1}},{"path":"src/main/resources/view/DriverCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"\u003cHBox id\u003d\"driverCardPane\" fx:id\u003d\"driverCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"125\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"      \u003cLabel fx:id\u003d\"message\" styleClass\u003d\"driverPane_message\" text\u003d\"\\$message\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"      \u003cVBox id\u003d\"cardFieldsContainer\" fx:id\u003d\"cardFieldsContainer\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"          \u003cInsets top\u003d\"3\" right\u003d\"0\" bottom\u003d\"3\" left\u003d\"0\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"markmcwong":30}},{"path":"src/main/resources/view/LabelWithIcon.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"\u003cHBox id\u003d\"labelWithIcon\" fx:id\u003d\"labelWithIcon\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"  \u003cImageView styleClass\u003d\"iconHolder\" id\u003d\"iconHolder\" fx:id\u003d\"iconHolder\" fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"    \u003cimage\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"      \u003cImage url\u003d\"/images/fail.png\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"    \u003c/image\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"      \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"0\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"  \u003c/ImageView\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"  \u003cLabel minWidth\u003d\"30\" id\u003d\"text\" fx:id\u003d\"text\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$text\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"markmcwong":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"         title\u003d\"GreenMileageEfforts\" minWidth\u003d\"920\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"    \u003cImage url\u003d\"@/images/gme_icon.png\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"        \u003cVBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"          \u003cGridPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"              \u003cColumnConstraints percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"              \u003cColumnConstraints percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"              \u003cRowConstraints percentHeight\u003d\"8\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"              \u003cRowConstraints percentHeight\u003d\"92\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"            \u003cHBox GridPane.rowIndex\u003d\"0\" GridPane.columnIndex\u003d\"0\" styleClass\u003d\"panel_tab_bar\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"              \u003cLabel fx:id\u003d\"leftPanelLabel\" text\u003d\"Passenger List\" styleClass\u003d\"panel_tab_label\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"            \u003cHBox GridPane.rowIndex\u003d\"0\" GridPane.columnIndex\u003d\"1\" styleClass\u003d\"panel_tab_bar\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"              \u003cLabel fx:id\u003d\"rightPanelLabel\" text\u003d\"Pool List\" styleClass\u003d\"panel_tab_label\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"            \u003cVBox GridPane.rowIndex\u003d\"1\" GridPane.columnIndex\u003d\"0\" fx:id\u003d\"passengerList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"450\" prefWidth\u003d\"450\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"              \u003cStackPane fx:id\u003d\"filteredPassengerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"              \u003c/children\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"            \u003cVBox GridPane.rowIndex\u003d\"1\" GridPane.columnIndex\u003d\"1\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" minWidth\u003d\"450\" prefWidth\u003d\"450\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"              \u003cStackPane fx:id\u003d\"poolListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"          \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"chewterence":1,"markmcwong":32,"-":55,"JoelHo":2}},{"path":"src/main/resources/view/PassengerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"      \u003cVBox id\u003d\"cardFieldContainer\" fx:id\u003d\"cardFieldContainer\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"0\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markmcwong":5,"-":33}},{"path":"src/main/resources/view/PassengerListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"  \u003cListView id\u003d\"passengerListView\" fx:id\u003d\"passengerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"markmcwong":1,"-":7}},{"path":"src/main/resources/view/PoolListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"      \u003cVBox id\u003d\"cardFieldContainer\" fx:id\u003d\"cardFieldContainer\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"          \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"0\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"markmcwong":38}},{"path":"src/main/resources/view/PoolListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"    \u003cListView id\u003d\"poolListView\" fx:id\u003d\"poolListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"markmcwong":2,"-":7}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPassengerAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"  \"passengers\": [ {","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"    \"name\": \"Valid Passenger\",","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    \"phone\": \"94\",","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"FRIDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1800\",","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"    \"name\": \"Passenger With Invalid Phone Field\",","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"FRIDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1800\",","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"  } ],","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"  \"pools\" : [ ]","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chewterence":2,"ZechariahTan":1,"-":4,"JoelHo":11}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPassengerAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"  \"passengers\": [ {","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"    \"name\": \"Passenger with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"FUNDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"21032103\",","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"  } ],","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"  \"pools\" : [ ]","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chewterence":1,"-":3,"JoelHo":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePassengersAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"  \"passengers\": [ {","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"    \"tagged\": [ \"marketing\" ],","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"MONDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1400\",","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"WEDNESDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"2130\",","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"  } ],","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"  \"pools\" : [ ]","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chewterence":1,"-":8,"JoelHo":10}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPassengerAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"  \"passengers\": [ {","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"    \"phone\": \"94\",","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"FUNDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"21032103\",","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"  } ],","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"  \"pools\" : [ ]","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chewterence":1,"ZechariahTan":1,"-":3,"JoelHo":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPassengersAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"  \"_comment\": \"AddressBook save file which contains the same Passenger values as in TypicalPassenger#getTypicalAddressBook()\",","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"  \"passengers\" : [ {","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ \"marketing\" ],","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"FRIDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1800\",","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ \"sales\", \"marketing\" ],","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"FRIDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1800\",","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"FRIDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1800\",","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ \"marketing\" ],","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"FRIDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1800\",","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"FRIDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"2100\",","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"MONDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"0830\",","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"THURSDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"0715\",","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"  }, {","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"    \"name\" : \"Hilary Clinton\",","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"    \"phone\" : \"9486666\",","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"    \"address\" : \"6th ave\",","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"MONDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1930\",","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"  }, {","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"    \"name\" : \"Irene Newton\",","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"    \"phone\" : \"91238888\",","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"    \"address\" : \"5th ave\",","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"MONDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1930\",","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"  }, {","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"    \"name\" : \"Jackson Mehoff\",","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"    \"phone\" : \"91236969\",","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"    \"address\" : \"4th ave\",","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"MONDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1930\",","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"  }, {","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"    \"name\" : \"Kingsley Kuan\",","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"    \"phone\" : \"91867510\",","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"    \"address\" : \"3rd ave\",","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"    \"tripDayStr\" : \"MONDAY\",","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"    \"tripTimeStr\" : \"1930\",","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"    \"priceStr\" : \"\"","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"  } ],","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"  \"pools\" : [ ]","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":29,"JoelHo":64}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        final Index fifthPassengerIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        assertTrue(fifthPassengerIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"        assertTrue(fifthPassengerIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"        assertTrue(fifthPassengerIndex.equals(fifthPassengerIndex));","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        assertFalse(fifthPassengerIndex.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        assertFalse(fifthPassengerIndex.equals(5.0f));","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"        assertFalse(fifthPassengerIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"JoelHo":7}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"        assertNotNull(AppUtil.getImage(\"/images/gme_icon.png\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"JoelHo":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPDAY_DESC_FRIDAY;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPTIME_DESC_EVENING;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.AMY;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"chewterence"},"content":"                + ADDRESS_DESC_AMY + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"        Passenger expectedPassenger \u003d new PassengerBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        expectedModel.addPassenger(expectedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"JoelHo"},"content":"    public void getFilteredPassengerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPassengerList().remove(0));","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chewterence":4,"ZechariahTan":1,"-":150,"JoelHo":9}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        model \u003d new ModelManager(getTypicalAddressBookPassengers(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    public void execute_newPassenger_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"        Passenger validPassenger \u003d new PassengerBuilder().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"        expectedModel.addPassenger(validPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"        assertCommandSuccess(new AddCommand(validPassenger), model,","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPassenger), expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"    public void execute_duplicatePassenger_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        Passenger passengerInList \u003d model.getAddressBook().getPassengerList().get(0);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        assertCommandFailure(new AddCommand(passengerInList), model, AddCommand.MESSAGE_DUPLICATE_PASSENGER);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ZechariahTan":2,"-":33,"JoelHo":10}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"    public void constructor_nullPassenger_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"    public void execute_passengerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"        ModelStubAcceptingPassengerAdded modelStub \u003d new ModelStubAcceptingPassengerAdded();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"        Passenger validPassenger \u003d new PassengerBuilder().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"        CommandResult commandResult \u003d new AddCommand(validPassenger).execute(modelStub);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPassenger), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        assertEquals(Arrays.asList(validPassenger), modelStub.passengersAdded);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"    public void execute_duplicatePassenger_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        Passenger validPassenger \u003d new PassengerBuilder().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"        AddCommand addCommand \u003d new AddCommand(validPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"        ModelStub modelStub \u003d new ModelStubWithPassenger(validPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"                AddCommand.MESSAGE_DUPLICATE_PASSENGER, () -\u003e addCommand.execute(modelStub)","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"        Passenger alice \u003d new PassengerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"        Passenger bob \u003d new PassengerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"        public void addPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"chewterence"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"chewterence"},"content":"        public void addPool(Pool pool) {","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"JoelHo"},"content":"        public boolean hasPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"chewterence"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"chewterence"},"content":"        public boolean hasPool(Pool pool) {","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"chewterence"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"chewterence"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"JoelHo"},"content":"        public boolean hasPoolWithPassenger(Passenger passenger) {","lastModifiedDate":"2021-04-11"},{"lineNumber":146,"author":{"gitId":"JoelHo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-11"},{"lineNumber":147,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-04-11"},{"lineNumber":148,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":149,"author":{"gitId":"JoelHo"},"content":"        @Override","lastModifiedDate":"2021-04-11"},{"lineNumber":150,"author":{"gitId":"JoelHo"},"content":"        public void deletePassenger(Passenger passenger) {","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"chewterence"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"chewterence"},"content":"        public void deletePool(Pool pool) {","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"chewterence"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"chewterence"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"JoelHo"},"content":"        public void setPassenger(Passenger target, Passenger editedPassenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"JoelHo"},"content":"        public ObservableList\u003cPassenger\u003e getFilteredPassengerList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"JoelHo"},"content":"        public void updateFilteredPassengerList(Predicate\u003cPassenger\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"chewterence"},"content":"        public ObservableList\u003cPool\u003e getFilteredPoolList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"chewterence"},"content":"        public void updateFilteredPoolList(Predicate\u003cPool\u003e predicate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"JoelHo"},"content":"     * A Model stub that contains a single passenger.","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"JoelHo"},"content":"    private class ModelStubWithPassenger extends ModelStub {","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"JoelHo"},"content":"        private final Passenger passenger;","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"JoelHo"},"content":"        ModelStubWithPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"JoelHo"},"content":"            requireNonNull(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"JoelHo"},"content":"            this.passenger \u003d passenger;","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"JoelHo"},"content":"        public boolean hasPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"JoelHo"},"content":"            requireNonNull(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"JoelHo"},"content":"            return this.passenger.isSamePassenger(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"JoelHo"},"content":"     * A Model stub that always accept the passenger being added.","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"JoelHo"},"content":"    private class ModelStubAcceptingPassengerAdded extends ModelStub {","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"JoelHo"},"content":"        private final ArrayList\u003cPassenger\u003e passengersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"JoelHo"},"content":"        public boolean hasPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"JoelHo"},"content":"            requireNonNull(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"JoelHo"},"content":"            return passengersAdded.stream().anyMatch(passenger::isSamePassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"JoelHo"},"content":"        public void addPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"JoelHo"},"content":"            requireNonNull(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"JoelHo"},"content":"            passengersAdded.add(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"chewterence":15,"-":163,"JoelHo":49}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookPassengers(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookPassengers(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ZechariahTan":3,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUTER;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.EditPassengerDescriptorBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"    public static final String VALID_FIRST_NAME_AMY \u003d VALID_NAME_AMY.split(\"\\\\s+\")[0];","lastModifiedDate":"2021-04-11"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"    public static final String VALID_FIRST_NAME_BOB \u003d VALID_NAME_BOB.split(\"\\\\s+\")[0];","lastModifiedDate":"2021-04-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"    public static final DayOfWeek VALID_TRIPDAY_FRIDAY \u003d DayOfWeek.FRIDAY;","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    public static final DayOfWeek VALID_TRIPDAY_MONDAY \u003d DayOfWeek.MONDAY;","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"    public static final LocalTime VALID_TRIPTIME_EVENING \u003d LocalTime.of(18, 0);","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"    public static final LocalTime VALID_TRIPTIME_MORNING \u003d LocalTime.of(8, 30);","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"    public static final DayOfWeek VALID_TRIPDAY_BOB \u003d DayOfWeek.THURSDAY;","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    public static final LocalTime VALID_TRIPTIME_BOB \u003d LocalTime.of(19, 30);","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"    public static final double VALID_PRICE_AMY \u003d 1.69;","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"    public static final double VALID_PRICE_BOB \u003d 6.9;","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"    public static final Set\u003cPassenger\u003e EMPTY_PASSENGER_SET \u003d new HashSet\u003cPassenger\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"    public static final String VALID_TRIPDAY_STR_FRIDAY \u003d \"FRIDAY\";","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"    public static final String VALID_TRIPDAY_STR_MONDAY \u003d \"MONDAY\";","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"    public static final String VALID_TRIPTIME_STR_EVENING \u003d \"1800\";","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"    public static final String VALID_TRIPTIME_STR_MORNING \u003d \"0830\";","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"    public static final String VALID_TRIPDAY_STR_BOB \u003d \"THURSDAY\";","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"    public static final String VALID_TRIPTIME_STR_BOB \u003d \"1930\";","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"    public static final String VALID_PRICE_STR_AMY \u003d \"1.69\";","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"    public static final String VALID_PRICE_STR_BOB \u003d \"6.9\";","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"    public static final String VALID_TAG_HR \u003d \"hr\";","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"    public static final String VALID_TAG_IT \u003d \"it\";","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"chewterence"},"content":"    public static final String VALID_TAG_FEMALE \u003d \"female\";","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"    public static final String VALID_COMMUTER_1 \u003d \"1\";","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"    public static final String VALID_COMMUTER_2 \u003d \"2\";","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"    public static final String TRIPDAY_DESC_FRIDAY \u003d \" \" + PREFIX_TRIPDAY + VALID_TRIPDAY_STR_FRIDAY;","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"    public static final String TRIPDAY_DESC_MONDAY \u003d \" \" + PREFIX_TRIPDAY + VALID_TRIPDAY_STR_MONDAY;","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"    public static final String TRIPTIME_DESC_EVENING \u003d \" \" + PREFIX_TRIPTIME + VALID_TRIPTIME_STR_EVENING;","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"    public static final String TRIPTIME_DESC_MORNING \u003d \" \" + PREFIX_TRIPTIME + VALID_TRIPTIME_STR_MORNING;","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_IT;","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"    public static final String TAG_DESC_GOLF \u003d \" \" + PREFIX_TAG + VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"chewterence"},"content":"    public static final String TAG_DESC_FEMALE \u003d \" \" + PREFIX_TAG + VALID_TAG_FEMALE;","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"ZechariahTan"},"content":"    public static final String TRIPDAY_DESC_BOB \u003d \" \" + PREFIX_TRIPDAY + VALID_TRIPDAY_STR_BOB;","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":"    public static final String TRIPTIME_DESC_BOB \u003d \" \" + PREFIX_TRIPTIME + VALID_TRIPTIME_STR_BOB;","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"lyueyang"},"content":"    public static final String PRICE_DESC_AMY \u003d \" \" + PREFIX_PRICE + VALID_PRICE_STR_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"chewterence"},"content":"    public static final String PRICE_DESC_BOB \u003d \" \" + PREFIX_PRICE + VALID_PRICE_STR_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"    public static final String COMMUTER_DESC_1 \u003d \" \" + PREFIX_COMMUTER + VALID_COMMUTER_1;","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"    public static final String COMMUTER_DESC_2 \u003d \" \" + PREFIX_COMMUTER + VALID_COMMUTER_2;","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"markmcwong"},"content":"    public static final String INVALID_NAME_NO_PREFIX \u003d \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-04-09"},{"lineNumber":91,"author":{"gitId":"markmcwong"},"content":"    public static final String INVALID_PHONE_NO_PREFIX \u003d \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-04-09"},{"lineNumber":92,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":93,"author":{"gitId":"markmcwong"},"content":"    public static final String INVALID_NAME_DESC \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":94,"author":{"gitId":"markmcwong"},"content":"            \" \" + PREFIX_NAME + INVALID_NAME_NO_PREFIX; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-04-09"},{"lineNumber":95,"author":{"gitId":"markmcwong"},"content":"    public static final String INVALID_PHONE_DESC \u003d","lastModifiedDate":"2021-04-09"},{"lineNumber":96,"author":{"gitId":"markmcwong"},"content":"            \" \" + PREFIX_PHONE + INVALID_PHONE_NO_PREFIX; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-04-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"chewterence"},"content":"    public static final String INVALID_TRIPDAY \u003d \" \" + PREFIX_TRIPDAY + \"FUNDAY\"; // not among the valid week days","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"chewterence"},"content":"    public static final String INVALID_TRIPTIME \u003d \" \" + PREFIX_TRIPTIME + \"21032103\"; // not in the 24 hour time format","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"    public static final String INVALID_PRICE \u003d \" \" + PREFIX_PRICE + \"1/12\"; // not a decimal number","lastModifiedDate":"2021-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"    public static final String INVALID_COMMUTER \u003d \" \" + PREFIX_COMMUTER + \"a\"; // \u0027a\u0027 not allowed in commuter","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"    public static final EditCommand.EditPassengerDescriptor DESC_AMY;","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"    public static final EditCommand.EditPassengerDescriptor DESC_BOB;","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"JoelHo"},"content":"        DESC_AMY \u003d new EditPassengerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"ZechariahTan"},"content":"                .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"JoelHo"},"content":"                .withTags(VALID_TAG_IT).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":114,"author":{"gitId":"JoelHo"},"content":"        DESC_BOB \u003d new EditPassengerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"ZechariahTan"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"JoelHo"},"content":"                .withTags(VALID_TAG_HR, VALID_TAG_IT).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"JoelHo"},"content":"     * - the address book, filtered passenger list and selected passenger in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPassengerList());","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"JoelHo"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPassengerList());","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"JoelHo"},"content":"     * Updates {@code model}\u0027s filtered list to show only the passenger at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"JoelHo"},"content":"    public static void showPassengerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"JoelHo"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPassengerList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":169,"author":{"gitId":"JoelHo"},"content":"        Passenger passenger \u003d model.getFilteredPassengerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"JoelHo"},"content":"        final String[] splitName \u003d passenger.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"JoelHo"},"content":"        model.updateFilteredPassengerList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"JoelHo"},"content":"        assertEquals(1, model.getFilteredPassengerList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"chewterence":8,"lyueyang":1,"ZechariahTan":30,"markmcwong":9,"-":97,"JoelHo":31}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPassengerAtIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookPassengers(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"        Passenger passengerToDelete \u003d model.getFilteredPassengerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lyueyang"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Collections.singletonList(INDEX_FIRST));","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"lyueyang"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PASSENGER_SUCCESS, ALICE.getName());","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"        expectedModel.deletePassenger(passengerToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPassengerList().size() + 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"lyueyang"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Collections.singletonList(outOfBoundIndex));","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"chewterence"},"content":"        showPassengerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"chewterence"},"content":"        Passenger passengerToDelete \u003d model.getFilteredPassengerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"lyueyang"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Collections.singletonList(INDEX_FIRST));","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"lyueyang"},"content":"        // 1 as it is 1 passenger","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"lyueyang"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PASSENGER_SUCCESS, ALICE.getName());","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"        expectedModel.deletePassenger(passengerToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"        showNoPassenger(expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"chewterence"},"content":"        showPassengerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"chewterence"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPassengerList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"lyueyang"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Collections.singletonList(outOfBoundIndex));","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"lyueyang"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(Collections.singletonList(INDEX_FIRST));","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"lyueyang"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(Collections.singletonList(INDEX_SECOND));","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"lyueyang"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(Collections.singletonList(INDEX_FIRST));","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"    private void showNoPassenger(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"        model.updateFilteredPassengerList(p -\u003e false);","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"JoelHo"},"content":"        assertTrue(model.getFilteredPassengerList().isEmpty());","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"chewterence":9,"lyueyang":12,"-":79,"JoelHo":13}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPassengerAtIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.EditPassengerDescriptorBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookPassengers(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"        Passenger editedPassenger \u003d new PassengerBuilder().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder(editedPassenger).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PASSENGER_SUCCESS, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        expectedModel.setPassenger(model.getFilteredPassengerList().get(0), editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        Index indexLastPassenger \u003d Index.fromOneBased(model.getFilteredPassengerList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"        Passenger lastPassenger \u003d model.getFilteredPassengerList().get(indexLastPassenger.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        PassengerBuilder passengerInList \u003d new PassengerBuilder(lastPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"        Passenger editedPassenger \u003d passengerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"                .withTags(VALID_TAG_HR).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HR).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPassenger, descriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PASSENGER_SUCCESS, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"        expectedModel.setPassenger(lastPassenger, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"chewterence"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, new EditCommand.EditPassengerDescriptor());","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"chewterence"},"content":"        Passenger editedPassenger \u003d model.getFilteredPassengerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PASSENGER_SUCCESS, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"chewterence"},"content":"        showPassengerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"chewterence"},"content":"        Passenger passengerInFilteredList \u003d model.getFilteredPassengerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        Passenger editedPassenger \u003d new PassengerBuilder(passengerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"chewterence"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"                new EditPassengerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PASSENGER_SUCCESS, editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"        expectedModel.setPassenger(model.getFilteredPassengerList().get(0), editedPassenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"    public void execute_duplicatePassengerUnfilteredList_failure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"chewterence"},"content":"        Passenger firstPassenger \u003d model.getFilteredPassengerList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder(firstPassenger).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"chewterence"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PASSENGER);","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"JoelHo"},"content":"    public void execute_duplicatePassengerFilteredList_failure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"chewterence"},"content":"        showPassengerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"JoelHo"},"content":"        // edit passenger in filtered list into a duplicate in address book","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"JoelHo"},"content":"        Passenger passengerInList \u003d model.getAddressBook()","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"chewterence"},"content":"                .getPassengerList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"chewterence"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"                new EditPassengerDescriptorBuilder(passengerInList).build());","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"JoelHo"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PASSENGER);","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"JoelHo"},"content":"    public void execute_invalidPassengerIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"JoelHo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPassengerList().size() + 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"JoelHo"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"JoelHo"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"JoelHo"},"content":"    public void execute_invalidPassengerIndexFilteredList_failure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"chewterence"},"content":"        showPassengerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"chewterence"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"JoelHo"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPassengerList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"JoelHo"},"content":"                new EditPassengerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"JoelHo"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PASSENGER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"chewterence"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor copyDescriptor \u003d new EditCommand.EditPassengerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"chewterence"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"chewterence"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"chewterence"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"chewterence":19,"ZechariahTan":2,"-":111,"JoelHo":42}},{"path":"src/test/java/seedu/address/logic/commands/EditPassengerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_MONDAY;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_MORNING;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.EditPassengerDescriptorBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"public class EditPassengerDescriptorTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"                new EditCommand.EditPassengerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor editedAmy \u003d new EditPassengerDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        editedAmy \u003d new EditPassengerDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"        editedAmy \u003d new EditPassengerDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"chewterence"},"content":"        // different tripDay -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"        editedAmy \u003d new EditPassengerDescriptorBuilder(DESC_AMY).withTripDay(VALID_TRIPDAY_MONDAY).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"chewterence"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"chewterence"},"content":"        // different tripTime -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"        editedAmy \u003d new EditPassengerDescriptorBuilder(DESC_AMY).withTripTime(VALID_TRIPTIME_MORNING).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"        editedAmy \u003d new EditPassengerDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HR).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"chewterence":6,"-":46,"JoelHo":12}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PASSENGER_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRST_NAME_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRST_NAME_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_STR_FRIDAY;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_STR_MONDAY;","lastModifiedDate":"2021-04-11"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_STR_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_STR_MORNING;","lastModifiedDate":"2021-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.testutil.TypicalPassengers.BENSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.CARL;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.DANIEL;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.ELLE;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.FIONA;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.GEORGE;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.testutil.TypicalPassengers.HILARY;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.testutil.TypicalPassengers.IRENE;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.testutil.TypicalPassengers.JACKSON;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.testutil.TypicalPassengers.KINGSLEY;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDayContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTimeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"chewterence"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookPassengers(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookPassengers(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(VALID_FIRST_NAME_AMY));","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(VALID_FIRST_NAME_BOB));","lastModifiedDate":"2021-04-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"    public void execute_zeroKeywords_noPassengerFound() {","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PASSENGER_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"lyueyang"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"        expectedModel.updateFilteredPassengerList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPassengerList());","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"    public void execute_multipleNameKeywords_multiplePassengersFound() {","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PASSENGER_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"lyueyang"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"        expectedModel.updateFilteredPassengerList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPassengerList());","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"    public void execute_onePhoneKeyword_onePassengersFound() {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PASSENGER_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"markmcwong"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d preparePhonePredicate(ALICE.getPhone().toString());","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"lyueyang"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"        expectedModel.updateFilteredPassengerList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"lyueyang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredPassengerList());","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"    public void execute_oneAddressKeyword_onePassengersFound() {","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PASSENGER_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"lyueyang"},"content":"        AddressContainsKeywordsPredicate predicate \u003d prepareAddressPredicate(\"street\");","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"lyueyang"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"JoelHo"},"content":"        expectedModel.updateFilteredPassengerList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"lyueyang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, GEORGE), model.getFilteredPassengerList());","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"lyueyang"},"content":"    public void execute_oneTripDayKeyword_onePassengersFound() {","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"lyueyang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PASSENGER_LISTED_OVERVIEW, 5);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"markmcwong"},"content":"        TripDayContainsKeywordsPredicate predicate \u003d prepareTripDayPredicate(VALID_TRIPDAY_STR_MONDAY);","lastModifiedDate":"2021-04-11"},{"lineNumber":119,"author":{"gitId":"lyueyang"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"lyueyang"},"content":"        expectedModel.updateFilteredPassengerList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"lyueyang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"JoelHo"},"content":"        assertEquals(Arrays.asList(FIONA, HILARY, IRENE, JACKSON, KINGSLEY), model.getFilteredPassengerList());","lastModifiedDate":"2021-04-10"},{"lineNumber":123,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"lyueyang"},"content":"    public void execute_multipleTripDayKeyword_sixPassengersFound() {","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"lyueyang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PASSENGER_LISTED_OVERVIEW, 10);","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"markmcwong"},"content":"        TripDayContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":129,"author":{"gitId":"markmcwong"},"content":"                prepareTripDayPredicate(VALID_TRIPDAY_STR_MONDAY + \" \" + VALID_TRIPDAY_STR_FRIDAY);","lastModifiedDate":"2021-04-11"},{"lineNumber":130,"author":{"gitId":"lyueyang"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"lyueyang"},"content":"        expectedModel.updateFilteredPassengerList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"lyueyang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, HILARY, IRENE, JACKSON, KINGSLEY),","lastModifiedDate":"2021-04-10"},{"lineNumber":134,"author":{"gitId":"lyueyang"},"content":"                model.getFilteredPassengerList());","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"lyueyang"},"content":"    public void execute_oneTripTimeKeyword_onePassengersFound() {","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"lyueyang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PASSENGER_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"markmcwong"},"content":"        TripTimeContainsKeywordsPredicate predicate \u003d prepareTripTimePredicate(VALID_TRIPTIME_STR_MORNING);","lastModifiedDate":"2021-04-11"},{"lineNumber":141,"author":{"gitId":"lyueyang"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"lyueyang"},"content":"        expectedModel.updateFilteredPassengerList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"lyueyang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"lyueyang"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredPassengerList());","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"lyueyang"},"content":"    public void execute_multipleTripTimeKeyword_fivePassengersFound() {","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"lyueyang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PASSENGER_LISTED_OVERVIEW, 5);","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"markmcwong"},"content":"        TripTimeContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-04-11"},{"lineNumber":151,"author":{"gitId":"markmcwong"},"content":"                prepareTripTimePredicate(VALID_TRIPTIME_STR_MORNING + \" \" + VALID_TRIPTIME_STR_BOB);","lastModifiedDate":"2021-04-11"},{"lineNumber":152,"author":{"gitId":"lyueyang"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"lyueyang"},"content":"        expectedModel.updateFilteredPassengerList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"lyueyang"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"JoelHo"},"content":"        assertEquals(Arrays.asList(FIONA, HILARY, IRENE, JACKSON, KINGSLEY), model.getFilteredPassengerList());","lastModifiedDate":"2021-04-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"lyueyang"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":164,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"lyueyang"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"lyueyang"},"content":"    private PhoneContainsKeywordsPredicate preparePhonePredicate(String userInput) {","lastModifiedDate":"2021-03-10"},{"lineNumber":169,"author":{"gitId":"lyueyang"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":170,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":172,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"lyueyang"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":175,"author":{"gitId":"lyueyang"},"content":"    private AddressContainsKeywordsPredicate prepareAddressPredicate(String userInput) {","lastModifiedDate":"2021-03-10"},{"lineNumber":176,"author":{"gitId":"lyueyang"},"content":"        return new AddressContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":177,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":178,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"lyueyang"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"lyueyang"},"content":"    private TripDayContainsKeywordsPredicate prepareTripDayPredicate(String userInput) {","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"lyueyang"},"content":"        return new TripDayContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"lyueyang"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"lyueyang"},"content":"     * Parses {@code userInput} into a {@code PhoneContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"lyueyang"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"lyueyang"},"content":"    private TripTimeContainsKeywordsPredicate prepareTripTimePredicate(String userInput) {","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"lyueyang"},"content":"        return new TripTimeContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chewterence":5,"lyueyang":79,"markmcwong":15,"-":64,"JoelHo":29}},{"path":"src/test/java/seedu/address/logic/commands/FindPoolCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_POOLS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRST_NAME_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRST_NAME_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TestUtil.prepareNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPools.HOMEPOOL;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPools.OFFICEPOOL;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPools.WORKPOOL;","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPools.getTypicalAddressBookPools;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.PooledPassengerContainsKeywordsPredicate;","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"/**","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code FindPoolCommand}.","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":" */","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"public class FindPoolCommandTest {","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookPools(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookPools(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"    public void execute_zeroKeywords_noPoolFound() {","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_POOLS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"        FindPoolCommand command \u003d new FindPoolCommand(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"        expectedModel.updateFilteredPoolList(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPoolList());","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"    public void execute_oneUnmatchedKeyword_noPoolFound() {","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_POOLS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate predicate \u003d prepareNamePredicate(VALID_FIRST_NAME_BOB);","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"        FindPoolCommand command \u003d new FindPoolCommand(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"        expectedModel.updateFilteredPoolList(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPoolList());","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"    public void execute_multipleMatchedKeywords_multiplePoolsFound() {","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_POOLS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Alice Bob Daniel\");","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"        FindPoolCommand command \u003d new FindPoolCommand(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"        expectedModel.updateFilteredPoolList(predicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"        assertEquals(Arrays.asList(HOMEPOOL, OFFICEPOOL, WORKPOOL), model.getFilteredPoolList());","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"    public void equals() {","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"                new PooledPassengerContainsKeywordsPredicate(Collections.singletonList(VALID_FIRST_NAME_AMY));","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"                new PooledPassengerContainsKeywordsPredicate(Collections.singletonList(VALID_FIRST_NAME_BOB));","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"        FindPoolCommand findPoolFirstCommand \u003d new FindPoolCommand(firstPredicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"        FindPoolCommand findPoolSecondCommand \u003d new FindPoolCommand(secondPredicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-05"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"        assertTrue(findPoolFirstCommand.equals(findPoolFirstCommand));","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-05"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"        FindPoolCommand findPoolFirstCommandCopy \u003d new FindPoolCommand(firstPredicate);","lastModifiedDate":"2021-04-05"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"        assertTrue(findPoolFirstCommand.equals(findPoolFirstCommandCopy));","lastModifiedDate":"2021-04-05"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"        assertFalse(findPoolFirstCommand.equals(1));","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"markmcwong"},"content":"        assertFalse(findPoolFirstCommand.equals(null));","lastModifiedDate":"2021-04-05"},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":87,"author":{"gitId":"markmcwong"},"content":"        assertFalse(findPoolFirstCommand.equals(findPoolSecondCommand));","lastModifiedDate":"2021-04-05"},{"lineNumber":88,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":89,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"ZechariahTan":1,"markmcwong":88}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPassengerAtIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        model \u003d new ModelManager(getTypicalAddressBookPassengers(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"        showPassengerAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chewterence":2,"ZechariahTan":2,"-":34,"JoelHo":1}},{"path":"src/test/java/seedu/address/logic/commands/ListPoolCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-09"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-09"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TestUtil.prepareNamePredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPools.getTypicalAddressBookPools;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-09"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-09"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-09"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.PooledPassengerContainsKeywordsPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListPoolCommand.","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"public class ListPoolCommandTest {","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    private Model model;","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    @BeforeEach","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    public void setUp() {","lastModifiedDate":"2021-04-09"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        model \u003d new ModelManager(getTypicalAddressBookPools(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    public void execute_poolListIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"        assertCommandSuccess(new ListPoolCommand(), model, ListPoolCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    public void execute_poolListIsFiltered_showsEverything() {","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"        PooledPassengerContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\"Alice Bob Daniel\");","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"        expectedModel.updateFilteredPoolList(predicate);","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        assertCommandSuccess(new ListPoolCommand(), model, ListPoolCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"ZechariahTan":40}},{"path":"src/test/java/seedu/address/logic/commands/PoolCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_IT;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_FRIDAY;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_MONDAY;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_EVENING;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_MORNING;","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalDrivers.DRIVER_ALICE;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalDrivers.DRIVER_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.CommuterBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.DriverBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.testutil.PoolBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"public class PoolCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"    private final Driver driver \u003d new DriverBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"chewterence"},"content":"    private final Set\u003cIndex\u003e commuters \u003d new CommuterBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"    private final TripDay tripDay \u003d new TripDay(VALID_TRIPDAY_FRIDAY);","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"lyueyang"},"content":"    private final TripTime tripTimeMorning \u003d new TripTime(VALID_TRIPTIME_MORNING);","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"lyueyang"},"content":"    private final TripTime tripTimeEvening \u003d new TripTime(VALID_TRIPTIME_EVENING);","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"    private final Set\u003cTag\u003e tags \u003d SampleDataUtil.getTagSet(VALID_TAG_IT);","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"chewterence"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBookPassengers(), new UserPrefs());","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"chewterence"},"content":"    public void constructor_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PoolCommand(null, null, null,","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"chewterence"},"content":"            null, null));","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lyueyang"},"content":"    public void execute_poolAcceptedByModel_addSuccessfulWithWarning() throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"chewterence"},"content":"        Pool validPool \u003d new PoolBuilder().withModel(model).withIndex(INDEX_FIRST)","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"                .withIndex(INDEX_SECOND).withTripDay(VALID_TRIPDAY_FRIDAY).withTags(VALID_TAG_IT).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"lyueyang"},"content":"        CommandResult commandResult \u003d new PoolCommand(driver, commuters, tripDay, tripTimeMorning, tags).execute(model);","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"lyueyang"},"content":"        String driverName \u003d validPool.getDriverAsStr();","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"lyueyang"},"content":"        String passengerNames \u003d validPool.getPassengerNames();","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"lyueyang"},"content":"        assertEquals(String.format(PoolCommand.MESSAGE_POOL_SUCCESS_WITH_WARNING, driverName, passengerNames),","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"lyueyang"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(model.hasPool(validPool));","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"lyueyang"},"content":"    public void execute_poolAcceptedByModel_addSuccessfulNoWarning() throws Exception {","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"lyueyang"},"content":"        Pool validPool \u003d new PoolBuilder().withModel(model).withIndex(INDEX_FIRST)","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"lyueyang"},"content":"                .withIndex(INDEX_SECOND).withTripDay(VALID_TRIPDAY_FRIDAY)","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"                .withTripTime(VALID_TRIPTIME_EVENING).withTags(VALID_TAG_IT).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"lyueyang"},"content":"        CommandResult commandResult \u003d new PoolCommand(driver, commuters, tripDay, tripTimeEvening, tags).execute(model);","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"lyueyang"},"content":"        String driverName \u003d validPool.getDriverAsStr();","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"lyueyang"},"content":"        String passengerNames \u003d validPool.getPassengerNames();","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"lyueyang"},"content":"        assertEquals(String.format(PoolCommand.MESSAGE_POOL_SUCCESS, driverName, passengerNames),","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"lyueyang"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"lyueyang"},"content":"        assertTrue(model.hasPool(validPool));","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"    public void execute_duplicatePool_throwsCommandException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        Pool duplicatePool \u003d new PoolBuilder().withModel(model).withIndex(INDEX_THIRD)","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"                .withTags(VALID_TAG_IT).withTripTime(VALID_TRIPTIME_EVENING)","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"lyueyang"},"content":"                .withTripDay(VALID_TRIPDAY_FRIDAY).build();","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"ZechariahTan"},"content":"        model.addPool(duplicatePool);","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"lyueyang"},"content":"        PoolCommand poolCommand \u003d new PoolCommand(driver, commuters, tripDay, tripTimeEvening, tags);","lastModifiedDate":"2021-04-02"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"chewterence"},"content":"                PoolCommand.MESSAGE_DUPLICATE_POOL, () -\u003e poolCommand.execute(model)","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"ZechariahTan"},"content":"        );","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-04-02"},{"lineNumber":102,"author":{"gitId":"chewterence"},"content":"    public void execute_tripdayMismatch_throwsCommandException() {","lastModifiedDate":"2021-04-02"},{"lineNumber":103,"author":{"gitId":"chewterence"},"content":"        final TripDay mismatchedTripDay \u003d new TripDay(VALID_TRIPDAY_MONDAY);","lastModifiedDate":"2021-04-02"},{"lineNumber":104,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":105,"author":{"gitId":"lyueyang"},"content":"        PoolCommand poolCommand \u003d new PoolCommand(driver, commuters, mismatchedTripDay, tripTimeEvening, tags);","lastModifiedDate":"2021-04-02"},{"lineNumber":106,"author":{"gitId":"chewterence"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-04-02"},{"lineNumber":107,"author":{"gitId":"chewterence"},"content":"                PoolCommand.MESSAGE_TRIPDAY_MISMATCH, () -\u003e poolCommand.execute(model)","lastModifiedDate":"2021-04-02"},{"lineNumber":108,"author":{"gitId":"chewterence"},"content":"        );","lastModifiedDate":"2021-04-02"},{"lineNumber":109,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":110,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":111,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"ZechariahTan"},"content":"    public void equals() {","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"lyueyang"},"content":"        PoolCommand poolAliceDrivingCommand \u003d new PoolCommand(DRIVER_ALICE, commuters, tripDay, tripTimeEvening, tags);","lastModifiedDate":"2021-04-02"},{"lineNumber":114,"author":{"gitId":"lyueyang"},"content":"        PoolCommand poolBobDrivingCommand \u003d new PoolCommand(DRIVER_BOB, commuters, tripDay, tripTimeEvening, tags);","lastModifiedDate":"2021-04-02"},{"lineNumber":115,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"ZechariahTan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(poolAliceDrivingCommand.equals(poolAliceDrivingCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"lyueyang"},"content":"        PoolCommand poolAliceDrivingCommandCopy \u003d new PoolCommand(DRIVER_ALICE, commuters, tripDay, tripTimeEvening,","lastModifiedDate":"2021-04-02"},{"lineNumber":121,"author":{"gitId":"lyueyang"},"content":"                tags);","lastModifiedDate":"2021-04-02"},{"lineNumber":122,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(poolAliceDrivingCommand.equals(poolAliceDrivingCommandCopy));","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"ZechariahTan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(poolAliceDrivingCommand.equals(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"ZechariahTan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(poolAliceDrivingCommand.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"ZechariahTan"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(poolAliceDrivingCommand.equals(poolBobDrivingCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"chewterence":25,"lyueyang":35,"ZechariahTan":47,"JoelHo":26}},{"path":"src/test/java/seedu/address/logic/commands/UnpoolCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.BENSON;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.CARL;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.DANIEL;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.ELLE;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.FIONA;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPools.getTypicalAddressBookPools;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"import java.util.List;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.pool.PooledPassengerContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":" * {@code UnpoolCommandTest}.","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"public class UnpoolCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookPools(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"chewterence"},"content":"        Pool poolToRemove \u003d model.getFilteredPoolList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"        UnpoolCommand unpoolCommand \u003d new UnpoolCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"chewterence"},"content":"        String passengerNames \u003d ALICE.getName() + \", \" + BENSON.getName() + \", \" + CARL.getName();","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"lyueyang"},"content":"        String expectedMessage \u003d String.format(UnpoolCommand.MESSAGE_UNPOOL_SUCCESS, passengerNames);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"chewterence"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"chewterence"},"content":"        expectedModel.deletePool(poolToRemove);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"chewterence"},"content":"        assertCommandSuccess(unpoolCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"chewterence"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"chewterence"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPoolList().size() + 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"chewterence"},"content":"        UnpoolCommand unpoolCommand \u003d new UnpoolCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"chewterence"},"content":"        assertCommandFailure(unpoolCommand, model, Messages.MESSAGE_INVALID_POOL_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"chewterence"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookPools(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"        List\u003cString\u003e searchString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"chewterence"},"content":"        searchString.add(\"Daniel\");","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"chewterence"},"content":"        model.updateFilteredPoolList(new PooledPassengerContainsKeywordsPredicate(searchString));","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"        Pool poolToRemove \u003d model.getFilteredPoolList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"        UnpoolCommand unpoolCommand \u003d new UnpoolCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"chewterence"},"content":"        String passengerNames \u003d DANIEL.getName() + \", \" + ELLE.getName() + \", \" + FIONA.getName();","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"chewterence"},"content":"        String expectedMessage \u003d String.format(UnpoolCommand.MESSAGE_UNPOOL_SUCCESS, passengerNames);","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"        expectedModel.deletePool(poolToRemove);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"chewterence"},"content":"        showNoPools(expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"        assertCommandSuccess(unpoolCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"chewterence"},"content":"        Index outOfBoundIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"chewterence"},"content":"        List\u003cString\u003e searchString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"chewterence"},"content":"        searchString.add(\"Alice\");","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"chewterence"},"content":"        model.updateFilteredPoolList(new PooledPassengerContainsKeywordsPredicate(searchString));","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"chewterence"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPoolList().size());","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":"        UnpoolCommand unpoolCommand \u003d new UnpoolCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"chewterence"},"content":"        assertCommandFailure(unpoolCommand, model, Messages.MESSAGE_INVALID_POOL_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"chewterence"},"content":"    public void equals() {","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"chewterence"},"content":"        UnpoolCommand unpoolFirstCommand \u003d new UnpoolCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"chewterence"},"content":"        UnpoolCommand unpoolSecondCommand \u003d new UnpoolCommand(INDEX_SECOND);","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"chewterence"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"chewterence"},"content":"        assertTrue(unpoolFirstCommand.equals(unpoolFirstCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"chewterence"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"chewterence"},"content":"        UnpoolCommand unpoolFirstCommandCopy \u003d new UnpoolCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"chewterence"},"content":"        assertTrue(unpoolFirstCommand.equals(unpoolFirstCommandCopy));","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"chewterence"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"chewterence"},"content":"        assertFalse(unpoolFirstCommand.equals(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"chewterence"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"chewterence"},"content":"        assertFalse(unpoolFirstCommand.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"chewterence"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"chewterence"},"content":"        assertFalse(unpoolFirstCommand.equals(unpoolSecondCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"chewterence"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"chewterence"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"chewterence"},"content":"    private void showNoPools(Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"chewterence"},"content":"        model.updateFilteredPoolList(p -\u003e false);","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"chewterence"},"content":"        assertTrue(model.getFilteredPoolList().isEmpty());","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"chewterence"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chewterence":99,"lyueyang":1,"ZechariahTan":25}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TRIPDAY;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TRIPTIME;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_GOLF;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPDAY_DESC_FRIDAY;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPTIME_DESC_EVENING;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_IT;","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_FRIDAY;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_EVENING;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.AMY;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.BOB;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"chewterence"},"content":"        Passenger expectedPassenger \u003d new PassengerBuilder(BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"                .withTags(VALID_TAG_IT).withPrice(VALID_PRICE_BOB).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"chewterence"},"content":"                + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"                new AddCommand(expectedPassenger));","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"chewterence"},"content":"                + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"                new AddCommand(expectedPassenger));","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"chewterence"},"content":"                + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"                new AddCommand(expectedPassenger));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"chewterence"},"content":"                + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"                new AddCommand(expectedPassenger));","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"        Passenger expectedPassengerMultipleTags \u003d new PassengerBuilder(BOB)","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"                .withTags(VALID_TAG_IT, VALID_TAG_HR).withPrice(VALID_PRICE_BOB).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"chewterence"},"content":"                + TAG_DESC_GOLF + TAG_DESC_FRIEND, new AddCommand(expectedPassengerMultipleTags));","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"chewterence"},"content":"        Passenger expectedPassenger \u003d new PassengerBuilder(AMY).withTags().withPrice().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + TRIPDAY_DESC_FRIDAY","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"chewterence"},"content":"                        + TRIPTIME_DESC_EVENING,","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"                new AddCommand(expectedPassenger));","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"chewterence"},"content":"                        + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"chewterence"},"content":"                        + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"chewterence"},"content":"                        + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"chewterence"},"content":"        // missing tripDay prefix","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"chewterence"},"content":"                        + VALID_TRIPDAY_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"chewterence"},"content":"        // missing tripTime prefix","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"chewterence"},"content":"                + TRIPDAY_DESC_FRIDAY + VALID_TRIPTIME_EVENING + PRICE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":117,"author":{"gitId":"ZechariahTan"},"content":"        // missing price prefix","lastModifiedDate":"2021-03-20"},{"lineNumber":118,"author":{"gitId":"ZechariahTan"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-20"},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"                + TRIPDAY_DESC_FRIDAY + VALID_TRIPTIME_EVENING + VALID_PRICE_BOB, expectedMessage);","lastModifiedDate":"2021-03-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"                        + VALID_TRIPDAY_FRIDAY + VALID_TRIPTIME_EVENING + VALID_PRICE_BOB, expectedMessage);","lastModifiedDate":"2021-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"chewterence"},"content":"                + TAG_DESC_GOLF + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"chewterence"},"content":"                + TAG_DESC_GOLF + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_ADDRESS_DESC + TRIPDAY_DESC_FRIDAY","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"chewterence"},"content":"                + TAG_DESC_GOLF + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"chewterence"},"content":"        // invalid tripDay","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + INVALID_TRIPDAY","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"chewterence"},"content":"                + TAG_DESC_GOLF + TAG_DESC_FRIEND, TripDay.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"chewterence"},"content":"        // invalid tripTime","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"chewterence"},"content":"                + INVALID_TRIPTIME + PRICE_DESC_BOB","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"chewterence"},"content":"                + TAG_DESC_GOLF + TAG_DESC_FRIEND, TripTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"JoelHo"},"content":"                + INVALID_TAG_DESC + VALID_TAG_IT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"chewterence"},"content":"        // two invalid values, only first invalid value reported (Name)","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"chewterence"},"content":"                        + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB,","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"chewterence"},"content":"        // two invalid values, only first invalid value reported (Address)","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"chewterence"},"content":"                        + INVALID_TRIPDAY + TRIPTIME_DESC_EVENING + PRICE_DESC_BOB,","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"chewterence"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"chewterence"},"content":"        // two invalid values, only first invalid value reported (TripDay)","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"chewterence"},"content":"                        + INVALID_TRIPDAY + INVALID_TRIPTIME + PRICE_DESC_BOB,","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"chewterence"},"content":"                TripDay.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"ZechariahTan"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":176,"author":{"gitId":"chewterence"},"content":"                + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + TAG_DESC_GOLF + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"chewterence":70,"ZechariahTan":12,"-":81,"JoelHo":16}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_MONDAY;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_MORNING;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.PoolCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.UnpoolCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.CommuterBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.DriverBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.EditPassengerDescriptorBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"import seedu.address.testutil.PoolUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"        Passenger passenger \u003d new PassengerBuilder().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PassengerUtil.getAddCommand(passenger));","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"        assertEquals(new AddCommand(passenger), command);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"chewterence"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"lyueyang"},"content":"        assertEquals(new DeleteCommand(Collections.singletonList(INDEX_FIRST)), command);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"        Passenger passenger \u003d new PassengerBuilder().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder(passenger).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"chewterence"},"content":"                EditCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"                        + PassengerUtil.getEditPassengerDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"chewterence"},"content":"        assertEquals(new EditCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"lyueyang"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\");","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"lyueyang"},"content":"        String userInput \u003d FindCommand.COMMAND_WORD + \" \" + \"n/foo\";","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"lyueyang"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(userInput);","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"chewterence"},"content":"    public void parseCommand_pool() throws Exception {","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"        Driver driver \u003d new DriverBuilder().build();","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"        Set\u003cIndex\u003e commuters \u003d new CommuterBuilder().build();","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"chewterence"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"chewterence"},"content":"        TripDay tripDay \u003d new TripDay(VALID_TRIPDAY_MONDAY);","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"chewterence"},"content":"        TripTime tripTime \u003d new TripTime(VALID_TRIPTIME_MORNING);","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"chewterence"},"content":"        PoolCommand command \u003d (PoolCommand) parser.parseCommand(PoolUtil.getPoolCommandString(driver,","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"chewterence"},"content":"                commuters, tripDay, tripTime, tags));","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"chewterence"},"content":"        assertEquals(new PoolCommand(driver, commuters, tripDay, tripTime, tags), command);","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"chewterence"},"content":"    public void parseCommand_unpool() throws Exception {","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"chewterence"},"content":"        UnpoolCommand command \u003d (UnpoolCommand) parser.parseCommand(","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"chewterence"},"content":"                UnpoolCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"chewterence"},"content":"        assertEquals(new UnpoolCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"chewterence":28,"lyueyang":5,"-":81,"JoelHo":22}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"    public static \u003cT extends Command\u003e void assertParseSuccess(","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"            Parser\u003cT\u003e parser, String userInput,","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"            Command expectedCommand) {","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"    public static \u003cT extends Command\u003e void assertParseFailure(","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"            Parser\u003cT\u003e parser,","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"            String userInput,","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"            String expectedMessage) {","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":36,"JoelHo":7}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(Collections.singletonList(INDEX_FIRST)));","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"chewterence":1,"lyueyang":2,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRICE;","lastModifiedDate":"2021-04-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TRIPDAY;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TRIPTIME;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_GOLF;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPDAY_DESC_FRIDAY;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPDAY_DESC_MONDAY;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPTIME_DESC_EVENING;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPTIME_DESC_MORNING;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_IT;","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_FRIDAY;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_MONDAY;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_EVENING;","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_MORNING;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.EditPassengerDescriptorBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TRIPDAY, TripDay.MESSAGE_CONSTRAINTS); // invalid tripDay","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TRIPTIME, TripTime.MESSAGE_CONSTRAINTS); // invalid tripTime","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PRICE, Price.MESSAGE_CONSTRAINTS); // invalid price","lastModifiedDate":"2021-04-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Passenger} being edited,","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_GOLF + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_GOLF, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_GOLF, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"chewterence"},"content":"                        + VALID_TRIPDAY_FRIDAY + VALID_TRIPTIME_EVENING, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"chewterence"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"chewterence"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_GOLF + ADDRESS_DESC_AMY","lastModifiedDate":"2021-04-11"},{"lineNumber":120,"author":{"gitId":"chewterence"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND + TRIPDAY_DESC_MONDAY + TRIPTIME_DESC_MORNING + PRICE_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"chewterence"},"content":"                .withTripDay(VALID_TRIPDAY_MONDAY).withTripTime(VALID_TRIPTIME_MORNING).withPrice(VALID_PRICE_AMY)","lastModifiedDate":"2021-04-11"},{"lineNumber":125,"author":{"gitId":"JoelHo"},"content":"                .withTags(VALID_TAG_HR, VALID_TAG_IT).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"chewterence"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"ZechariahTan"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB;","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"JoelHo"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"chewterence"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"JoelHo"},"content":"                .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"JoelHo"},"content":"        descriptor \u003d new EditPassengerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"JoelHo"},"content":"        descriptor \u003d new EditPassengerDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"chewterence"},"content":"        // tripDay","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"chewterence"},"content":"        userInput \u003d targetIndex.getOneBased() + TRIPDAY_DESC_FRIDAY;","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"JoelHo"},"content":"        descriptor \u003d new EditPassengerDescriptorBuilder().withTripDay(VALID_TRIPDAY_FRIDAY).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"chewterence"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"chewterence"},"content":"        // tripTime","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"chewterence"},"content":"        userInput \u003d targetIndex.getOneBased() + TRIPTIME_DESC_EVENING;","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"JoelHo"},"content":"        descriptor \u003d new EditPassengerDescriptorBuilder().withTripTime(VALID_TRIPTIME_EVENING).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"chewterence"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"chewterence"},"content":"        // price","lastModifiedDate":"2021-04-11"},{"lineNumber":178,"author":{"gitId":"chewterence"},"content":"        userInput \u003d targetIndex.getOneBased() + PRICE_DESC_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":179,"author":{"gitId":"chewterence"},"content":"        descriptor \u003d new EditPassengerDescriptorBuilder().withPrice(VALID_PRICE_AMY).build();","lastModifiedDate":"2021-04-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"JoelHo"},"content":"        descriptor \u003d new EditPassengerDescriptorBuilder().withTags(VALID_TAG_IT).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":192,"author":{"gitId":"chewterence"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"ZechariahTan"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-10"},{"lineNumber":194,"author":{"gitId":"ZechariahTan"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-10"},{"lineNumber":195,"author":{"gitId":"chewterence"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + TRIPDAY_DESC_FRIDAY + TRIPTIME_DESC_EVENING + TAG_DESC_GOLF;","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"chewterence"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTripDay(VALID_TRIPDAY_FRIDAY)","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"JoelHo"},"content":"                .withTripTime(VALID_TRIPTIME_EVENING).withTags(VALID_TAG_IT, VALID_TAG_HR)","lastModifiedDate":"2021-04-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"chewterence"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"JoelHo"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"ZechariahTan"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":219,"author":{"gitId":"JoelHo"},"content":"        descriptor \u003d new EditPassengerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":227,"author":{"gitId":"chewterence"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"JoelHo"},"content":"        EditCommand.EditPassengerDescriptor descriptor \u003d new EditPassengerDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"chewterence":52,"ZechariahTan":5,"-":156,"JoelHo":22}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRICE_DESC_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPDAY_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPTIME_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_IT;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ALL;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lyueyang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"lyueyang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDayContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTimeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"lyueyang"},"content":"import seedu.address.model.person.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.person.passenger.PriceIsGreaterThanAmountPredicate;","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"lyueyang"},"content":"import seedu.address.model.tag.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"lyueyang"},"content":"    public void parse_namePrefixEmptyArg_throwsParseException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"lyueyang"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"lyueyang"},"content":"                PREFIX_NAME + \"     \",","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"lyueyang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"lyueyang"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"lyueyang"},"content":"    public void parse_multiPrefix_throwsParseException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"lyueyang"},"content":"        String userInput \u003d FindCommand.COMMAND_WORD + \" \" + \"n/Alice a/Bedok\";","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"lyueyang"},"content":"        assertParseFailure(parser, userInput, String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"lyueyang"},"content":"    public void parse_multiPriceArgs_throwsParseException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"lyueyang"},"content":"        String userInput \u003d FindCommand.COMMAND_WORD + \" \" + \"pr/100.00 pr/55\";","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"lyueyang"},"content":"        assertParseFailure(parser, userInput, String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"lyueyang"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Amy\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" n/Amy\", expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n n/Amy \\n \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"lyueyang"},"content":"    public void parse_validNameMultiArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"lyueyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"lyueyang"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Amy\", \"Bob\")));","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" n/Amy n/Bob\", expectedFindCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"lyueyang"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n n/Amy n/Bob\\n \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"lyueyang"},"content":"    public void parse_validNameArgWithWhitespace_returnsFindCommand() {","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"lyueyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"lyueyang"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Amy Jane\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" n/Amy Jane\", expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"lyueyang"},"content":"    public void parse_validPhoneArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new PhoneContainsKeywordsPredicate(Arrays.asList(VALID_PHONE_AMY)));","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n \" + PHONE_DESC_AMY + \"\\n \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, PHONE_DESC_AMY, expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"lyueyang"},"content":"    public void parse_validAddressArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"lyueyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"lyueyang"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new AddressContainsKeywordsPredicate(Arrays.asList(VALID_ADDRESS_AMY)));","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"lyueyang"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n \" + ADDRESS_DESC_AMY + \"\\n \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, ADDRESS_DESC_AMY, expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"lyueyang"},"content":"    public void parse_validTagArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"lyueyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"lyueyang"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"JoelHo"},"content":"                new FindCommand(new TagContainsKeywordsPredicate(Arrays.asList(\"[\" + VALID_TAG_IT + \"]\")));","lastModifiedDate":"2021-04-10"},{"lineNumber":125,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"lyueyang"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n \" + TAG_DESC_FRIEND + \"\\n \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, TAG_DESC_FRIEND, expectedFindCommand);","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"lyueyang"},"content":"    public void parse_validPriceArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"lyueyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"lyueyang"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"markmcwong"},"content":"                new FindCommand(new PriceIsGreaterThanAmountPredicate(VALID_PRICE_BOB));","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"lyueyang"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n \" + PRICE_DESC_BOB + \"\\n \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, PRICE_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"lyueyang"},"content":"    public void parse_validAllArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"lyueyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"lyueyang"},"content":"        FindCommand expectedAllCommand \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new AttributeContainsKeywordsPredicate(Collections.singletonList(VALID_NAME_BOB)));","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"lyueyang"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n \" + PREFIX_ALL + VALID_NAME_BOB + \"\\n \\t\", expectedAllCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ALL + VALID_NAME_BOB, expectedAllCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"lyueyang"},"content":"        expectedAllCommand \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new AttributeContainsKeywordsPredicate(Collections.singletonList(VALID_PHONE_AMY)));","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n \" + PREFIX_ALL + VALID_PHONE_AMY + \"\\n \\t\", expectedAllCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ALL + VALID_PHONE_AMY, expectedAllCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"lyueyang"},"content":"        expectedAllCommand \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new AttributeContainsKeywordsPredicate(Collections.singletonList(VALID_ADDRESS_AMY)));","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n \" + PREFIX_ALL + VALID_ADDRESS_AMY + \"\\n \\t\", expectedAllCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ALL + VALID_ADDRESS_AMY, expectedAllCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"lyueyang"},"content":"        expectedAllCommand \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"JoelHo"},"content":"                new FindCommand(new AttributeContainsKeywordsPredicate(Collections.singletonList(VALID_TAG_IT)));","lastModifiedDate":"2021-04-10"},{"lineNumber":168,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"JoelHo"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ALL + VALID_TAG_IT, expectedAllCommand);","lastModifiedDate":"2021-04-10"},{"lineNumber":170,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"lyueyang"},"content":"    public void parse_validDayArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"lyueyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"lyueyang"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new TripDayContainsKeywordsPredicate(","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"lyueyang"},"content":"                        Collections.singletonList(VALID_TRIPDAY_BOB.toString())));","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"lyueyang"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n \" + TRIPDAY_DESC_BOB + \"\\n \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, TRIPDAY_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"lyueyang"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"lyueyang"},"content":"    public void parse_validTripArgs_returnsFindCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"lyueyang"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"lyueyang"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"lyueyang"},"content":"                new FindCommand(new TripTimeContainsKeywordsPredicate(Collections.singletonList(\"1930\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"lyueyang"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, \" \\n \" + TRIPTIME_DESC_BOB + \"\\n \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"lyueyang"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"lyueyang"},"content":"        assertParseSuccess(parser, TRIPTIME_DESC_BOB, expectedFindCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"lyueyang"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"chewterence":2,"lyueyang":150,"markmcwong":2,"-":36,"JoelHo":6}},{"path":"src/test/java/seedu/address/logic/parser/FindPoolCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_NO_PREFIX;","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRST_NAME_AMY;","lastModifiedDate":"2021-04-11"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FIRST_NAME_BOB;","lastModifiedDate":"2021-04-11"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"import seedu.address.logic.commands.FindPoolCommand;","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-04-11"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.PooledPassengerContainsKeywordsPredicate;","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"public class FindPoolCommandParserTest {","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    private FindPoolCommandParser parser \u003d new FindPoolCommandParser();","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPoolCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    public void parse_wrongPrefix_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"                PREFIX_ADDRESS + VALID_NAME_AMY,","lastModifiedDate":"2021-04-11"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"                        FindPoolCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    public void parse_namePrefixEmptyArg_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"     \", Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-11"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"    public void parse_invalidNameArgs_throwsParseException() {","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + INVALID_NAME_NO_PREFIX, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-11"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"        // one keyword, no leading and trailing whitespaces","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"        FindPoolCommand expectedFindPoolCommand \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"                new FindPoolCommand(new PooledPassengerContainsKeywordsPredicate(Arrays.asList(VALID_FIRST_NAME_AMY)));","lastModifiedDate":"2021-04-11"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + VALID_FIRST_NAME_AMY, expectedFindPoolCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"        assertParseSuccess(parser, \" \\n \" + PREFIX_NAME + VALID_FIRST_NAME_AMY + \" \\n \\t\", expectedFindPoolCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"    public void parse_validNameMultiArgs_returnsFindCommand() {","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"        // more than one keyword, no leading and trailing whitespaces - n/Amy n/Bob","lastModifiedDate":"2021-04-11"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"        FindPoolCommand expectedFindPoolCommand \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"                new FindPoolCommand(new PooledPassengerContainsKeywordsPredicate(","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"                        Arrays.asList(VALID_FIRST_NAME_AMY, VALID_FIRST_NAME_BOB)));","lastModifiedDate":"2021-04-11"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"                + VALID_FIRST_NAME_AMY + \" \" + PREFIX_NAME + VALID_FIRST_NAME_BOB, expectedFindPoolCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"        // multiple whitespaces and tabs between keywords","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"        assertParseSuccess(parser, \" \\n \" + PREFIX_NAME + VALID_FIRST_NAME_AMY + \" \"","lastModifiedDate":"2021-04-11"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"                + PREFIX_NAME + VALID_FIRST_NAME_BOB + \"\\n \\t\", expectedFindPoolCommand);","lastModifiedDate":"2021-04-11"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"    public void parse_validNameArgWithWhitespace_returnsFindCommand() {","lastModifiedDate":"2021-04-10"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"        // no leading and trailing whitespaces -s n/Amy Bee","lastModifiedDate":"2021-04-11"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"        FindPoolCommand expectedFindPoolCommand \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"                new FindPoolCommand(new PooledPassengerContainsKeywordsPredicate(Arrays.asList(VALID_NAME_AMY)));","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY, expectedFindPoolCommand);","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"markmcwong":82}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"    private static final String INVALID_INDEX \u003d \"a\";","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"    private static final String VALID_INDEX_1 \u003d \"1\";","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"    private static final String VALID_INDEX_2 \u003d \"2\";","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"    private static final int VALID_INDEX_1_AS_INT \u003d Integer.parseInt(VALID_INDEX_1);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"    private static final int VALID_INDEX_2_AS_INT \u003d Integer.parseInt(VALID_INDEX_2);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"chewterence"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"chewterence"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"JoelHo"},"content":"    public void parseIndices_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIndices(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"JoelHo"},"content":"    public void parseIndices_collectionWithInvalidIndices_throwsParseException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"JoelHo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(Arrays.asList(VALID_INDEX_1, INVALID_INDEX)));","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"JoelHo"},"content":"    public void parseIndices_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"JoelHo"},"content":"        assertTrue(ParserUtil.parseIndices(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"JoelHo"},"content":"    public void parseIndices_collectionWithValidIndices_returnsIndexSet() throws Exception {","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"JoelHo"},"content":"        Set\u003cIndex\u003e actualIndexSet \u003d ParserUtil.parseIndices(Arrays.asList(VALID_INDEX_1, VALID_INDEX_2));","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"JoelHo"},"content":"        Set\u003cIndex\u003e expectedIndexSet \u003d new HashSet\u003c\u003e(Arrays.asList(","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"JoelHo"},"content":"                Index.fromOneBased(VALID_INDEX_1_AS_INT), Index.fromOneBased(VALID_INDEX_2_AS_INT))","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"JoelHo"},"content":"        );","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"JoelHo"},"content":"        assertEquals(expectedIndexSet, actualIndexSet);","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"chewterence":3,"-":166,"JoelHo":34}},{"path":"src/test/java/seedu/address/logic/parser/PoolCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMUTER_DESC_1;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMUTER_DESC_2;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMMUTER;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TRIPDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TRIPTIME;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FEMALE;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPDAY_DESC_FRIDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPDAY_DESC_MONDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPTIME_DESC_EVENING;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TRIPTIME_DESC_MORNING;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMUTER_1;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMUTER_2;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FEMALE;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_IT;","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_MONDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_STR_MONDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_MORNING;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_STR_MORNING;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"chewterence"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.PoolCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"import seedu.address.testutil.CommuterBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"chewterence"},"content":"import seedu.address.testutil.DriverBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"chewterence"},"content":"public class PoolCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"chewterence"},"content":"    private PoolCommandParser parser \u003d new PoolCommandParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"chewterence"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"chewterence"},"content":"        Driver driver \u003d new DriverBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"chewterence"},"content":"        Set\u003cIndex\u003e commuters \u003d new CommuterBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"        Set\u003cTag\u003e tags \u003d SampleDataUtil.getTagSet(VALID_TAG_IT);","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"chewterence"},"content":"        TripDay tripDay \u003d new TripDay(VALID_TRIPDAY_MONDAY);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"chewterence"},"content":"        TripTime tripTime \u003d new TripTime(VALID_TRIPTIME_MORNING);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"chewterence"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"chewterence"},"content":"                new PoolCommand(driver, commuters, tripDay, tripTime, tags));","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"chewterence"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"chewterence"},"content":"                new PoolCommand(driver, commuters, tripDay, tripTime, tags));","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"chewterence"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"chewterence"},"content":"                new PoolCommand(driver, commuters, tripDay, tripTime, tags));","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"chewterence"},"content":"        // multiple tripDays - last tripDay accepted","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_FRIDAY + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"chewterence"},"content":"                + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TRIPTIME_DESC_MORNING + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"chewterence"},"content":"                new PoolCommand(driver, commuters, tripDay, tripTime, tags));","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"chewterence"},"content":"        // multiple tripTimes - last tripTime accepted","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_EVENING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TRIPTIME_DESC_MORNING + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"chewterence"},"content":"                new PoolCommand(driver, commuters, tripDay, tripTime, tags));","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"chewterence"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"        Set\u003cTag\u003e multipleTags \u003d SampleDataUtil.getTagSet(VALID_TAG_IT, VALID_TAG_FEMALE);","lastModifiedDate":"2021-04-10"},{"lineNumber":93,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND + TAG_DESC_FEMALE,","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"chewterence"},"content":"                new PoolCommand(driver, commuters, tripDay, tripTime, multipleTags));","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"chewterence"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"chewterence"},"content":"        // zero tags","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"chewterence"},"content":"        Driver driver \u003d new DriverBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"chewterence"},"content":"        Set\u003cIndex\u003e commuters \u003d new CommuterBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"chewterence"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"chewterence"},"content":"        TripDay tripDay \u003d new TripDay(VALID_TRIPDAY_MONDAY);","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"chewterence"},"content":"        TripTime tripTime \u003d new TripTime(VALID_TRIPTIME_MORNING);","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2,","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"chewterence"},"content":"                new PoolCommand(driver, commuters, tripDay, tripTime, tags));","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"chewterence"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"chewterence"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, PoolCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"chewterence"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2, expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"chewterence"},"content":"        // missing phone prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2, expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"chewterence"},"content":"        // missing tripDay prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_TRIPDAY_STR_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2, expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"chewterence"},"content":"        // missing tripTime prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"chewterence"},"content":"                + VALID_TRIPTIME_STR_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2, expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"JoelHo"},"content":"        // missing one commuter prefix","lastModifiedDate":"2021-04-10"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-04-10"},{"lineNumber":134,"author":{"gitId":"JoelHo"},"content":"                + TRIPTIME_DESC_MORNING + VALID_COMMUTER_1, expectedMessage);","lastModifiedDate":"2021-04-10"},{"lineNumber":135,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"chewterence"},"content":"        // missing all commuter prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + VALID_COMMUTER_1 + VALID_COMMUTER_2, expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"chewterence"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_TRIPDAY_STR_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"chewterence"},"content":"                + VALID_TRIPTIME_STR_MORNING + VALID_COMMUTER_1 + VALID_COMMUTER_2, expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"chewterence"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"chewterence"},"content":"        // invalid name","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"chewterence"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"chewterence"},"content":"        // invalid phone","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"chewterence"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"chewterence"},"content":"        // invalid tripDay","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_TRIPDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"chewterence"},"content":"                TripDay.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"chewterence"},"content":"        // invalid tripTime","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"chewterence"},"content":"                + INVALID_TRIPTIME + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"chewterence"},"content":"                TripTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"JoelHo"},"content":"        // invalid commuter","lastModifiedDate":"2021-04-10"},{"lineNumber":169,"author":{"gitId":"JoelHo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-04-10"},{"lineNumber":170,"author":{"gitId":"JoelHo"},"content":"                        + TRIPTIME_DESC_MORNING + INVALID_COMMUTER + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-04-10"},{"lineNumber":171,"author":{"gitId":"JoelHo"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-04-10"},{"lineNumber":172,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"chewterence"},"content":"        // invalid tag","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + INVALID_TAG_DESC,","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"chewterence"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"chewterence"},"content":"        // two invalid values, only first invalid value reported (Name)","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"chewterence"},"content":"                + TRIPTIME_DESC_MORNING + COMMUTER_DESC_1 + COMMUTER_DESC_2 + INVALID_TAG_DESC,","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"chewterence"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"chewterence"},"content":"        // two invalid values, only first invalid value reported (Phone)","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"chewterence"},"content":"                + INVALID_TRIPTIME + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"chewterence"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"chewterence"},"content":"        // two invalid values, only first invalid value reported (TripDay)","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_TRIPDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"chewterence"},"content":"                + INVALID_TRIPTIME + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"chewterence"},"content":"                TripDay.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"chewterence"},"content":"        // two invalid values, only first invalid value reported (TripTime)","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"chewterence"},"content":"                + INVALID_TRIPTIME + COMMUTER_DESC_1 + COMMUTER_DESC_2 + INVALID_TAG_DESC,","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"chewterence"},"content":"                TripTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"chewterence"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + TRIPDAY_DESC_MONDAY","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"chewterence"},"content":"                        + INVALID_TRIPTIME + COMMUTER_DESC_1 + COMMUTER_DESC_2 + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"chewterence"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, PoolCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"chewterence"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chewterence":192,"JoelHo":11}},{"path":"src/test/java/seedu/address/logic/parser/UnpoolCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.UnpoolCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":" * outside of the UnpoolCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":" * same path through the UnpoolCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"public class UnpoolCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"    private UnpoolCommandParser parser \u003d new UnpoolCommandParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"    public void parse_validArgs_returnsUnpoolCommand() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"        assertParseSuccess(parser, \"1\", new UnpoolCommand(INDEX_FIRST));","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnpoolCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"chewterence":32}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.exceptions.DuplicatePassengerException;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPassengerList());","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"        AddressBook newData \u003d getTypicalAddressBookPassengers();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"    public void resetData_withDuplicatePassengers_throwsDuplicatePassengerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"        // Two passengers with the same identity fields","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"        Passenger editedAlice \u003d new PassengerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HR)","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e newPassengers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPassengers);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        assertThrows(DuplicatePassengerException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"    public void hasPassenger_nullPassenger_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPassenger(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"    public void hasPassenger_passengerNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"        assertFalse(addressBook.hasPassenger(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"    public void hasPassenger_passengerInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"        addressBook.addPassenger(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"        assertTrue(addressBook.hasPassenger(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"    public void hasPassenger_passengerWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"        addressBook.addPassenger(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"        Passenger editedAlice \u003d new PassengerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HR)","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"        assertTrue(addressBook.hasPassenger(editedAlice));","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"    public void getPassengerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPassengerList().remove(0));","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":88,"author":{"gitId":"ZechariahTan"},"content":"    // TODO add pool test","lastModifiedDate":"2021-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"     * A stub ReadOnlyAddressBook whose passengers list can violate interface constraints.","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"        private final ObservableList\u003cPassenger\u003e passengers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"ZechariahTan"},"content":"        private final ObservableList\u003cPool\u003e pools \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"        AddressBookStub(Collection\u003cPassenger\u003e passengers) {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"            this.passengers.setAll(passengers);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"        public ObservableList\u003cPassenger\u003e getPassengerList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"            return passengers;","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"ZechariahTan"},"content":"        public ObservableList\u003cPool\u003e getPoolList() {","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"ZechariahTan"},"content":"            return pools;","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ZechariahTan":8,"-":72,"JoelHo":31}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PASSENGERS;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.BENSON;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"    public void hasPassenger_nullPassenger_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPassenger(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"    public void hasPassenger_passengerNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"        assertFalse(modelManager.hasPassenger(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"    public void hasPassenger_passengerInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"        modelManager.addPassenger(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        assertTrue(modelManager.hasPassenger(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"    public void getFilteredPassengerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPassengerList().remove(0));","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPassenger(ALICE).withPassenger(BENSON).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"JoelHo"},"content":"        modelManager.updateFilteredPassengerList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"JoelHo"},"content":"        modelManager.updateFilteredPassengerList(PREDICATE_SHOW_ALL_PASSENGERS);","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":117,"JoelHo":15}},{"path":"src/test/java/seedu/address/model/person/driver/DriverTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalDrivers.DRIVER_ALICE;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.testutil.DriverBuilder;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.testutil.TypicalDrivers;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"public class DriverTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"    public void constructor_nullPhone_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Driver(new Name(VALID_NAME_BOB), null));","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    public void constructor_nullName_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Driver(null, new Phone(VALID_PHONE_BOB)));","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    public void isSameDriver() {","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(DRIVER_ALICE.isSameDriver(DRIVER_ALICE));","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(DRIVER_ALICE.isSameDriver(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"        // different phone, all other attributes same -\u003e returns false","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"        Driver editedAlice \u003d new DriverBuilder(DRIVER_ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"        assertFalse(DRIVER_ALICE.isSameDriver(editedAlice));","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        editedAlice \u003d new DriverBuilder(DRIVER_ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(DRIVER_ALICE.isSameDriver(editedAlice));","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        Driver editedBob \u003d new DriverBuilder(TypicalDrivers.DRIVER_BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(TypicalDrivers.DRIVER_BOB.isSameDriver(editedBob));","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"        editedBob \u003d new DriverBuilder(TypicalDrivers.DRIVER_BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(TypicalDrivers.DRIVER_BOB.isSameDriver(editedBob));","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"    public void equals() {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"        Driver aliceCopy \u003d new DriverBuilder(DRIVER_ALICE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(DRIVER_ALICE.equals(aliceCopy));","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(DRIVER_ALICE.equals(DRIVER_ALICE));","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(DRIVER_ALICE.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(DRIVER_ALICE.equals(5));","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(DRIVER_ALICE.equals(TypicalDrivers.DRIVER_BOB));","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"        Driver editedAlice \u003d new DriverBuilder(DRIVER_ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(DRIVER_ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"        editedAlice \u003d new DriverBuilder(DRIVER_ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(DRIVER_ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"ZechariahTan":64,"markmcwong":9,"JoelHo":7}},{"path":"src/test/java/seedu/address/model/person/passenger/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":35,"JoelHo":1}},{"path":"src/test/java/seedu/address/model/person/passenger/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(VALID_NAME_AMY.split(\"\\\\s+\")[0]));","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(new PassengerBuilder().withName(VALID_NAME_AMY).build()));","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(VALID_NAME_AMY.split(\"\\\\s\")));","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(new PassengerBuilder().withName(VALID_NAME_AMY).build()));","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(VALID_NAME_AMY.split(\"\\\\s\")[0],","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"                VALID_NAME_BOB.split(\"\\\\s\")[0]));","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(new PassengerBuilder().withName(VALID_NAME_AMY).build()));","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aMy\", \"beE\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(new PassengerBuilder().withName(VALID_NAME_AMY).build()));","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"        assertFalse(predicate.test(new PassengerBuilder().withName(VALID_NAME_AMY).build()));","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(VALID_ADDRESS_BOB.split(\"\\\\s+\")));","lastModifiedDate":"2021-04-10"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"        assertFalse(predicate.test(new PassengerBuilder().withName(VALID_NAME_AMY).build()));","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"        // Keywords match phone and address, but does not match name","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(VALID_ADDRESS_BOB.split(\"\\\\s+\")));","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"        assertFalse(predicate.test(new PassengerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-04-10"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"                .withAddress(VALID_ADDRESS_BOB).build()));","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ZechariahTan":2,"markmcwong":20,"-":57,"JoelHo":3}},{"path":"src/test/java/seedu/address/model/person/passenger/PassengerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.BOB;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"public class PassengerTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"        Passenger passenger \u003d new PassengerBuilder().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e passenger.getTags().remove(0));","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"    public void isSamePassenger() {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"        assertTrue(ALICE.isSamePassenger(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"        assertFalse(ALICE.isSamePassenger(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"        // same name and phone, all other attributes different -\u003e returns true","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"        Passenger editedAlice \u003d new PassengerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"                .withTripDay(VALID_TRIPDAY_BOB).withTripTime(VALID_TRIPTIME_BOB)","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"                .withTags(VALID_TAG_HR).withPrice(VALID_PRICE_AMY).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        assertTrue(ALICE.isSamePassenger(editedAlice));","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"        editedAlice \u003d new PassengerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        assertFalse(ALICE.isSamePassenger(editedAlice));","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"        Passenger editedBob \u003d new PassengerBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"        assertFalse(BOB.isSamePassenger(editedBob));","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"        editedBob \u003d new PassengerBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"        assertFalse(BOB.isSamePassenger(editedBob));","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"        Passenger aliceCopy \u003d new PassengerBuilder(ALICE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"        Passenger editedAlice \u003d new PassengerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"        editedAlice \u003d new PassengerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"        editedAlice \u003d new PassengerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"        // different tripday -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        editedAlice \u003d new PassengerBuilder(ALICE).withTripDay(VALID_TRIPDAY_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-11"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":"        // different triptime -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"        editedAlice \u003d new PassengerBuilder(ALICE).withTripTime(VALID_TRIPTIME_BOB).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":"        // different price -\u003e returns false","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"        editedAlice \u003d new PassengerBuilder(ALICE).withPrice(VALID_PRICE_BOB).build();","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"        editedAlice \u003d new PassengerBuilder(ALICE).withTags(VALID_TAG_HR).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":101,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ZechariahTan":25,"-":48,"JoelHo":30}},{"path":"src/test/java/seedu/address/model/person/passenger/PriceIsGreaterThanAmountPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRICE_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"public class PriceIsGreaterThanAmountPredicateTest {","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"    public void equals() {","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"        Double firstPredicatePrice \u003d VALID_PRICE_AMY;","lastModifiedDate":"2021-04-09"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"        Double secondPredicatePrice \u003d VALID_PRICE_BOB;","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"        PriceIsGreaterThanAmountPredicate firstPredicate \u003d new PriceIsGreaterThanAmountPredicate(firstPredicatePrice);","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"        PriceIsGreaterThanAmountPredicate secondPredicate \u003d new PriceIsGreaterThanAmountPredicate(secondPredicatePrice);","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"        PriceIsGreaterThanAmountPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"                new PriceIsGreaterThanAmountPredicate(firstPredicatePrice);","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    public void test_passengerHasPrice() {","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"        // Passenger price equals to Predicate","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"        PriceIsGreaterThanAmountPredicate predicate \u003d new PriceIsGreaterThanAmountPredicate(VALID_PRICE_AMY);","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(new PassengerBuilder().withPrice(VALID_PRICE_AMY).build()));","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"        // Passenger price bigger than Predicate","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new PriceIsGreaterThanAmountPredicate(VALID_PRICE_AMY);","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(new PassengerBuilder().withPrice(VALID_PRICE_BOB).build()));","lastModifiedDate":"2021-04-09"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"        // Passenger price smaller than Predicate","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new PriceIsGreaterThanAmountPredicate(VALID_PRICE_BOB);","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"        assertFalse(predicate.test(new PassengerBuilder().withPrice(VALID_PRICE_AMY).build()));","lastModifiedDate":"2021-04-09"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"    public void test_passengerWithoutPrice_returnsFalse() {","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"        PriceIsGreaterThanAmountPredicate predicate \u003d new PriceIsGreaterThanAmountPredicate(VALID_PRICE_AMY);","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"        assertFalse(predicate.test(new PassengerBuilder().build()));","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"markmcwong":60}},{"path":"src/test/java/seedu/address/model/person/passenger/PriceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"public class PriceTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public void constructor_invalidPrice_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"        double invalidPrice \u003d -12.01;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Price(invalidPrice));","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    public void isValidPrice() {","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"        // null phone number","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"        assertThrows(NullPointerException.class, () -\u003e Price.isValidPrice(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        // invalid Price","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(Price.isValidPrice(\"\")); // empty string","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(Price.isValidPrice(\" \")); // spaces only","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(Price.isValidPrice(\"-1\")); // negative numbers","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(Price.isValidPrice(\"123,1\")); // seperated by comma instead of period","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(Price.isValidPrice(\"phone\")); // non-numeric","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(Price.isValidPrice(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(Price.isValidPrice(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"        // valid phone numbers","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(Price.isValidPrice(\"9.11\")); //","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(Price.isValidPrice(\"9312.15\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(Price.isValidPrice(\"124293.20\")); // long price numbers","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"ZechariahTan":36}},{"path":"src/test/java/seedu/address/model/person/passenger/UniquePassengerListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.model.person.passenger;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.BOB;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.exceptions.DuplicatePassengerException;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.exceptions.PassengerNotFoundException;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"public class UniquePassengerListTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"    private final UniquePassengerList uniquePassengerList \u003d new UniquePassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"    public void contains_nullPassenger_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePassengerList.contains(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"    public void contains_passengerNotInList_returnsFalse() {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"        assertFalse(uniquePassengerList.contains(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"    public void contains_passengerInList_returnsTrue() {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"        assertTrue(uniquePassengerList.contains(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"    public void contains_passengerWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        Passenger editedAlice \u003d new PassengerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HR)","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"                .build();","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        assertTrue(uniquePassengerList.contains(editedAlice));","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"    public void add_nullPassenger_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePassengerList.add(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"    public void add_duplicatePassenger_throwsDuplicatePassengerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"        assertThrows(DuplicatePassengerException.class, () -\u003e uniquePassengerList.add(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger_nullTargetPassenger_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePassengerList.setPassenger(null, ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger_nullEditedPassenger_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePassengerList.setPassenger(ALICE, null));","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger_targetPassengerNotInList_throwsPassengerNotFoundException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"        assertThrows(PassengerNotFoundException.class, () -\u003e uniquePassengerList.setPassenger(ALICE, ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger_editedPassengerIsSamePassenger_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.setPassenger(ALICE, ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"        UniquePassengerList expectedUniquePassengerList \u003d new UniquePassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"        expectedUniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"        assertEquals(expectedUniquePassengerList, uniquePassengerList);","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger_editedPassengerHasSameIdentity_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        Passenger editedAlice \u003d new PassengerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HR)","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"                .build();","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.setPassenger(ALICE, editedAlice);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"        UniquePassengerList expectedUniquePassengerList \u003d new UniquePassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"        expectedUniquePassengerList.add(editedAlice);","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"        assertEquals(expectedUniquePassengerList, uniquePassengerList);","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger_editedPassengerHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.setPassenger(ALICE, BOB);","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"        UniquePassengerList expectedUniquePassengerList \u003d new UniquePassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"        expectedUniquePassengerList.add(BOB);","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"        assertEquals(expectedUniquePassengerList, uniquePassengerList);","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"    public void setPassenger_editedPassengerHasNonUniqueIdentity_throwsDuplicatePassengerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(BOB);","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"        assertThrows(DuplicatePassengerException.class, () -\u003e uniquePassengerList.setPassenger(ALICE, BOB));","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"JoelHo"},"content":"    public void remove_nullPassenger_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePassengerList.remove(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"    public void remove_passengerDoesNotExist_throwsPassengerNotFoundException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"JoelHo"},"content":"        assertThrows(PassengerNotFoundException.class, () -\u003e uniquePassengerList.remove(ALICE));","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"JoelHo"},"content":"    public void remove_existingPassenger_removesPassenger() {","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.remove(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"JoelHo"},"content":"        UniquePassengerList expectedUniquePassengerList \u003d new UniquePassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"JoelHo"},"content":"        assertEquals(expectedUniquePassengerList, uniquePassengerList);","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"JoelHo"},"content":"    public void setPassengers_nullUniquePassengerList_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePassengerList.setPassengers((UniquePassengerList) null));","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"JoelHo"},"content":"    public void setPassengers_uniquePassengerList_replacesOwnListWithProvidedUniquePassengerList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"JoelHo"},"content":"        UniquePassengerList expectedUniquePassengerList \u003d new UniquePassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"JoelHo"},"content":"        expectedUniquePassengerList.add(BOB);","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.setPassengers(expectedUniquePassengerList);","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"JoelHo"},"content":"        assertEquals(expectedUniquePassengerList, uniquePassengerList);","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"JoelHo"},"content":"    public void setPassengers_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"JoelHo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePassengerList.setPassengers((List\u003cPassenger\u003e) null));","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"JoelHo"},"content":"    public void setPassengers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.add(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e passengerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"JoelHo"},"content":"        uniquePassengerList.setPassengers(passengerList);","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"JoelHo"},"content":"        UniquePassengerList expectedUniquePassengerList \u003d new UniquePassengerList();","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"JoelHo"},"content":"        expectedUniquePassengerList.add(BOB);","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"JoelHo"},"content":"        assertEquals(expectedUniquePassengerList, uniquePassengerList);","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"JoelHo"},"content":"    public void setPassengers_listWithDuplicatePassengers_throwsDuplicatePassengerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"JoelHo"},"content":"        List\u003cPassenger\u003e listWithDuplicatePassengers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"JoelHo"},"content":"        assertThrows(","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"JoelHo"},"content":"                DuplicatePassengerException.class, () -\u003e uniquePassengerList.setPassengers(listWithDuplicatePassengers)","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"JoelHo"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"JoelHo"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"JoelHo"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"JoelHo"},"content":"            -\u003e uniquePassengerList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"JoelHo":172}},{"path":"src/test/java/seedu/address/model/pool/PoolTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.model.pool;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_BOB;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPools.HOMEPOOL;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPools.OFFICEPOOL;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"import java.util.List;","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerListBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.testutil.PoolBuilder;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.testutil.TypicalDrivers;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.testutil.TypicalPassengers;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"public class PoolTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    public void constructor_emptyPassengerList_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        List\u003cPassenger\u003e emptyPassengerList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Pool(TypicalDrivers.DRIVER_BOB,","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"                        new TripDay(VALID_TRIPDAY_BOB),","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"                        new TripTime(VALID_TRIPTIME_BOB),","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"                        emptyPassengerList, null));","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    public void setPassenger_nullTargetPassenger() {","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e HOMEPOOL.setPassenger(null, TypicalPassengers.ALICE));","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"    public void setPassenger_nullEditedPassenger() {","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e HOMEPOOL.setPassenger(TypicalPassengers.ALICE, null));","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"    public void setPassenger_passengerNotInPool_returnsPoolWithUnchangedPassengers() {","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"        Pool editedHomePool \u003d new PoolBuilder(HOMEPOOL).build()","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"                .setPassenger(TypicalPassengers.GEORGE, TypicalPassengers.BOB);","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"        assertTrue(editedHomePool.getPassengers().equals(HOMEPOOL.getPassengers()));","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"    public void setPassenger_validTargetAndEditedPassenger_returnsEditedPool() {","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"        Pool editedHomePool \u003d new PoolBuilder(HOMEPOOL).build()","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"                .setPassenger(TypicalPassengers.ALICE, TypicalPassengers.BOB);","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"        assertFalse(editedHomePool.getPassengers().equals(HOMEPOOL.getPassengers()));","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"    public void hasPassenger_validPassenger_returnsTrue() {","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"        Pool defaultWorkPool \u003d new PoolBuilder().withDefaultPassengers().build();","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"        assertTrue(defaultWorkPool.hasPassenger(ALICE));","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"        Pool pool \u003d new PoolBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"                .withDefaultPassengers()","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"                .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e pool.getTags().remove(0));","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"    public void isSamePool() {","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(HOMEPOOL.isSamePool(HOMEPOOL));","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(HOMEPOOL.isSamePool(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"        // same details, tags different -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"ZechariahTan"},"content":"        Pool editedHomePool \u003d new PoolBuilder(HOMEPOOL)","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"                .withTags(VALID_TAG_HR).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(HOMEPOOL.isSamePool(editedHomePool));","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"ZechariahTan"},"content":"        // different details, same tags -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"ZechariahTan"},"content":"        editedHomePool \u003d new PoolBuilder(HOMEPOOL)","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"ZechariahTan"},"content":"                .withDriver(TypicalDrivers.DRIVER_BOB)","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":"                .withTripDay(DayOfWeek.WEDNESDAY)","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"                .withTripTime(LocalTime.of(14, 0))","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"                .withPassengers(new PassengerListBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"ZechariahTan"},"content":"                        .withPassenger(TypicalPassengers.ELLE)","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"ZechariahTan"},"content":"                        .withPassenger(TypicalPassengers.DANIEL)","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"                        .withPassenger(TypicalPassengers.GEORGE)","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"ZechariahTan"},"content":"                        .build())","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"ZechariahTan"},"content":"                .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(OFFICEPOOL.isSamePool(editedHomePool));","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"ZechariahTan"},"content":"    public void equals() {","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"ZechariahTan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"ZechariahTan"},"content":"        Pool homePoolCopy \u003d new PoolBuilder(HOMEPOOL).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(HOMEPOOL.equals(homePoolCopy));","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"ZechariahTan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(HOMEPOOL.equals(HOMEPOOL));","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"ZechariahTan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(HOMEPOOL.equals(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"ZechariahTan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(HOMEPOOL.equals(5));","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"ZechariahTan"},"content":"        // different pool -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(HOMEPOOL.equals(OFFICEPOOL));","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"ZechariahTan"},"content":"        // different driver -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"ZechariahTan"},"content":"        Pool editedAlice \u003d new PoolBuilder(HOMEPOOL).withDriver(TypicalDrivers.DRIVER_FIONA).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(HOMEPOOL.equals(editedAlice));","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"ZechariahTan"},"content":"        // different tripDay-\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"ZechariahTan"},"content":"        editedAlice \u003d new PoolBuilder(HOMEPOOL).withTripDay(VALID_TRIPDAY_BOB).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(HOMEPOOL.equals(editedAlice));","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"ZechariahTan"},"content":"        // different tripTime -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"ZechariahTan"},"content":"        editedAlice \u003d new PoolBuilder(HOMEPOOL).withTripTime(VALID_TRIPTIME_BOB).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(HOMEPOOL.equals(editedAlice));","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"ZechariahTan"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"JoelHo"},"content":"        editedAlice \u003d new PoolBuilder(HOMEPOOL).withTags(VALID_TAG_HR).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":138,"author":{"gitId":"ZechariahTan"},"content":"        assertFalse(HOMEPOOL.equals(editedAlice));","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"ZechariahTan":89,"markmcwong":46,"JoelHo":5}},{"path":"src/test/java/seedu/address/model/pool/PooledPassengerContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.model.pool;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPassengers.CARL;","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPassengers.DANIEL;","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPassengers.GEORGE;","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPools.OFFICEPOOL;","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPools.WORKPOOL;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import java.util.List;","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"public class PooledPassengerContainsKeywordsPredicateTest {","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"    public void equals() {","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"                new PooledPassengerContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"                new PooledPassengerContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"                new PooledPassengerContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        // different passenger -\u003e returns false","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"        // One keyword","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"                new PooledPassengerContainsKeywordsPredicate(","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"                        Collections.singletonList(ALICE.getName().toString().split(\"\\\\s\")[0]));","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(WORKPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"        // Multiple keywords","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new PooledPassengerContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"                ALICE.getName().toString().split(\"\\\\s\")[0],","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"                GEORGE.getName().toString().split(\"\\\\s\")[0]));","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(WORKPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new PooledPassengerContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"                ALICE.getName().toString().split(\"\\\\s\")[0],","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"                DANIEL.getName().toString().split(\"\\\\s\")[0]));","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(WORKPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new PooledPassengerContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"GeorGe\"));","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"        assertTrue(predicate.test(WORKPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"        // Zero keywords","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"        PooledPassengerContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"                new PooledPassengerContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"        assertFalse(predicate.test(OFFICEPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new PooledPassengerContainsKeywordsPredicate(Arrays.asList(CARL.getName().toString().split(\"\\\\s\")));","lastModifiedDate":"2021-04-10"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"        assertFalse(predicate.test(OFFICEPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"markmcwong"},"content":"        // Keywords match Driver\u0027s name and TripDay, but does not match any passenger\u0027s name","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"        predicate \u003d new PooledPassengerContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2021-04-10"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":"                OFFICEPOOL.getDriver().getName().toString().split(\"\\\\s\")[0],","lastModifiedDate":"2021-04-10"},{"lineNumber":87,"author":{"gitId":"markmcwong"},"content":"                OFFICEPOOL.getTripDayAsStr()));","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"markmcwong"},"content":"        assertFalse(predicate.test(OFFICEPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":89,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"markmcwong":90}},{"path":"src/test/java/seedu/address/model/pool/TripDayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.model.pool;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"public class TripDayTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TripDay(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public void isEqual() {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        DayOfWeek day1 \u003d DayOfWeek.valueOf(\"MONDAY\");","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        TripDay mon \u003d new TripDay(day1);","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        DayOfWeek day2 \u003d DayOfWeek.valueOf(\"MONDAY\");","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"        TripDay mon2 \u003d new TripDay(day2);","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(mon.equals(mon2));","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"chewterence":2,"ZechariahTan":25}},{"path":"src/test/java/seedu/address/model/pool/TripTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.model.pool;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"public class TripTimeTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TripTime(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    public void isEqual() {","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"        DateTimeFormatter timeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        TripTime t1 \u003d new TripTime(LocalTime.parse(\"2300\", timeFormat));","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        DateTimeFormatter otherTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"        TripTime t2 \u003d new TripTime(LocalTime.parse(\"23:00\", otherTimeFormat));","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"        assertTrue(t1.equals(t2));","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"chewterence":2,"ZechariahTan":25}},{"path":"src/test/java/seedu/address/model/pool/UniquePoolListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.model.pool;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalPassengers;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPools.HOMEPOOL;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPools.OFFICEPOOL;","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalPools.WORKPOOL;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import java.util.List;","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.exceptions.DuplicatePoolException;","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.pool.exceptions.PoolNotFoundException;","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"import seedu.address.testutil.PoolBuilder;","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"public class UniquePoolListTest {","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    private final UniquePoolList uniquePoolList \u003d new UniquePoolList();","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    public void contains_nullPool_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePoolList.contains(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"    public void contains_poolNotInList_returnsFalse() {","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"        assertFalse(uniquePoolList.contains(HOMEPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"    public void contains_poolInList_returnsTrue() {","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(HOMEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        assertTrue(uniquePoolList.contains(HOMEPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"    public void contains_differentPassengerListWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(WORKPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"        Pool editedPool \u003d new PoolBuilder(WORKPOOL).withPassengers(getTypicalPassengers())","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"                .build();","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"        assertTrue(uniquePoolList.contains(editedPool));","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"    public void add_nullPool_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePoolList.add(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"    public void add_duplicatePool_throwsDuplicatePoolException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(OFFICEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"        assertThrows(DuplicatePoolException.class, () -\u003e uniquePoolList.add(OFFICEPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"    public void setPool_nullTargetPool_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePoolList.setPool(null, OFFICEPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":65,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":66,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":67,"author":{"gitId":"markmcwong"},"content":"    public void setPool_nullEditedPool_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePoolList.setPool(OFFICEPOOL, null));","lastModifiedDate":"2021-04-06"},{"lineNumber":69,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":71,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":72,"author":{"gitId":"markmcwong"},"content":"    public void setPool_targetPoolNotInList_throwsPoolNotFoundException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":73,"author":{"gitId":"markmcwong"},"content":"        assertThrows(PoolNotFoundException.class, () -\u003e uniquePoolList.setPool(HOMEPOOL, HOMEPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"markmcwong"},"content":"    public void setPool_editedPoolIsSamePool_success() {","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(HOMEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":79,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.setPool(HOMEPOOL, HOMEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":80,"author":{"gitId":"markmcwong"},"content":"        UniquePoolList expecteduniquePoolList \u003d new UniquePoolList();","lastModifiedDate":"2021-04-06"},{"lineNumber":81,"author":{"gitId":"markmcwong"},"content":"        expecteduniquePoolList.add(HOMEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":82,"author":{"gitId":"markmcwong"},"content":"        assertEquals(expecteduniquePoolList, uniquePoolList);","lastModifiedDate":"2021-04-06"},{"lineNumber":83,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":84,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":85,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":86,"author":{"gitId":"markmcwong"},"content":"    public void setPool_editedPoolHasSameIdentity_success() {","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(OFFICEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":88,"author":{"gitId":"markmcwong"},"content":"        Pool editedPool \u003d new PoolBuilder(OFFICEPOOL).withPassengers(getTypicalPassengers())","lastModifiedDate":"2021-04-06"},{"lineNumber":89,"author":{"gitId":"markmcwong"},"content":"                .build();","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.setPool(OFFICEPOOL, editedPool);","lastModifiedDate":"2021-04-06"},{"lineNumber":91,"author":{"gitId":"markmcwong"},"content":"        UniquePoolList expectedUniquePoolList \u003d new UniquePoolList();","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"markmcwong"},"content":"        expectedUniquePoolList.add(editedPool);","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"markmcwong"},"content":"        assertEquals(expectedUniquePoolList, uniquePoolList);","lastModifiedDate":"2021-04-06"},{"lineNumber":94,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"markmcwong"},"content":"    public void setPool_editedPoolHasDifferentIdentity_success() {","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(WORKPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.setPool(WORKPOOL, OFFICEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"markmcwong"},"content":"        UniquePoolList expecteduniquePoolList \u003d new UniquePoolList();","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"markmcwong"},"content":"        expecteduniquePoolList.add(OFFICEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"markmcwong"},"content":"        assertEquals(expecteduniquePoolList, uniquePoolList);","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":105,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":106,"author":{"gitId":"markmcwong"},"content":"    public void setPool_editedPoolHasNonUniqueIdentity_throwsDuplicatePoolException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":107,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(WORKPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":108,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(HOMEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":109,"author":{"gitId":"markmcwong"},"content":"        assertThrows(DuplicatePoolException.class, () -\u003e uniquePoolList.setPool(HOMEPOOL, WORKPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":110,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":111,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":112,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":113,"author":{"gitId":"markmcwong"},"content":"    public void setPool_nullPool_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":114,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePoolList.remove(null));","lastModifiedDate":"2021-04-06"},{"lineNumber":115,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":116,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":117,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":118,"author":{"gitId":"markmcwong"},"content":"    public void remove_poolDoesNotExist_throwsPoolNotFoundException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":119,"author":{"gitId":"markmcwong"},"content":"        assertThrows(PoolNotFoundException.class, () -\u003e uniquePoolList.remove(HOMEPOOL));","lastModifiedDate":"2021-04-06"},{"lineNumber":120,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":121,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":122,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":123,"author":{"gitId":"markmcwong"},"content":"    public void remove_existingPool_removesPool() {","lastModifiedDate":"2021-04-06"},{"lineNumber":124,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(OFFICEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":125,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.remove(OFFICEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":126,"author":{"gitId":"markmcwong"},"content":"        UniquePoolList expectedUniquePoolList \u003d new UniquePoolList();","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"markmcwong"},"content":"        assertEquals(expectedUniquePoolList, uniquePoolList);","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":130,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":131,"author":{"gitId":"markmcwong"},"content":"    public void setPools_nullUniquePoolList_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":132,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePoolList.setPools((UniquePoolList) null));","lastModifiedDate":"2021-04-06"},{"lineNumber":133,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":134,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":135,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":136,"author":{"gitId":"markmcwong"},"content":"    public void setPools_uniquePoolList_replacesOwnListWithProvideduniquePoolList() {","lastModifiedDate":"2021-04-06"},{"lineNumber":137,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(WORKPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":138,"author":{"gitId":"markmcwong"},"content":"        UniquePoolList expecteduniquePoolList \u003d new UniquePoolList();","lastModifiedDate":"2021-04-06"},{"lineNumber":139,"author":{"gitId":"markmcwong"},"content":"        expecteduniquePoolList.add(HOMEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":140,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.setPools(expecteduniquePoolList);","lastModifiedDate":"2021-04-06"},{"lineNumber":141,"author":{"gitId":"markmcwong"},"content":"        assertEquals(expecteduniquePoolList, uniquePoolList);","lastModifiedDate":"2021-04-06"},{"lineNumber":142,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":143,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":144,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":145,"author":{"gitId":"markmcwong"},"content":"    public void setPools_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":146,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePoolList.setPools((List\u003cPool\u003e) null));","lastModifiedDate":"2021-04-06"},{"lineNumber":147,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":148,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":149,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":150,"author":{"gitId":"markmcwong"},"content":"    public void setPools_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-04-06"},{"lineNumber":151,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.add(HOMEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":152,"author":{"gitId":"markmcwong"},"content":"        List\u003cPool\u003e poolList \u003d Collections.singletonList(WORKPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":153,"author":{"gitId":"markmcwong"},"content":"        uniquePoolList.setPools(poolList);","lastModifiedDate":"2021-04-06"},{"lineNumber":154,"author":{"gitId":"markmcwong"},"content":"        UniquePoolList expectedUniquePoolList \u003d new UniquePoolList();","lastModifiedDate":"2021-04-06"},{"lineNumber":155,"author":{"gitId":"markmcwong"},"content":"        expectedUniquePoolList.add(WORKPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":156,"author":{"gitId":"markmcwong"},"content":"        assertEquals(expectedUniquePoolList, uniquePoolList);","lastModifiedDate":"2021-04-06"},{"lineNumber":157,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":158,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":159,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":160,"author":{"gitId":"markmcwong"},"content":"    public void setPools_listWithDuplicatePools_throwsDuplicatePoolException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":161,"author":{"gitId":"markmcwong"},"content":"        List\u003cPool\u003e listWithDuplicatePools \u003d Arrays.asList(OFFICEPOOL, OFFICEPOOL);","lastModifiedDate":"2021-04-06"},{"lineNumber":162,"author":{"gitId":"markmcwong"},"content":"        assertThrows(","lastModifiedDate":"2021-04-06"},{"lineNumber":163,"author":{"gitId":"markmcwong"},"content":"                DuplicatePoolException.class, () -\u003e uniquePoolList.setPools(listWithDuplicatePools)","lastModifiedDate":"2021-04-06"},{"lineNumber":164,"author":{"gitId":"markmcwong"},"content":"        );","lastModifiedDate":"2021-04-06"},{"lineNumber":165,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":166,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":167,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":168,"author":{"gitId":"markmcwong"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":169,"author":{"gitId":"markmcwong"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-04-06"},{"lineNumber":170,"author":{"gitId":"markmcwong"},"content":"            -\u003e uniquePoolList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-04-06"},{"lineNumber":171,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":172,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"markmcwong":172}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedDriverTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_NO_PREFIX;","lastModifiedDate":"2021-04-09"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_NO_PREFIX;","lastModifiedDate":"2021-04-09"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.storage.JsonAdaptedDriver.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.TypicalDrivers.DRIVER_BENSON;","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"import seedu.address.testutil.DriverBuilder;","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"public class JsonAdaptedDriverTest {","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"    private static final String VALID_NAME \u003d DRIVER_BENSON.getName().toString();","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"    private static final String VALID_PHONE \u003d DRIVER_BENSON.getPhone().toString();","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    public void toModelType_validDriver_returnsDriver() throws Exception {","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"        JsonAdaptedDriver driver \u003d new JsonAdaptedDriver(DRIVER_BENSON);","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"        assertEquals(DRIVER_BENSON, driver.toModelType());","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"    public void toModelType_validNameAndPhone_returnsDriver() throws Exception {","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"        Driver driver \u003d new DriverBuilder(DRIVER_BENSON).build();","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"        JsonAdaptedDriver jsonAdaptedDriver \u003d new JsonAdaptedDriver(VALID_NAME, VALID_PHONE);","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"        assertEquals(driver, jsonAdaptedDriver.toModelType());","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"        JsonAdaptedDriver driver \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"                new JsonAdaptedDriver(INVALID_NAME_NO_PREFIX, VALID_PHONE);","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, driver::toModelType);","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"        JsonAdaptedDriver driver \u003d new JsonAdaptedDriver(null, VALID_PHONE);","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, driver::toModelType);","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"markmcwong"},"content":"        JsonAdaptedDriver driver \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"markmcwong"},"content":"                new JsonAdaptedDriver(VALID_NAME, INVALID_PHONE_NO_PREFIX);","lastModifiedDate":"2021-04-09"},{"lineNumber":54,"author":{"gitId":"markmcwong"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"markmcwong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, driver::toModelType);","lastModifiedDate":"2021-04-06"},{"lineNumber":56,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":59,"author":{"gitId":"markmcwong"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"markmcwong"},"content":"        JsonAdaptedDriver driver \u003d new JsonAdaptedDriver(VALID_NAME, null);","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"markmcwong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-04-06"},{"lineNumber":62,"author":{"gitId":"markmcwong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, driver::toModelType);","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":64,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"markmcwong":64}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPassengerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.storage.JsonAdaptedPassenger.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.BENSON;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.PassengerBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"public class JsonAdaptedPassengerTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"    private static final String INVALID_TRIPDAY \u003d \"funday\";","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    private static final String INVALID_TRIPTIME \u003d \"21032103\";","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    private static final String INVALID_PRICE \u003d \"1.42069\";","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"chewterence"},"content":"    private static final String VALID_TRIPDAY \u003d BENSON.getTripDay().toString();","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"chewterence"},"content":"    private static final String VALID_TRIPTIME \u003d BENSON.getTripTime().toString();","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"    private static final String VALID_PRICE \u003d BENSON.priceToString();","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"    public void toModelType_validPassengerDetails_returnsPassenger() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d new JsonAdaptedPassenger(BENSON);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        assertEquals(BENSON, passenger.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"    public void toModelType_validPersonDetailsWithDriver_returnsPerson() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"        Passenger passenger \u003d new PassengerBuilder(BENSON).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger jsonAdaptedPassenger \u003d new JsonAdaptedPassenger(passenger);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"        assertEquals(passenger, jsonAdaptedPassenger.toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"                new JsonAdaptedPassenger(INVALID_NAME, VALID_PHONE, VALID_ADDRESS, VALID_TRIPDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"                        VALID_TRIPTIME, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d new JsonAdaptedPassenger(null, VALID_PHONE, VALID_ADDRESS, VALID_TRIPDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"                VALID_TRIPTIME, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"                new JsonAdaptedPassenger(VALID_NAME, INVALID_PHONE, VALID_ADDRESS, VALID_TRIPDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"                        VALID_TRIPTIME, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d new JsonAdaptedPassenger(VALID_NAME, null, VALID_ADDRESS, VALID_TRIPDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"ZechariahTan"},"content":"                VALID_TRIPTIME, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"JoelHo"},"content":"                new JsonAdaptedPassenger(VALID_NAME, VALID_PHONE, INVALID_ADDRESS, VALID_TRIPDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":"                        VALID_TRIPTIME, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d new JsonAdaptedPassenger(VALID_NAME, VALID_PHONE, null, VALID_TRIPDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"ZechariahTan"},"content":"                VALID_TRIPTIME, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"JoelHo"},"content":"    public void toModelType_invalidTripDay_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"JoelHo"},"content":"                new JsonAdaptedPassenger(VALID_NAME, VALID_PHONE, VALID_ADDRESS, INVALID_TRIPDAY,","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"ZechariahTan"},"content":"                        VALID_TRIPTIME, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d TripDay.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"JoelHo"},"content":"    public void toModelType_nullTripDay_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"JoelHo"},"content":"                new JsonAdaptedPassenger(VALID_NAME, VALID_PHONE, VALID_ADDRESS, null,","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"ZechariahTan"},"content":"                        VALID_TRIPTIME, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TripDay.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"JoelHo"},"content":"    public void toModelType_invalidTripTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"JoelHo"},"content":"                new JsonAdaptedPassenger(VALID_NAME, VALID_PHONE, VALID_ADDRESS, VALID_TRIPDAY,","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"ZechariahTan"},"content":"                        INVALID_TRIPTIME, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d TripTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"JoelHo"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"JoelHo"},"content":"    public void toModelType_nullTripTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"JoelHo"},"content":"                new JsonAdaptedPassenger(VALID_NAME, VALID_PHONE, VALID_ADDRESS, VALID_TRIPDAY,","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"ZechariahTan"},"content":"                        null, VALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"JoelHo"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TripTime.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"ZechariahTan"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":146,"author":{"gitId":"ZechariahTan"},"content":"    public void toModelType_invalidPrice_throwsIllegalValueException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":147,"author":{"gitId":"ZechariahTan"},"content":"        JsonAdaptedPassenger passenger \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":148,"author":{"gitId":"ZechariahTan"},"content":"                new JsonAdaptedPassenger(VALID_NAME, VALID_PHONE, VALID_ADDRESS, VALID_TRIPDAY,","lastModifiedDate":"2021-03-21"},{"lineNumber":149,"author":{"gitId":"ZechariahTan"},"content":"                        VALID_TRIPTIME, INVALID_PRICE, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"ZechariahTan"},"content":"        String expectedMessage \u003d Price.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-21"},{"lineNumber":151,"author":{"gitId":"ZechariahTan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, passenger::toModelType);","lastModifiedDate":"2021-03-21"},{"lineNumber":152,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":153,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"JoelHo"},"content":"        JsonAdaptedPassenger passenger \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"JoelHo"},"content":"                new JsonAdaptedPassenger(VALID_NAME, VALID_PHONE, VALID_ADDRESS, VALID_TRIPDAY,","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"ZechariahTan"},"content":"                        VALID_TRIPTIME, VALID_PRICE, invalidTags);","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, passenger::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chewterence":6,"ZechariahTan":25,"-":63,"JoelHo":69}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.HOON;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.testutil.TypicalPassengers.IDA;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"    public void readAddressBook_invalidPassengerAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPassengerAddressBook.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"    public void readAddressBook_invalidAndValidPassengerAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPassengerAddressBook.json\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"        AddressBook original \u003d getTypicalAddressBookPassengers();","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"        original.addPassenger(HOON);","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"        original.removePassenger(ALICE);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"JoelHo"},"content":"        original.addPassenger(IDA);","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ZechariahTan":2,"-":98,"JoelHo":10}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.testutil.TypicalPassengers;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"    private static final Path TYPICAL_PASSENGERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPassengersAddressBook.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"    private static final Path INVALID_PASSENGER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPassengerAddressBook.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"    private static final Path DUPLICATE_PASSENGER_FILE \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicatePassengersAddressBook.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    public void toModelType_typicalPassengersFile_success() throws Exception {","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PASSENGERS_FILE,","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"        AddressBook typicalPassengersAddressBook \u003d TypicalPassengers.getTypicalAddressBookPassengers();","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"        assertEquals(addressBookFromFile, typicalPassengersAddressBook);","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"    public void toModelType_invalidPassengerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PASSENGER_FILE,","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"    public void toModelType_duplicatePassengers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PASSENGER_FILE,","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PASSENGER,","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":34,"JoelHo":14}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.testutil.TypicalPassengers.getTypicalAddressBookPassengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"        AddressBook original \u003d getTypicalAddressBookPassengers();","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZechariahTan":2,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPassenger(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"     * Adds a new {@code Passenger} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"    public AddressBookBuilder withPassenger(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"        addressBook.addPassenger(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":28,"JoelHo":6}},{"path":"src/test/java/seedu/address/testutil/CommuterBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":" * A utility class to help with building Commuter sets.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"public class CommuterBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"    private static final String DEFAULT_INDEX_1 \u003d \"1\";","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"    private static final String DEFAULT_INDEX_2 \u003d \"2\";","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"    private static final int DEFAULT_INDEX_1_AS_INT \u003d Integer.parseInt(DEFAULT_INDEX_1);","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"    private static final int DEFAULT_INDEX_2_AS_INT \u003d Integer.parseInt(DEFAULT_INDEX_2);","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    private Set\u003cIndex\u003e indices;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"     * Creates a {@code DriverBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"    public CommuterBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"        indices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"        indices.add(Index.fromOneBased(DEFAULT_INDEX_1_AS_INT));","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"        indices.add(Index.fromOneBased(DEFAULT_INDEX_2_AS_INT));","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code Index}es of the {@code Set} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"    public CommuterBuilder withIndices(int[] intIndices) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"        this.indices.clear();","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"        for (int idx : intIndices) {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"            indices.add(Index.fromOneBased(idx));","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"     * Builds the commuter set with the given details.","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"     * @return A {@code Set} containing the given {@code Index}s","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"    public Set\u003cIndex\u003e build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        return indices;","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JoelHo":47}},{"path":"src/test/java/seedu/address/testutil/DriverBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":" * A utility class to help with building Driver objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"public class DriverBuilder {","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"    public static final String DEFAULT_NAME \u003d \"Dr Iver Man\";","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    private Name name;","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"    private Phone phone;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"     * Creates a {@code DriverBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    public DriverBuilder() {","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"     * Initializes the DriverBuilder with the data of {@code passengerToCopy}.","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    public DriverBuilder(Driver passengerToCopy) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"        name \u003d passengerToCopy.getName();","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"        phone \u003d passengerToCopy.getPhone();","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code Name} of the {@code Driver} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    public DriverBuilder withName(String name) {","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code Phone} of the {@code Driver} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"    public DriverBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    public Driver build() {","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"        return new Driver(name, phone);","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"ZechariahTan":43,"JoelHo":11}},{"path":"src/test/java/seedu/address/testutil/DriverUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":" * A utility class for Driver.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"public class DriverUtil {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"    public static String getDriverDetails(Driver driver) {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"        sb.append(PREFIX_NAME + driver.getName().fullName + \" \");","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"        sb.append(PREFIX_PHONE + driver.getPhone().value + \" \");","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"JoelHo"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"JoelHo":19}},{"path":"src/test/java/seedu/address/testutil/EditPassengerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelHo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"JoelHo"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"JoelHo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import seedu.address.logic.commands.EditCommand.EditPassengerDescriptor;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":" * A utility class to help with building EditPassengerDescriptor objects.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"JoelHo"},"content":"public class EditPassengerDescriptorBuilder {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    private EditCommand.EditPassengerDescriptor descriptor;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"JoelHo"},"content":"    public EditPassengerDescriptorBuilder() {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"        descriptor \u003d new EditPassengerDescriptor();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"    public EditPassengerDescriptorBuilder(EditCommand.EditPassengerDescriptor descriptor) {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"        this.descriptor \u003d new EditCommand.EditPassengerDescriptor(descriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"     * Returns an {@code EditPassengerDescriptor} with fields containing {@code passenger}\u0027s details","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"    public EditPassengerDescriptorBuilder(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"        descriptor \u003d new EditCommand.EditPassengerDescriptor();","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"JoelHo"},"content":"        descriptor.setName(passenger.getName());","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        descriptor.setPhone(passenger.getPhone());","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"        descriptor.setAddress(passenger.getAddress());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"        descriptor.setTags(passenger.getTags());","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"        descriptor.setPrice(passenger.getPrice().orElse(null));","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code Name} of the {@code EditPassengerDescriptor} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"JoelHo"},"content":"    public EditPassengerDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"JoelHo"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code Phone} of the {@code EditPassengerDescriptor} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"    public EditPassengerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"JoelHo"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code Address} of the {@code EditPassengerDescriptor} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"JoelHo"},"content":"    public EditPassengerDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code TripDay} of the {@code EditPassengerDescriptor} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"    public EditPassengerDescriptorBuilder withTripDay(DayOfWeek tripDay) {","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"        descriptor.setTripDay(new TripDay(tripDay));","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code TripTime} of the {@code EditPassengerDescriptor} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"    public EditPassengerDescriptorBuilder withTripTime(LocalTime tripTime) {","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"        descriptor.setTripTime(new TripTime(tripTime));","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"chewterence"},"content":"     * Sets the {@code Price} of the {@code EditPassengerDescriptor} that we are building.","lastModifiedDate":"2021-04-11"},{"lineNumber":89,"author":{"gitId":"chewterence"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"chewterence"},"content":"    public EditPassengerDescriptorBuilder withPrice(double price) {","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"chewterence"},"content":"        descriptor.setPrice(new Price(price));","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"chewterence"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"JoelHo"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"JoelHo"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPassengerDescriptor}","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"     * that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"    public EditPassengerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"JoelHo"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"JoelHo"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"JoelHo"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"    public EditCommand.EditPassengerDescriptor build() {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"JoelHo"},"content":"        return descriptor;","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"JoelHo"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"JoelHo"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"chewterence":11,"ZechariahTan":4,"JoelHo":93}},{"path":"src/test/java/seedu/address/testutil/PassengerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"JoelHo"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Address;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Price;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"JoelHo"},"content":" * A utility class to help with building Passenger objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":"public class PassengerBuilder {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    public static final DayOfWeek DEFAULT_TRIPDAY \u003d DayOfWeek.FRIDAY;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"    public static final LocalTime DEFAULT_TRIPTIME \u003d LocalTime.of(18, 0);","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    private TripDay tripDay;","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    private TripTime tripTime;","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    private Optional\u003cPrice\u003e price;","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"     * Creates a {@code PassengerBuilder} with the default details.","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"    public PassengerBuilder() {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        tripDay \u003d new TripDay(DEFAULT_TRIPDAY);","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"        tripTime \u003d new TripTime(DEFAULT_TRIPTIME);","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"chewterence"},"content":"        price \u003d Optional.empty();","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"     * Initializes the PassengerBuilder with the data of {@code passengerToCopy}.","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"    public PassengerBuilder(Passenger passengerToCopy) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        name \u003d passengerToCopy.getName();","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"        phone \u003d passengerToCopy.getPhone();","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"JoelHo"},"content":"        address \u003d passengerToCopy.getAddress();","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"JoelHo"},"content":"        tripDay \u003d passengerToCopy.getTripDay();","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"        tripTime \u003d passengerToCopy.getTripTime();","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"        price \u003d passengerToCopy.getPrice();","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"JoelHo"},"content":"        tags \u003d new HashSet\u003c\u003e(passengerToCopy.getTags());","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code Name} of the {@code Passenger} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"JoelHo"},"content":"    public PassengerBuilder withName(String name) {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Passenger} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"    public PassengerBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code Address} of the {@code Passenger} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"    public PassengerBuilder withAddress(String address) {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code Phone} of the {@code Passenger} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"    public PassengerBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code TripDay} of the {@code Passenger} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"ZechariahTan"},"content":"    public PassengerBuilder withTripDay(DayOfWeek tripDay) {","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"        this.tripDay \u003d new TripDay(tripDay);","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":103,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":104,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":105,"author":{"gitId":"JoelHo"},"content":"     * Sets the {@code TripTime} of the {@code Passenger} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"ZechariahTan"},"content":"    public PassengerBuilder withTripTime(LocalTime tripTime) {","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"ZechariahTan"},"content":"        this.tripTime \u003d new TripTime(tripTime);","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-11"},{"lineNumber":110,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":111,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":113,"author":{"gitId":"ZechariahTan"},"content":"     * Sets the {@code Price} of the {@code Passenger} that we are building.","lastModifiedDate":"2021-03-20"},{"lineNumber":114,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":115,"author":{"gitId":"ZechariahTan"},"content":"    public PassengerBuilder withPrice(Double price) {","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"ZechariahTan"},"content":"        this.price \u003d Optional.of(new Price(price));","lastModifiedDate":"2021-03-20"},{"lineNumber":117,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-20"},{"lineNumber":118,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":120,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"chewterence"},"content":"     * Sets the {@code Price} of the {@code Passenger} that we are building to empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"chewterence"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"chewterence"},"content":"    public PassengerBuilder withPrice() {","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"chewterence"},"content":"        this.price \u003d Optional.empty();","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"chewterence"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"JoelHo"},"content":"    public Passenger build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"ZechariahTan"},"content":"        return new Passenger(name, phone, address, tripDay, tripTime, price, tags);","lastModifiedDate":"2021-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"chewterence":11,"ZechariahTan":34,"-":58,"JoelHo":28}},{"path":"src/test/java/seedu/address/testutil/PassengerListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"JoelHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"JoelHo"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":" * A utility class to help with building Driver objects.","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"public class PassengerListBuilder {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"JoelHo"},"content":"    private List\u003cPassenger\u003e passengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"     * Creates a {@code PassengerBuilder} with no passengers.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"JoelHo"},"content":"    public PassengerListBuilder() {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"        passengers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"     * Initializes the PassengerBuilder with the data of {@code setToCopy}.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"JoelHo"},"content":"    public PassengerListBuilder(List\u003cPassenger\u003e setToCopy) {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"        passengers \u003d setToCopy;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"JoelHo"},"content":"     * Adds default passengers to the PassengerBuilder set.","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"     * @return a {@link PassengerListBuilder} with the default passengers.","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"    public PassengerListBuilder withDefaultPassengers() {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"        passengers.add(TypicalPassengers.ALICE);","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"        passengers.add(TypicalPassengers.BOB);","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"        passengers.add(TypicalPassengers.CARL);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"     * Sets the {@code Name} of the {@code Driver} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"    public PassengerListBuilder withPassenger(Passenger passengerToAdd) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"        this.passengers.add(passengerToAdd);","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"    public List\u003cPassenger\u003e build() {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"        return this.passengers;","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"ZechariahTan":40,"JoelHo":12}},{"path":"src/test/java/seedu/address/testutil/PassengerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRICE;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"JoelHo"},"content":"import seedu.address.logic.commands.EditCommand.EditPassengerDescriptor;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":" * A utility class for Passenger.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"JoelHo"},"content":"public class PassengerUtil {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"    public static final String EMPTY_PRICE \u003d \"\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"JoelHo"},"content":"     * Returns an add command string for adding the {@code passenger}.","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"    public static String getAddCommand(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"JoelHo"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPassengerDetails(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"JoelHo"},"content":"     * Returns the part of command string for the given {@code passenger}\u0027s details.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"    public static String getPassengerDetails(Passenger passenger) {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"        sb.append(PREFIX_NAME + passenger.getName().fullName + \" \");","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"        sb.append(PREFIX_PHONE + passenger.getPhone().value + \" \");","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"        sb.append(PREFIX_ADDRESS + passenger.getAddress().value + \" \");","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"        sb.append(PREFIX_TRIPDAY + passenger.getTripDayAsStr() + \" \");","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"        sb.append(PREFIX_TRIPTIME + passenger.getTripTimeAsStr() + \" \");","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"JoelHo"},"content":"        passenger.getPrice().ifPresentOrElse(","lastModifiedDate":"2021-04-09"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"            price -\u003e sb.append(PREFIX_PRICE + price.toString() + \" \"), () -\u003e sb.append(EMPTY_PRICE + \" \")","lastModifiedDate":"2021-04-09"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"        );","lastModifiedDate":"2021-04-09"},{"lineNumber":46,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"JoelHo"},"content":"        passenger.getTags().forEach(","lastModifiedDate":"2021-04-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"     * Returns the part of command string for the given {@code EditPassengerDescriptor}\u0027s details.","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"JoelHo"},"content":"    public static String getEditPassengerDescriptorDetails(EditPassengerDescriptor descriptor) {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"chewterence":5,"ZechariahTan":3,"-":45,"JoelHo":18}},{"path":"src/test/java/seedu/address/testutil/PoolBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPDAY_MONDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TRIPTIME_MORNING;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":" * A utility class to help with building Pool objects.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"public class PoolBuilder {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"    // TODO write to build a pool from index and model stub.","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    public static final DayOfWeek DEFAULT_TRIPDAY \u003d VALID_TRIPDAY_MONDAY;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"    public static final LocalTime DEFAULT_TRIPTIME \u003d VALID_TRIPTIME_MORNING;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"    private Driver driver;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"    private TripDay tripDay;","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"ZechariahTan"},"content":"    private TripTime tripTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"JoelHo"},"content":"    private List\u003cPassenger\u003e passengers;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    private Model model;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"     * Creates a {@code PoolBuilder} with the default details.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"    public PoolBuilder() {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"        driver \u003d new DriverBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"        tripDay \u003d new TripDay(DEFAULT_TRIPDAY);","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"        tripTime \u003d new TripTime(DEFAULT_TRIPTIME);","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"        passengers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"     * Initializes the PoolBuilder with the data of {@code poolToCopy}.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"    public PoolBuilder(Pool poolToCopy) {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"        driver \u003d poolToCopy.getDriver();","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"        tripDay \u003d poolToCopy.getTripDay();","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"        tripTime \u003d poolToCopy.getTripTime();","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"JoelHo"},"content":"        passengers \u003d new ArrayList\u003c\u003e(poolToCopy.getPassengers());","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"        tags \u003d new HashSet\u003c\u003e(poolToCopy.getTags());","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"     * Sets the passengers of the Pool to a default set of passengers.","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"    public PoolBuilder withDefaultPassengers() {","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"        passengers \u003d new PassengerListBuilder().withDefaultPassengers().build();","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"ZechariahTan"},"content":"     * Sets the {@code Driver} of the {@code Pool} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"    public PoolBuilder withDriver(Driver driver) {","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"ZechariahTan"},"content":"        this.driver \u003d driver;","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"ZechariahTan"},"content":"     * Sets the {@code Model} of the {@code Pool} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"ZechariahTan"},"content":"    public PoolBuilder withModel(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"ZechariahTan"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"JoelHo"},"content":"     * Adds passengers at the given index to the {@code Passengers} of the {@code Pool} that we are building.","lastModifiedDate":"2021-04-10"},{"lineNumber":89,"author":{"gitId":"JoelHo"},"content":"     * @param index the {@code Index}s of the {@code Passenger}s to add to the Pool.","lastModifiedDate":"2021-04-10"},{"lineNumber":90,"author":{"gitId":"JoelHo"},"content":"     * @return a {@code PoolBuilder} with the {@code Passenger}s set.","lastModifiedDate":"2021-04-10"},{"lineNumber":91,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"ZechariahTan"},"content":"    public PoolBuilder withIndex(Index ... index) {","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"ZechariahTan"},"content":"        ObservableList\u003cPassenger\u003e passengerList \u003d model.getFilteredPassengerList();","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"ZechariahTan"},"content":"        for (Index i : index) {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"ZechariahTan"},"content":"            this.passengers.add(passengerList.get(i.getZeroBased()));","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"ZechariahTan"},"content":"     * Sets the {@code TripDay} of the {@code Pool} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"ZechariahTan"},"content":"    public PoolBuilder withTripDay(DayOfWeek tripDay) {","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"ZechariahTan"},"content":"        this.tripDay \u003d new TripDay(tripDay);","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"ZechariahTan"},"content":"     * Sets the {@code TripTime} of the {@code Pool} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"ZechariahTan"},"content":"    public PoolBuilder withTripTime(LocalTime tripTime) {","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"ZechariahTan"},"content":"        this.tripTime \u003d new TripTime(tripTime);","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"ZechariahTan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Pool} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"JoelHo"},"content":"    public PoolBuilder withPassengers(List\u003cPassenger\u003e passengers) {","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"ZechariahTan"},"content":"        this.passengers \u003d passengers;","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"ZechariahTan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Pool} that we are building.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"ZechariahTan"},"content":"    public PoolBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"ZechariahTan"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"ZechariahTan"},"content":"        return this;","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"ZechariahTan"},"content":"    public Pool build() {","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"ZechariahTan"},"content":"        return new Pool(driver, tripDay, tripTime, passengers, tags);","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"chewterence":2,"ZechariahTan":128,"JoelHo":8}},{"path":"src/test/java/seedu/address/testutil/PoolUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chewterence"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMUTER;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPDAY;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRIPTIME;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"import seedu.address.logic.commands.PoolCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripDay;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.TripTime;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"chewterence"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"chewterence"},"content":" * A utility class for Pool.","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"chewterence"},"content":"public class PoolUtil {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"chewterence"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"chewterence"},"content":"     * Returns a pool command string for adding the {@code driver} and passengers at {@code indices}.","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"chewterence"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"chewterence"},"content":"    public static String getPoolCommandString(Driver driver, Set\u003cIndex\u003e indices, TripDay tripDay,","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"                                              TripTime tripTime, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"        sb.append(PoolCommand.COMMAND_WORD + \" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"        sb.append(DriverUtil.getDriverDetails(driver) + \" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"chewterence"},"content":"        sb.append(PREFIX_TRIPDAY + tripDay.toString() + \" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"chewterence"},"content":"        sb.append(PREFIX_TRIPTIME + tripTime.toString() + \" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"chewterence"},"content":"        for (Index idx : indices) {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"            sb.append(PREFIX_COMMUTER + String.valueOf(idx.getOneBased()) + \" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"chewterence"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"        tags.forEach(","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"chewterence"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"        );","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"chewterence"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"chewterence"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"chewterence":43,"JoelHo":1}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.PooledPassengerContainsKeywordsPredicate;","lastModifiedDate":"2021-04-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"JoelHo"},"content":"     * Returns the middle index of the passenger in the {@code model}\u0027s passenger list.","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"        return Index.fromOneBased(model.getFilteredPassengerList().size() / 2);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"     * Returns the last index of the passenger in the {@code model}\u0027s passenger list.","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"        return Index.fromOneBased(model.getFilteredPassengerList().size());","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"JoelHo"},"content":"     * Returns the passenger in the {@code model}\u0027s passenger list at {@code index}.","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"JoelHo"},"content":"    public static Passenger getPassenger(Model model, Index index) {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"JoelHo"},"content":"        return model.getFilteredPassengerList().get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":58,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-04-09"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-04-09"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-04-09"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"    public static PooledPassengerContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2021-04-09"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"        return new PooledPassengerContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-04-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ZechariahTan":8,"-":48,"JoelHo":8}},{"path":"src/test/java/seedu/address/testutil/TypicalDrivers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"ZechariahTan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.driver.Driver;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"JoelHo"},"content":" * A utility class containing a list of {@code Passenger} objects to be used in tests.","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"public class TypicalDrivers {","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_ALICE \u003d new DriverBuilder().withName(\"Alice Pauline\").withPhone(\"94351253\")","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_BENSON \u003d new DriverBuilder().withName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_CARL \u003d new DriverBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_DANIEL \u003d new DriverBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_ELLE \u003d new DriverBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_FIONA \u003d new DriverBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_GEORGE \u003d new DriverBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"    // Manually added","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_HOON \u003d new DriverBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_IDA \u003d new DriverBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"    // Manually added - Passenger\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_AMY \u003d new DriverBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    public static final Driver DRIVER_BOB \u003d new DriverBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"    private TypicalDrivers() {} // prevents instantiation","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"ZechariahTan":40,"JoelHo":3}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"chewterence":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPassengers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HR;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"JoelHo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_IT;","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"JoelHo"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"JoelHo"},"content":" * A utility class containing a list of {@code Passenger} objects to be used in tests.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"JoelHo"},"content":"public class TypicalPassengers {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"chewterence"},"content":"    // TODO use the screaming snake case for withTripDay and withTripTime","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger ALICE \u003d new PassengerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"ZechariahTan"},"content":"            .withPhone(\"94351253\").withTripDay(DayOfWeek.FRIDAY).withTripTime(LocalTime.of(18, 0))","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"JoelHo"},"content":"            .withTags(\"marketing\").build();","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger BENSON \u003d new PassengerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"            .withPhone(\"98765432\").withTripDay(DayOfWeek.FRIDAY).withTripTime(LocalTime.of(18, 0))","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"JoelHo"},"content":"            .withTags(\"sales\", \"marketing\").build();","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger CARL \u003d new PassengerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"chewterence"},"content":"            .withTripDay(DayOfWeek.FRIDAY).withTripTime(LocalTime.of(18, 0))","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger DANIEL \u003d new PassengerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"chewterence"},"content":"            .withTripDay(DayOfWeek.FRIDAY).withTripTime(LocalTime.of(18, 0))","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"JoelHo"},"content":"            .withAddress(\"10th street\").withTags(\"marketing\").build();","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger ELLE \u003d new PassengerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"            .withTripDay(DayOfWeek.FRIDAY).withTripTime(LocalTime.of(21, 0))","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger FIONA \u003d new PassengerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"            .withTripDay(DayOfWeek.MONDAY).withTripTime(LocalTime.of(8, 30))","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger GEORGE \u003d new PassengerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"chewterence"},"content":"            .withTripDay(DayOfWeek.THURSDAY).withTripTime(LocalTime.of(7, 15))","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"chewterence"},"content":"    public static final Passenger HILARY \u003d new PassengerBuilder().withName(\"Hilary Clinton\").withPhone(\"9486666\")","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"chewterence"},"content":"            .withTripDay(DayOfWeek.MONDAY).withTripTime(LocalTime.of(19, 30))","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"6th ave\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"chewterence"},"content":"    public static final Passenger IRENE \u003d new PassengerBuilder().withName(\"Irene Newton\").withPhone(\"91238888\")","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"chewterence"},"content":"            .withTripDay(DayOfWeek.MONDAY).withTripTime(LocalTime.of(19, 30))","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"5th ave\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"chewterence"},"content":"    public static final Passenger JACKSON \u003d new PassengerBuilder().withName(\"Jackson Mehoff\").withPhone(\"91236969\")","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"chewterence"},"content":"            .withTripDay(DayOfWeek.MONDAY).withTripTime(LocalTime.of(19, 30))","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"4th ave\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"chewterence"},"content":"    public static final Passenger KINGSLEY \u003d new PassengerBuilder().withName(\"Kingsley Kuan\").withPhone(\"91867510\")","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"chewterence"},"content":"            .withTripDay(DayOfWeek.MONDAY).withTripTime(LocalTime.of(19, 30))","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"3rd ave\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger HOON \u003d new PassengerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"            .withTripDay(DayOfWeek.FRIDAY).withTripTime(LocalTime.of(18, 0)).withPrice(1.69)","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger IDA \u003d new PassengerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"            .withTripDay(DayOfWeek.FRIDAY).withTripTime(LocalTime.of(18, 0)).withPrice(1.69)","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"JoelHo"},"content":"    // Manually added - Passenger\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger AMY \u003d new PassengerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"ZechariahTan"},"content":"            .withTripDay(DayOfWeek.FRIDAY).withTripTime(LocalTime.of(18, 0)).withPrice(1.69)","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"JoelHo"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_IT).build();","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"JoelHo"},"content":"    public static final Passenger BOB \u003d new PassengerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"ZechariahTan"},"content":"            .withTripDay(DayOfWeek.FRIDAY).withTripTime(LocalTime.of(18, 0)).withPrice(1.69)","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"JoelHo"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HR, VALID_TAG_IT)","lastModifiedDate":"2021-04-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"JoelHo"},"content":"    private TypicalPassengers() {","lastModifiedDate":"2021-04-10"},{"lineNumber":84,"author":{"gitId":"JoelHo"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"     * Returns an {@code AddressBook} with all the typical passengers.","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"ZechariahTan"},"content":"    public static AddressBook getTypicalAddressBookPassengers() {","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"JoelHo"},"content":"        for (Passenger passenger : getTypicalPassengers()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"JoelHo"},"content":"            ab.addPassenger(passenger);","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"JoelHo"},"content":"    public static List\u003cPassenger\u003e getTypicalPassengers() {","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"JoelHo"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, HILARY, IRENE, JACKSON,","lastModifiedDate":"2021-04-10"},{"lineNumber":100,"author":{"gitId":"JoelHo"},"content":"                KINGSLEY));","lastModifiedDate":"2021-04-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"chewterence":21,"ZechariahTan":23,"-":28,"JoelHo":30}},{"path":"src/test/java/seedu/address/testutil/TypicalPools.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ZechariahTan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.ALICE;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.BENSON;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.CARL;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.DANIEL;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.ELLE;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.FIONA;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.GEORGE;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"chewterence"},"content":"import static seedu.address.testutil.TypicalPassengers.HILARY;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"ZechariahTan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"ZechariahTan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"ZechariahTan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"ZechariahTan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"ZechariahTan"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"chewterence"},"content":"import seedu.address.model.person.passenger.Passenger;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"ZechariahTan"},"content":"import seedu.address.model.pool.Pool;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"ZechariahTan"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"ZechariahTan"},"content":" * A utility class containing a list of {@code Pool} objects to be used in tests.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"ZechariahTan"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"ZechariahTan"},"content":"public class TypicalPools {","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"chewterence"},"content":"    public static final List\u003cPassenger\u003e HOMEPOOL_PASSENGERS \u003d new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL));","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"chewterence"},"content":"    public static final List\u003cPassenger\u003e OFFICEPOOL_PASSENGERS \u003d new ArrayList\u003c\u003e(Arrays.asList(DANIEL, ELLE, FIONA));","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"chewterence"},"content":"    public static final List\u003cPassenger\u003e WORKPOOL_PASSENGERS \u003d new ArrayList\u003c\u003e(Arrays.asList(ALICE, GEORGE, HILARY));","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"chewterence"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"ZechariahTan"},"content":"    public static final Pool HOMEPOOL \u003d new PoolBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"ZechariahTan"},"content":"            .withDriver(TypicalDrivers.DRIVER_ALICE)","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"ZechariahTan"},"content":"            .withTripDay(DayOfWeek.FRIDAY)","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"ZechariahTan"},"content":"            .withTripTime(LocalTime.of(18, 0))","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"chewterence"},"content":"            .withPassengers(HOMEPOOL_PASSENGERS)","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"JoelHo"},"content":"            .withTags(\"marketing\")","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"ZechariahTan"},"content":"    public static final Pool OFFICEPOOL \u003d new PoolBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"ZechariahTan"},"content":"            .withDriver(TypicalDrivers.DRIVER_ALICE)","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"ZechariahTan"},"content":"            .withTripDay(DayOfWeek.MONDAY)","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"ZechariahTan"},"content":"            .withTripTime(LocalTime.of(6, 30))","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"chewterence"},"content":"            .withPassengers(OFFICEPOOL_PASSENGERS)","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"JoelHo"},"content":"            .withTags(\"sales\", \"marketing\").build();","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"ZechariahTan"},"content":"    public static final Pool WORKPOOL \u003d new PoolBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"ZechariahTan"},"content":"            .withDriver(TypicalDrivers.DRIVER_BOB)","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"ZechariahTan"},"content":"            .withTripDay(DayOfWeek.WEDNESDAY)","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"ZechariahTan"},"content":"            .withTripTime(LocalTime.of(14, 0))","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"chewterence"},"content":"            .withPassengers(WORKPOOL_PASSENGERS)","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"ZechariahTan"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"ZechariahTan"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"ZechariahTan"},"content":"    private TypicalPools() {} // prevents instantiation","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"ZechariahTan"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"chewterence"},"content":"     * Returns an {@code AddressBook} with all the typical pools.","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"ZechariahTan"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"ZechariahTan"},"content":"    public static AddressBook getTypicalAddressBookPools() {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"ZechariahTan"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"chewterence"},"content":"        for (Pool pool : getTypicalPools()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"chewterence"},"content":"            ab.addPool(pool);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"ZechariahTan"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"ZechariahTan"},"content":"        return ab;","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"ZechariahTan"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"ZechariahTan"},"content":"    public static List\u003cPool\u003e getTypicalPools() {","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"ZechariahTan"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(HOMEPOOL, OFFICEPOOL, WORKPOOL));","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"ZechariahTan"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"ZechariahTan"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"chewterence":20,"ZechariahTan":49,"JoelHo":2}},{"path":"src/test/java/seedu/address/ui/LabelWithIconTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"markmcwong"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"markmcwong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"markmcwong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"markmcwong"},"content":"import org.junit.jupiter.api.extension.ExtendWith;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"markmcwong"},"content":"import org.testfx.api.FxRobot;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"markmcwong"},"content":"import org.testfx.framework.junit5.ApplicationExtension;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"markmcwong"},"content":"import org.testfx.framework.junit5.Start;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"markmcwong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.control.OverrunStyle;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"markmcwong"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"markmcwong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"markmcwong"},"content":"@ExtendWith(ApplicationExtension.class)","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"markmcwong"},"content":"public class LabelWithIconTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"markmcwong"},"content":"    private static final String CORRECT_IMG_PATH \u003d \"/view.images/fail.png\";","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"markmcwong"},"content":"    private static final String WRONG_IMG_PATH \u003d \"/view.images/wrong.png\";","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"markmcwong"},"content":"    private LabelWithIcon labelWithIconForTest;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"markmcwong"},"content":"    @Start","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"markmcwong"},"content":"    private void start(Stage stage) {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"markmcwong"},"content":"        labelWithIconForTest \u003d new LabelWithIcon(CORRECT_IMG_PATH, \"wrong\");","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"markmcwong"},"content":"        stage.setScene(new Scene(new StackPane(labelWithIconForTest.getRoot()), 0, 0));","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"markmcwong"},"content":"        stage.show();","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"markmcwong"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"markmcwong"},"content":"     * Check if style of the elements are not overwritten by CSS styles or any other factor","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"markmcwong"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"markmcwong"},"content":"    public void constructor_checkStyleCorrect(FxRobot robot) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"markmcwong"},"content":"        assertEquals(robot.lookup(\"#labelWithIcon\").queryAs(HBox.class).getAlignment(), Pos.CENTER_LEFT);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"markmcwong"},"content":"        assertEquals(robot.lookup(\"#text\").queryAs(Label.class).getTextOverrun(), OverrunStyle.CLIP);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"markmcwong"},"content":"    public void constructor_nullIconImgPath_throwsAssertionError() {","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LabelWithIcon(null, \"\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"markmcwong"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"markmcwong"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"markmcwong"},"content":"    public void constructor_wrongIconImgPath_throwsAssertionError() {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"markmcwong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LabelWithIcon(WRONG_IMG_PATH, \"\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"markmcwong"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"markmcwong"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"markmcwong":51}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"JoelHo"},"content":"     * It should only be used with invalid FXML files or the valid file located at VALID_FILE_PATH.","lastModifiedDate":"2021-04-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":113,"JoelHo":1}}]
