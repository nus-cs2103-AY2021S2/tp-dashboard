[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W10-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-4/tp/actions)","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"* Vax@NUS is an app for **staff at the NUS University Health Centre (UHC)**","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"  to keep track of the COVID-19 vaccination status of students. \u003cbr\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"* It is targeted at staff who are **proficient and comfortable with the","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"  Command Line Interface (CLI)**, as the app will have very limited UI interaction features.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"### Example usages:","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"* Create, read, update and delete (CRUD) of student profiles which details critical information such as:","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    * Contact information","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    * Vaccination status","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"        * If not vaccinated, their preference for vaccination (yes/no)","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    * Medical history, existing medical conditions and allergies","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"* Creating and managing vaccination appointments for students","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"### Problems addressed:","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"* Eliminates the need for the university to use the Ministry of Health\u0027s database.","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"* This in turn simplifies the process of contacting, monitoring and administering vaccines for students.","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"* Consolidates and streamlines only data relevant to vaccinations into one app.","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"* **Goal:** To create a COVID-free NUS campus where student and academic life can flourish without restrictions.","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"### Planned Features:","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"#### v1.2","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"1. On top of the fields already available in AB3, the user will be able to input the following:","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    * Student\u0027s matriculation number","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    * Vaccination status/preference","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    * Faculty","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    * Residence on campus (if applicable)","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    * Medical history","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"1. A filter function that will allow the user to display a specific group of students","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"1. The user will be able to view all the detailed information of a student at a glance. Currently, only","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"   the summarised information on the UI can be viewed.","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"1. Create vaccination appointments and display them on the UI.","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"#### v1.3","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"1. Detect duplicate entries.","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"1. Sort vaccination appointments and display only upcoming ones.","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"1. Provide statistical insights regarding the vaccination of the student population, by faculty, residence or other","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"   relevant parameters.","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"1. Undo feature to quickly correct accidental mistakes.","lastModifiedDate":"2021-02-27"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"\u003eFor the detailed documentation of this project, see the","lastModifiedDate":"2021-02-27"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"**[Vax@NUS Website](https://ay2021s2-cs2103t-w10-4.github.io/tp/)**.","lastModifiedDate":"2021-02-27"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"This project is based on the AddressBook-Level3 project created by","lastModifiedDate":"2021-02-27"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"fairyinabottle4":54,"picasdan9":1,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"mainClassName \u003d \u0027seedu.student.Main\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"run {","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"    implementation group: \u0027org.kordamp.ikonli\u0027, name: \u0027ikonli-javafx\u0027, version: \u002712.2.0\u0027","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"    implementation group: \u0027org.kordamp.ikonli\u0027, name: \u0027ikonli-fontawesome5-pack\u0027, version: \u002712.2.0\u0027","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"picasdan9":8,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"We are a team of Year 2 Computer Science students based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"Our team members are:","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"* [Dan Tran](#dan-tran)","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"* [Lim Si Ting](#lim-si-ting)","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"* [Keith Low Jun](#keith-low-jun)","lastModifiedDate":"2021-02-25"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"* [Yoong Yi En](#yoong-yi-en)","lastModifiedDate":"2021-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"You can reach us at the email `e0406245@u.nus.edu`","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"### Dan Tran","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"\u003cimg src\u003d\"images/picasdan9.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"[[github](https://github.com/picasdan9)]","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"[[portfolio](team/picasdan9.md)]","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"* Role: Developer","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"* Responsibilities: In charge of appointments and UI","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"### Lim Si Ting","lastModifiedDate":"2021-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"\u003cimg src\u003d\"images/sitingst.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"[[github](https://github.com/SiTingST)]","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"[[portfolio](team/sitingst.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"* Responsibilities: In charge of storage and user guide  ","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"### Keith Low Jun","lastModifiedDate":"2021-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"\u003cimg src\u003d\"images/fairyinabottle4.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"[[github](http://github.com/fairyinabottle4)] [[portfolio](team/fairyinabottle4.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"* Responsibilities: In charge of students and model ","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"### Yoong Yi En","lastModifiedDate":"2021-02-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"\u003cimg src\u003d\"images/yienyoong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"[[github](http://github.com/yienyoong)]","lastModifiedDate":"2021-02-25"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"[[portfolio](team/yienyoong.md)]","lastModifiedDate":"2021-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"* Responsibilities: In charge of logic and developer guide ","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fairyinabottle4":2,"yienyoong":12,"SiTingST":7,"picasdan9":6,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`, `AppointmentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"1. `Logic` uses the `StudentBookParser` class to parse the user command.","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"1. The command execution can affect the `Model` (e.g. adding a student).","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"* stores the student book data.","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"* exposes an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"* can save the student book data in json format and read it back.","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"Classes used by multiple components are in the `seedu.student.commons` package.","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"fairyinabottle4"},"content":"### Add Student `Add`","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"fairyinabottle4"},"content":"#### Actual Implementation","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"The `Add` Student mechanism is implemented in the `AddCommand` class and facilitated by the following classes:","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"* `Command`. `AddCommand` extends `Command` and overrides the `execute` method, which adds a `Student` to the `Model`. ","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"* `AddCommandParser`. It implements the `Parser` interface, which is used by all commands to read user input. `AddCommandParser` also checks the parameters of `AddCommand` and make sures that the input adheres to the specified format. ","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"fairyinabottle4"},"content":"All 8 compulsory fields and 1 optional field in `Student` are updated and added to the system following the user input. ","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"fairyinabottle4"},"content":"Given below is an example usage scenario and how the `Add` Student mechanism behaves at each step.","lastModifiedDate":"2021-03-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"Step 1: The user executes `add n/John Doe i/A1234567X f/COM p/98765432 e/johnd@example.com a/John street, block 123, #01-01 s/vaccinated m/peanut allergy r/RVRC` to add a student. The `StudentBookParser` class determines that the command called is `Add`, and therefore creates a new `AddCommandParser` instance to parse the command.","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"![Receiving an input](images/ReceiveInput.png)","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"Step 2: The `AddCommandParser` instance obtains the user input and checks for its validity. It then returns a new `AddCommand` instance to the `LogicManager` via the `StudentBookParser` class.","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":"\u003e **NOTE:** If the input format is incorrect or not found, `AddCommandParser` will throw a `ParseException` to tell the user about the error, and execution will stop. ","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"![Parsing an input](images/ParseInput.png)","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":"Step 3: With the `AddCommand` instance, the overridden `execute` method is called to add the `Student` to the `Model`. The `LogicManager` then receives the result of the execution of the command. ","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"fairyinabottle4"},"content":"![Processing an input](images/ProcessResult.png)","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"fairyinabottle4"},"content":"Step 4: The added `Student` is saved into the `StudentBook`. ","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"The following sequence diagram shows how the `Add` operation works:","lastModifiedDate":"2021-03-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"![Add Sequence Diagram](images/AddSequenceDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"fairyinabottle4"},"content":"The following activity diagram summarizes what happens when a user executes the `Add` command:","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"fairyinabottle4"},"content":"![Add Activity Diagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"fairyinabottle4"},"content":"##### Aspect: How `Add` Student executes","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"fairyinabottle4"},"content":"* **Alternative 1 (current choice):** Add all the attributes of a student at once","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"fairyinabottle4"},"content":"    * Pros: ","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"fairyinabottle4"},"content":"      * All the student attributes will be completed in one command, less likely to introduce bugs. ","lastModifiedDate":"2021-03-22"},{"lineNumber":177,"author":{"gitId":"fairyinabottle4"},"content":"    * Cons: ","lastModifiedDate":"2021-03-22"},{"lineNumber":178,"author":{"gitId":"fairyinabottle4"},"content":"      * Command can be difficult to use, confusing to check. ","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"fairyinabottle4"},"content":"      * User needs to know all the attributes of a student before adding to system.  ","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"fairyinabottle4"},"content":"* **Alternative 2:** Add each student attribute individually","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"fairyinabottle4"},"content":"  * Pros: ","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"fairyinabottle4"},"content":"    * Easier for user to input, potentially fewer mistakes as user can check each attribute individually.","lastModifiedDate":"2021-03-22"},{"lineNumber":184,"author":{"gitId":"fairyinabottle4"},"content":"    * User does not need to know all the information of a student before adding to system. ","lastModifiedDate":"2021-03-22"},{"lineNumber":185,"author":{"gitId":"fairyinabottle4"},"content":"  * Cons: ","lastModifiedDate":"2021-03-22"},{"lineNumber":186,"author":{"gitId":"fairyinabottle4"},"content":"    * User could forget to add certain attributes, potentially causing bugs later. ","lastModifiedDate":"2021-03-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"fairyinabottle4"},"content":"In the end, Alternative 1 was chosen because it is less likely to introduce bugs into the system, even though it comes with some usability cost. However, the cost of having multiple bugs could be greater. Moreover, the user can use the edit command afterwards to fix any incorrect information added. This would help to mitigate some downsides of this implementation.","lastModifiedDate":"2021-03-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"fairyinabottle4"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2021-03-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"yienyoong"},"content":"### Delete Student `deleteStud`","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":194,"author":{"gitId":"yienyoong"},"content":"#### Actual Implementation","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"yienyoong"},"content":"The delete student feature helps users to delete a particular student entry by the student\u0027s matriculation number.","lastModifiedDate":"2021-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":197,"author":{"gitId":"yienyoong"},"content":"The delete student feature is implemented in the `DeleteCommand` class and facilitated by the following classes:","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"yienyoong"},"content":"* `Command`. `DeleteCommand` extends `Command` and overrides the `execute` method, which deletes a `Person` from the `Model`.","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"yienyoong"},"content":"* `AddCommandParser`. It implements the `Parser` interface, which is used by all commands to read user input. `AddCommandParser` also checks the parameters of `AddCommand` and make sures that the input adheres to the specified format.","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":201,"author":{"gitId":"yienyoong"},"content":"Given below is an example usage scenario and how the delete student mechanism behaves at each step.","lastModifiedDate":"2021-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":203,"author":{"gitId":"yienyoong"},"content":"Step 1: The user executes `deleteStud A1234567X` to add a student. The `AddressBookParser` class determines that the command called is `deleteStud`, and therefore creates a new `DeleteCommandParser` instance to parse the command.","lastModifiedDate":"2021-03-23"},{"lineNumber":204,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":205,"author":{"gitId":"yienyoong"},"content":"Step 2: The `DeleteCommandParser` instance obtains the user input and checks for its validity. It then returns a new `DeleteCommand` instance to the `LogicManager` via the `AddressBookParser` class.","lastModifiedDate":"2021-03-23"},{"lineNumber":206,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"yienyoong"},"content":"\u003e **NOTE:** If the input format is incorrect or not found, `DeleteCommandParser` will throw a `ParseException` to notify the user of the error, and the execution will stop.","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"yienyoong"},"content":"\u003e ","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"yienyoong"},"content":"Step 3: With the `DeleteCommand` instance, the overridden `execute` method is called to delete the `Person` from the `Model`. The `LogicManager` then receives the result of the execution of the command.","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"yienyoong"},"content":"Step 4: The specified `Person` is deleted from the `StudentBook`.","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"yienyoong"},"content":"The following sequence diagram shows how the delete student operation works:","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"yienyoong"},"content":"![Delete Student Sequence Diagram](images/DeleteStudentSequenceDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"yienyoong"},"content":"The following activity diagram summarizes what happens when a user executes the `deleteStud` command:","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"yienyoong"},"content":"![Delete Student Activity Diagram](images/DeleteStudentActivityDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2021-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"yienyoong"},"content":"##### Aspect: How Delete Student executes","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"yienyoong"},"content":"* **Alternative 1 (current choice):** Delete student based on student\u0027s matriculation number.","lastModifiedDate":"2021-03-23"},{"lineNumber":227,"author":{"gitId":"yienyoong"},"content":"    * Pros:","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"yienyoong"},"content":"        * User can ensure that the correct student will be deleted as matriculation number is unique to a student.","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"yienyoong"},"content":"    * Cons:","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"yienyoong"},"content":"        * User is required to know the student\u0027s matriculation number to perform the action.","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"yienyoong"},"content":"* **Alternative 2:** Find student using student\u0027s name","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"yienyoong"},"content":"    * Pros:","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"yienyoong"},"content":"        * User is not required to know the student\u0027s matriculation number.","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"yienyoong"},"content":"    * Cons:","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"yienyoong"},"content":"        * User might have to go through extra steps to identify and delete a student if there is another student with the same name in the system.","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"yienyoong"},"content":"        * User has to type more words if the student name is too long.","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"yienyoong"},"content":"In the end, Alternative 1 was chosen because it is less likely to introduce bugs into the system, even though it comes with some usability cost.","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"yienyoong"},"content":"Furthermore, in Alternative 2, the user could potentially identify and delete the wrong student if there are multiple students sharing the same name.","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":242,"author":{"gitId":"picasdan9"},"content":"### Add Appointment `AddAppt`","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":244,"author":{"gitId":"picasdan9"},"content":"#### Actual Implementation","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"picasdan9"},"content":"An appointment is uniquely determined by a student\u0027s matriculation number. Other attributes relevant to an appointment include date, start time, and end time, all of which are compulsory.","lastModifiedDate":"2021-03-23"},{"lineNumber":246,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":247,"author":{"gitId":"picasdan9"},"content":"The add appointment feature is facilitated by `AddCommandParser` and `AddAppointmentCommand`. Implementing `Parser` interface, `AddCommandParser` takes in user\u0027s command and creates a new appointment based on the parsed data. `AddAppointmentCommand`, inheriting from `Command`, adds the newly created `Appointment` to the `Model`.","lastModifiedDate":"2021-03-23"},{"lineNumber":248,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":249,"author":{"gitId":"picasdan9"},"content":"Given below is an example usage scenario that elucidates the mechanism of the add appointment feature.","lastModifiedDate":"2021-03-23"},{"lineNumber":250,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":251,"author":{"gitId":"fairyinabottle4"},"content":"Step 1: The user executes `addAppt i/A1234567X d/2021-12-13 ts/13:00 te/14:00` to add an appointment. `StudentBookParser` determines that the command called is to add an appointment, hence creating a new `AddCommandParser` instance.","lastModifiedDate":"2021-03-23"},{"lineNumber":252,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":253,"author":{"gitId":"picasdan9"},"content":"Step 2: The `AddCommandParser` instance parses the user input and performs validation on the parsed data. It then creates a new `AddAppointmentCommand` instance.","lastModifiedDate":"2021-03-23"},{"lineNumber":254,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":255,"author":{"gitId":"picasdan9"},"content":"\u003e **NOTE:** If the input format is incorrect or not found, `AddAppointmentCommandParser` will throw a `ParseException` to notify the user of the error.","lastModifiedDate":"2021-03-23"},{"lineNumber":256,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":257,"author":{"gitId":"picasdan9"},"content":"Step 3: `AddAppointmentCommand` executes to add the appointment to `Model`. The `LogicManager` then receives the result of the execution of the command.","lastModifiedDate":"2021-03-23"},{"lineNumber":258,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":259,"author":{"gitId":"picasdan9"},"content":"Step 4: The added `Appointment` is saved into the `StudentBook`.","lastModifiedDate":"2021-03-23"},{"lineNumber":260,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":261,"author":{"gitId":"picasdan9"},"content":"The following sequence diagram shows how the add appointment operation works:","lastModifiedDate":"2021-03-23"},{"lineNumber":262,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":263,"author":{"gitId":"picasdan9"},"content":"![Add Appointment Sequence Diagram](images/AddAppointmentSequenceDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":264,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":265,"author":{"gitId":"picasdan9"},"content":"The following activity diagram summarizes what happens when a user executes the `AddAppt` command:","lastModifiedDate":"2021-03-23"},{"lineNumber":266,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":267,"author":{"gitId":"picasdan9"},"content":"![Add Appointment Activity Diagram](images/AddAppointmentActivityDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":268,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":269,"author":{"gitId":"picasdan9"},"content":"#### Design consideration:","lastModifiedDate":"2021-03-23"},{"lineNumber":270,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":271,"author":{"gitId":"picasdan9"},"content":"##### Aspect: How Add Appointment executes","lastModifiedDate":"2021-03-23"},{"lineNumber":272,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":273,"author":{"gitId":"picasdan9"},"content":"* **Alternative 1 (current choice):** Add a new appointment using student\u0027s matriculation number.","lastModifiedDate":"2021-03-23"},{"lineNumber":274,"author":{"gitId":"picasdan9"},"content":"    * Pros:","lastModifiedDate":"2021-03-23"},{"lineNumber":275,"author":{"gitId":"picasdan9"},"content":"        * Each appointment is ensured to be unique to every student.","lastModifiedDate":"2021-03-23"},{"lineNumber":276,"author":{"gitId":"picasdan9"},"content":"    * Cons:","lastModifiedDate":"2021-03-23"},{"lineNumber":277,"author":{"gitId":"picasdan9"},"content":"        * Using matriculation number instead of student\u0027s name might not be intuitive.","lastModifiedDate":"2021-03-23"},{"lineNumber":278,"author":{"gitId":"picasdan9"},"content":"        * User needs to know student\u0027s matriculation number before adding a new appointment.","lastModifiedDate":"2021-03-23"},{"lineNumber":279,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":280,"author":{"gitId":"picasdan9"},"content":"* **Alternative 2:** Add a new appointment using student\u0027s name","lastModifiedDate":"2021-03-23"},{"lineNumber":281,"author":{"gitId":"picasdan9"},"content":"    * Pros:","lastModifiedDate":"2021-03-23"},{"lineNumber":282,"author":{"gitId":"picasdan9"},"content":"        * More intuitive for user.","lastModifiedDate":"2021-03-23"},{"lineNumber":283,"author":{"gitId":"picasdan9"},"content":"        * User does not need to know student\u0027s matriculation to perform the action.","lastModifiedDate":"2021-03-23"},{"lineNumber":284,"author":{"gitId":"picasdan9"},"content":"    * Cons:","lastModifiedDate":"2021-03-23"},{"lineNumber":285,"author":{"gitId":"picasdan9"},"content":"        * Problems might arise when different students have the same name, leading to a potentially complicated error handling mechanism.","lastModifiedDate":"2021-03-23"},{"lineNumber":286,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":287,"author":{"gitId":"picasdan9"},"content":"In the end, Alternative 1 was chosen because it is less likely to introduce bugs into the system, even though it comes with some usability cost. Alternative 1 also minimizes potentially taxing actions required to resolve scenarios where different students have the same name.","lastModifiedDate":"2021-03-23"},{"lineNumber":288,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":289,"author":{"gitId":"SiTingST"},"content":"### Find Student `find`","lastModifiedDate":"2021-03-23"},{"lineNumber":290,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":291,"author":{"gitId":"SiTingST"},"content":"#### Actual Implementation","lastModifiedDate":"2021-03-23"},{"lineNumber":292,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":293,"author":{"gitId":"SiTingST"},"content":"The find student feature helps users to locate a particular student record by the student\u0027s matriculation number.","lastModifiedDate":"2021-03-23"},{"lineNumber":294,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":295,"author":{"gitId":"SiTingST"},"content":"This feature is facilitated by `FindCommandParser` which implements the `Parser` interface and `FindCommand` which extends the abstract class `Command`. ","lastModifiedDate":"2021-03-23"},{"lineNumber":296,"author":{"gitId":"SiTingST"},"content":"`FindCommandParser` takes in the user\u0027s command and validates the input before passing it to `FindCommand`.","lastModifiedDate":"2021-03-23"},{"lineNumber":297,"author":{"gitId":"SiTingST"},"content":"`FindCommand` will invoke a method to search for the particular student entry in `Model` and return the specific student record if the student exists.","lastModifiedDate":"2021-03-23"},{"lineNumber":298,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":299,"author":{"gitId":"SiTingST"},"content":"Given below is an example usage scenario and how the find student mechanism behaves at each step.","lastModifiedDate":"2021-03-23"},{"lineNumber":300,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":301,"author":{"gitId":"SiTingST"},"content":"Step 1: The user executes `find A0175678U` into VAX@NUS.","lastModifiedDate":"2021-03-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":303,"author":{"gitId":"SiTingST"},"content":"Step 2: The input will be parsed to the `LogicManager execute` method which invokes `FindCommandParser` to perform validation on the input.","lastModifiedDate":"2021-03-23"},{"lineNumber":304,"author":{"gitId":"SiTingST"},"content":"\u003e **NOTE:** If the matriculation number given by the user is in the wrong format, `FindCommandParser` will throw a `ParseException` to stop the execution and inform user about the error.","lastModifiedDate":"2021-03-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":306,"author":{"gitId":"SiTingST"},"content":"Step 3: The instance of `FindCommandParser` will create a new `FindCommand` instance which will retrieve and return the student entry of the particular student from `Model` if the student exists.","lastModifiedDate":"2021-03-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":308,"author":{"gitId":"SiTingST"},"content":"Step 4: Display the particular student entry onto the UI. ","lastModifiedDate":"2021-03-23"},{"lineNumber":309,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":310,"author":{"gitId":"SiTingST"},"content":"The following sequence diagram shows how the find operation works:","lastModifiedDate":"2021-03-23"},{"lineNumber":311,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":312,"author":{"gitId":"SiTingST"},"content":"![Find_Student_ Sequence Diagram](images/FindStudentSequenceDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":313,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":314,"author":{"gitId":"SiTingST"},"content":"The following activity diagram summarizes what happens when a user executes the `Find` command:","lastModifiedDate":"2021-03-23"},{"lineNumber":315,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":316,"author":{"gitId":"SiTingST"},"content":"![Find Student_Activity Diagram](images/FindStudentActivityDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":317,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":318,"author":{"gitId":"SiTingST"},"content":"#### Design consideration:","lastModifiedDate":"2021-03-23"},{"lineNumber":319,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":320,"author":{"gitId":"SiTingST"},"content":"##### Aspect: How Find Student executes","lastModifiedDate":"2021-03-23"},{"lineNumber":321,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":322,"author":{"gitId":"SiTingST"},"content":"* **Alternative 1 (current choice):** Find student based on student\u0027s matriculation number.","lastModifiedDate":"2021-03-23"},{"lineNumber":323,"author":{"gitId":"SiTingST"},"content":"    * Pros:","lastModifiedDate":"2021-03-23"},{"lineNumber":324,"author":{"gitId":"SiTingST"},"content":"        * Each student entry found uniquely identifies a student.","lastModifiedDate":"2021-03-23"},{"lineNumber":325,"author":{"gitId":"SiTingST"},"content":"        * Only one student entry is shown if the particular student exists in the system. ","lastModifiedDate":"2021-03-23"},{"lineNumber":326,"author":{"gitId":"SiTingST"},"content":"    * Cons:","lastModifiedDate":"2021-03-23"},{"lineNumber":327,"author":{"gitId":"SiTingST"},"content":"        * The user is required to know the student\u0027s matriculation number to perform the action. ","lastModifiedDate":"2021-03-23"},{"lineNumber":328,"author":{"gitId":"SiTingST"},"content":"        ","lastModifiedDate":"2021-03-23"},{"lineNumber":329,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":330,"author":{"gitId":"SiTingST"},"content":"* **Alternative 2:** Find student using student\u0027s name","lastModifiedDate":"2021-03-23"},{"lineNumber":331,"author":{"gitId":"SiTingST"},"content":"    * Pros:","lastModifiedDate":"2021-03-23"},{"lineNumber":332,"author":{"gitId":"SiTingST"},"content":"        * User is not required to know the student\u0027s matriculation number.","lastModifiedDate":"2021-03-23"},{"lineNumber":333,"author":{"gitId":"SiTingST"},"content":"    * Cons:","lastModifiedDate":"2021-03-23"},{"lineNumber":334,"author":{"gitId":"SiTingST"},"content":"        * Multiple student entries will be shown for students with the same name. The user might have to look through multiple entires to find the particular student hence causing inconvenience to them. ","lastModifiedDate":"2021-03-23"},{"lineNumber":335,"author":{"gitId":"SiTingST"},"content":"        * The user has to type more words if the student name is too long. ","lastModifiedDate":"2021-03-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"yienyoong"},"content":"* UHC staff who has a need to manage a significant number of appointments","lastModifiedDate":"2021-02-25"},{"lineNumber":356,"author":{"gitId":"yienyoong"},"content":"* UHC staff who has to keep track of NUS students\u0027 COVID-19 vaccinations regarding:","lastModifiedDate":"2021-02-25"},{"lineNumber":357,"author":{"gitId":"yienyoong"},"content":"  * Who has been vaccinated","lastModifiedDate":"2021-02-25"},{"lineNumber":358,"author":{"gitId":"yienyoong"},"content":"  * Who does not want to be vaccinated","lastModifiedDate":"2021-02-25"},{"lineNumber":359,"author":{"gitId":"yienyoong"},"content":"  * Who wants to be vaccinated","lastModifiedDate":"2021-02-25"},{"lineNumber":360,"author":{"gitId":"yienyoong"},"content":"    * Priority for the vaccine","lastModifiedDate":"2021-02-25"},{"lineNumber":361,"author":{"gitId":"yienyoong"},"content":"    * Medical histories, existing medical conditions and allergies","lastModifiedDate":"2021-02-25"},{"lineNumber":362,"author":{"gitId":"yienyoong"},"content":"* Prefers desktop apps over other types","lastModifiedDate":"2021-02-25"},{"lineNumber":363,"author":{"gitId":"yienyoong"},"content":"* Can type fast","lastModifiedDate":"2021-02-25"},{"lineNumber":364,"author":{"gitId":"yienyoong"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2021-02-25"},{"lineNumber":365,"author":{"gitId":"yienyoong"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2021-02-25"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"SiTingST"},"content":"**Value proposition**: a one stop management app to efficiently track and schedule COVID-19 vaccinations for NUS students","lastModifiedDate":"2021-02-27"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"fairyinabottle4"},"content":"| `* * *`  | user                                       | add a new student               | keep track of that student\u0027s vaccination status                                                                       |","lastModifiedDate":"2021-02-27"},{"lineNumber":378,"author":{"gitId":"yienyoong"},"content":"| `* * *`  | user                                       | delete a student                | remove entries that I no longer need or accidentally added                                |","lastModifiedDate":"2021-02-25"},{"lineNumber":379,"author":{"gitId":"SiTingST"},"content":"| `* * *`  | user                                       | find a student          | locate a particular student entry without traversing the entire list |","lastModifiedDate":"2021-03-23"},{"lineNumber":380,"author":{"gitId":"SiTingST"},"content":"| `* * *`  | user                                       | filter student entries           | view a specific group of student entries  |","lastModifiedDate":"2021-03-23"},{"lineNumber":381,"author":{"gitId":"SiTingST"},"content":"| `* * *`  | user                                       | list all students              | view all student entries at one go                                     |","lastModifiedDate":"2021-03-23"},{"lineNumber":382,"author":{"gitId":"picasdan9"},"content":"| `* * *`  | user                                       | list all upcoming appointments | view all appointments at one go","lastModifiedDate":"2021-02-27"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"yienyoong"},"content":"(For all use cases below, the **System** is the `Vax@NUS` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-25"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"SiTingST"},"content":"**Use case: Add a student entry**","lastModifiedDate":"2021-02-27"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":392,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":394,"author":{"gitId":"SiTingST"},"content":"1.  User requests to add a specific student entry.","lastModifiedDate":"2021-02-27"},{"lineNumber":395,"author":{"gitId":"SiTingST"},"content":"2.  System prompts for student\u0027s details.","lastModifiedDate":"2021-02-27"},{"lineNumber":396,"author":{"gitId":"SiTingST"},"content":"3.  User inputs the respective details.","lastModifiedDate":"2021-02-27"},{"lineNumber":397,"author":{"gitId":"SiTingST"},"content":"4.  System adds the student entry.","lastModifiedDate":"2021-02-27"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":403,"author":{"gitId":"SiTingST"},"content":"* 1a. The specified student entry exists in the system.","lastModifiedDate":"2021-02-27"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":405,"author":{"gitId":"SiTingST"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":406,"author":{"gitId":"SiTingST"},"content":"  ","lastModifiedDate":"2021-02-27"},{"lineNumber":407,"author":{"gitId":"SiTingST"},"content":"        Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":408,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":409,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":410,"author":{"gitId":"SiTingST"},"content":"* 3a. User does not give sufficient inputs to add a student entry.","lastModifiedDate":"2021-02-27"},{"lineNumber":411,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":412,"author":{"gitId":"SiTingST"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":413,"author":{"gitId":"SiTingST"},"content":"  ","lastModifiedDate":"2021-02-27"},{"lineNumber":414,"author":{"gitId":"SiTingST"},"content":"        Use case ends.  ","lastModifiedDate":"2021-02-27"},{"lineNumber":415,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":416,"author":{"gitId":"SiTingST"},"content":"**Use case: Add a vaccination appointment**","lastModifiedDate":"2021-02-27"},{"lineNumber":417,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":418,"author":{"gitId":"SiTingST"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":419,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":420,"author":{"gitId":"SiTingST"},"content":"1.  User requests to add a vaccination appointment.","lastModifiedDate":"2021-02-27"},{"lineNumber":421,"author":{"gitId":"SiTingST"},"content":"2.  System prompts for details about the vaccination appointment.","lastModifiedDate":"2021-02-27"},{"lineNumber":422,"author":{"gitId":"SiTingST"},"content":"3.  User inputs the respective details.","lastModifiedDate":"2021-02-27"},{"lineNumber":423,"author":{"gitId":"SiTingST"},"content":"4.  System adds the vaccination appointment.","lastModifiedDate":"2021-02-27"},{"lineNumber":424,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":425,"author":{"gitId":"SiTingST"},"content":"    Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":426,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":427,"author":{"gitId":"SiTingST"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":428,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":429,"author":{"gitId":"SiTingST"},"content":"* 3a. User does not give sufficient inputs to add a vaccination appointment.","lastModifiedDate":"2021-03-23"},{"lineNumber":430,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":431,"author":{"gitId":"SiTingST"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":432,"author":{"gitId":"SiTingST"},"content":"  ","lastModifiedDate":"2021-02-27"},{"lineNumber":433,"author":{"gitId":"SiTingST"},"content":"        Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":434,"author":{"gitId":"SiTingST"},"content":"        ","lastModifiedDate":"2021-02-27"},{"lineNumber":435,"author":{"gitId":"SiTingST"},"content":"* 4a. The given appointment date and time clashes with an existing vaccination appointment for another student.","lastModifiedDate":"2021-02-27"},{"lineNumber":436,"author":{"gitId":"SiTingST"},"content":"    ","lastModifiedDate":"2021-02-27"},{"lineNumber":437,"author":{"gitId":"SiTingST"},"content":"   * 4a1. System shows an error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":439,"author":{"gitId":"SiTingST"},"content":"      Use case ends.  ","lastModifiedDate":"2021-02-27"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":441,"author":{"gitId":"SiTingST"},"content":"**Use case: Find a student**","lastModifiedDate":"2021-03-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":443,"author":{"gitId":"SiTingST"},"content":"**MSS**","lastModifiedDate":"2021-03-23"},{"lineNumber":444,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":445,"author":{"gitId":"SiTingST"},"content":"1.  User requests to find a specific student.","lastModifiedDate":"2021-03-23"},{"lineNumber":446,"author":{"gitId":"SiTingST"},"content":"2.  System prompts for student\u0027s matriculation number.","lastModifiedDate":"2021-03-23"},{"lineNumber":447,"author":{"gitId":"SiTingST"},"content":"3.  User inputs the matriculation number.","lastModifiedDate":"2021-03-23"},{"lineNumber":448,"author":{"gitId":"SiTingST"},"content":"4.  System finds the student. ","lastModifiedDate":"2021-03-23"},{"lineNumber":449,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":450,"author":{"gitId":"SiTingST"},"content":"    Use case ends.","lastModifiedDate":"2021-03-23"},{"lineNumber":451,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":452,"author":{"gitId":"SiTingST"},"content":"**Extensions**","lastModifiedDate":"2021-03-23"},{"lineNumber":453,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":454,"author":{"gitId":"SiTingST"},"content":"* 1a. Specified student does not exist.","lastModifiedDate":"2021-03-23"},{"lineNumber":455,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":456,"author":{"gitId":"SiTingST"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2021-03-23"},{"lineNumber":457,"author":{"gitId":"SiTingST"},"content":"  ","lastModifiedDate":"2021-03-23"},{"lineNumber":458,"author":{"gitId":"SiTingST"},"content":"        Use case ends.","lastModifiedDate":"2021-03-23"},{"lineNumber":459,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":460,"author":{"gitId":"SiTingST"},"content":"* 3a. User input matriculation number in the wrong format.","lastModifiedDate":"2021-03-23"},{"lineNumber":461,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":462,"author":{"gitId":"SiTingST"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2021-03-23"},{"lineNumber":463,"author":{"gitId":"SiTingST"},"content":"  ","lastModifiedDate":"2021-03-23"},{"lineNumber":464,"author":{"gitId":"SiTingST"},"content":"        Use case ends.","lastModifiedDate":"2021-03-23"},{"lineNumber":465,"author":{"gitId":"SiTingST"},"content":"        ","lastModifiedDate":"2021-03-23"},{"lineNumber":466,"author":{"gitId":"yienyoong"},"content":"**Use case: Delete a student**","lastModifiedDate":"2021-02-25"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"yienyoong"},"content":"1.  User requests to delete a specific student.","lastModifiedDate":"2021-02-25"},{"lineNumber":471,"author":{"gitId":"yienyoong"},"content":"2.  System prompts for confirmation of deletion.","lastModifiedDate":"2021-02-25"},{"lineNumber":472,"author":{"gitId":"yienyoong"},"content":"3.  User confirms.","lastModifiedDate":"2021-02-25"},{"lineNumber":473,"author":{"gitId":"yienyoong"},"content":"4.  System deletes the student. ","lastModifiedDate":"2021-02-25"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"yienyoong"},"content":"* 1a. Specified student does not exist.","lastModifiedDate":"2021-02-25"},{"lineNumber":480,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":481,"author":{"gitId":"yienyoong"},"content":"    * 1a1. System shows an error message.","lastModifiedDate":"2021-02-25"},{"lineNumber":482,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"yienyoong"},"content":"* 3a. User does not confirm.","lastModifiedDate":"2021-02-25"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"yienyoong"},"content":"  Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"picasdan9"},"content":"1.  Should be able to hold up to 35000 students (NUS undergraduate cohort size) and 35000 appointments without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-02-27"},{"lineNumber":496,"author":{"gitId":"picasdan9"},"content":"1.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-02-27"},{"lineNumber":497,"author":{"gitId":"picasdan9"},"content":"1.  The product is not required to export statistics reports to PDF files.","lastModifiedDate":"2021-02-27"},{"lineNumber":498,"author":{"gitId":"picasdan9"},"content":"1.  There should be a mechanism to migrate data so that the application can be used with existing data on different machines.","lastModifiedDate":"2021-02-27"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"yienyoong"},"content":"* **Vaccine**: Singapore has two approved COVID-19 vaccines, one developed by Pfizer-BioNTech, ","lastModifiedDate":"2021-03-01"},{"lineNumber":506,"author":{"gitId":"fairyinabottle4"},"content":"  the other by Moderna. Both require two doses, 21 days apart for Pfizer-BioNTech, 28 days apart for Moderna.","lastModifiedDate":"2021-02-27"},{"lineNumber":507,"author":{"gitId":"fairyinabottle4"},"content":"  Two appointments must therefore be created per student. ","lastModifiedDate":"2021-02-27"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"fairyinabottle4"},"content":"### Deleting a student","lastModifiedDate":"2021-03-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"fairyinabottle4"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2021-03-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"fairyinabottle4"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"fairyinabottle4"},"content":"      Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fairyinabottle4":49,"yienyoong":64,"SiTingST":111,"picasdan9":52,"-":284}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"   1. Run the `seedu.student.Main` and try a few commands.","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"fairyinabottle4":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"   e.g. `seedu.student.commons.StringUtilTest`","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"   e.g. `seedu.student.storage.StorageManagerTest`","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"   e.g. `seedu.student.logic.LogicManagerTest`","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"fairyinabottle4":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"Vax@NUS is a **one stop management app to efficiently track and schedule COVID-19 vaccinations for NUS students.** It is a desktop app **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Vax@NUS can get your appointment management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":":information_source: This icon indicates helpful notes ","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"1. Download the latest `VaxAtNUS.jar` from [here](https://github.com/AY2021S2-CS2103T-W10-4/tp/releases).","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Vax@NUS application.","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"   * **`list students`** : Lists all students.","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"## Parameter Formats","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"**:information_source: NOTE: The following parameter formats must be followed:**","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"\u003e The `MATRICULATION_NUMBER` of a student is a unique 9-character alphanumeric sequence that begins with A, followed by","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"\u003e 7 numbers and ends with an alphabet.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"\u003e The `FACULTY` of a student must be one of the following:","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * FASS (for Faculty of Arts and Social Sciences)","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * BIZ (for NUS Business School)","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * COM (for School of Computing)","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * SCALE (for School of Continuing and Lifelong Education)","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * DEN (for Faculty of Dentistry)","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * SDE (for School of Design and Environment)","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * DNUS (for Duke-NUS Medical School)","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * ENG (for Faculty of Engineering)","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * ISEP (for Integrative Sciences and Engineering)","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * LAW (for Faculty of Law)","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * MED (for Yong Loo Lin School of Medicine)","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * MUSIC (for Yong Siew Toh Conservatory of Music)","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * SPH (for Saw Swee Hock School of Public Health)","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * SPP (for Lee Kuan Yew School of Public Policy)","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * SCI (for Faculty of Science)","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * USP (for University Scholars Programme)","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * YNC (for Yale-NUS College)","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"\u003e The `VACCINATION_STATUS` of a student must only be `vaccinated` or `not vaccinated`","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"\u003e The `[SCHOOL_RESIDENCE]` of a student must be one of the following:","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * PGPH (for Prince George\u0027s Park House)","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * PGPR (for Prince George\u0027s Park Residences)","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * KE7H (for King Edward VII Hall)","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * SH (for Sheares Hall)","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * KRH (for Kent Ridge Hall)","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * TH (for Temasek Hall)","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * EH (for Eusoff Hall)","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * RH (for Raffles Hall)","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * RVRC (for Ridge View Residential College)","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * YNC (for Yale-NUS College)","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * TC (for Tembusu College)","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * CAPT (for College of Alice and Peter Tan)","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * RC4 (for Residential College 4)","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * USP (for University Scholars Programme)","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"\u003e * UTR (for Utown Residences)","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"**:information_source: NOTE ABOUT THE COMMAND FORMAT :**\u003cbr\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"  e.g `n/NAME [r/SCHOOL RESIDENCE]` can be used as `n/John Doe r/RC4` or as `n/John Doe`.","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"  ","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"  ","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"yienyoong"},"content":"### Adding a student entry: `add`","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"picasdan9"},"content":"Adds a student to Vax@NUS records.","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"Format: `add n/NAME i/MATRICULATION_NUMBER f/FACULTY p/PHONE_NUMBER e/EMAIL a/ADDRESS s/VACCINATION_STATUS m/MEDICAL_DETAILS r/SCHOOL_RESIDENCE[optional]`","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"* `add n/John Doe i/A1234567X f/COM p/98765432 e/johnd@example.com a/John street, block 123, #01-01 s/vaccinated m/peanut allergy r/RVRC`","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":"* `add n/Betsy Crowe f/ENG i/A7654321J p/91119222 e/betsycrowe@example.com a/212 Orchard Road, #18-08 s/not vaccinated m/nose lift surgery in 2012`","lastModifiedDate":"2021-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"### Editing a student entry: `edit`","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":128,"author":{"gitId":"picasdan9"},"content":"Edits a student in Vax@NUS records.","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":"Format: `edit INDEX [n/NAME] [i/MATRICULATION_NUMBER] [f/FACULTY] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/VACCINATION_STATUS] [m/MEDICAL_DETAILS] [r/SCHOOL_RESIDENCE]`","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"yienyoong"},"content":"* Edits the student at the specified INDEX. The index refers to the index number shown in the displayed student list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":"Examples:","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"yienyoong"},"content":"* `edit 1 p/91234567 f/MED` Edits the phone number and faculty of the first student to be 91234567 and MED respectively.","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"yienyoong"},"content":"* `edit 2 r/KRH`  Edits the school residence of the second student to be KRH.","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"### Listing all students : `list`","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"picasdan9"},"content":"Shows a list of all students in Vax@NUS records.","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"Format: `list students`","lastModifiedDate":"2021-02-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"SiTingST"},"content":"### Finding a student : `find`","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"picasdan9"},"content":"Shows personal information, including appointment details if present, of the student that matches the specified matriculation number.","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"SiTingST"},"content":"Format: `find MATRICULATION_NUMBER`","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"picasdan9"},"content":"* `Find A1234567X` shows John Doe\u0027s personal information and his appointment details there is one.","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"SiTingST"},"content":"### Filtering student records: `filter`","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"picasdan9"},"content":"Shows all student records in Vax@NUS that match the specified filter condition.","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"SiTingST"},"content":"Format: \u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"SiTingST"},"content":"`filter VACCINATION_STATUS`","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"SiTingST"},"content":"`filter FACULTY`","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"SiTingST"},"content":"`filter SCHOOL_RESIDENCE`","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"SiTingST"},"content":"Examples:","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"SiTingST"},"content":"* `filter VACCINATED` ","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":"* `filter COM` ","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"SiTingST"},"content":"* `filter RVRC` ","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"SiTingST"},"content":"### Deleting a student : `deleteStud`","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"picasdan9"},"content":"Deletes the student specified by his/her matriculation number from Vax@NUS records.","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"picasdan9"},"content":"Format: `deleteStud MATRICULATION_NUMBER`","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":180,"author":{"gitId":"yienyoong"},"content":"* If the matriculation number does not exist in the records, an error message will be displayed to inform users that ","lastModifiedDate":"2021-03-11"},{"lineNumber":181,"author":{"gitId":"yienyoong"},"content":"  the matriculation number is not found.","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"fairyinabottle4"},"content":"  ","lastModifiedDate":"2021-02-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"SiTingST"},"content":"* `deleteStud A7654321J` deletes Betsy Crowe from the records.","lastModifiedDate":"2021-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"yienyoong"},"content":"### Deleting an appointment by the student\u0027s matriculation number: `deleteAppt`","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"yienyoong"},"content":"Deletes the appointment of the student with the specified matriculation number from Vax@NUS\u0027 records. ","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"picasdan9"},"content":"Format: `deleteAppt MATRICULATION_NUMBER`","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"yienyoong"},"content":"* If the matriculation number or appointment does not exist in the records, an error message will be displayed to inform users that","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"yienyoong"},"content":"  the matriculation number or appointment is not found.","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"yienyoong"},"content":"Examples:","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"yienyoong"},"content":"* `deleteAppt A7654321J` deletes Betsy Crowe\u0027s appointments from the records, provided she had an appointment scheduled previously.","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"picasdan9"},"content":"### Adding an appointment: `addAppt`","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"yienyoong"},"content":"Adds an appointment to Vax@NUS\u0027 records. ","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"picasdan9"},"content":"Format: `addAppt i/MATRICULATION_NUMBER d/DATE ts/START_TIME`","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":206,"author":{"gitId":"picasdan9"},"content":"* Date must be of the format `YYYY-MM-DD`","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"picasdan9"},"content":"* Time must be of the format `HH:00` or `HH:30`","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"yienyoong"},"content":"* The student that the appointment is for must exist in the records before the appointment can be created.","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":212,"author":{"gitId":"picasdan9"},"content":"* `addAppt i/A1234567X d/2021-12-13 ts/13:00`","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"picasdan9"},"content":"* `addAppt i/A7654321J d/2021-12-13 ts/14:00`","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":215,"author":{"gitId":"fairyinabottle4"},"content":"### Editing an appointment: `editAppt`","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"picasdan9"},"content":"Edits an appointment present in Vax@NUS records by referencing the student\u0027s matriculation number.","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"fairyinabottle4"},"content":"Format: `editAppt i/MATRICULATION_NUMBER d/DATE_YYYY-MM-DD ts/START_TIME_HH:MM`","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"fairyinabottle4"},"content":"* The edited appointment must not clash with an existing appointment.","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"fairyinabottle4"},"content":"* `editAppt i/A1234567X d/2021-12-13 ts/14:00`","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"fairyinabottle4"},"content":"* `editAppt i/A7654321J d/2021-12-13 ts/14:00`","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":229,"author":{"gitId":"yienyoong"},"content":"### Viewing statistics for student population: `stats`","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"yienyoong"},"content":"Displays the statistics of the requested Faculty/School Residence, the whole of NUS or statistics of all Faculties","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"yienyoong"},"content":"and School Residences. ","lastModifiedDate":"2021-03-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"yienyoong"},"content":"Format: \u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":235,"author":{"gitId":"SiTingST"},"content":"`stats FACULTY`","lastModifiedDate":"2021-03-15"},{"lineNumber":236,"author":{"gitId":"SiTingST"},"content":"`stats SCHOOL_RESIDENCE`","lastModifiedDate":"2021-03-15"},{"lineNumber":237,"author":{"gitId":"yienyoong"},"content":"`stats NUS`","lastModifiedDate":"2021-03-13"},{"lineNumber":238,"author":{"gitId":"yienyoong"},"content":"`stats all`","lastModifiedDate":"2021-03-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"SiTingST"},"content":"* If there is no available data for the requested Faculty or School Residence, a message will be displayed to inform","lastModifiedDate":"2021-03-15"},{"lineNumber":241,"author":{"gitId":"yienyoong"},"content":"  users that the requested Faculty or School Residence has no available data.","lastModifiedDate":"2021-03-13"},{"lineNumber":242,"author":{"gitId":"yienyoong"},"content":"  ","lastModifiedDate":"2021-03-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-13"},{"lineNumber":245,"author":{"gitId":"SiTingST"},"content":"* `stats COM` displays the percentage of vaccinated students in School of Computing.","lastModifiedDate":"2021-03-15"},{"lineNumber":246,"author":{"gitId":"SiTingST"},"content":"* `stats RC4` displays the percentage of vaccinated students in RC4.","lastModifiedDate":"2021-03-15"},{"lineNumber":247,"author":{"gitId":"yienyoong"},"content":"* `stats DOES_NOT_LIVE_ON_CAMPUS` displays the percentage of vaccinated students not living on campus.","lastModifiedDate":"2021-03-16"},{"lineNumber":248,"author":{"gitId":"yienyoong"},"content":"* `stats NUS` displays the percentage of vaccinated students in NUS.","lastModifiedDate":"2021-03-13"},{"lineNumber":249,"author":{"gitId":"yienyoong"},"content":"* `stats all` displays the list of percentages of vaccinated students in every Faculty and School Residence.","lastModifiedDate":"2021-03-13"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"yienyoong"},"content":"### Viewing statistics for appointments: `statsAppt`","lastModifiedDate":"2021-03-28"},{"lineNumber":252,"author":{"gitId":"yienyoong"},"content":"Displays the number of upcoming and previous appointments within 6 days from the current day and includes the day itself.","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":254,"author":{"gitId":"yienyoong"},"content":"Format: \u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"yienyoong"},"content":"`statsAppt`","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"fairyinabottle4"},"content":"Vax@NUS data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-02-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":268,"author":{"gitId":"fairyinabottle4"},"content":"### Adding vaccination appointments for students `[coming in v1.3]`","lastModifiedDate":"2021-02-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"SiTingST"},"content":"**Q**: What do I do if I accidentally deleted a student? ","lastModifiedDate":"2021-02-27"},{"lineNumber":277,"author":{"gitId":"SiTingST"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":278,"author":{"gitId":"SiTingST"},"content":"**A**: We regret to inform you that deletion is permanent. You will have to manually re-add the student.","lastModifiedDate":"2021-02-27"},{"lineNumber":279,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":280,"author":{"gitId":"SiTingST"},"content":"**Q**: What can be included in medical details?","lastModifiedDate":"2021-02-27"},{"lineNumber":281,"author":{"gitId":"SiTingST"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":282,"author":{"gitId":"SiTingST"},"content":"**A**: Allergies and past medical history.","lastModifiedDate":"2021-02-27"},{"lineNumber":283,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":284,"author":{"gitId":"SiTingST"},"content":"**Q** : Will I be able to add other types of appointments besides vaccination appointments?","lastModifiedDate":"2021-02-27"},{"lineNumber":285,"author":{"gitId":"SiTingST"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":286,"author":{"gitId":"SiTingST"},"content":"**A** : No, the current version only allows you to add vaccination appointments and not any other type of appointments. ","lastModifiedDate":"2021-02-27"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":288,"author":{"gitId":"fairyinabottle4"},"content":"**Q** : Am I able to change an appointment at a specific time to another student?","lastModifiedDate":"2021-03-28"},{"lineNumber":289,"author":{"gitId":"fairyinabottle4"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":290,"author":{"gitId":"fairyinabottle4"},"content":"**A** : No, you will need to delete that appointment first, then add the new appointment at that specific time with the new student. ","lastModifiedDate":"2021-03-28"},{"lineNumber":291,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"SiTingST"},"content":"## Command Summary","lastModifiedDate":"2021-02-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"picasdan9"},"content":"**Add Student** | `add n/NAME i/MATRICULATION_NUMBER f/FACULTY p/PHONE_NUMBER e/EMAIL a/ADDRESS s/VACCINATION_STATUS r/SCHOOL_RESIDENCE[optional] m/MEDICAL_DETAILS` \u003cbr\u003e e.g., `add n/John Doe i/A1234567X f/COM p/98765432 e/johnd@example.com a/John street, block 123, #01-01 s/vaccinated r/RVRC m/peanut allergy`","lastModifiedDate":"2021-03-29"},{"lineNumber":298,"author":{"gitId":"picasdan9"},"content":"**Edit Student** | `edit INDEX [n/NAME] [i/MATRICULATION_NUMBER] [f/FACULTY] [p/PHONE] [e/EMAIL] [a/ADDRESS] [s/VACCINATION_STATUS] [m/MEDICAL_DETAILS] [r/SCHOOL_RESIDENCE]` \u003cbr\u003e e.g., `edit 1 p/91234567 f/MED`","lastModifiedDate":"2021-03-29"},{"lineNumber":299,"author":{"gitId":"yienyoong"},"content":"**List Students** | `list students`","lastModifiedDate":"2021-02-25"},{"lineNumber":300,"author":{"gitId":"yienyoong"},"content":"**Find** | `find MATRICULATION_NUMBER` e.g., `find A1234567X`","lastModifiedDate":"2021-03-16"},{"lineNumber":301,"author":{"gitId":"picasdan9"},"content":"**Filter Students** | `filter VACCINATION_STATUS`  e.g., `filter VACCINATED` \u003cbr\u003e `filter FACULTY ` e.g., `filter COM` \u003cbr\u003e `filter SCHOOL_RESIDENCE` e.g., `filter RVRC` ","lastModifiedDate":"2021-03-29"},{"lineNumber":302,"author":{"gitId":"yienyoong"},"content":"**Delete Student** | `deleteStud MATRICULATION_NUMBER` e.g., `deleteStud A1234567X`","lastModifiedDate":"2021-03-16"},{"lineNumber":303,"author":{"gitId":"picasdan9"},"content":"**Add Appointment** | `addAppt i/MATRICULATION_NUMBER d/DATE ts/START_TIME` e.g., `addAppt i/A1234567X d/2021-12-13 ts/13:00`","lastModifiedDate":"2021-03-29"},{"lineNumber":304,"author":{"gitId":"yienyoong"},"content":"**Delete Appointment** | `deleteAppt MATRICULATION_NUMBER` e.g., `deleteAppt A1234567X`","lastModifiedDate":"2021-03-29"},{"lineNumber":305,"author":{"gitId":"yienyoong"},"content":"**View Student Statistics** | `stats FACULTY` e.g., `stats COM` \u003cbr\u003e `stats SCHOOL_RESIDENCE` e.g., `stats RC4` \u003cbr\u003e `stats NUS` \u003cbr\u003e `stats all` ","lastModifiedDate":"2021-03-28"},{"lineNumber":306,"author":{"gitId":"yienyoong"},"content":"**View Appointment Statistics** | `statsAppt`","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"fairyinabottle4":71,"yienyoong":42,"SiTingST":41,"picasdan9":26,"-":126}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"picasdan9"},"content":"    content: \"Vax@NUS\";","lastModifiedDate":"2021-03-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"picasdan9":1,"-":294}},{"path":"docs/diagrams/AddAppointmentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"start","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":":User executes AddAppt command;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"if () then ([input is valid \u0026 appointment does not exist in StudentBook])","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    :Parse Command;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    :Save new appointment to StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"else ([else])","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"endif","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"stop","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"picasdan9":14}},{"path":"docs/diagrams/AddAppointmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"participant \":AddAppointmentCommandParser\" as AddAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"participant \":AddAppointmentCommand\" as AddAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"[-\u003e LogicManager : execute(addAppt)","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(addAppt)","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"create AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"AddressBookParser -\u003e AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"activate AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"AddressBookParser \u003c-- AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"deactivate AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"AddressBookParser -\u003e AddAppointmentCommandParser : parse(args)","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"activate AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"create AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"AddAppointmentCommandParser -\u003e AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"AddAppointmentCommand --\u003e AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"AddAppointmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"deactivate AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"AddAppointmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"destroy AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"LogicManager -\u003e AddAppointmentCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"AddAppointmentCommand -\u003e Model : addAppointment(toAdd)","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"Model -\u003e AddressBook : addAppointment(toAdd)","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"activate AddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"deactivate AddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"Model --\u003e AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"AddAppointmentCommand --\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"AddAppointmentCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"destroy AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"picasdan9":68}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"participant \":StudentBookParser\" as StudentBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"participant \":AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"end box","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"participant \":StudentBook\" as StudentBook MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"end box","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"[-\u003e LogicManager : execute(Add)","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"activate LogicManager","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"LogicManager -\u003e StudentBookParser : parseCommand(Add)","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"activate StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"create AddCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"StudentBookParser -\u003e AddCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"create AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"activate AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"AddCommand --\u003e StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"deactivate AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"StudentBookParser --\u003e LogicManager :","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"deactivate StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"destroy AddCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"activate AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"AddCommand -\u003e Model : addStudent()","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"activate Model","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"Model -\u003e StudentBook : addStudent()","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"activate StudentBook","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"StudentBook --\u003e Model :","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"deactivate StudentBook","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"deactivate Model","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"deactivate AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"AddCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"destroy AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"@enduml","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"fairyinabottle4":57}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(s)","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveStudentBook(studentBook)","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"fairyinabottle4":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"AddressBook *-right-\u003e \"1\" UniqueStudentList","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"UniqueTagList -[hidden]down- UniqueStudentList","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"UniqueStudentList o-right-\u003e Student","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"Student -up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e Name","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e Phone","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e Email","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e Address","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"fairyinabottle4":9,"-":12}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":":User executes Add command;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"if () then ([input is valid \u0026 student does not exist in Student Book])","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    :Parse Command;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    :Save new student to StudentBook;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"fairyinabottle4":4,"-":10}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"participant \":StudentBookParser\" as StudentBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"LogicManager -\u003e StudentBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"activate StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"StudentBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"DeleteCommandParser --\u003e StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"StudentBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"DeleteCommandParser --\u003e StudentBookParser : d","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"DeleteCommandParser -[hidden]-\u003e StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"StudentBookParser --\u003e LogicManager : d","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"deactivate StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"DeleteCommand -\u003e Model : deleteStudent(1)","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"fairyinabottle4":11,"-":58}},{"path":"docs/diagrams/DeleteStudentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"start","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":":User executes deleteStud command;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"if () then ([input is valid \u0026 student exists in StudentBook])","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"    :Parse Command;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"    :Delete student from StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"else ([else])","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"endif","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"stop","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"yienyoong":14}},{"path":"docs/diagrams/DeleteStudentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"participant \":StudentBookParser\" as StudentBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"participant \":DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"participant \":StudentBook\" as StudentBook MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"[-\u003e LogicManager : execute(deleteStud)","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"LogicManager -\u003e StudentBookParser : parseCommand(deleteStud)","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"activate StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"create DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"StudentBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"StudentBookParser \u003c-- DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"StudentBookParser -\u003e DeleteCommandParser : parse(args)","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"create DeleteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"activate DeleteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"DeleteCommand --\u003e DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"DeleteCommandParser --\u003e StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"DeleteCommandParser -[hidden]-\u003e StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"StudentBookParser --\u003e LogicManager :","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"deactivate StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"activate DeleteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"DeleteCommand -\u003e Model : deletePerson()","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"Model -\u003e StudentBook : deletePerson()","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"activate StudentBook","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"StudentBook --\u003e Model :","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"deactivate StudentBook","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"DeleteCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"destroy DeleteCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"yienyoong":68}},{"path":"docs/diagrams/FindStudentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"participant \":StudentBookParser\" as StudentBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"[-\u003e LogicManager : execute(args)","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"LogicManager -\u003e StudentBookParser : parseCommand(args))","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"activate StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"create FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"StudentBookParser -\u003e FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"activate FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"StudentBookParser \u003c-- FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"StudentBookParser -\u003e FindCommandParser : parse(args)","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"activate FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"create FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"activate FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"deactivate FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"FindCommandParser --\u003e StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"FindCommandParser -[hidden]-\u003e StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"StudentBookParser --\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"deactivate StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"activate FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(student)","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"FindCommand -\u003e Model : getFilteredPersonList(student)","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"FindCommand --\u003e LogicManager : student entry","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"deactivate FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"FindCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"destroy FindCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"SiTingST":67}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"Class StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"LogicManager --\u003e\"1\" StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"StudentBookParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"fairyinabottle4":3,"-":59}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"Package Student {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"Class Student","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"Class MatriculationNumber","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"Class Faculty","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"Class UniqueStudentList","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"Class VaccinationStatus","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"Class MedicalDetails","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"Package Appointment {","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"Class Appointment","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"Class UniqueAppointmentList","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"Package SchoolResidence {","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"Class SchoolResidence","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2019-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"AddressBook *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"AddressBook *--\u003e \"1\" UniqueAppointmentList","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"UniqueStudentList o--\u003e \"*\" Student","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"UniqueAppointmentList o--\u003e \"*\" Appointment","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e \"1\" Name","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e \"1\" MatriculationNumber","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e \"1\" Faculty","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e \"1\" Phone","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e \"1\" Email","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e \"1\" Address","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e \"1\" VaccinationStatus","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e \"1\" MedicalDetails","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"Student *--\u003e \"0..1\" SchoolResidence","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"Appointment *--\u003e \"1\" MatriculationNumber","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"Appointment *--\u003e LocalDate","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"Appointment *--\u003e LocalTime","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"ModelManager -----\u003e\" ~* filtered list\" Student","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"fairyinabottle4":21,"picasdan9":10,"-":43}},{"path":"docs/diagrams/ParseInput.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"title Parsing the Add command","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"class Logic as \"__logic:LogicManager__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"class Command as \"__command:Command__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"class StudentBookParser as \"__studentBookParser:StudentBookParser__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"class AddCommandParser as \"__:AddCommandParser__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"class AddCommand as \"__:AddCommand__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"class StudentBook as \"__student:StudentBook__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"Logic -down- Command","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"Command -down- StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"StudentBookParser -right- AddCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"AddCommandParser -up- AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"AddCommand -up- StudentBook","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"@end","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"fairyinabottle4":26}},{"path":"docs/diagrams/ProcessResult.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"title Processing the result of the command","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"class Logic as \"__logic:LogicManager__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"class Command as \"__command:Command__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"class StudentBookParser as \"__studentBookParser:StudentBookParser__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"class AddCommandParser as \"__:AddCommandParser__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"class AddCommand as \"__:AddCommand__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"class Student as \"__student:Student__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"class Model as \"__:Model__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"Logic -down- Command","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"Command -down- StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"StudentBookParser -right- AddCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"AddCommandParser -up- AddCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"AddCommand -up- Student","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"Student -up- Model","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"Model -left- Logic","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"@end","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"fairyinabottle4":30}},{"path":"docs/diagrams/ReceiveInput.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"title Receiving the input Add command","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"class Logic as \"__logic:LogicManager__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"class Command as \"__command:Command__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"class StudentBookParser as \"__studentBookParser:StudentBookParser__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"class AddCommandParser as \"__:AddCommandParser__\"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"Logic -down- Command","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"Command -down- StudentBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"StudentBookParser -right- AddCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"@end","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"fairyinabottle4":19}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"Interface StudentBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"Class JsonStudentBookStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"StorageManager o--\u003e StudentBookStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"JsonStudentBookStorage .left.|\u003eStudentBookStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"JsonStudentBookStorage .down.\u003e JsonSerializableStudentBookStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"JsonSerializableStudentBookStorage .right.\u003e JsonSerializableStudent","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"JsonSerializableStudent .right.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"SiTingST":7,"-":17}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"Class StudentListPanel","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"Class AppointmentListPanel","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"Class StudentCard","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"Class AppointmentCard","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"MainWindow *-down-\u003e StudentListPanel","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"MainWindow *-down-\u003e AppointmentListPanel","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"StudentListPanel -down-\u003e StudentCard","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"AppointmentListPanel -down-\u003e AppointmentCard","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"AppointmentListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"AppointmentCard --|\u003e UiPart","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"AppointmentCard ..\u003e Model","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"fairyinabottle4":8,"picasdan9":7,"-":53}},{"path":"docs/diagrams/tracing/FindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"participant \":AddAppointmentCommandParser\" as AddAppointmentCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"participant \":AddAppointmentCommand\" as AddAppointmentCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"[-\u003e LogicManager : execute(addAppt)","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(addAppt)","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"activate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"create AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"AddressBookParser -\u003e AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"activate AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"AddressBookParser \u003c-- AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"deactivate AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"AddressBookParser -\u003e AddAppointmentCommandParser : parse(args)","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"activate AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"create AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"AddAppointmentCommandParser -\u003e AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"AddAppointmentCommand --\u003e AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"AddAppointmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"deactivate AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"AddAppointmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"destroy AddAppointmentCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"LogicManager -\u003e AddAppointmentCommand : execute()","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"activate AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"AddAppointmentCommand -\u003e Model : addAppointment(toAdd)","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"Model -\u003e AddressBook : addAppointment(toAdd)","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"activate AddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"deactivate AddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"Model --\u003e AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"AddAppointmentCommand --\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"deactivate AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"AddAppointmentCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"destroy AddAppointmentCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"SiTingST":68}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"title: Vax@NUS","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W10-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-4/tp/actions)","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W10-4/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W10-4/tp)","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"![Ui](images/mockup.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"* Vax@NUS is an app for **staff at the NUS University Health Centre (UHC)**","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"  to keep track of the COVID-19 vaccination status of students. \u003cbr\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"* It is targeted at staff who are **proficient and comfortable with the","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"  Command Line Interface (CLI)**, as the app will have very limited UI interaction features.","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"### Example usages:","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"* Create, read, update and delete (CRUD) of student profiles which details critical information such as:","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    * Contact information","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    * Vaccination status","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        * If not vaccinated, their preference for vaccination (yes/no)","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    * Medical history, existing medical conditions and allergies","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"* Creating and managing vaccination appointments for students","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"### Problems addressed:","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"* Eliminates the need for the university to use the Ministry of Health\u0027s database.","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"* This in turn simplifies the process of contacting, monitoring and administering vaccines for students.","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"* Consolidates and streamlines only data relevant to vaccinations into one app.","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"* **Goal:** To create a COVID-free NUS campus where student and academic life can flourish without restrictions.","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"### Planned Features:","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"#### v1.2","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"1. On top of the fields already available in AB3, the user will be able to input the following:","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    * Student\u0027s matriculation number","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    * Vaccination status/preference","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    * Faculty","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    * Residence on campus (if applicable)","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    * Medical history","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"1. A filter function that will allow the user to display a specific group of students","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"1. The user will be able to view all the detailed information of a student at a glance. Currently, only","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"   the summarised information on the UI can be viewed.","lastModifiedDate":"2021-02-27"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"1. Create vaccination appointments and display them on the UI.","lastModifiedDate":"2021-02-27"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"#### v1.3","lastModifiedDate":"2021-02-27"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"1. Detect duplicate entries.","lastModifiedDate":"2021-02-27"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"1. Sort vaccination appointments and display only upcoming ones.","lastModifiedDate":"2021-02-27"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"1. Provide statistical insights regarding the vaccination of the student population, by faculty, residence or other","lastModifiedDate":"2021-02-27"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"   relevant parameters.","lastModifiedDate":"2021-02-27"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"1. Undo feature to quickly correct accidental mistakes.","lastModifiedDate":"2021-02-27"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"\u003eFor the detailed documentation of this project, see the","lastModifiedDate":"2021-02-27"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"**[Vax@NUS Website](https://ay2021s2-cs2103t-w10-4.github.io/tp/)**.","lastModifiedDate":"2021-02-27"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"This project is based on the AddressBook-Level3 project created by","lastModifiedDate":"2021-02-27"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"fairyinabottle4":50,"SiTingST":1,"picasdan9":3,"-":10}},{"path":"docs/team/fairyinabottle4.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"layout: page","lastModifiedDate":"2021-02-27"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-27"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"---","lastModifiedDate":"2021-02-27"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-27"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-27"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-27"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-27"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-27"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-27"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-27"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-27"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"* **Project management**:","lastModifiedDate":"2021-02-27"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-27"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-27"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-27"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-27"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-27"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    * User Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-27"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-27"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-27"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-27"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"* **Community**:","lastModifiedDate":"2021-02-27"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-27"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-27"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-27"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-27"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"* **Tools**:","lastModifiedDate":"2021-02-27"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-27"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-27"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"fairyinabottle4":46}},{"path":"docs/team/picasdan9.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"layout: page","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"* **Project management**:","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    * User Guide:","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"* **Community**:","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"* **Tools**:","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"picasdan9":46}},{"path":"docs/team/sitingst.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"layout: page","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"* **Project management**:","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"  * User Guide:","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"* **Community**:","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"* **Tools**:","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"SiTingST":46}},{"path":"docs/team/yienyoong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"layout: page","lastModifiedDate":"2021-02-25"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-25"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-25"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"* **Project management**:","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-25"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-25"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-25"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-25"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-25"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"  * User Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-25"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-25"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-25"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"* **Community**:","lastModifiedDate":"2021-02-25"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-25"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-25"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-25"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-25"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"* **Tools**:","lastModifiedDate":"2021-02-25"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-25"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-25"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-25"}],"authorContributionMap":{"yienyoong":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":" * Changes the remark of an existing student in the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the student identified \"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"Create a `RemarkCommandParser` class in the `seedu.student.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"fairyinabottle4"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the student’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"fairyinabottle4"},"content":"Create a new `Remark` in `seedu.student.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"fairyinabottle4"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"fairyinabottle4"},"content":"Simply add the following to [`seedu.student.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"fairyinabottle4"},"content":"public PersonCard(Person student, int displayedIndex) {","lastModifiedDate":"2021-03-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"fairyinabottle4"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"fairyinabottle4"},"content":"        Person studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":344,"author":{"gitId":"fairyinabottle4"},"content":"        Person editedStudent \u003d new Person(studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2021-03-23"},{"lineNumber":345,"author":{"gitId":"fairyinabottle4"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2021-03-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"fairyinabottle4"},"content":"        model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"fairyinabottle4"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"fairyinabottle4"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2021-03-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"fairyinabottle4"},"content":"    private String generateSuccessMessage(Person studentToEdit) {","lastModifiedDate":"2021-03-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"fairyinabottle4"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2021-03-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"fairyinabottle4":23,"-":371}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"The `address` field in `Person` is actually an instance of the `seedu.student.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"  \"students\": [ {","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fairyinabottle4":2,"-":101}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.student.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"fairyinabottle4"},"content":"       Person studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"       Person editedStudent \u003d createEditedPerson(studentToEdit, editPersonDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"fairyinabottle4"},"content":"       if (!studentToEdit.isSamePerson(editedStudent) \u0026\u0026 model.hasPerson(editedStudent)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"       model.setPerson(studentToEdit, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"fairyinabottle4"},"content":"       students.addAll(","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fairyinabottle4":7,"-":243}},{"path":"src/main/java/seedu/student/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.FileUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"fairyinabottle4":3,"-":61}},{"path":"src/main/java/seedu/student/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":24}},{"path":"src/main/java/seedu/student/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Config;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Version;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.StringUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.Logic;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.LogicManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.JsonStudentBookStorage;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.Storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.StorageManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.StudentBookStorage;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.ui.Ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.ui.UiManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        StudentBookStorage studentBookStorage \u003d new JsonStudentBookStorage(userPrefs.getStudentBookFilePath());","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"        storage \u003d new StorageManager(studentBookStorage, userPrefsStorage);","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"        Optional\u003cReadOnlyStudentBook\u003e addressBookOptional;","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"        ReadOnlyStudentBook initialData;","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"            addressBookOptional \u003d storage.readStudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleStudentBook);","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"            initialData \u003d new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"            initialData \u003d new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":25,"yienyoong":1,"SiTingST":7,"-":150}},{"path":"src/main/java/seedu/student/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.core;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":62}},{"path":"src/main/java/seedu/student/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.core;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":78}},{"path":"src/main/java/seedu/student/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.core;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":111}},{"path":"src/main/java/seedu/student/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.core;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_NONEXISTENT_MATRIC_NUM \u003d \"The matriculation number provided does not exist!\";","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    public static final String MESSAGE_STUDENTS_ARE_LISTED \u003d \"Students are listed\";","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    public static final String MESSAGE_NO_STUDENTS_ARE_LISTED \u003d \"No students are listed\";","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    public static final String MESSAGE_APPOINTMENT_IS_LISTED \u003d \" along with an appointment!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    public static final String MESSAGE_ALL_STUDENTS_AND_APPOINTMENT_ARE_LISTED \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"            \" All students and appointments are listed!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    public static final String MESSAGE_NONEXISTENT_APPOINTMENT \u003d \"No appointment is found!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_OUT_OF_INDEX \u003d \"The index requested does not exist!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":2,"yienyoong":1,"SiTingST":6,"-":9}},{"path":"src/main/java/seedu/student/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.core;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":115}},{"path":"src/main/java/seedu/student/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.core.index;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"fairyinabottle4":1,"-":53}},{"path":"src/main/java/seedu/student/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":10}},{"path":"src/main/java/seedu/student/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":1,"-":20}},{"path":"src/main/java/seedu/student/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.MainApp;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fairyinabottle4":2,"-":40}},{"path":"src/main/java/seedu/student/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":1,"-":34}},{"path":"src/main/java/seedu/student/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Config;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fairyinabottle4":3,"-":20}},{"path":"src/main/java/seedu/student/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":82}},{"path":"src/main/java/seedu/student/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":3,"-":140}},{"path":"src/main/java/seedu/student/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":2,"-":66}},{"path":"src/main/java/seedu/student/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     * @see Model#getStudentBook()","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    ReadOnlyStudentBook getStudentBook();","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    ObservableList\u003cSameDateAppointmentList\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fairyinabottle4":12,"picasdan9":2,"-":40}},{"path":"src/main/java/seedu/student/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.Command;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.StudentBookParser;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.Storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    private final StudentBookParser studentBookParser;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        studentBookParser \u003d new StudentBookParser();","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        Command command \u003d studentBookParser.parseCommand(commandText);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"            storage.saveStudentBook(model.getStudentBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"    public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"        return model.getStudentBook();","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"    public ObservableList\u003cSameDateAppointmentList\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"        return model.getStudentBookFilePath();","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fairyinabottle4":22,"picasdan9":5,"-":60}},{"path":"src/main/java/seedu/student/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":" * Adds a person to the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    public static final String COMMAND_WORD \u003d \"addAppt\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to Vax@NUS. \"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"            + PREFIX_MATRICULATION_NUMBER + \"MATRICULATION NUMBER \"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"            + PREFIX_START_TIME + \"START TIME \\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"            + PREFIX_MATRICULATION_NUMBER + \"A1234567X \"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"            + PREFIX_DATE + \"2021-03-14 \"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"            + PREFIX_START_TIME + \"10:00 \\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"The appointment already exists in the records\";","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    public static final String MESSAGE_OVERLAPPING_APPOINTMENT \u003d \"The appointment overlaps with existing records\";","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_STUDENT_DOES_NOT_EXIST \u003d \"The student does not exist in the records.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    private final Appointment toAdd;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    public AddAppointmentCommand(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"        toAdd \u003d appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"        MatriculationNumber apptMatricNum \u003d toAdd.getMatriculationNumber();","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"        boolean studentExists \u003d model.isExistingMatricNumber(apptMatricNum);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"        if (model.hasAppointment(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"        } else if (model.hasOverlappingAppointment(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"            throw new CommandException(MESSAGE_OVERLAPPING_APPOINTMENT);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"        } else if (!studentExists) {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"            throw new CommandException(MESSAGE_STUDENT_DOES_NOT_EXIST);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"                || (other instanceof AddAppointmentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"                \u0026\u0026 toAdd.equals(((AddAppointmentCommand) other).toAdd));","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":5,"yienyoong":10,"picasdan9":55}},{"path":"src/main/java/seedu/student/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MEDICAL_DETAILS;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_SCHOOL_RESIDENCE;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_VACCINATION_STATUS;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_MATRICULATION_NUMBER + \"MATRICULATION NUMBER \"","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_FACULTY + \"FACULTY \"","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_VACCINATION_STATUS + \"VACCINATION STATUS \"","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_MEDICAL_DETAILS + \"MEDICAL DETAILS \"","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_SCHOOL_RESIDENCE + \"SCHOOL RESIDENCE \\n\"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_MATRICULATION_NUMBER + \"A01234567X \"","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_FACULTY + \"SCI \"","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_VACCINATION_STATUS + \"Vaccinated \"","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_MEDICAL_DETAILS + \"peanut allergy \"","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"            + PREFIX_SCHOOL_RESIDENCE + \"PGPH \\n\";","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the records\";","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"    private final Student toAdd;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"        toAdd \u003d student;","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":32,"-":45}},{"path":"src/main/java/seedu/student/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"        model.setStudentBook(new StudentBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":4,"-":19}},{"path":"src/main/java/seedu/student/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":3,"-":17}},{"path":"src/main/java/seedu/student/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":1,"-":70}},{"path":"src/main/java/seedu/student/logic/commands/DeleteApptCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":" * Deletes a student\u0027s appointment identified using the student\u0027s unique matriculation number.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"public class DeleteApptCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"    public static final String COMMAND_WORD \u003d \"deleteAppt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"            + \": Deletes the appointment of the student identified by their unique matriculation number\"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"            + \" assigned by NUS.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"            + \"Parameters: Matriculation Number \\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"            + \"Example: \" + COMMAND_WORD + \" A1234567X\";","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_DELETE_APPT_SUCCESS \u003d \"Deleted Appointment: Name; %s, %s\"; // appointment","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_NONEXISTENT_APPT \u003d \"No appointment for that matriculation number exists!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"    private final MatriculationNumber matriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"     * Creates a DeleteApptCommand object responsible for deleting the appointment of the student with the","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"     * specified matriculation number.","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"     * @param matriculationNumber Matriculation number of the student who\u0027s appointment you want to delete.","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"    public DeleteApptCommand(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"        this.matriculationNumber \u003d matriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"        Appointment appointmentToDelete \u003d model.getAppointment(matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"        Student student \u003d model.getStudent(matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"        if (appointmentToDelete \u003d\u003d null || student \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_APPT);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPT_SUCCESS, student.getName(), appointmentToDelete));","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"                || (other instanceof DeleteApptCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"                \u0026\u0026 matriculationNumber.equals(((DeleteApptCommand) other).matriculationNumber)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yienyoong":57}},{"path":"src/main/java/seedu/student/logic/commands/DeleteStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":" * Deletes a student identified using their unique matriculation number.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"public class DeleteStudentCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"    public static final String COMMAND_WORD \u003d \"deleteStud\";","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"            + \": Deletes the student identified by their unique matriculation number assigned by NUS.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"            + \"Parameters: Matriculation Number \\n\"","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"            + \"Example: \" + COMMAND_WORD + \" A1234567X\";","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\"; // add name + matric number","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"    private final MatriculationNumber matriculationNumber;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"     * Creates a DeleteStudentCommand object responsible for deleting a student by matriculation number.","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"     * @param matriculationNumber Matriculation number of the student you want to delete.","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"    public DeleteStudentCommand(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"        this.matriculationNumber \u003d matriculationNumber;","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"        Student studentToDelete \u003d model.getStudent(matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"        if (studentToDelete \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"            throw new CommandException(Messages.MESSAGE_NONEXISTENT_MATRIC_NUM);","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete));","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"                || (other instanceof DeleteStudentCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"                \u0026\u0026 matriculationNumber.equals(((DeleteStudentCommand) other).matriculationNumber)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":10,"yienyoong":21,"-":25}},{"path":"src/main/java/seedu/student/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MEDICAL_DETAILS;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_SCHOOL_RESIDENCE;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_VACCINATION_STATUS;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":" * Edits the details of an existing student in the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"            + \"[\" + PREFIX_MATRICULATION_NUMBER + \"MATRICULATION NUMBER]\"","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"            + \"[\" + PREFIX_FACULTY + \"FACULTY] \"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"            + \"[\" + PREFIX_VACCINATION_STATUS + \"VACCINATION STATUS] \"","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"            + \"[\" + PREFIX_MEDICAL_DETAILS + \"MEDICAL DETAILS] \"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"            + \"[\" + PREFIX_SCHOOL_RESIDENCE + \"SCHOOL RESIDENCE] \\n\"","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the records.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"            throw new CommandException(Messages.MESSAGE_OUT_OF_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"        MatriculationNumber updatedMatriculationNumber \u003d editStudentDescriptor.getMatriculationNumber()","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"                .orElse(studentToEdit.getMatriculationNumber());","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"        Faculty updatedFaculty \u003d editStudentDescriptor.getFaculty().orElse(studentToEdit.getFaculty());","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"        Phone updatedPhone \u003d editStudentDescriptor.getPhone().orElse(studentToEdit.getPhone());","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"        Address updatedAddress \u003d editStudentDescriptor.getAddress().orElse(studentToEdit.getAddress());","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"        VaccinationStatus updatedVaccinationStatus \u003d editStudentDescriptor.getVaccinationStatus()","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"                .orElse(studentToEdit.getVaccinationStatus());","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"        MedicalDetails updatedMedicalDetails \u003d editStudentDescriptor.getMedicalDetails()","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"                .orElse(studentToEdit.getMedicalDetails());","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"        SchoolResidence updatedSchoolResidence \u003d editStudentDescriptor.getSchoolResidence()","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"                .orElse(studentToEdit.getSchoolResidence());","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"        return new Student(updatedName, updatedMatriculationNumber, updatedFaculty, updatedPhone, updatedEmail,","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"                updatedAddress, updatedVaccinationStatus, updatedMedicalDetails, updatedSchoolResidence);","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"        private MatriculationNumber matriculationNumber;","lastModifiedDate":"2021-02-28"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":"        private Faculty faculty;","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"fairyinabottle4"},"content":"        private VaccinationStatus vaccinationStatus;","lastModifiedDate":"2021-02-28"},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":"        private MedicalDetails medicalDetails;","lastModifiedDate":"2021-03-02"},{"lineNumber":154,"author":{"gitId":"fairyinabottle4"},"content":"        private SchoolResidence schoolResidence;","lastModifiedDate":"2021-03-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"fairyinabottle4"},"content":"            setMatriculationNumber(toCopy.matriculationNumber);","lastModifiedDate":"2021-02-28"},{"lineNumber":165,"author":{"gitId":"fairyinabottle4"},"content":"            setFaculty(toCopy.faculty);","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"fairyinabottle4"},"content":"            setMedicalDetails(toCopy.medicalDetails);","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"fairyinabottle4"},"content":"            setVaccinationStatus(toCopy.vaccinationStatus);","lastModifiedDate":"2021-02-28"},{"lineNumber":171,"author":{"gitId":"fairyinabottle4"},"content":"            setSchoolResidence(toCopy.schoolResidence);","lastModifiedDate":"2021-03-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"fairyinabottle4"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, matriculationNumber, vaccinationStatus,","lastModifiedDate":"2021-03-09"},{"lineNumber":179,"author":{"gitId":"fairyinabottle4"},"content":"                    medicalDetails, schoolResidence, faculty);","lastModifiedDate":"2021-03-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"fairyinabottle4"},"content":"        public void setMatriculationNumber(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-02-28"},{"lineNumber":191,"author":{"gitId":"fairyinabottle4"},"content":"            this.matriculationNumber \u003d matriculationNumber;","lastModifiedDate":"2021-02-28"},{"lineNumber":192,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":193,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":194,"author":{"gitId":"fairyinabottle4"},"content":"        public Optional\u003cMatriculationNumber\u003e getMatriculationNumber() {","lastModifiedDate":"2021-02-28"},{"lineNumber":195,"author":{"gitId":"fairyinabottle4"},"content":"            return Optional.ofNullable(matriculationNumber);","lastModifiedDate":"2021-02-28"},{"lineNumber":196,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":197,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":198,"author":{"gitId":"fairyinabottle4"},"content":"        public void setFaculty(Faculty faculty) {","lastModifiedDate":"2021-03-09"},{"lineNumber":199,"author":{"gitId":"fairyinabottle4"},"content":"            this.faculty \u003d faculty;","lastModifiedDate":"2021-03-09"},{"lineNumber":200,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":201,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":202,"author":{"gitId":"fairyinabottle4"},"content":"        public Optional\u003cFaculty\u003e getFaculty() {","lastModifiedDate":"2021-03-09"},{"lineNumber":203,"author":{"gitId":"fairyinabottle4"},"content":"            return Optional.ofNullable(faculty);","lastModifiedDate":"2021-03-09"},{"lineNumber":204,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":205,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":206,"author":{"gitId":"fairyinabottle4"},"content":"        public void setVaccinationStatus(VaccinationStatus vaccinationStatus) {","lastModifiedDate":"2021-02-28"},{"lineNumber":207,"author":{"gitId":"fairyinabottle4"},"content":"            this.vaccinationStatus \u003d vaccinationStatus;","lastModifiedDate":"2021-02-28"},{"lineNumber":208,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":209,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":210,"author":{"gitId":"fairyinabottle4"},"content":"        public Optional\u003cVaccinationStatus\u003e getVaccinationStatus() {","lastModifiedDate":"2021-02-28"},{"lineNumber":211,"author":{"gitId":"fairyinabottle4"},"content":"            return Optional.ofNullable(vaccinationStatus);","lastModifiedDate":"2021-02-28"},{"lineNumber":212,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":213,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"fairyinabottle4"},"content":"        public void setMedicalDetails(MedicalDetails medicalDetails) {","lastModifiedDate":"2021-03-02"},{"lineNumber":239,"author":{"gitId":"fairyinabottle4"},"content":"            this.medicalDetails \u003d medicalDetails;","lastModifiedDate":"2021-03-02"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"fairyinabottle4"},"content":"        public Optional\u003cMedicalDetails\u003e getMedicalDetails() {","lastModifiedDate":"2021-03-02"},{"lineNumber":243,"author":{"gitId":"fairyinabottle4"},"content":"            return Optional.ofNullable(medicalDetails);","lastModifiedDate":"2021-03-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"fairyinabottle4"},"content":"        public void setSchoolResidence(SchoolResidence schoolResidence) {","lastModifiedDate":"2021-03-03"},{"lineNumber":247,"author":{"gitId":"fairyinabottle4"},"content":"            this.schoolResidence \u003d schoolResidence;","lastModifiedDate":"2021-03-03"},{"lineNumber":248,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":249,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":250,"author":{"gitId":"fairyinabottle4"},"content":"        public Optional\u003cSchoolResidence\u003e getSchoolResidence() {","lastModifiedDate":"2021-03-03"},{"lineNumber":251,"author":{"gitId":"fairyinabottle4"},"content":"            return Optional.ofNullable(schoolResidence);","lastModifiedDate":"2021-03-03"},{"lineNumber":252,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":253,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"fairyinabottle4"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"fairyinabottle4"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":272,"author":{"gitId":"fairyinabottle4"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress());","lastModifiedDate":"2021-03-02"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"fairyinabottle4":129,"-":146}},{"path":"src/main/java/seedu/student/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Vax@NUS as requested ...\";","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"fairyinabottle4":3,"-":16}},{"path":"src/main/java/seedu/student/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":" * Finds and lists all students in student book whose student entries field matches the argument keyword.","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":" * Keyword matching is case sensitive.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Display student records with \"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"            + \"fields that matches the specified keyword (case-sensitive).\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"            + \"Parameters: KEYWORD...\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"            + \"Example: \" + COMMAND_WORD + \" vaccinated\";","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    private final Predicate\u003cStudent\u003e predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    public FilterCommand(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        if (model.getFilteredStudentList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"                    String.format(Messages.MESSAGE_NO_STUDENTS_ARE_LISTED, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"                    String.format(Messages.MESSAGE_STUDENTS_ARE_LISTED, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":7,"SiTingST":42}},{"path":"src/main/java/seedu/student/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.appointment.AppointmentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.student.StudentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":" * Finds and lists all persons in student book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":" * Keyword matching is case sensitive.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds student and appointment whose \"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"            + \"matriculation number matches the specified keywords (case-sensitive) and displays it.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"            + \"Parameters: KEYWORD \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"            + \"Example: \" + COMMAND_WORD + \" A01234567R\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    private final StudentContainsMatriculationNumberPredicate predicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    private final AppointmentContainsMatriculationNumberPredicate appointmentPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     *  Creates a FindCommand object responsible for deleting a student by matriculation number.","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * @param studentPredicate","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     * @param appointmentPredicate","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    public FindCommand(StudentContainsMatriculationNumberPredicate studentPredicate ,","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"                       AppointmentContainsMatriculationNumberPredicate appointmentPredicate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        this.predicate \u003d studentPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        this.appointmentPredicate \u003d appointmentPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        model.updateFilteredAppointmentList(appointmentPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        int filteredStudentListSize \u003d model.getFilteredStudentList().size();","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"        int filteredAppointmentListSize \u003d model.getFilteredStudentList().size();","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"        assert (filteredStudentListSize \u003e\u003d 0 \u0026\u0026 filteredAppointmentListSize \u003e\u003d 0);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        if (filteredStudentListSize \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_NONEXISTENT_MATRIC_NUM,","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"                    model.getFilteredStudentList().size()));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"        } else if (filteredAppointmentListSize \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_NONEXISTENT_APPOINTMENT,","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"                    model.getFilteredStudentList().size()));","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_STUDENTS_ARE_LISTED","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"                            + Messages.MESSAGE_APPOINTMENT_IS_LISTED, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"fairyinabottle4":4,"SiTingST":36,"-":26}},{"path":"src/main/java/seedu/student/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":2,"-":19}},{"path":"src/main/java/seedu/student/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":4,"-":20}},{"path":"src/main/java/seedu/student/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"fairyinabottle4":1,"-":16}},{"path":"src/main/java/seedu/student/logic/commands/statscommands/StatsApptCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.Command;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":" * Calculates the number of upcoming and previous appointments within 6 days from the current day and","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":" * including the day itself.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"public class StatsApptCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"    public static final String COMMAND_WORD \u003d \"statsAppt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_STATS_SUCCESS \u003d \"Number of upcoming appointments in the next week: %d\" + \"\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"            + \"Number of appointments in the past week: %d\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"        List\u003cAppointment\u003e listAppointments \u003d model.getAppointmentList();","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"        LocalDate currDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"        LocalDate pastWeek \u003d currDate.minusWeeks(1);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"        LocalDate nextWeek \u003d currDate.plusWeeks(1);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"        LocalTime currTime \u003d LocalTime.now();","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"        int numPastWeek \u003d 0;","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"        int numNextWeek \u003d 0;","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"        for (Appointment appt : listAppointments) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"            LocalDate apptDate \u003d appt.getDate();","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"            if (apptDate.isAfter(pastWeek) \u0026\u0026 apptDate.isBefore(currDate)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"                numPastWeek++;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"            if (apptDate.isAfter(currDate) \u0026\u0026 apptDate.isBefore(nextWeek)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"                numNextWeek++;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"            if (apptDate.equals(currDate)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"                LocalTime apptEndTime \u003d appt.getEndTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"                LocalTime apptStartTime \u003d appt.getStartTime();","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"                if (apptEndTime.isBefore(currTime)) { // Appt is today and has ended","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"                    numPastWeek++;","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"                }","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"                if (apptStartTime.isAfter(currTime)) { // Appt is today but has not started","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"                    numNextWeek++;","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"                }","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"        return new CommandResult(String.format(MESSAGE_STATS_SUCCESS, numNextWeek, numPastWeek));","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"                || (other instanceof StatsApptCommand); // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yienyoong":69}},{"path":"src/main/java/seedu/student/logic/commands/statscommands/StatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.Command;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"public abstract class StatsCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"    public static final String COMMAND_WORD \u003d \"stats\";","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_STATS_SUCCESS \u003d \"Percentage %s vaccinated: %.2f%%\";","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_STATS_FAILURE \u003d \"No available data on given faculty/residence.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"    private static String stringResidences \u003d SchoolResidence.getStringResidences();","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"    private static String stringFaculties \u003d Faculty.getStringFaculties();","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"            + \": Lists statistics of category given. Please enter only one parameter. \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"            + \"Parameters: \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"            + stringResidences + \"\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"            + stringFaculties + \"\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"            + \"Example: \" + COMMAND_WORD + \" COM\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":7,"yienyoong":22}},{"path":"src/main/java/seedu/student/logic/commands/statscommands/StatsCommandAll.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":" * Calculates percentages of students vaccinated from each faculty and residence.","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandAll extends StatsCommand {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_STATS_SUCCESS \u003d \"%s: %.2f%%\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"    private static final String PADDING \u003d \"   \";","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"    private List\u003cString\u003e listResidences \u003d SchoolResidence.getResidenceAbbreviation();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"    private List\u003cString\u003e listFaculties \u003d Faculty.getFacultyAbbreviation();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"    private StringBuilder sb \u003d new StringBuilder(\"Percentage Vaccinated:\" + \"\\n\");","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"        List\u003cStudent\u003e studentList \u003d model.getStudentList();","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"        for (String residence : listResidences) {","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"            SchoolResidence currResidence \u003d new SchoolResidence(residence);","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"            try {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"                float stats \u003d StatsCommandResidence.calculateRatioVaccinated(studentList, currResidence);","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"                if (Float.isNaN(stats)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"                    sb.append(PADDING + currResidence + \": No available data\" + \"\\n\");","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"                    continue;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"                }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"                sb.append(PADDING + String.format(MESSAGE_STATS_SUCCESS, currResidence.toString(), stats * 100) + \"\\n\");","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"                throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"        for (String fac : listFaculties) {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"            Faculty currFaculty \u003d new Faculty(fac);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"            try {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"                float stats \u003d StatsCommandFaculty.calculateRatioVaccinated(studentList, currFaculty);","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"                if (Float.isNaN(stats)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"                    sb.append(PADDING + currFaculty + \": No available data\" + \"\\n\");","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"                    continue;","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"                }","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"                sb.append(PADDING + String.format(MESSAGE_STATS_SUCCESS, currFaculty, stats * 100) + \"\\n\");","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"                throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"        return new CommandResult(sb.toString());","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"                || (other instanceof StatsCommandAll); // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"fairyinabottle4":7,"yienyoong":59}},{"path":"src/main/java/seedu/student/logic/commands/statscommands/StatsCommandFaculty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":" * Calculates percentages of students vaccinated from each faculty.","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandFaculty extends StatsCommand {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"    private Faculty faculty;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"     * Creates a StatsCommandFaculty object responsible for calculating the percentage of the specified faculty","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"     * that is vaccinated.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"     * @param faculty Faculty you want to view percentage vaccinated.","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"    public StatsCommandFaculty(Faculty faculty) {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"        List\u003cStudent\u003e studentList \u003d model.getStudentList();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"            float stats \u003d calculateRatioVaccinated(studentList, faculty);","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"            if (Float.isNaN(stats) || stats \u003e 1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"                throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"            return new CommandResult(String.format(MESSAGE_STATS_SUCCESS, faculty, stats * 100));","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"            throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"     * @param studentList List of all students in Vax@NUS system.","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"     * @param faculty Faculty to calculate ratio vaccinated.","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"     * @return A float representing the ratio of number vaccinated to total students in the faculty.","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"     * @throws CommandException if the data is corrupted.","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"    public static float calculateRatioVaccinated(List\u003cStudent\u003e studentList, Faculty faculty) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"        int totalStudents \u003d 0;","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"            for (Student p : studentList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"                if (p.getFaculty().equals(faculty)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"                    totalStudents++;","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"                    if (p.isVaccinated()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"                        counter++;","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"                    }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"                }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"            float stats \u003d (float) counter / totalStudents;","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"            return stats;","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"            throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"yienyoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"yienyoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"yienyoong"},"content":"                || (other instanceof StatsCommandFaculty) // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"yienyoong"},"content":"                \u0026\u0026 faculty.equals(((StatsCommandFaculty) other).faculty); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"fairyinabottle4":8,"yienyoong":70}},{"path":"src/main/java/seedu/student/logic/commands/statscommands/StatsCommandNus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":" * Calculates percentage of students vaccinated in NUS.","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandNus extends StatsCommand {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_STATS_SUCCESS \u003d \"Percentage NUS vaccinated: %.2f%%\";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"    public static final String MESSAGE_STATS_FAILURE \u003d \"No available data in Vax@NUS\";","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"    public CommandResult execute(Model model) throws CommandException { // NUS","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"        List\u003cStudent\u003e studentList \u003d model.getStudentList();","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"        int totalStudents \u003d studentList.size();","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"            for (Student p : studentList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"                if (p.isVaccinated()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"                    counter++;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"                }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"            float stats \u003d (float) counter / totalStudents;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"            if (Float.isNaN(stats) || stats \u003e 1) {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"                throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"            return new CommandResult(String.format(MESSAGE_STATS_SUCCESS, stats * 100));","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"            throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"                || (other instanceof StatsCommandNus); // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":6,"yienyoong":41}},{"path":"src/main/java/seedu/student/logic/commands/statscommands/StatsCommandResidence.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":" * Calculates percentages of students vaccinated from each residence.","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandResidence extends StatsCommand {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"    private SchoolResidence residence;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"     * Creates a StatsCommandResidence object responsible for calculating the percentage of the specified residence","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"     * that is vaccinated.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"     * @param residence Residence you want to view percentage vaccinated.","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"    public StatsCommandResidence(SchoolResidence residence) {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"        this.residence \u003d residence;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"        List\u003cStudent\u003e studentList \u003d model.getStudentList();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"            float stats \u003d calculateRatioVaccinated(studentList, residence);","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"            if (Float.isNaN(stats) || stats \u003e 1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"                throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"            return new CommandResult(String.format(MESSAGE_STATS_SUCCESS, residence.toString(), stats * 100));","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"            throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"     * @param studentList List of all students in Vax@NUS system.","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"     * @param residence School residence to calculate ratio vaccinated.","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"     * @return A float representing the ratio of number vaccinated to total students in the residence.","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"     * @throws CommandException if the data is corrupted.","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"    public static float calculateRatioVaccinated(List\u003cStudent\u003e studentList, SchoolResidence residence)","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"        int totalStudents \u003d 0;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"            for (Student p : studentList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"                if (p.getSchoolResidence().equals(residence)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"                    totalStudents++;","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"                    if (p.isVaccinated()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"                        counter++;","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"                    }","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"                }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"            float stats \u003d (float) counter / totalStudents;","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"            return stats;","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"            throw new CommandException(MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"yienyoong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"yienyoong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"yienyoong"},"content":"                || (other instanceof StatsCommandResidence) // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"yienyoong"},"content":"                \u0026\u0026 residence.equals(((StatsCommandResidence) other).residence); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"fairyinabottle4":8,"yienyoong":69}},{"path":"src/main/java/seedu/student/logic/parser/AddAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"public class AddAppointmentCommandParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"        assert args.length() \u003e\u003d 3;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MATRICULATION_NUMBER, PREFIX_DATE, PREFIX_START_TIME);","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MATRICULATION_NUMBER, PREFIX_DATE, PREFIX_START_TIME)","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"        MatriculationNumber matriculationNumber \u003d ParserUtil.parseMatric(argMultimap","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"                .getValue(PREFIX_MATRICULATION_NUMBER).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"        LocalTime startTime \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_START_TIME).get());","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"        Appointment appointment \u003d new Appointment(matriculationNumber, date, startTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"        return new AddAppointmentCommand(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":9,"picasdan9":47}},{"path":"src/main/java/seedu/student/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MEDICAL_DETAILS;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_SCHOOL_RESIDENCE;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_VACCINATION_STATUS;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.AddCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        assert args.length() \u003e\u003d 8 : \"there must be at least 8 arguments\";","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MATRICULATION_NUMBER, PREFIX_FACULTY,","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_VACCINATION_STATUS, PREFIX_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"                        PREFIX_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_MATRICULATION_NUMBER, PREFIX_FACULTY, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"                PREFIX_PHONE, PREFIX_VACCINATION_STATUS, PREFIX_EMAIL, PREFIX_MEDICAL_DETAILS)","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        MatriculationNumber matriculationNumber \u003d ParserUtil.parseMatric(argMultimap","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"                .getValue(PREFIX_MATRICULATION_NUMBER).get());","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        Faculty faculty \u003d ParserUtil.parseFaculty(argMultimap.getValue(PREFIX_FACULTY).get());","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"        VaccinationStatus vaccinationStatus \u003d ParserUtil.parseVacStatus(argMultimap","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"                .getValue(PREFIX_VACCINATION_STATUS).get());","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        MedicalDetails medicalDetails \u003d ParserUtil.parseMedicalDetails(argMultimap.getValue(PREFIX_MEDICAL_DETAILS)","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"                .get());","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"        SchoolResidence schoolResidence \u003d ParserUtil.parseSchoolRes(argMultimap.getValue(PREFIX_SCHOOL_RESIDENCE));","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"        Student student \u003d new Student(name, matriculationNumber, faculty, phone, email, address, vaccinationStatus,","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"                medicalDetails, schoolResidence);","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"        return new AddCommand(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"fairyinabottle4":42,"-":39}},{"path":"src/main/java/seedu/student/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":59}},{"path":"src/main/java/seedu/student/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"fairyinabottle4":1,"-":147}},{"path":"src/main/java/seedu/student/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Prefix PREFIX_MATRICULATION_NUMBER \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Prefix PREFIX_FACULTY \u003d new Prefix(\"f/\");","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Prefix PREFIX_VACCINATION_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Prefix PREFIX_MEDICAL_DETAILS \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Prefix PREFIX_SCHOOL_RESIDENCE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"ts/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"te/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"fairyinabottle4":6,"picasdan9":4,"-":12}},{"path":"src/main/java/seedu/student/logic/parser/DeleteApptCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.DeleteApptCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":" * Parses input arguments and creates a new DeleteApptCommand object","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"public class DeleteApptCommandParser implements Parser\u003cDeleteApptCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteApptCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"     * and returns a DeleteApptCommand object for execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"    public DeleteApptCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"        assert args !\u003d \"\";","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"        assert args !\u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"            MatriculationNumber matriculationNumber \u003d ParserUtil.parseMatric(args);","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"            return new DeleteApptCommand(matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteApptCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yienyoong":31}},{"path":"src/main/java/seedu/student/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":" * Parses input arguments and creates a new DeleteStudentCommand object","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteStudentCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteStudentCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"     * and returns a DeleteStudentCommand object for execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"    public DeleteStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"        assert args !\u003d \"\";","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"        assert args !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"            MatriculationNumber matriculationNumber \u003d ParserUtil.parseMatric(args);","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"            return new DeleteStudentCommand(matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"fairyinabottle4":4,"yienyoong":12,"-":15}},{"path":"src/main/java/seedu/student/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MEDICAL_DETAILS;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_SCHOOL_RESIDENCE;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_VACCINATION_STATUS;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_MATRICULATION_NUMBER, PREFIX_FACULTY, PREFIX_PHONE,","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_VACCINATION_STATUS, PREFIX_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"                        PREFIX_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"        if (argMultimap.getValue(PREFIX_MATRICULATION_NUMBER).isPresent()) {","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"            editStudentDescriptor.setMatriculationNumber(ParserUtil.parseMatric(argMultimap","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"                    .getValue(PREFIX_MATRICULATION_NUMBER).get()));","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"        if (argMultimap.getValue(PREFIX_FACULTY).isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"            editStudentDescriptor.setFaculty(ParserUtil.parseFaculty(argMultimap.getValue(PREFIX_FACULTY).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"            editStudentDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"            editStudentDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"        if (argMultimap.getValue(PREFIX_VACCINATION_STATUS).isPresent()) {","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"            editStudentDescriptor.setVaccinationStatus(ParserUtil.parseVacStatus(argMultimap","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"                    .getValue(PREFIX_VACCINATION_STATUS).get()));","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"        if (argMultimap.getValue(PREFIX_MEDICAL_DETAILS).isPresent()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"            editStudentDescriptor.setMedicalDetails(ParserUtil.parseMedicalDetails(argMultimap","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"                    .getValue(PREFIX_MEDICAL_DETAILS).get()));","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        if (argMultimap.getValue(PREFIX_SCHOOL_RESIDENCE).isPresent()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"            editStudentDescriptor.setSchoolResidence(ParserUtil.parseSchoolRes(argMultimap","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"                    .getValue(PREFIX_SCHOOL_RESIDENCE)));","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"fairyinabottle4":45,"-":40}},{"path":"src/main/java/seedu/student/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.FacultyContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidenceContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatusContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    private static final List\u003cString\u003e VACCINATED_STATUS \u003d VaccinationStatus.getVaccinationStatusAbbreviation();","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    private static final List\u003cString\u003e FACULTY \u003d Faculty.getFacultyAbbreviation();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    private static final List\u003cString\u003e SCHOOL_RESIDENCE \u003d SchoolResidence.getResidenceAbbreviation();","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    private static final String UNVACCINATED_STATUS \u003d \"NOT_VACCINATED\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        String condition \u003d args.trim();","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        if (condition.equals(\"unvaccinated\")) {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"            condition \u003d UNVACCINATED_STATUS;","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        if (VACCINATED_STATUS.contains((condition.toUpperCase()))) {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"            return new FilterCommand(new VaccinationStatusContainsKeywords(condition));","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        } else if (FACULTY.contains(condition)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"            return new FilterCommand(new FacultyContainsKeywords(condition));","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        } else if (SCHOOL_RESIDENCE.contains(condition)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"            return new FilterCommand(new SchoolResidenceContainsKeywords(condition));","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":10,"SiTingST":40}},{"path":"src/main/java/seedu/student/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.LogicManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.appointment.AppointmentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.student.StudentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        logger.info(\"----------------[MATRIC NUMBER TO BE SEARCHED:][\" + args.trim() + \"]\");","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        ParserUtil parserUtil \u003d new ParserUtil();","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        MatriculationNumber matriculationNumber \u003d parserUtil.parseMatric(args.trim());","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        assert matriculationNumber.toString().equals(matriculationNumber.toString().toUpperCase());","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        return new FindCommand(new StudentContainsMatriculationNumberPredicate(matriculationNumber),","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"                new AppointmentContainsMatriculationNumberPredicate(matriculationNumber));","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"fairyinabottle4":6,"SiTingST":15,"-":15}},{"path":"src/main/java/seedu/student/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.Command;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"fairyinabottle4":3,"-":13}},{"path":"src/main/java/seedu/student/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.StringUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"     * Parses a {@code String matriculationNumber} into a {@code MatriculationNumber}.","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-02-28"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws ParseException if the given {@code matriculationNumber} is invalid.","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"    public static MatriculationNumber parseMatric(String matriculationNumber) throws ParseException {","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(matriculationNumber);","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"        String trimmedMatric \u003d matriculationNumber.trim();","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"        if (!MatriculationNumber.isValidMatric(trimmedMatric)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"            throw new ParseException(MatriculationNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"        return new MatriculationNumber(trimmedMatric);","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"     * Parses a {@code String faculty} into a {@code faculty}.","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws ParseException if the given {@code faculty} is invalid.","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"    public static Faculty parseFaculty(String faculty) throws ParseException {","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(faculty);","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"        String trimmedFaculty \u003d faculty.trim();","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"        if (!Faculty.isValidFaculty(trimmedFaculty)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"            throw new ParseException(Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"        return new Faculty(trimmedFaculty);","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"yienyoong"},"content":"     * Parses a {@code String residence} into a {@code SchoolResidence}.","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"yienyoong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"yienyoong"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"yienyoong"},"content":"     * @throws ParseException if the given {@code residence} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"yienyoong"},"content":"    public static SchoolResidence parseResidence(String residence) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"yienyoong"},"content":"        requireNonNull(residence);","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"yienyoong"},"content":"        String trimmedResidence \u003d residence.trim();","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"yienyoong"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"yienyoong"},"content":"            return new SchoolResidence(trimmedResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"yienyoong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"yienyoong"},"content":"            throw new ParseException(SchoolResidence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":137,"author":{"gitId":"fairyinabottle4"},"content":"     * Parses a {@code String vaccinationStatus} into a {@code vaccinationStatus}.","lastModifiedDate":"2021-02-28"},{"lineNumber":138,"author":{"gitId":"fairyinabottle4"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-02-28"},{"lineNumber":139,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-02-28"},{"lineNumber":140,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws ParseException if the given {@code vaccinationStatus} is invalid.","lastModifiedDate":"2021-02-28"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"    public static VaccinationStatus parseVacStatus(String vaccinationStatus) throws ParseException {","lastModifiedDate":"2021-02-28"},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(vaccinationStatus);","lastModifiedDate":"2021-02-28"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":"        String trimmedVacStatus \u003d vaccinationStatus.trim();","lastModifiedDate":"2021-02-28"},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"        if (!VaccinationStatus.isValidStatus(trimmedVacStatus)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"            throw new ParseException(VaccinationStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":"        return new VaccinationStatus(trimmedVacStatus);","lastModifiedDate":"2021-02-28"},{"lineNumber":149,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":151,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"fairyinabottle4"},"content":"     * Parses a {@code String medicalDetails} into a {@code medicalDetails}.","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-02"},{"lineNumber":154,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws ParseException if the given {@code medicalDetails} is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":157,"author":{"gitId":"fairyinabottle4"},"content":"    public static MedicalDetails parseMedicalDetails(String medicalDetails) throws ParseException {","lastModifiedDate":"2021-03-02"},{"lineNumber":158,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(medicalDetails);","lastModifiedDate":"2021-03-02"},{"lineNumber":159,"author":{"gitId":"fairyinabottle4"},"content":"        String trimmedMedDetails \u003d medicalDetails.trim();","lastModifiedDate":"2021-03-02"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"        if (!MedicalDetails.isValidMedicalDetails(trimmedMedDetails)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":161,"author":{"gitId":"fairyinabottle4"},"content":"            throw new ParseException(MedicalDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":163,"author":{"gitId":"fairyinabottle4"},"content":"        return new MedicalDetails(trimmedMedDetails);","lastModifiedDate":"2021-03-02"},{"lineNumber":164,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":165,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":181,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":182,"author":{"gitId":"fairyinabottle4"},"content":"     * Parses a {@code String schoolResidence} into an {@code schoolResidence}.","lastModifiedDate":"2021-03-03"},{"lineNumber":183,"author":{"gitId":"fairyinabottle4"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-03"},{"lineNumber":184,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":185,"author":{"gitId":"fairyinabottle4"},"content":"     * @throws ParseException if the given {@code schoolResidence} is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":186,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":187,"author":{"gitId":"fairyinabottle4"},"content":"    public static SchoolResidence parseSchoolRes(Optional\u003cString\u003e schoolResidence) throws ParseException {","lastModifiedDate":"2021-03-03"},{"lineNumber":188,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(schoolResidence);","lastModifiedDate":"2021-03-03"},{"lineNumber":189,"author":{"gitId":"fairyinabottle4"},"content":"        if (schoolResidence.isEmpty()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":190,"author":{"gitId":"yienyoong"},"content":"            return new SchoolResidence(\"DOES_NOT_LIVE_ON_CAMPUS\");","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"fairyinabottle4"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":192,"author":{"gitId":"fairyinabottle4"},"content":"            String trimmedSchoolRes \u003d schoolResidence.get().trim();","lastModifiedDate":"2021-03-03"},{"lineNumber":193,"author":{"gitId":"fairyinabottle4"},"content":"            if (!SchoolResidence.isValidResidence(trimmedSchoolRes)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":194,"author":{"gitId":"fairyinabottle4"},"content":"                throw new ParseException(SchoolResidence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":195,"author":{"gitId":"fairyinabottle4"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":196,"author":{"gitId":"fairyinabottle4"},"content":"            return new SchoolResidence(trimmedSchoolRes);","lastModifiedDate":"2021-03-03"},{"lineNumber":197,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":198,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":199,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":201,"author":{"gitId":"picasdan9"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2021-03-28"},{"lineNumber":202,"author":{"gitId":"picasdan9"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-28"},{"lineNumber":203,"author":{"gitId":"picasdan9"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":204,"author":{"gitId":"picasdan9"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"picasdan9"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"picasdan9"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"picasdan9"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":210,"author":{"gitId":"picasdan9"},"content":"            return LocalDate.parse(trimmedDate);","lastModifiedDate":"2021-03-28"},{"lineNumber":211,"author":{"gitId":"picasdan9"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":212,"author":{"gitId":"picasdan9"},"content":"            throw new ParseException(Appointment.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"picasdan9"},"content":"     * Parses a {@code String time} into a {@code LocalTime}.","lastModifiedDate":"2021-03-28"},{"lineNumber":218,"author":{"gitId":"picasdan9"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"picasdan9"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"picasdan9"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":222,"author":{"gitId":"picasdan9"},"content":"    public static LocalTime parseTime(String time) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":223,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-03-28"},{"lineNumber":224,"author":{"gitId":"picasdan9"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"picasdan9"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"picasdan9"},"content":"            LocalTime parsedTime \u003d LocalTime.parse(trimmedTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"picasdan9"},"content":"            if (!Appointment.isValidTime(parsedTime)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":228,"author":{"gitId":"picasdan9"},"content":"                throw new Exception();","lastModifiedDate":"2021-03-28"},{"lineNumber":229,"author":{"gitId":"picasdan9"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"picasdan9"},"content":"            return parsedTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":231,"author":{"gitId":"picasdan9"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"picasdan9"},"content":"            throw new ParseException(Appointment.MESSAGE_TIME_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":233,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":234,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"fairyinabottle4":94,"yienyoong":17,"picasdan9":40,"-":84}},{"path":"src/main/java/seedu/student/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"fairyinabottle4":1,"-":38}},{"path":"src/main/java/seedu/student/logic/parser/StatsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommandAll;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommandFaculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommandNus;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommandResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandParser implements Parser\u003cStatsCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"    private List\u003cString\u003e listResidences \u003d SchoolResidence.getResidenceAbbreviation(); // \"DOES_NOT_LIVE_ON_CAMPUS\"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"    private List\u003cString\u003e listFaculties \u003d Faculty.getFacultyAbbreviation();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"    public StatsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"        String trimmedUserInput \u003d userInput.trim();","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"        if (listResidences.contains(trimmedUserInput)) { // user input a residence","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"            SchoolResidence schoolResidence \u003d ParserUtil.parseResidence(trimmedUserInput);","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"            return new StatsCommandResidence(schoolResidence);","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"        if (listFaculties.contains(trimmedUserInput)) { // user input a faculty","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"            Faculty faculty \u003d ParserUtil.parseFaculty(trimmedUserInput);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"            return new StatsCommandFaculty(faculty);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"        if (trimmedUserInput.equals(\"NUS\")) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"            return new StatsCommandNus();","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"        if (trimmedUserInput.equals(\"all\")) {","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"            return new StatsCommandAll();","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"        // invalid input","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"fairyinabottle4":10,"yienyoong":30}},{"path":"src/main/java/seedu/student/logic/parser/StudentBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.AddCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.Command;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.DeleteApptCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.ListCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.statscommands.StatsApptCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"public class StudentBookParser {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"        case DeleteStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"        case DeleteApptCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"            return new DeleteApptCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"yienyoong"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"yienyoong"},"content":"            return new StatsCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"        case StatsApptCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"            return new StatsApptCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"picasdan9"},"content":"            return new AddAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":16,"yienyoong":14,"SiTingST":2,"picasdan9":3,"-":61}},{"path":"src/main/java/seedu/student/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"fairyinabottle4":2,"-":15}},{"path":"src/main/java/seedu/student/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    Predicate\u003cSameDateAppointmentList\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"     * Returns the user prefs\u0027 student book file path.","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"     * Sets the user prefs\u0027 student book file path.","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"    void setStudentBookFilePath(Path studentBookFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"     * Replaces student book data with the data in {@code studentBook}.","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"    void setStudentBook(ReadOnlyStudentBook studentBook);","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"    /** Returns the studentBook */","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"    ReadOnlyStudentBook getStudentBook();","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"    /** Returns a list of students in the studentBook */","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"    /** Returns true if matriculation number exists in the records. */","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"    boolean isExistingMatricNumber(MatriculationNumber matricNum);","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"yienyoong"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the records.","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"     * The student must exist in the records.","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"     * Adds the given student.","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"yienyoong"},"content":"     * {@code student} must not already exist in the records.","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"yienyoong"},"content":"     * {@code target} must exist in the student book.","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"yienyoong"},"content":"     * the records.","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"yienyoong"},"content":"     * @param matriculationNumber Matriculation number of the student you wish to get.","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"yienyoong"},"content":"     * @return The student you want, null if the student does not exist in the system.","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"yienyoong"},"content":"    Student getStudent(MatriculationNumber matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"yienyoong"},"content":"     * @param matriculationNumber Matriculation number of the student who\u0027s appointment you wish to get.","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"yienyoong"},"content":"     * @return The appointment you want, null if the appointment does not exist in the system.","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"yienyoong"},"content":"    Appointment getAppointment(MatriculationNumber matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":"    void updateFilteredAppointmentList(Predicate\u003cSameDateAppointmentList\u003e predicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"picasdan9"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"picasdan9"},"content":"    boolean hasOverlappingAppointment(Appointment appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"picasdan9"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"yienyoong"},"content":"    void deleteAppointment(Appointment appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"picasdan9"},"content":"    ObservableList\u003cSameDateAppointmentList\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"yienyoong"},"content":"    List\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fairyinabottle4":22,"yienyoong":32,"SiTingST":7,"picasdan9":9,"-":58}},{"path":"src/main/java/seedu/student/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    private final StudentBook studentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    private final FilteredList\u003cSameDateAppointmentList\u003e filteredAppointments;","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"     * Initializes a ModelManager with the given studentBook and userPrefs.","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    public ModelManager(ReadOnlyStudentBook studentBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        requireAllNonNull(studentBook, userPrefs);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        logger.fine(\"Initializing with address book: \" + studentBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        this.studentBook \u003d new StudentBook(studentBook);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.studentBook.getStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.studentBook.getAppointmentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        this(new StudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"        return userPrefs.getStudentBookFilePath();","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudentBookFilePath(Path studentBookFilePath) {","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(studentBookFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"        userPrefs.setStudentBookFilePath(studentBookFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d studentBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudentBook(ReadOnlyStudentBook studentBook) {","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        this.studentBook.resetData(studentBook);","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"    public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"        return studentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"yienyoong"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"yienyoong"},"content":"        return studentBook.getStudentList();","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"yienyoong"},"content":"    public boolean isExistingMatricNumber(MatriculationNumber matricNum) {","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"yienyoong"},"content":"        return studentBook.isExistingMatricNumber(matricNum);","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"        return studentBook.hasStudent(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"        studentBook.removeStudent(target);","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"        studentBook.addStudent(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"        studentBook.setStudent(target, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"yienyoong"},"content":"    public Student getStudent(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"yienyoong"},"content":"        requireNonNull(matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"yienyoong"},"content":"        assert studentBook !\u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"yienyoong"},"content":"        assert MatriculationNumber.isValidMatric(matriculationNumber.value);","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"yienyoong"},"content":"        return studentBook.getStudent(matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"yienyoong"},"content":"    public List\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"yienyoong"},"content":"        return studentBook.getFlatAppointmentList();","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"yienyoong"},"content":"    public Appointment getAppointment(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"yienyoong"},"content":"        return studentBook.getAppointment(matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"picasdan9"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"        return studentBook.hasAppointment(appointment);","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"picasdan9"},"content":"    public boolean hasOverlappingAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"        return studentBook.hasOverlappingAppointment(appointment);","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"picasdan9"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"fairyinabottle4"},"content":"        studentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"yienyoong"},"content":"    public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"yienyoong"},"content":"        studentBook.removeAppointment(appointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"fairyinabottle4"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":172,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"fairyinabottle4"},"content":"     * {@code versionedstudentBook}","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"fairyinabottle4"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"fairyinabottle4"},"content":"        return filteredStudents;","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":181,"author":{"gitId":"fairyinabottle4"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":183,"author":{"gitId":"fairyinabottle4"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":186,"author":{"gitId":"picasdan9"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"picasdan9"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"fairyinabottle4"},"content":"     * {@code versionedstudentBook}","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"picasdan9"},"content":"    public ObservableList\u003cSameDateAppointmentList\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"picasdan9"},"content":"        return filteredAppointments;","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"SiTingST"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cSameDateAppointmentList\u003e predicate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"SiTingST"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"SiTingST"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"fairyinabottle4"},"content":"        return studentBook.equals(other.studentBook)","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":219,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":48,"yienyoong":34,"SiTingST":8,"picasdan9":26,"-":106}},{"path":"src/main/java/seedu/student/model/ReadOnlyStudentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"public interface ReadOnlyStudentBook {","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"    boolean isExistingMatricNumber(MatriculationNumber matricNum);","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"    Student getStudent(MatriculationNumber matriculationNumber);","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    ObservableList\u003cSameDateAppointmentList\u003e getAppointmentList();","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"    Appointment getAppointment(MatriculationNumber matricNum);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    List\u003cAppointment\u003e getFlatAppointmentList();","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":5,"yienyoong":8,"SiTingST":1,"picasdan9":7,"-":11}},{"path":"src/main/java/seedu/student/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"fairyinabottle4":2,"SiTingST":1,"-":13}},{"path":"src/main/java/seedu/student/model/StudentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.UniqueStudentList;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"public class StudentBook implements ReadOnlyStudentBook {","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    private final UniqueAppointmentList appointments;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"        appointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    public StudentBook() {}","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates an AddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"    public StudentBook(ReadOnlyStudentBook toBeCopied) {","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"    public void setAppointments(List\u003cSameDateAppointmentList\u003e appointments) {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"    public void resetData(ReadOnlyStudentBook newData) {","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"    //// student-level operations","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"        return students.contains(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"        students.add(p);","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"     * the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"        students.remove(key);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"picasdan9"},"content":"    //// appointment-level operations","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"picasdan9"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"picasdan9"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"picasdan9"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"picasdan9"},"content":"     * Returns true if an appointment with overlapping time with {@code appointment} exists in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"picasdan9"},"content":"    public boolean hasOverlappingAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"picasdan9"},"content":"        return appointments.hasOverlappingAppointment(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"picasdan9"},"content":"     * Adds an appointment to the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"picasdan9"},"content":"     * The appointment must not already exist in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"picasdan9"},"content":"    public void addAppointment(Appointment a) {","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"picasdan9"},"content":"        appointments.add(a);","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"yienyoong"},"content":"    public void removeAppointment(Appointment key) {","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"yienyoong"},"content":"        appointments.remove(key);","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"picasdan9"},"content":"     * Replaces the given appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"picasdan9"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"picasdan9"},"content":"     * The appointment identity of {@code editedAppointment} must not be the same as another existing","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"picasdan9"},"content":"     * appointment in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"picasdan9"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"picasdan9"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"fairyinabottle4"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":165,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"yienyoong"},"content":"    public boolean isExistingMatricNumber(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"yienyoong"},"content":"        return students.asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"yienyoong"},"content":"                .anyMatch(student -\u003e student.getMatriculationNumber().equals(matriculationNumber));","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"yienyoong"},"content":"    public Student getStudent(MatriculationNumber matricNum) {","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"yienyoong"},"content":"        return students.asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"yienyoong"},"content":"                .filter(student -\u003e student.getMatriculationNumber().equals(matricNum))","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"yienyoong"},"content":"                .findAny()","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"yienyoong"},"content":"                .orElse(null);","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"picasdan9"},"content":"    public ObservableList\u003cSameDateAppointmentList\u003e getAppointmentList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"picasdan9"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"yienyoong"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"yienyoong"},"content":"    public Appointment getAppointment(MatriculationNumber matricNum) {","lastModifiedDate":"2021-03-28"},{"lineNumber":186,"author":{"gitId":"yienyoong"},"content":"        return getFlatAppointmentList().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":187,"author":{"gitId":"yienyoong"},"content":"                .filter(appt -\u003e appt.getMatriculationNumber().equals(matricNum))","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"yienyoong"},"content":"                .findAny()","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"yienyoong"},"content":"                .orElse(null);","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"picasdan9"},"content":"    public List\u003cAppointment\u003e getFlatAppointmentList() {","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"picasdan9"},"content":"        return appointments.asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"picasdan9"},"content":"                .flatMap(list -\u003e list.asUnmodifiableObservableList().stream()).collect(Collectors.toList());","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"SiTingST"},"content":"                || (other instanceof StudentBook // instanceof handles nulls","lastModifiedDate":"2021-03-20"},{"lineNumber":202,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 students.equals(((StudentBook) other).students));","lastModifiedDate":"2021-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"fairyinabottle4"},"content":"        return students.hashCode();","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":36,"yienyoong":27,"SiTingST":5,"picasdan9":59,"-":82}},{"path":"src/main/java/seedu/student/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    private Path studentBookFilePath \u003d Paths.get(\"data\" , \"studentbook.json\");","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        setStudentBookFilePath(newUserPrefs.getStudentBookFilePath());","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"        return studentBookFilePath;","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"    public void setStudentBookFilePath(Path studentBookFilePath) {","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"        requireNonNull(studentBookFilePath);","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        this.studentBookFilePath \u003d studentBookFilePath;","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 studentBookFilePath.equals(o.studentBookFilePath);","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"        return Objects.hash(guiSettings, studentBookFilePath);","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"        sb.append(\"\\nLocal data file location : \" + studentBookFilePath);","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":2,"SiTingST":10,"-":75}},{"path":"src/main/java/seedu/student/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"public class Appointment implements Comparable\u003cAppointment\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    public static final String MESSAGE_DATE_CONSTRAINTS \u003d \"Date should be of the form YYYY-MM-DD\";","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"    public static final String MESSAGE_TIME_CONSTRAINTS \u003d \"Time should be of the form HH:00 or HH:30\";","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    // Identity fields","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    private final MatriculationNumber matriculationNumber;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    // Data fields","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    public Appointment(MatriculationNumber matriculationNumber, LocalDate date, LocalTime startTime) {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"        requireAllNonNull(matriculationNumber, date, startTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"        this.matriculationNumber \u003d matriculationNumber;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"        return date;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"        return startTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"        return startTime.plusMinutes(30);","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"    public MatriculationNumber getMatriculationNumber() {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"        return matriculationNumber;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"     * Returns true if both appointments have the matriculation number.","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"        return otherAppointment !\u003d null \u0026\u0026 otherAppointment.matriculationNumber.equals(matriculationNumber);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"     * Returns true if appointments overlap.","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"    public boolean doesTimeOverlap(Appointment otherAppointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"        if (!otherAppointment.date.isEqual(date)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"        return otherAppointment.startTime.isBefore(getEndTime()) \u0026\u0026 otherAppointment.getEndTime().isAfter(startTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"picasdan9"},"content":"     * Returns true if both appointments have the same identity and data fields.","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"picasdan9"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"picasdan9"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"picasdan9"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"picasdan9"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"picasdan9"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"picasdan9"},"content":"        return otherAppointment.date.isEqual(date) \u0026\u0026 otherAppointment.matriculationNumber.equals(matriculationNumber)","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"picasdan9"},"content":"                \u0026\u0026 otherAppointment.startTime.equals(startTime) \u0026\u0026 otherAppointment.getEndTime().equals(getEndTime());","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"picasdan9"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"picasdan9"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"picasdan9"},"content":"        return Objects.hash(matriculationNumber, date, startTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"picasdan9"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"picasdan9"},"content":"        final StringBuilder builder \u003d new StringBuilder(\"Appointment: \");","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"picasdan9"},"content":"        builder.append(getDate().toString())","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"picasdan9"},"content":"                .append(\"; Matriculation Number: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"picasdan9"},"content":"                .append(matriculationNumber)","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"picasdan9"},"content":"                .append(\"; Start Time: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"picasdan9"},"content":"                .append(getStartTime().toString())","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"picasdan9"},"content":"                .append(\"; End Time: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"picasdan9"},"content":"                .append(getEndTime().toString());","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"picasdan9"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"picasdan9"},"content":"    public int compareTo(Appointment o) {","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"picasdan9"},"content":"        int dateDifference \u003d date.compareTo(o.date);","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"picasdan9"},"content":"        if (dateDifference !\u003d 0) {","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"picasdan9"},"content":"            return dateDifference;","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"picasdan9"},"content":"        return startTime.compareTo(o.startTime);","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"picasdan9"},"content":"     * Returns true if {@code time} is at 00 or 30 minutes","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"picasdan9"},"content":"    public static boolean isValidTime(LocalTime time) {","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"picasdan9"},"content":"        int minutes \u003d time.getMinute();","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"picasdan9"},"content":"        return minutes \u003d\u003d 0 || minutes \u003d\u003d 30;","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":3,"picasdan9":130}},{"path":"src/main/java/seedu/student/model/appointment/AppointmentContainsMatriculationNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package seedu.student.model.appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":" * Tests that a {@code Appointment}\u0027s {@code Matriculation Number} matches any of the keywords given.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"public class AppointmentContainsMatriculationNumberPredicate implements Predicate\u003cSameDateAppointmentList\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"    private final MatriculationNumber keyword;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    public AppointmentContainsMatriculationNumberPredicate(MatriculationNumber keyword) {","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public boolean test(SameDateAppointmentList sameDateAppointmentList) {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        List\u003cAppointment\u003e appointmentList \u003d sameDateAppointmentList.getAppointmentList();","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        List\u003cAppointment\u003e otherAppointments \u003d new ArrayList\u003cAppointment\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"        int appointmentListSize \u003d appointmentList.size();","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        boolean result \u003d false;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        for (int i \u003d 0; i \u003c appointmentListSize; i++) {","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"            Appointment currentAppointment \u003d appointmentList.get(i);","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"            if (keyword.equals(currentAppointment.getMatriculationNumber())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"                result \u003d true;","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"                break;","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"            } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"                appointmentList.remove(currentAppointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"                otherAppointments.add(currentAppointment);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        for (int k \u003d 0; k \u003c otherAppointments.size(); k++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"            appointmentList.add(otherAppointments.get(k));","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        return result;","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"                || (other instanceof AppointmentContainsMatriculationNumberPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 keyword.equals(((AppointmentContainsMatriculationNumberPredicate) other).keyword)); // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"SiTingST":53}},{"path":"src/main/java/seedu/student/model/appointment/SameDateAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package seedu.student.model.appointment;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.exceptions.OverlappingAppointmentException;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}.","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":" * As such, adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality so as to","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":" * ensure that the appointment being added or updated is unique in terms of identity in the UniqueAppointmentList.","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":" * However, the removal of an appointment uses Appointment#equals(Object) so","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":" * as to ensure that the appointment with exactly the same fields will be removed.","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":" *","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":" *","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"public class SameDateAppointmentList implements Iterable\u003cAppointment\u003e, Comparable\u003cSameDateAppointmentList\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    private final ObservableList\u003cAppointment\u003e internalList;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList;","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"     * Creates a list of appointments on the same date.","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"    public SameDateAppointmentList(LocalDate date) {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"        internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"        internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"        return date;","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"     * Returns true if the list contains an appointment that overlaps with the given argument.","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"    public boolean hasOverlappingAppointment(Appointment toCheck) {","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"        return internalList.stream().anyMatch(toCheck::doesTimeOverlap);","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"        } else if (hasOverlappingAppointment(toAdd)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"            throw new OverlappingAppointmentException();","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"        } else if (!date.isEqual(toAdd.getDate())) {","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"            // to implement","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"        FXCollections.sort(internalList);","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"picasdan9"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"picasdan9"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":"        // TODO","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"picasdan9"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"picasdan9"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"picasdan9"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"picasdan9"},"content":"        // TODO","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"picasdan9"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"picasdan9"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"picasdan9"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"picasdan9"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"picasdan9"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"picasdan9"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"picasdan9"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"picasdan9"},"content":"                || (other instanceof UniqueAppointmentList // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"picasdan9"},"content":"                \u0026\u0026 internalList.equals(((SameDateAppointmentList) other).internalList));","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":"    public List\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"        return internalList;","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"picasdan9"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"picasdan9"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"picasdan9"},"content":"    public boolean sameDate(Appointment toCheck) {","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"picasdan9"},"content":"        return date.isEqual(toCheck.getDate());","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"picasdan9"},"content":"    public int compareTo(SameDateAppointmentList o) {","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"picasdan9"},"content":"        return date.compareTo(o.date);","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"SiTingST":6,"picasdan9":126}},{"path":"src/main/java/seedu/student/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import static seedu.student.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":" * TO EDIT","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":" * As such, adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality so as to","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":" * ensure that the appointment being added or updated is unique in terms of identity in the UniqueAppointmentList.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":" * However, the removal of an appointment uses Appointment#equals(Object) so","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":" * as to ensure that the appointment with exactly the same fields will be removed.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"public class UniqueAppointmentList implements Iterable\u003cSameDateAppointmentList\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    private final ObservableList\u003cSameDateAppointmentList\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    private final ObservableList\u003cSameDateAppointmentList\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"        return internalList.stream().anyMatch(apptList -\u003e apptList.contains(toCheck));","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"     * Returns true if the list contains an appointment that overlaps with the given argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"    public boolean hasOverlappingAppointment(Appointment toCheck) {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"        return internalList.stream().anyMatch(apptList -\u003e apptList.hasOverlappingAppointment(toCheck));","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"        for (SameDateAppointmentList apptList : internalList) {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"            if (apptList.sameDate(toAdd)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"                apptList.add(toAdd);","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"                return;","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"        SameDateAppointmentList apptList \u003d new SameDateAppointmentList(toAdd.getDate());","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"        apptList.add(toAdd);","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"        internalList.add(apptList);","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"        FXCollections.sort(internalList);","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"        // TODO","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"     * Removes the equivalent appointment from the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"     * The appointment must exist in the list.","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"yienyoong"},"content":"        assert toRemove !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"yienyoong"},"content":"        for (SameDateAppointmentList apptList : internalList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"yienyoong"},"content":"            apptList.getAppointmentList().remove(toRemove);","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"picasdan9"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"picasdan9"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"picasdan9"},"content":"    public void setAppointments(List\u003cSameDateAppointmentList\u003e lists) {","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"picasdan9"},"content":"        requireAllNonNull(lists);","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"picasdan9"},"content":"        // TODO: validate list of SameDateAppointmentList","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"yienyoong"},"content":"        // internalList.setAll(lists);","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"yienyoong"},"content":"        internalList.clear();","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"yienyoong"},"content":"        for (SameDateAppointmentList smdl : lists) {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"yienyoong"},"content":"            List\u003cAppointment\u003e listAppts \u003d smdl.getAppointmentList();","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"yienyoong"},"content":"            List\u003cAppointment\u003e listApptsCopy \u003d new ArrayList\u003c\u003e(listAppts);","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"yienyoong"},"content":"            SameDateAppointmentList smdlCopy \u003d new SameDateAppointmentList(smdl.getDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"yienyoong"},"content":"            for (Appointment a : listApptsCopy) {","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"yienyoong"},"content":"                smdlCopy.add(a);","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"yienyoong"},"content":"            internalList.add(smdlCopy);","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"picasdan9"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"picasdan9"},"content":"    public ObservableList\u003cSameDateAppointmentList\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"picasdan9"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"picasdan9"},"content":"    public Iterator\u003cSameDateAppointmentList\u003e iterator() {","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"picasdan9"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"picasdan9"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"picasdan9"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"picasdan9"},"content":"                || (other instanceof UniqueAppointmentList // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"picasdan9"},"content":"                \u0026\u0026 internalList.equals(((UniqueAppointmentList) other).internalList));","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"picasdan9"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"picasdan9"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":4,"yienyoong":16,"picasdan9":109}},{"path":"src/main/java/seedu/student/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.appointment.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":" * Signals that the operation will result in duplicate Appointments (Appointments are considered duplicates if they","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":" * have the same identity).","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":1,"picasdan9":10}},{"path":"src/main/java/seedu/student/model/appointment/exceptions/OverlappingAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.appointment.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":" * Signals that the operation will result in overlapping Appointments.","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"public class OverlappingAppointmentException extends RuntimeException {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"    public OverlappingAppointmentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"        super(\"Operation would result in overlapping appointments\");","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":1,"picasdan9":9}},{"path":"src/main/java/seedu/student/model/student/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":2,"-":55}},{"path":"src/main/java/seedu/student/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":2,"-":65}},{"path":"src/main/java/seedu/student/model/student/Faculty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.List;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"public class Faculty {","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"    public enum FacultyAbbreviation {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        FASS, BIZ, COM, SCALE, DEN, SDE, DNUS, ENG, ISEP, LAW, MED, MUSIC, SPH, SPP, SCI, USP, YNC","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The faculty entered should be one of the following: \\n\"","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"            + getFacultyAbbreviation().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    public final String value;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"     * Constructs an {@code Faculty}.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"     * @param faculty A valid faculty.","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    public Faculty(String faculty) {","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(faculty);","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        checkArgument(isValidFaculty(faculty), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        value \u003d faculty;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"    public static String getStringFaculties() {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"        return String.join(\",\", getFacultyAbbreviation());","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns true if the given string is a valid faculty.","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     * @param test the string whose format is to be checked.","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"     * @return true if test is a valid faculty, false otherwise.","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    public static boolean isValidFaculty(String test) {","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"            if (test \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"                throw new NullPointerException();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"            return getFacultyAbbreviation().contains(test);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"    public static List\u003cString\u003e getFacultyAbbreviation() {","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"        String[] facultyArray \u003d Stream.of(FacultyAbbreviation.values()).map(FacultyAbbreviation::name)","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"        return Arrays.asList(facultyArray);","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"        return value;","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"                || (other instanceof Faculty // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 value.equals(((Faculty) other).value)); // state check","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"fairyinabottle4":62,"yienyoong":16}},{"path":"src/main/java/seedu/student/model/student/FacultyContainsKeywords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Tests that a {@code Person}\u0027s {@code Faculty} matches the keyword given.","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"public class FacultyContainsKeywords implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    private final String keyword;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    public FacultyContainsKeywords(String keywords) {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"        this.keyword \u003d keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        return keyword.equals((student.getFaculty().toString()));","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"                || (other instanceof FacultyContainsKeywords // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 keyword.equals(((FacultyContainsKeywords) other).keyword)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":4,"SiTingST":23}},{"path":"src/main/java/seedu/student/model/student/MatriculationNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"public class MatriculationNumber {","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Matriculation numbers should be of the format A + \"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"            + \"7 digit numeric sequence + alphabet.\";","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String FIRST_CHARACTER \u003d \"A\";","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String NUMERIC_SEQUENCE \u003d \"\\\\d{7}\";","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String LAST_CHARACTER \u003d \"[A-Z]\";","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALIDATION_REGEX \u003d FIRST_CHARACTER + NUMERIC_SEQUENCE + LAST_CHARACTER;","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    public final String value;","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"     * Constructor for a MatriculationNumber object.","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"     * @param matriculationNumber The string of the matriculation number.","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    public MatriculationNumber(String matriculationNumber) {","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(matriculationNumber);","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        checkArgument(isValidMatric(matriculationNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        value \u003d matriculationNumber;","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns if a given string is a valid matriculation number.","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    public static boolean isValidMatric(String test) {","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        return value;","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"                || (other instanceof MatriculationNumber // instanceof handles nulls","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 value.equals(((MatriculationNumber) other).value)); // state check","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"        return value.hashCode();","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"fairyinabottle4":55}},{"path":"src/main/java/seedu/student/model/student/MedicalDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":" * Represents a Person\u0027s medical details in the address book.","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMedicalDetails(String)}","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"public class MedicalDetails {","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"MedicalDetails can take any values, and it should not be blank.\"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"            + \"If there is nothing worthy of reporting, enter \u0027none\u0027.\";","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    /*","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    public final String value;","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     * Constructs an {@code MedicalDetails}.","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"     * @param medicalDetails valid medical details.","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    public MedicalDetails(String medicalDetails) {","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(medicalDetails);","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        checkArgument(isValidMedicalDetails(medicalDetails), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        value \u003d medicalDetails;","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    public static boolean isValidMedicalDetails(String test) {","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"        return value;","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"                || (other instanceof MedicalDetails // instanceof handles nulls","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 value.equals(((MedicalDetails) other).value)); // state check","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"fairyinabottle4":58}},{"path":"src/main/java/seedu/student/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":2,"-":57}},{"path":"src/main/java/seedu/student/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":2,"-":51}},{"path":"src/main/java/seedu/student/model/student/SchoolResidence.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"public class SchoolResidence {","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"    public enum ResidenceAbbreviation {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"        PGPH, PGPR, KE7H, SH, KRH, TH, EH, RH, RVRC, YNC, TC, CAPT, RC4, USP, UTR, DOES_NOT_LIVE_ON_CAMPUS;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"        public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"            return this \u003d\u003d DOES_NOT_LIVE_ON_CAMPUS ? \"DOES NOT LIVE ON CAMPUS\" : super.toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    public static final List\u003cResidenceAbbreviation\u003e LIST_RESIDENCES \u003d Arrays.asList(","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"            ResidenceAbbreviation.PGPH, ResidenceAbbreviation.PGPR, ResidenceAbbreviation.KE7H,","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"            ResidenceAbbreviation.SH, ResidenceAbbreviation.KRH, ResidenceAbbreviation.TH, ResidenceAbbreviation.EH,","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"            ResidenceAbbreviation.RH, ResidenceAbbreviation.RVRC, ResidenceAbbreviation.YNC, ResidenceAbbreviation.TC,","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"            ResidenceAbbreviation.CAPT, ResidenceAbbreviation.RC4, ResidenceAbbreviation.USP, ResidenceAbbreviation.UTR,","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"            ResidenceAbbreviation.DOES_NOT_LIVE_ON_CAMPUS","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    );","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The residence entered should be one of the following: \\n\"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"            + getResidenceAbbreviation().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"    public final ResidenceAbbreviation residenceAbbreviation;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"     * Constructs an {@code SchoolResidence}.","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"     * @param schoolResidence A valid SchoolResidence.","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    public SchoolResidence(String schoolResidence) {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(schoolResidence);","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        checkArgument(isValidResidence(schoolResidence), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"        // only takes in DOES_NOT_LIVE_ON_CAMPUS","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"        residenceAbbreviation \u003d ResidenceAbbreviation.valueOf(schoolResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns true if the given string is a valid residence.","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"     * @param test the string whose format is to be checked.","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"     * @return true if test is a valid residence, false otherwise.","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    public static boolean isValidResidence(String test) {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"            if (test \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"                throw new NullPointerException();","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"            return getResidenceAbbreviation().contains(test);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"    public static String getStringResidences() {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"        return String.join(\",\", getResidenceAbbreviation());","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"    public static List\u003cString\u003e getResidenceAbbreviation() { // DOES_NOT_LIVE_ON_CAMPUS","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"        String[] residenceArray \u003d Stream.of(SchoolResidence.ResidenceAbbreviation.values())","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"                .map(SchoolResidence.ResidenceAbbreviation::name).toArray(String[]::new);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"yienyoong"},"content":"        return Arrays.asList(residenceArray);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"        return this.residenceAbbreviation.toString(); // \"DOES NOT LIVE ON CAMPUS\"","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"yienyoong"},"content":"    public String toSavingString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"yienyoong"},"content":"        return this.residenceAbbreviation.name();","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"                || (other instanceof SchoolResidence // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"yienyoong"},"content":"                \u0026\u0026 residenceAbbreviation \u003d\u003d ((SchoolResidence) other).residenceAbbreviation); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"yienyoong"},"content":"        return residenceAbbreviation.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"fairyinabottle4":62,"yienyoong":31,"SiTingST":1}},{"path":"src/main/java/seedu/student/model/student/SchoolResidenceContainsKeywords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Tests that a {@code Student}\u0027s {@code School Residence} matches the keyword given.","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"public class SchoolResidenceContainsKeywords implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    private final String keyword;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    public SchoolResidenceContainsKeywords(String keywords) {","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"        this.keyword \u003d keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"        return keyword.equals((student.getSchoolResidence().toString()));","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"                || (other instanceof SchoolResidenceContainsKeywords // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 keyword.equals(((SchoolResidenceContainsKeywords) other).keyword)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":4,"SiTingST":23}},{"path":"src/main/java/seedu/student/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"public class Student {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    private final MatriculationNumber matriculationNumber;","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    private final Faculty faculty;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    private final VaccinationStatus vaccinationStatus;","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    private final MedicalDetails medicalDetails;","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    private final SchoolResidence schoolResidence;","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    public Student(Name name, MatriculationNumber matriculationNumber, Faculty faculty, Phone phone, Email email,","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"                   Address address, VaccinationStatus vaccinationStatus, MedicalDetails medicalDetails,","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"                   SchoolResidence schoolResidence) {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        this.matriculationNumber \u003d matriculationNumber;","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        this.vaccinationStatus \u003d vaccinationStatus;","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        this.medicalDetails \u003d medicalDetails;","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"        this.schoolResidence \u003d schoolResidence;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    public MatriculationNumber getMatriculationNumber() {","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"        return this.matriculationNumber;","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    public Faculty getFaculty() {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"        return this.faculty;","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"    public VaccinationStatus getVaccinationStatus() {","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"        return vaccinationStatus;","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    public MedicalDetails getMedicalDetails() {","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"        return medicalDetails;","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"    public SchoolResidence getSchoolResidence() {","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"        return schoolResidence;","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns true if both persons have the same matriculation number.","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 otherStudent.getMatriculationNumber().equals(getMatriculationNumber());","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"yienyoong"},"content":"    public boolean isVaccinated() {","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"        return this.vaccinationStatus.status \u003d\u003d VaccinationStatus.VaccinationStatusAbbreviation.VACCINATED;","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 otherStudent.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 otherStudent.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 otherStudent.getMatriculationNumber().equals(getMatriculationNumber())","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 otherStudent.getFaculty().equals(getFaculty())","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 otherStudent.getMedicalDetails().equals(getMedicalDetails())","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 otherStudent.getVaccinationStatus().equals(getVaccinationStatus())","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 otherStudent.getSchoolResidence().equals(getSchoolResidence());","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"        return Objects.hash(name, phone, email, address);","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"fairyinabottle4"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"fairyinabottle4"},"content":"                .append(\"; Matriculation Number: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"fairyinabottle4"},"content":"                .append(getMatriculationNumber())","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"                .append(\"; Faculty: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"                .append(getFaculty())","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"                .append(\"; Vaccination Status: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":"                .append(getVaccinationStatus())","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"                .append(\"; Medical Details: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"                .append(getMedicalDetails())","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"                .append(\"; Vaccination Status: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":"                .append(getVaccinationStatus())","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"fairyinabottle4"},"content":"                .append(\"; School Residence: \")","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"yienyoong"},"content":"                .append(getSchoolResidence().toString()); // DOES NOT LIVE ON CAMPUS -\u003e For UI","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fairyinabottle4":63,"yienyoong":6,"SiTingST":1,"-":83}},{"path":"src/main/java/seedu/student/model/student/StudentContainsMatriculationNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Tests that a {@code Student}\u0027s {@code Matriculation Number} matches any of the keywords given.","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"public class StudentContainsMatriculationNumberPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    private final MatriculationNumber keyword;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    public StudentContainsMatriculationNumberPredicate(MatriculationNumber keyword) {","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        return keyword.equals((student.getMatriculationNumber()));","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"                || (other instanceof StudentContainsMatriculationNumberPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 keyword.equals(((StudentContainsMatriculationNumberPredicate) other).keyword)); // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"fairyinabottle4":2,"SiTingST":25}},{"path":"src/main/java/seedu/student/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such,","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":" * adding and updating of students uses Student#isSameStudent(Student) for equality so as to ensure that the student","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":" * being added or updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":" * uses Student#equals(Object) so as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":" *","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"     * Adds a student to the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"fairyinabottle4"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"fairyinabottle4"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":"                    return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"fairyinabottle4"},"content":"                }","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"fairyinabottle4"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"        return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"fairyinabottle4":136}},{"path":"src/main/java/seedu/student/model/student/VaccinationStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"public class VaccinationStatus {","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    public enum VaccinationStatusAbbreviation {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        VACCINATED, NOT_VACCINATED","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Vaccination status should only be of the format \u0027vaccinated\u0027 \"","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"            + \"or \u0027not vaccinated\u0027 \";","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    public final VaccinationStatusAbbreviation status; // enum for Vaccination status","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"    public final String textUI; // string to display on the GUI","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"     * Constructs an {@code VaccinationStatus}.","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"     * @param vaccinationStatus A valid VaccinationStatus.","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    public VaccinationStatus(String vaccinationStatus) {","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        requireNonNull(vaccinationStatus);","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        checkArgument(isValidStatus(vaccinationStatus), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"        if (vaccinationStatus.equals(\"vaccinated\")) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"            status \u003d VaccinationStatusAbbreviation.VACCINATED;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"            textUI \u003d vaccinationStatus;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"            status \u003d VaccinationStatusAbbreviation.NOT_VACCINATED;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"            textUI \u003d vaccinationStatus;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns true if the given string is a valid status.","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"     * @param test the string whose format is to be checked.","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"     * @return true if test is a valid statis, false otherwise.","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        test \u003d test.replaceAll(\" \", \"_\").toUpperCase();","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"            boolean result \u003d VaccinationStatusAbbreviation.valueOf(test) \u003d\u003d VaccinationStatusAbbreviation.NOT_VACCINATED","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"                    || VaccinationStatusAbbreviation.valueOf(test) \u003d\u003d VaccinationStatusAbbreviation.VACCINATED;","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"            return result;","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"    public static List\u003cString\u003e getVaccinationStatusAbbreviation() {","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"        String[] statusArray \u003d Stream.of(VaccinationStatus.VaccinationStatusAbbreviation.values())","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"                .map(VaccinationStatus.VaccinationStatusAbbreviation::name).toArray(String[]::new);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        return Arrays.asList(statusArray);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"    public String toString() {","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"        return status.toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-28"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"                || (other instanceof VaccinationStatus // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":"                \u0026\u0026 status \u003d\u003d ((VaccinationStatus) other).status); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"        return status.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"fairyinabottle4":53,"yienyoong":9,"SiTingST":16}},{"path":"src/main/java/seedu/student/model/student/VaccinationStatusContainsKeywords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":" * Tests that a {@code Student}\u0027s {@code Vaccination Status} matches the keyword given.","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"public class VaccinationStatusContainsKeywords implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"    private final String keyword;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"    public VaccinationStatusContainsKeywords(String vaccinationStatus) {","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"        this.keyword \u003d vaccinationStatus.toUpperCase();","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        return keyword.equals((student.getVaccinationStatus().toString().toUpperCase()));","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"                || (other instanceof VaccinationStatusContainsKeywords // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"                \u0026\u0026 keyword.equals(((VaccinationStatusContainsKeywords) other).keyword)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":3,"SiTingST":24}},{"path":"src/main/java/seedu/student/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" * they have the same identity).","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"        super(\"Operation would result in duplicate student\");","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"fairyinabottle4":11}},{"path":"src/main/java/seedu/student/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student.exceptions;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"fairyinabottle4":6}},{"path":"src/main/java/seedu/student/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        return new Student[] {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"            new Student(new Name(\"Alex Yeoh\"), new MatriculationNumber(\"A0182345T\"), new Faculty(\"COM\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"                    new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new VaccinationStatus(\"vaccinated\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"                    new MedicalDetails(\"none\"), new SchoolResidence(\"PGPH\")),","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"            new Student(new Name(\"Bernice Yu\"), new MatriculationNumber(\"A0175678U\"), new Faculty(\"COM\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"                    new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"                    new VaccinationStatus(\"not vaccinated\"), new MedicalDetails(\"shellfish allergy\"),","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"                    new SchoolResidence(\"PGPH\")),","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new MatriculationNumber(\"A0164567V\"), new Faculty(\"COM\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"                    new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new VaccinationStatus(\"vaccinated\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"                    new MedicalDetails(\"none\"), new SchoolResidence(\"PGPH\")),","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"            new Student(new Name(\"David Li\"), new MatriculationNumber(\"A0209875D\"), new Faculty(\"COM\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"                    new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new VaccinationStatus(\"not vaccinated\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"                    new MedicalDetails(\"history of anaphylaxis\"), new SchoolResidence(\"PGPH\")),","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new MatriculationNumber(\"A0214432E\"), new Faculty(\"COM\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"                    new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new VaccinationStatus(\"vaccinated\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"                    new MedicalDetails(\"none\"), new SchoolResidence(\"PGPH\")),","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new MatriculationNumber(\"A0221234N\"), new Faculty(\"COM\"),","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"                    new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new VaccinationStatus(\"not vaccinated\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"                    new MedicalDetails(\"penicillin allergy\"), new SchoolResidence(\"PGPH\"))","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"    public static Appointment[] getSampleAppointments() {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"        return new Appointment[] {","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"            new Appointment(new MatriculationNumber(\"A0182345T\"), LocalDate.parse(\"2021-01-01\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"                    LocalTime.parse(\"10:00\"))","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"        };","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    public static ReadOnlyStudentBook getSampleStudentBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"        StudentBook sampleAb \u003d new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"        for (Appointment sampleAppointment : getSampleAppointments()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"            sampleAb.addAppointment(sampleAppointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"fairyinabottle4":43,"SiTingST":2,"picasdan9":14,"-":13}},{"path":"src/main/java/seedu/student/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import seedu.student.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    private final String matriculationNumber;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    private final String date;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    private final String startTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    public JsonAdaptedAppointment(","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"                              @JsonProperty(\"matriculationNumber\") String matriculationNumber,","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"                              @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"                              @JsonProperty(\"startTime\") String startTime) {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"        this.matriculationNumber \u003d matriculationNumber;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"        matriculationNumber \u003d source.getMatriculationNumber().value;","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"        startTime \u003d source.getStartTime().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"        if (matriculationNumber \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"                    MatriculationNumber.class.getSimpleName()));","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"        if (!MatriculationNumber.isValidMatric(matriculationNumber)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"            throw new IllegalValueException(MatriculationNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"        final MatriculationNumber modelMatric \u003d new MatriculationNumber(matriculationNumber);","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"        final LocalDate modelDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"        final LocalTime modelStartTime \u003d LocalTime.parse(startTime);","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"        return new Appointment(modelMatric, modelDate, modelStartTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"picasdan9":68}},{"path":"src/main/java/seedu/student/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    private final String matriculationNumber;","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    private final String faculty;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    private final String vaccinationStatus;","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    private final String medicalDetails;","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    private final String schoolResidence;","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"                              @JsonProperty(\"matriculationNumber\") String matriculationNumber,","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"                              @JsonProperty(\"faculty\") String faculty,","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"                              @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"                              @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"                              @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"                              @JsonProperty(\"vaccinationStatus\") String vaccinationStatus,","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"                              @JsonProperty(\"medicalDetails\") String medicalDetails,","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"                              @JsonProperty(\"schoolResidence\") String schoolResidence) {","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"        this.matriculationNumber \u003d matriculationNumber;","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"        this.vaccinationStatus \u003d vaccinationStatus;","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        this.medicalDetails \u003d medicalDetails;","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"        this.schoolResidence \u003d schoolResidence;","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"        matriculationNumber \u003d source.getMatriculationNumber().value;","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"        faculty \u003d source.getFaculty().value;","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"        vaccinationStatus \u003d source.getVaccinationStatus().textUI;","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"        medicalDetails \u003d source.getMedicalDetails().value;","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":"        schoolResidence \u003d source.getSchoolResidence().residenceAbbreviation.name();","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Person} object.","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"        if (matriculationNumber \u003d\u003d null) {","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-02-28"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"                    MatriculationNumber.class.getSimpleName()));","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"        if (!MatriculationNumber.isValidMatric(matriculationNumber)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"            throw new IllegalValueException(MatriculationNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"        final MatriculationNumber modelMatric \u003d new MatriculationNumber(matriculationNumber);","lastModifiedDate":"2021-02-28"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"        if (faculty \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"                    Faculty.class.getSimpleName()));","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"        if (!Faculty.isValidFaculty(faculty)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"            throw new IllegalValueException(Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"        final Faculty modelFaculty \u003d new Faculty(faculty);","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"        if (vaccinationStatus \u003d\u003d null) {","lastModifiedDate":"2021-02-28"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-02-28"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"                    VaccinationStatus.class.getSimpleName()));","lastModifiedDate":"2021-02-28"},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":137,"author":{"gitId":"fairyinabottle4"},"content":"        if (!VaccinationStatus.isValidStatus(vaccinationStatus)) {","lastModifiedDate":"2021-02-28"},{"lineNumber":138,"author":{"gitId":"fairyinabottle4"},"content":"            throw new IllegalValueException(VaccinationStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":139,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-02-28"},{"lineNumber":140,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"        final VaccinationStatus modelVacStatus \u003d new VaccinationStatus(vaccinationStatus);","lastModifiedDate":"2021-02-28"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":"        if (medicalDetails \u003d\u003d null) {","lastModifiedDate":"2021-03-02"},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"                    MedicalDetails.class.getSimpleName()));","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":"        if (!MedicalDetails.isValidMedicalDetails(medicalDetails)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"fairyinabottle4"},"content":"            throw new IllegalValueException(MedicalDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":151,"author":{"gitId":"fairyinabottle4"},"content":"        final MedicalDetails modelMedDetails \u003d new MedicalDetails(medicalDetails);","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":"        if (!SchoolResidence.isValidResidence(schoolResidence)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":154,"author":{"gitId":"fairyinabottle4"},"content":"            throw new IllegalValueException(SchoolResidence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":155,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":157,"author":{"gitId":"fairyinabottle4"},"content":"        final SchoolResidence modelSchoolRes \u003d new SchoolResidence(schoolResidence);","lastModifiedDate":"2021-03-03"},{"lineNumber":158,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":159,"author":{"gitId":"fairyinabottle4"},"content":"        return new Student(modelName, modelMatric, modelFaculty, modelPhone, modelEmail, modelAddress, modelVacStatus,","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"                modelMedDetails, modelSchoolRes);","lastModifiedDate":"2021-03-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fairyinabottle4":83,"yienyoong":2,"SiTingST":8,"-":70}},{"path":"src/main/java/seedu/student/storage/JsonSerializableStudentBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":" * An Immutable StudentBook that is serializable to JSON format.","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"@JsonRootName(value \u003d \"studentbook\")","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"class JsonSerializableStudentBook {","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Student list contains duplicate student(s).\";","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointment list contains duplicate appointment(s),\";","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * Constructs a {@code JsonSerializableStudentBook} with the given students.","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    public JsonSerializableStudentBook(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e student,","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"                                       @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointment) {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        this.students.addAll(student);","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"        this.appointments.addAll(appointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"     * Converts a given {@code ReadOnlyStudentBook} into this class for Jackson use.","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableStudentBook}.","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    public JsonSerializableStudentBook(ReadOnlyStudentBook source) {","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"        appointments.addAll(source.getFlatAppointmentList().stream()","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"                .map(JsonAdaptedAppointment::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"     * Converts this student book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    public StudentBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        StudentBook studentBook \u003d new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"            if (studentBook.hasStudent(student)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"            }","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"            studentBook.addStudent(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"            if (studentBook.hasAppointment(appointment)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"            studentBook.addAppointment(appointment);","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"        return studentBook;","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"fairyinabottle4":9,"SiTingST":50,"picasdan9":15}},{"path":"src/main/java/seedu/student/storage/JsonStudentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.FileUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.JsonUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":" * A class to access StudentBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"public class JsonStudentBookStorage implements StudentBookStorage {","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonStudentBookStorage.class);","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    public JsonStudentBookStorage(Path filePath) {","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    public Optional\u003cReadOnlyStudentBook\u003e readStudentBook() throws DataConversionException {","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        return readStudentBook(filePath);","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"     * Similar to {@link #readStudentBook()}.","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"    public Optional\u003cReadOnlyStudentBook\u003e readStudentBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        Optional\u003cJsonSerializableStudentBook\u003e jsonStudentBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"                filePath, JsonSerializableStudentBook.class);","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        if (!jsonStudentBook.isPresent()) {","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"            return Optional.of(jsonStudentBook.get().toModelType());","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"    public void saveStudentBook(ReadOnlyStudentBook studentBook) throws IOException {","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        saveStudentBook(studentBook, filePath);","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"     * Similar to {@link #saveStudentBook(ReadOnlyStudentBook)}.","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"    public void saveStudentBook(ReadOnlyStudentBook studentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"        requireNonNull(studentBook);","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableStudentBook(studentBook), filePath);","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fairyinabottle4":7,"SiTingST":19,"-":54}},{"path":"src/main/java/seedu/student/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.JsonUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fairyinabottle4":5,"-":42}},{"path":"src/main/java/seedu/student/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"public interface Storage extends StudentBookStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    Optional\u003cReadOnlyStudentBook\u003e readStudentBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    void saveStudentBook(ReadOnlyStudentBook studentBook) throws IOException;","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fairyinabottle4":5,"SiTingST":4,"-":23}},{"path":"src/main/java/seedu/student/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":" * Manages storage of StudentBook data in local storage.","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    private StudentBookStorage studentBookStorage;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"    public StorageManager(StudentBookStorage studentBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        this.studentBookStorage \u003d studentBookStorage;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudentBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"    public Path getStudentBookFilePath() {","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        return studentBookStorage.getStudentBookFilePath();","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"    public Optional\u003cReadOnlyStudentBook\u003e readStudentBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        return readStudentBook(studentBookStorage.getStudentBookFilePath());","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"    public Optional\u003cReadOnlyStudentBook\u003e readStudentBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        return studentBookStorage.readStudentBook(filePath);","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"    public void saveStudentBook(ReadOnlyStudentBook studentBook) throws IOException {","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"        saveStudentBook(studentBook, studentBookStorage.getStudentBookFilePath());","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"    public void saveStudentBook(ReadOnlyStudentBook studentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"        studentBookStorage.saveStudentBook(studentBook, filePath);","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":6,"SiTingST":15,"-":58}},{"path":"src/main/java/seedu/student/storage/StudentBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":" * Represents a storage for {@link StudentBook}.","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"public interface StudentBookStorage {","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    Path getStudentBookFilePath();","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"     * Returns StudentBook data as a {@link ReadOnlyStudentBook}.","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"    Optional\u003cReadOnlyStudentBook\u003e readStudentBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"     * @see #getStudentBookFilePath()","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"    Optional\u003cReadOnlyStudentBook\u003e readStudentBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"     * Saves the given {@link ReadOnlyStudentBook} to the storage.","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"     * @param studentBook cannot be null.","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    void saveStudentBook(ReadOnlyStudentBook studentBook) throws IOException;","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"     * @see #saveStudentBook(ReadOnlyStudentBook)","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    void saveStudentBook(ReadOnlyStudentBook studentBook, Path filePath) throws IOException;","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fairyinabottle4":4,"SiTingST":12,"-":30}},{"path":"src/main/java/seedu/student/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":" * Represents a storage for {@link seedu.student.model.UserPrefs}.","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     * Saves the given {@link seedu.student.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fairyinabottle4":6,"-":30}},{"path":"src/main/java/seedu/student/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    public final Appointment appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    public final Student student;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    private Label id;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"    private Label name;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"    private Label matriculationNumber;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    private Label time;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    private Label phone;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"    private Label email;","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex, ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"        this.student \u003d studentList.stream().filter(student -\u003e student.getMatriculationNumber()","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"                .equals(appointment.getMatriculationNumber())).findFirst().get();","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        System.out.println(\"student here is \" + this.student.getMatriculationNumber());","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"        name.setText(student.getName().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"        matriculationNumber.setText(appointment.getMatriculationNumber().value);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"        time.setText(String.format(\"%s - %s\", appointment.getStartTime(), appointment.getEndTime()));","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"        phone.setText(student.getPhone().value);","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"                \u0026\u0026 appointment.equals(card.appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":3,"SiTingST":2,"picasdan9":74}},{"path":"src/main/java/seedu/student/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    private ListView\u003cSameDateAppointmentList\u003e appointmentsGroupListView;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    public AppointmentListPanel(ObservableList\u003cSameDateAppointmentList\u003e appointmentLists,","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"                                ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        appointmentsGroupListView.setItems(appointmentLists);","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"        appointmentsGroupListView.setCellFactory(listView -\u003e new AppointmentsGroupListViewCell(studentList));","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code SameDateAppointmentList}","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"     * using a {@code SameDateAppointmentListContainer}.","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"    class AppointmentsGroupListViewCell extends ListCell\u003cSameDateAppointmentList\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"        private ObservableList\u003cStudent\u003e studentList;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"        public AppointmentsGroupListViewCell(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"            super();","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"            this.studentList \u003d studentList;","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"        protected void updateItem(SameDateAppointmentList list, boolean empty) {","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"            super.updateItem(list, empty);","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"            if (empty || list \u003d\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"                setGraphic(new SameDateAppointmentListContainer(list, studentList).getRoot());","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":2,"picasdan9":58}},{"path":"src/main/java/seedu/student/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"         * @see seedu.student.logic.Logic#execute(String)","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"fairyinabottle4":5,"-":80}},{"path":"src/main/java/seedu/student/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w10-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fairyinabottle4":3,"-":99}},{"path":"src/main/java/seedu/student/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.Logic;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"    private VBox container;","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"    private GridPane dataDisplayContainer;","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":"        dataDisplayContainer.prefHeightProperty().bind(container.heightProperty());","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"fairyinabottle4"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"picasdan9"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList(),","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"picasdan9"},"content":"                logic.getFilteredStudentList());","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"picasdan9"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"fairyinabottle4"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getStudentBookFilePath());","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentListPanel getStudentListPanel() {","lastModifiedDate":"2021-03-23"},{"lineNumber":185,"author":{"gitId":"fairyinabottle4"},"content":"        return studentListPanel;","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"fairyinabottle4"},"content":"     * @see seedu.student.logic.Logic#execute(String)","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fairyinabottle4":15,"picasdan9":16,"-":183}},{"path":"src/main/java/seedu/student/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fairyinabottle4":1,"-":27}},{"path":"src/main/java/seedu/student/ui/SameDateAppointmentListContainer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":" * Panel containing the list of appointments on the same date.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"public class SameDateAppointmentListContainer extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    private static final String FXML \u003d \"SameDateAppointmentListContainer.fxml\";","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"    private static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd MMM yy\");","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    private Label date;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    public SameDateAppointmentListContainer(SameDateAppointmentList appointmentList,","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"                                            ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"        super(FXML);","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"        date.setText(appointmentList.getDate().format(dateFormatter).toUpperCase());","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"        appointmentListView.setItems(appointmentList.asUnmodifiableObservableList());","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell(studentList));","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"        appointmentListView.prefHeightProperty().bind(Bindings.size(appointmentList.asUnmodifiableObservableList())","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"                .multiply(110));","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"        private ObservableList\u003cStudent\u003e studentList;","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"        public AppointmentListViewCell(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"            super();","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"            this.studentList \u003d studentList;","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"                setText(null);","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"            } else {","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1, studentList).getRoot());","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"yienyoong":1,"picasdan9":67}},{"path":"src/main/java/seedu/student/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":27}},{"path":"src/main/java/seedu/student/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    private static final Background vaccinatedBg \u003d new Background(new BackgroundFill(Color.web(\"#0277BD\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"            new CornerRadii(5.0), new Insets(-5.0)));","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    private static final Background notVaccinatedBg \u003d new Background(new BackgroundFill(Color.web(\"#DD2C00\"),","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"            new CornerRadii(5.0), new Insets(-5.0)));","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    public final Student student;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    private Label vaccinationStatus;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    private Label matriculationNumber;","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"    private Label faculty;","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"    private Label residence;","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"    private Label medicalDetails;","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a {@code StudentCode} with the given {@code Student} and index to display.","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"        vaccinationStatus.setText(student.getVaccinationStatus().textUI);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"        vaccinationStatus.setBackground(","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"                student.isVaccinated()","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"                        ? vaccinatedBg","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"                        : notVaccinatedBg);","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"        matriculationNumber.setText(student.getMatriculationNumber().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"        faculty.setText(student.getFaculty().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"        phone.setText(student.getPhone().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        address.setText(student.getAddress().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"        residence.setText(student.getSchoolResidence().toString());","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"        medicalDetails.setText(student.getMedicalDetails().value);","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fairyinabottle4":24,"yienyoong":2,"picasdan9":18,"-":53}},{"path":"src/main/java/seedu/student/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":" * Panel containing the list of students.","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        super(FXML);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"                setText(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"fairyinabottle4":49}},{"path":"src/main/java/seedu/student/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"fairyinabottle4":1,"-":12}},{"path":"src/main/java/seedu/student/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.MainApp;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.StringUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.Logic;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fairyinabottle4":5,"-":84}},{"path":"src/main/java/seedu/student/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.MainApp;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"fairyinabottle4":2,"-":86}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"\u003c?import org.kordamp.ikonli.javafx.FontIcon?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"                    \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"            \u003cLabel fx:id\u003d\"name\" style\u003d\"-fx-label-padding: 0 5 0 0;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"matriculationNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$matriculationNumber\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        \u003cGridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"            \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"                \u003cFontIcon iconLiteral\u003d\"fas-clock:12:WHITE\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"            \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label, label_with_icon\" text\u003d\"\\$time\"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"                   GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"0\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"            \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"                \u003cFontIcon iconLiteral\u003d\"fas-phone-alt:13:WHITE\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label, label_with_icon\" text\u003d\"\\$phone\"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"                   GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"            \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"                \u003cFontIcon iconLiteral\u003d\"fas-envelope:14:WHITE\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label, label_with_icon\" text\u003d\"\\$email\"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"                   GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"picasdan9":52}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"    \u003cListView fx:id\u003d\"appointmentsGroupListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"picasdan9":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":".date-header {","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    -fx-font-weight: bold !important;","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"    -fx-text-fill: #ff9800 !important;","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"picasdan9"},"content":".label_with_icon {","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"picasdan9"},"content":"    -fx-padding: 0 0 0 5;","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"picasdan9":9,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"         title\u003d\"Vax@NUS\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"      \u003cVBox fx:id\u003d\"container\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"        \u003cGridPane fx:id\u003d\"dataDisplayContainer\" minWidth\u003d\"340\" prefWidth\u003d\"340\"\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"          \u003cVBox fx:id\u003d\"studentList\" styleClass\u003d\"pane-with-border\" GridPane.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"                GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"            \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"          \u003cVBox fx:id\u003d\"appointmentList\" styleClass\u003d\"pane-with-border\" GridPane.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"                GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"            \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"          \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"            \u003cColumnConstraints hgrow\u003d\"ALWAYS\" percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"            \u003cColumnConstraints hgrow\u003d\"ALWAYS\" percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"          \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"fairyinabottle4":3,"picasdan9":17,"-":55}},{"path":"src/main/resources/view/SameDateAppointmentListContainer.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"date-header\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"picasdan9":17}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"\u003c?import org.kordamp.ikonli.javafx.FontIcon?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\" spacing\u003d\"2\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"name\" style\u003d\"-fx-label-padding: 0 5 0 0;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"vaccinationStatus\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$vaccinationStatus\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"      \u003cLabel fx:id\u003d\"matriculationNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$matriculationNumber\" /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"      \u003cGridPane\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"        \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"          \u003cFontIcon iconLiteral\u003d\"fas-school:12:WHITE\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"faculty\" styleClass\u003d\"cell_small_label, label_with_icon\" text\u003d\"\\$faculty\"","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"               GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"0\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"        \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"          \u003cFontIcon iconLiteral\u003d\"fas-phone-alt:13:WHITE\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label, label_with_icon\" text\u003d\"\\$phone\"","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"               GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"        \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"          \u003cFontIcon iconLiteral\u003d\"fas-home:15:WHITE\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label, label_with_icon\" text\u003d\"\\$address\"","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"               GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"        \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"          \u003cFontIcon iconLiteral\u003d\"fas-envelope:14:WHITE\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label, label_with_icon\" text\u003d\"\\$email\"","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"               GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"        \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"          \u003cFontIcon iconLiteral\u003d\"fas-building:15:WHITE\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"residence\" styleClass\u003d\"cell_small_label, label_with_icon\" text\u003d\"\\$residence\"","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"               GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"        \u003cHBox alignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"5\"\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"          \u003cFontIcon iconLiteral\u003d\"fas-file-medical:15:WHITE\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"        \u003cLabel fx:id\u003d\"medicalDetails\" styleClass\u003d\"cell_small_label, label_with_icon\" text\u003d\"\\$medicalDetails\"","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"               GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"picasdan9":51,"-":28}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":7}},{"path":"src/test/data/JsonSerializableStudentBookTest/duplicateStudentsStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"  \"students\": [ {","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"    \"matriculationNumber\" : \"A3456789D\",","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"    \"faculty\" : \"COM\",","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    \"vaccinationStatus\" : \"vaccinated\",","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    \"medicalDetails\" : \"none\",","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    \"schoolResidence\" : \"RVRC\"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    \"matriculationNumber\" : \"A3456789D\",","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    \"faculty\" : \"COM\",","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    \"vaccinationStatus\" : \"vaccinated\",","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    \"medicalDetails\" : \"none\",","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    \"schoolResidence\" : \"RVRC\"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"  } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"  \"appointments\": []","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fairyinabottle4":11,"SiTingST":1,"picasdan9":2,"-":10}},{"path":"src/test/data/JsonSerializableStudentBookTest/invalidStudentsStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"  \"students\": [ {","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"  } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"  \"appointments\": []","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SiTingST":1,"picasdan9":2,"-":6}},{"path":"src/test/data/JsonSerializableStudentBookTest/typicalStudentsStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"  \"students\" : [ {","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"    \"matriculationNumber\" : \"A3456789D\",","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    \"faculty\" : \"COM\",","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    \"vaccinationStatus\" : \"not vaccinated\",","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    \"medicalDetails\" : \"shellfish allergy\",","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    \"schoolResidence\" : \"RVRC\"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"    \"matriculationNumber\" : \"A4567890E\",","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    \"faculty\" : \"DNUS\",","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    \"vaccinationStatus\" : \"not vaccinated\",","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    \"medicalDetails\" : \"none\",","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    \"schoolResidence\" : \"RVRC\"","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    \"matriculationNumber\" : \"A5678901F\",","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    \"faculty\" : \"USP\",","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    \"vaccinationStatus\" : \"vaccinated\",","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    \"medicalDetails\" : \"none\",","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    \"schoolResidence\" : \"USP\"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    \"matriculationNumber\" : \"A6789012G\",","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    \"faculty\" : \"SCALE\",","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    \"vaccinationStatus\" : \"vaccinated\",","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    \"medicalDetails\" : \"pollen allergy\",","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    \"schoolResidence\" : \"RVRC\"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"    \"matriculationNumber\" : \"A7890123H\",","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"    \"faculty\" : \"BIZ\",","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    \"vaccinationStatus\" : \"not vaccinated\",","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"    \"medicalDetails\" : \"none\",","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    \"schoolResidence\" : \"RVRC\"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"    \"matriculationNumber\" : \"A8901234I\",","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"    \"faculty\" : \"ENG\",","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"    \"vaccinationStatus\" : \"vaccinated\",","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"    \"medicalDetails\" : \"bee sting allergy\",","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    \"schoolResidence\" : \"RVRC\"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"    \"matriculationNumber\" : \"A9012345J\",","lastModifiedDate":"2021-02-28"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"    \"faculty\" : \"MED\",","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"    \"vaccinationStatus\" : \"not vaccinated\",","lastModifiedDate":"2021-02-28"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"    \"medicalDetails\" : \"none\",","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    \"schoolResidence\" : \"RVRC\"","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"  } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"  \"appointments\": []","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fairyinabottle4":35,"SiTingST":1,"picasdan9":2,"-":37}},{"path":"src/test/data/JsonStudentBookStorageTest/invalidAndValidStudentsStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"  } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"  \"appointments\": []","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"picasdan9":2,"-":12}},{"path":"src/test/data/JsonStudentBookStorageTest/invalidStudentsStudentBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"  } ],","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"  \"appointments\": []","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"picasdan9":2,"-":7}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"  \"studentBookFilePath\" : \"studentbook.json\"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"SiTingST":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"  \"studentBookFilePath\" : \"studentbook.json\"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"SiTingST":1,"-":10}},{"path":"src/test/java/seedu/student/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"fairyinabottle4":1,"-":57}},{"path":"src/test/java/seedu/student/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.core;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"fairyinabottle4":1,"-":26}},{"path":"src/test/java/seedu/student/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.core;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":2,"-":133}},{"path":"src/test/java/seedu/student/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.core.index;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"fairyinabottle4":2,"-":58}},{"path":"src/test/java/seedu/student/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"fairyinabottle4":2,"-":34}},{"path":"src/test/java/seedu/student/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"fairyinabottle4":3,"-":105}},{"path":"src/test/java/seedu/student/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Config;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fairyinabottle4":4,"-":112}},{"path":"src/test/java/seedu/student/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":2,"-":21}},{"path":"src/test/java/seedu/student/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.SerializableTestClass;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.TestUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":3,"-":42}},{"path":"src/test/java/seedu/student/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.commons.util;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"fairyinabottle4":2,"-":141}},{"path":"src/test/java/seedu/student/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_NONEXISTENT_MATRIC_NUM;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.DETAILS_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.FACULTY_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.MATRIC_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.RESIDENCE_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.AddCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.CommandResult;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.ListCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.JsonStudentBookStorage;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.storage.StorageManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"        JsonStudentBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"                new JsonStudentBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"        String deleteCommand \u003d \"deleteStud A1231234A\";","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"        assertCommandException(deleteCommand, MESSAGE_NONEXISTENT_MATRIC_NUM);","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"        // Setup LogicManager with JsonStudentBookIoExceptionThrowingStub","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"        JsonStudentBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"                new JsonStudentBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionStudentBook.json\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + MATRIC_DESC_AMY + FACULTY_DESC_AMY","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + STATUS_DESC_AMY + DETAILS_DESC_AMY","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"                + RESIDENCE_DESC_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"fairyinabottle4"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"SiTingST"},"content":"    private static class JsonStudentBookIoExceptionThrowingStub extends JsonStudentBookStorage {","lastModifiedDate":"2021-03-20"},{"lineNumber":159,"author":{"gitId":"SiTingST"},"content":"        private JsonStudentBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"SiTingST"},"content":"        public void saveStudentBook(ReadOnlyStudentBook studentBook, Path filePath) throws IOException {","lastModifiedDate":"2021-03-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fairyinabottle4":38,"yienyoong":2,"SiTingST":6,"-":122}},{"path":"src/test/java/seedu/student/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    public void execute_appointmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded(validStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"                .withMatric(validStudent.getMatriculationNumber().toString()).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"        CommandResult commandResult \u003d new AddAppointmentCommand(validAppointment).execute(modelStub);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"        assertEquals(String.format(AddAppointmentCommand.MESSAGE_SUCCESS, validAppointment),","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"        assertEquals(Arrays.asList(validAppointment), modelStub.appointmentsAdded);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"    public void execute_duplicateAppointment_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"                .withMatric(validStudent.getMatriculationNumber().toString()).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(validAppointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudentAndAppointment(validStudent, validAppointment);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"                AddAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT, () -\u003e addAppointmentCommand.execute(modelStub));","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"        Appointment appt1 \u003d new AppointmentBuilder().withMatric(\"A1234567X\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"        Appointment appt2 \u003d new AppointmentBuilder().withMatric(\"A7654321Y\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"        AddAppointmentCommand addAppt1Command \u003d new AddAppointmentCommand(appt1);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"        AddAppointmentCommand addAppt2Command \u003d new AddAppointmentCommand(appt2);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"        assertTrue(addAppt1Command.equals(addAppt1Command));","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"        AddAppointmentCommand addAppt1CommandCopy \u003d new AddAppointmentCommand(appt1);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"        assertTrue(addAppt1Command.equals(addAppt1CommandCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"picasdan9"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"picasdan9"},"content":"        assertFalse(addAppt1Command.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"picasdan9"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"        assertFalse(addAppt1Command.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"picasdan9"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"picasdan9"},"content":"        assertFalse(addAppt1Command.equals(addAppt2Command));","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"picasdan9"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"picasdan9"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"picasdan9"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"picasdan9"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"picasdan9"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"picasdan9"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"        public Path getStudentBookFilePath() {","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"        public void setStudentBookFilePath(Path studentBookFilePath) {","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":"        public void setStudentBook(ReadOnlyStudentBook newData) {","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"        public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"yienyoong"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"yienyoong"},"content":"        public boolean isExistingMatricNumber(MatriculationNumber matricNum) {","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"yienyoong"},"content":"            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"fairyinabottle4"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"fairyinabottle4"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"yienyoong"},"content":"        public Student getStudent(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"yienyoong"},"content":"        public Appointment getAppointment(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":178,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":179,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"fairyinabottle4"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"SiTingST"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"SiTingST"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cSameDateAppointmentList\u003e predicate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"SiTingST"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"SiTingST"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"picasdan9"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"picasdan9"},"content":"        public boolean hasOverlappingAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"picasdan9"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"yienyoong"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"picasdan9"},"content":"        public ObservableList\u003cSameDateAppointmentList\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":211,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":213,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":215,"author":{"gitId":"yienyoong"},"content":"        public List\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"picasdan9"},"content":"     * A Model stub that contains a single appointment.","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"fairyinabottle4"},"content":"    private class ModelStubWithStudentAndAppointment extends ModelStub {","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"fairyinabottle4"},"content":"        private final Student student;","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"picasdan9"},"content":"        private final Appointment appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":226,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"fairyinabottle4"},"content":"        ModelStubWithStudentAndAppointment(Student student, Appointment appointment) {","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"fairyinabottle4"},"content":"            requireAllNonNull(student, appointment);","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"fairyinabottle4"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"picasdan9"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"fairyinabottle4"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"fairyinabottle4"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"fairyinabottle4"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":238,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":239,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":240,"author":{"gitId":"picasdan9"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"picasdan9"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":242,"author":{"gitId":"picasdan9"},"content":"            return this.appointment.isSameAppointment(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":245,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":246,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":247,"author":{"gitId":"picasdan9"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2021-03-14"},{"lineNumber":248,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":249,"author":{"gitId":"picasdan9"},"content":"    private class ModelStubAcceptingAppointmentAdded extends ModelStub {","lastModifiedDate":"2021-03-14"},{"lineNumber":250,"author":{"gitId":"fairyinabottle4"},"content":"        final ArrayList\u003cStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":251,"author":{"gitId":"picasdan9"},"content":"        final ArrayList\u003cAppointment\u003e appointmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-14"},{"lineNumber":252,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":253,"author":{"gitId":"fairyinabottle4"},"content":"        public ModelStubAcceptingAppointmentAdded(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":254,"author":{"gitId":"fairyinabottle4"},"content":"            students.add(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":255,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":256,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":257,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":258,"author":{"gitId":"picasdan9"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":259,"author":{"gitId":"picasdan9"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":260,"author":{"gitId":"picasdan9"},"content":"            return appointmentsAdded.stream().anyMatch(appointment::isSameAppointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":261,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":262,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":263,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":264,"author":{"gitId":"picasdan9"},"content":"        public boolean hasOverlappingAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":265,"author":{"gitId":"picasdan9"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":266,"author":{"gitId":"picasdan9"},"content":"            return appointmentsAdded.stream().anyMatch(appointment::doesTimeOverlap);","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":268,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":269,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":270,"author":{"gitId":"picasdan9"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":271,"author":{"gitId":"picasdan9"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":272,"author":{"gitId":"picasdan9"},"content":"            appointmentsAdded.add(appointment);","lastModifiedDate":"2021-03-14"},{"lineNumber":273,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":274,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":275,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":276,"author":{"gitId":"fairyinabottle4"},"content":"        public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":277,"author":{"gitId":"SiTingST"},"content":"            return new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":278,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":279,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":280,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":281,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":41,"yienyoong":32,"SiTingST":6,"picasdan9":202}},{"path":"src/test/java/seedu/student/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"        Student studentInList \u003d model.getStudentList().get(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"fairyinabottle4":18,"yienyoong":1,"-":26}},{"path":"src/test/java/seedu/student/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"        public Path getStudentBookFilePath() {","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"        public void setStudentBookFilePath(Path studentBookFilePath) {","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"        public void setStudentBook(ReadOnlyStudentBook newData) {","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"        public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"yienyoong"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"yienyoong"},"content":"        public boolean isExistingMatricNumber(MatriculationNumber matricNum) {","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"yienyoong"},"content":"            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"fairyinabottle4"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"yienyoong"},"content":"        public Student getStudent(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"yienyoong"},"content":"        public Appointment getAppointment(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"fairyinabottle4"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"SiTingST"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"SiTingST"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cSameDateAppointmentList\u003e predicate) {","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"SiTingST"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"SiTingST"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"picasdan9"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"picasdan9"},"content":"        public boolean hasOverlappingAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"picasdan9"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"yienyoong"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":199,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":200,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"picasdan9"},"content":"        public ObservableList\u003cSameDateAppointmentList\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"picasdan9"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":205,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":206,"author":{"gitId":"yienyoong"},"content":"        public List\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":207,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":208,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"fairyinabottle4"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"fairyinabottle4"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"fairyinabottle4"},"content":"        private final Student student;","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"fairyinabottle4"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"fairyinabottle4"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"fairyinabottle4"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"fairyinabottle4"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"fairyinabottle4"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"fairyinabottle4"},"content":"            return this.student.isSameStudent(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"fairyinabottle4"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"fairyinabottle4"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"fairyinabottle4"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"fairyinabottle4"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"fairyinabottle4"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"fairyinabottle4"},"content":"            return studentsAdded.stream().anyMatch(student::isSameStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"fairyinabottle4"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"fairyinabottle4"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":244,"author":{"gitId":"fairyinabottle4"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"fairyinabottle4"},"content":"        public ReadOnlyStudentBook getStudentBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":249,"author":{"gitId":"SiTingST"},"content":"            return new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"fairyinabottle4":55,"yienyoong":32,"SiTingST":6,"picasdan9":21,"-":139}},{"path":"src/test/java/seedu/student/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_emptyStudentBook_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_nonEmptyStudentBook_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        Model model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.setStudentBook(new StudentBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"fairyinabottle4":12,"-":20}},{"path":"src/test/java/seedu/student/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"fairyinabottle4":1,"-":53}},{"path":"src/test/java/seedu/student/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MEDICAL_DETAILS;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_SCHOOL_RESIDENCE;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_VACCINATION_STATUS;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.student.StudentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_MATRIC_AMY \u003d \"A0199264N\";","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_MATRIC_BOB \u003d \"A0245431K\";","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_FACULTY_AMY \u003d \"MUSIC\";","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_FACULTY_BOB \u003d \"FASS\";","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_STATUS_AMY \u003d \"vaccinated\";","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_STATUS_BOB \u003d \"not vaccinated\";","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_DETAILS_AMY \u003d \"none\";","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_DETAILS_BOB \u003d \"peanut allergy\";","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_RESIDENCE_AMY \u003d \"RC4\";","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String VALID_RESIDENCE_BOB \u003d \"CAPT\";","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"    public static final String VALID_DATE_AMY_APPOINTMENT \u003d \"2021-01-01\";","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"    public static final String VALID_DATE_BOB_APPOINTMENT \u003d \"2021-01-02\";","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"    public static final String VALID_START_TIME_AMY_APPOINTMENT \u003d \"16:00\";","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"    public static final String VALID_START_TIME_BOB_APPOINTMENT \u003d \"17:00\";","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MATRIC_DESC_AMY \u003d \" \" + PREFIX_MATRICULATION_NUMBER + VALID_MATRIC_AMY;","lastModifiedDate":"2021-02-28"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MATRIC_DESC_BOB \u003d \" \" + PREFIX_MATRICULATION_NUMBER + VALID_MATRIC_BOB;","lastModifiedDate":"2021-02-28"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String FACULTY_DESC_AMY \u003d \" \" + PREFIX_FACULTY + VALID_FACULTY_AMY;","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String FACULTY_DESC_BOB \u003d \" \" + PREFIX_FACULTY + VALID_FACULTY_BOB;","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_VACCINATION_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_VACCINATION_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DETAILS_DESC_AMY \u003d \" \" + PREFIX_MEDICAL_DETAILS + VALID_DETAILS_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DETAILS_DESC_BOB \u003d \" \" + PREFIX_MEDICAL_DETAILS + VALID_DETAILS_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String RESIDENCE_DESC_AMY \u003d \" \" + PREFIX_SCHOOL_RESIDENCE + VALID_RESIDENCE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String RESIDENCE_DESC_BOB \u003d \" \" + PREFIX_SCHOOL_RESIDENCE + VALID_RESIDENCE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"    public static final String DATE_DESC_AMY_APPOINTMENT \u003d \" \" + PREFIX_DATE + VALID_DATE_AMY_APPOINTMENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"picasdan9"},"content":"    public static final String DATE_DESC_BOB_APPOINTMENT \u003d \" \" + PREFIX_DATE + VALID_DATE_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"picasdan9"},"content":"    public static final String START_TIME_DESC_AMY_APPOINTMENT \u003d \" \" + PREFIX_START_TIME","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":"            + VALID_START_TIME_AMY_APPOINTMENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"picasdan9"},"content":"    public static final String START_TIME_DESC_BOB_APPOINTMENT \u003d \" \" + PREFIX_START_TIME","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"            + VALID_START_TIME_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String INVALID_MATRIC_DESC \u003d \" \" + PREFIX_MATRICULATION_NUMBER","lastModifiedDate":"2021-02-28"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"            + \"A01Z34567F\"; // \u0027Z\u0027 not allowed in matriculation number","lastModifiedDate":"2021-02-28"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String INVALID_FACULTY_DESC \u003d \" \" + PREFIX_FACULTY + \"SOC\";","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_VACCINATION_STATUS + \"v@ccin@ted\";","lastModifiedDate":"2021-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String INVALID_DETAILS_DESC \u003d \" \" + PREFIX_MEDICAL_DETAILS;","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String INVALID_RESIDENCE_DESC \u003d \" \" + PREFIX_SCHOOL_RESIDENCE + \"rc5\";","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"picasdan9"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"next week\";","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"picasdan9"},"content":"    public static final String INVALID_START_TIME_DESC \u003d \" \" + PREFIX_START_TIME + \"twelve o\u0027clock\";","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"picasdan9"},"content":"    public static final String INVALID_END_TIME_DESC \u003d \" \" + PREFIX_END_TIME + \"30min later\";","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).withMatric(VALID_MATRIC_AMY)","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"                .withFaculty(VALID_FACULTY_AMY)","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"                .withVacStatus(VALID_STATUS_AMY).withMedDetails(VALID_DETAILS_AMY)","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"                .withSchoolRes(VALID_RESIDENCE_AMY).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).withMatric(VALID_MATRIC_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"                .withFaculty(VALID_FACULTY_BOB)","lastModifiedDate":"2021-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"                .withVacStatus(VALID_STATUS_BOB).withMedDetails(VALID_DETAILS_BOB)","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"                .withSchoolRes(VALID_RESIDENCE_BOB).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBook expectedStudentBook \u003d new StudentBook(actualModel.getStudentBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":159,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(expectedStudentBook, actualModel.getStudentBook());","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"fairyinabottle4"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"fairyinabottle4"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":169,"author":{"gitId":"fairyinabottle4"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":"        final MatriculationNumber matriculationNumber \u003d student.getMatriculationNumber();","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"SiTingST"},"content":"        model.updateFilteredStudentList(new StudentContainsMatriculationNumberPredicate(matriculationNumber));","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"fairyinabottle4"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student with the given {@code matriculationNumber} in the","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"yienyoong"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-03-11"},{"lineNumber":179,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":180,"author":{"gitId":"fairyinabottle4"},"content":"    public static void showStudentWithMatricNum(Model model, MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"yienyoong"},"content":"        assertTrue(MatriculationNumber.isValidMatric(matriculationNumber.toString()));","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"fairyinabottle4"},"content":"        List\u003cStudent\u003e studentListTest \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"fairyinabottle4"},"content":"        Student student \u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":185,"author":{"gitId":"fairyinabottle4"},"content":"        for (Student p : studentListTest) {","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"yienyoong"},"content":"            if (p.getMatriculationNumber().equals(matriculationNumber)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":187,"author":{"gitId":"fairyinabottle4"},"content":"                student \u003d p;","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"yienyoong"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":189,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":190,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(student !\u003d null);","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"SiTingST"},"content":"        final MatriculationNumber studentMatriculationNumber \u003d student.getMatriculationNumber();","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"SiTingST"},"content":"        model.updateFilteredStudentList(new StudentContainsMatriculationNumberPredicate((studentMatriculationNumber)));","lastModifiedDate":"2021-03-28"},{"lineNumber":194,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"SiTingST"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"fairyinabottle4":75,"yienyoong":11,"SiTingST":6,"picasdan9":16,"-":89}},{"path":"src/test/java/seedu/student/logic/commands/DeleteApptCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"import static seedu.student.testutil.TypicalAppointments.getTypicalStudentBook;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"import seedu.student.testutil.TypicalStudents;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":" * {@code DeleteApptCommand}.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"public class DeleteApptCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"    // getTypicalStudentBook() called from TypicalAppointments, contains typical appointments","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"    public void execute_validMatricNumUnfilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"        MatriculationNumber matricNumberToDelete \u003d TypicalStudents.ALICE.getMatriculationNumber(); // A3456789D","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"        Appointment apptToDelete \u003d model.getAppointment(matricNumberToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"        Student student \u003d model.getStudent(matricNumberToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"        DeleteApptCommand deleteApptCommand \u003d new DeleteApptCommand(matricNumberToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"        String expectedMessage \u003d String.format(DeleteApptCommand.MESSAGE_DELETE_APPT_SUCCESS,","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"                student.getName(), apptToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"        expectedModel.deleteAppointment(apptToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"        assertCommandSuccess(deleteApptCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"    public void execute_invalidMatricNumUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"        MatriculationNumber matricNumberToDelete \u003d TypicalStudents.HOON.getMatriculationNumber(); // Does not exist","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"        DeleteApptCommand deleteApptCommand \u003d new DeleteApptCommand(matricNumberToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"        assertCommandFailure(deleteApptCommand, model, DeleteApptCommand.MESSAGE_NONEXISTENT_APPT);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"    public void equals() {","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"        MatriculationNumber matricNumberAlice \u003d TypicalStudents.ALICE.getMatriculationNumber(); // A3456789D","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"        MatriculationNumber matricNumberHoon \u003d TypicalStudents.HOON.getMatriculationNumber();","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"        DeleteApptCommand deleteApptFirstCommand \u003d new DeleteApptCommand(matricNumberAlice);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"        DeleteStudentCommand deleteApptSecondCommand \u003d new DeleteStudentCommand(matricNumberHoon);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"        assertTrue(deleteApptFirstCommand.equals(deleteApptFirstCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"        DeleteApptCommand deleteApptFirstCommandCopy \u003d new DeleteApptCommand(matricNumberAlice);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"        assertTrue(deleteApptFirstCommand.equals(deleteApptFirstCommandCopy));","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"        assertFalse(deleteApptFirstCommand.equals(1));","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"yienyoong"},"content":"        assertFalse(deleteApptFirstCommand.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"yienyoong"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"yienyoong"},"content":"        assertFalse(deleteApptFirstCommand.equals(deleteApptSecondCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"yienyoong":77}},{"path":"src/test/java/seedu/student/logic/commands/DeleteStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.showStudentWithMatricNum;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalMatricNumbers.MATRIC_NUMBER_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalMatricNumbers.MATRIC_NUMBER_SECOND_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"import seedu.student.testutil.TypicalStudents;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"public class DeleteStudentCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"    public void execute_invalidMatricNumUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(new MatriculationNumber(","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"                MATRIC_NUMBER_FIRST_STUDENT));","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"        assertCommandFailure(deleteStudentCommand, model, Messages.MESSAGE_NONEXISTENT_MATRIC_NUM);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"    public void execute_validMatricNumFilteredList_success() {","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"        MatriculationNumber matricNumberToDelete \u003d TypicalStudents.ALICE.getMatriculationNumber();","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        showStudentWithMatricNum(model, matricNumberToDelete);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"        Student studentToDelete \u003d model.getStudent(matricNumberToDelete);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(matricNumberToDelete);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"        assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"        DeleteStudentCommand deleteFirstCommand \u003d new DeleteStudentCommand(new MatriculationNumber(","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"                MATRIC_NUMBER_FIRST_STUDENT));","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"        DeleteStudentCommand deleteSecondCommand \u003d new DeleteStudentCommand(new MatriculationNumber(","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"                MATRIC_NUMBER_SECOND_STUDENT));","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"        DeleteStudentCommand deleteFirstCommandCopy \u003d new DeleteStudentCommand(new MatriculationNumber(","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"                MATRIC_NUMBER_FIRST_STUDENT));","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"fairyinabottle4":22,"yienyoong":19,"-":47}},{"path":"src/test/java/seedu/student/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, descriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"        Model expectedModel \u003d new ModelManager(new StudentBook(model.getStudentBook()), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedStudent \u003d studentInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"                .build();","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStudent, descriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"        Model expectedModel \u003d new ModelManager(new StudentBook(model.getStudentBook()), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, new EditStudentDescriptor());","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"        Model expectedModel \u003d new ModelManager(new StudentBook(model.getStudentBook()), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"        Model expectedModel \u003d new ModelManager(new StudentBook(model.getStudentBook()), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STUDENT, descriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"yienyoong"},"content":"        Student studentInList \u003d model.getStudentList().get(INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_OUT_OF_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"fairyinabottle4"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"yienyoong"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStudentList().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"                new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_OUT_OF_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"fairyinabottle4"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STUDENT, DESC_AMY);","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STUDENT, copyDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_STUDENT, DESC_AMY)));","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_STUDENT, DESC_BOB)));","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"fairyinabottle4":76,"yienyoong":2,"-":94}},{"path":"src/test/java/seedu/student/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"fairyinabottle4":15,"-":38}},{"path":"src/test/java/seedu/student/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"fairyinabottle4":5,"-":15}},{"path":"src/test/java/seedu/student/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_NO_STUDENTS_ARE_LISTED;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.FacultyContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidenceContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatusContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"public class FilterCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        VaccinationStatusContainsKeywords vaccinationPredicate \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"                new VaccinationStatusContainsKeywords(\"vaccinated\");","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        FacultyContainsKeywords facultyPredicate \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"                new FacultyContainsKeywords(\"COM\");","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        SchoolResidenceContainsKeywords schoolResidencePredicate \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"                new SchoolResidenceContainsKeywords(\"RVRC\");","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        FilterCommand findByVaccinationStatus \u003d new FilterCommand(vaccinationPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        FilterCommand findByFaculty \u003d new FilterCommand(facultyPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        FilterCommand findBySchoolResidence \u003d new FilterCommand(schoolResidencePredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        assertTrue(findByVaccinationStatus.equals(findByVaccinationStatus));","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"        FilterCommand findByVaccinationStatusCopy \u003d new FilterCommand(vaccinationPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"        assertTrue(findByVaccinationStatus.equals(findByVaccinationStatusCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        assertFalse(findByVaccinationStatus.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        assertFalse(findByVaccinationStatus.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        assertFalse(findByVaccinationStatus.equals(findByFaculty));","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        assertTrue(findByFaculty.equals(findByFaculty));","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"        FilterCommand findByFacultyCopy \u003d new FilterCommand(facultyPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"        assertTrue(findByFaculty.equals(findByFacultyCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"        assertFalse(findByFaculty.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"        assertFalse(findByFaculty.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"        assertFalse(findByFaculty.equals(findBySchoolResidence));","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"        assertTrue(findBySchoolResidence.equals(findBySchoolResidence));","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"        FilterCommand findBySchoolResidenceCopy \u003d new FilterCommand(schoolResidencePredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"        assertTrue(findBySchoolResidence.equals(findBySchoolResidenceCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"        assertFalse(findBySchoolResidence.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"        assertFalse(findBySchoolResidence.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"        assertFalse(findBySchoolResidence.equals(findByFaculty));","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_zeroKeywords_noStudentFoundFilterByVaccinationStatus() {","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_STUDENTS_ARE_LISTED, 0);","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"        VaccinationStatusContainsKeywords vaccinationPredicate \u003d new VaccinationStatusContainsKeywords(\"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"SiTingST"},"content":"        FilterCommand command \u003d new FilterCommand(vaccinationPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.updateFilteredStudentList(vaccinationPredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"SiTingST"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_zeroKeywords_noStudentFoundFilterByFaculty() {","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"SiTingST"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_STUDENTS_ARE_LISTED, 0);","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"        FacultyContainsKeywords facultyPredicate \u003d new FacultyContainsKeywords(\"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"        FilterCommand command \u003d new FilterCommand(facultyPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.updateFilteredStudentList(facultyPredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_zeroKeywords_noStudentFoundFilterBySchoolResidence() {","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"SiTingST"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_STUDENTS_ARE_LISTED, 0);","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":"        SchoolResidenceContainsKeywords schoolResidencePredicate \u003d new SchoolResidenceContainsKeywords(\"\");","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"SiTingST"},"content":"        FilterCommand command \u003d new FilterCommand(schoolResidencePredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel.updateFilteredStudentList(schoolResidencePredicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"SiTingST"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":23,"SiTingST":98}},{"path":"src/test/java/seedu/student/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_NONEXISTENT_MATRIC_NUM;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalMatricNumbers.MATRIC_NUMBER_FIFTH_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalMatricNumbers.MATRIC_NUMBER_FOURTH_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.appointment.AppointmentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.student.StudentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        MatriculationNumber firstMatriculationNumber \u003d new MatriculationNumber(MATRIC_NUMBER_FOURTH_STUDENT);","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        MatriculationNumber secondMatriculationNumber \u003d new MatriculationNumber(MATRIC_NUMBER_FIFTH_STUDENT);","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        StudentContainsMatriculationNumberPredicate firstStudentPredicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"                new StudentContainsMatriculationNumberPredicate(firstMatriculationNumber);","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        StudentContainsMatriculationNumberPredicate secondStudentPredicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"                new StudentContainsMatriculationNumberPredicate(secondMatriculationNumber);","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        AppointmentContainsMatriculationNumberPredicate firstAppointmentPredicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"                new AppointmentContainsMatriculationNumberPredicate(firstMatriculationNumber);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        AppointmentContainsMatriculationNumberPredicate secondAppointmentPredicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"                new AppointmentContainsMatriculationNumberPredicate(secondMatriculationNumber);","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstStudentPredicate, firstAppointmentPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondStudentPredicate, secondAppointmentPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstStudentPredicate, firstAppointmentPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NONEXISTENT_MATRIC_NUM, 0);","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"        StudentContainsMatriculationNumberPredicate studentPredicate \u003d prepareStudentPredicate(\"A0876534R\");","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"        AppointmentContainsMatriculationNumberPredicate appointmentPredicate \u003d prepareAppointmentPredicate(\"A0876534R\");","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"        FindCommand command \u003d new FindCommand(studentPredicate, appointmentPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"        expectedModel.updateFilteredStudentList(studentPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"        expectedModel.updateFilteredAppointmentList(appointmentPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"     * Parses {@code userInput} into a {@code StudentContainsMatriculationNumberPredicate}.","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"    private StudentContainsMatriculationNumberPredicate prepareStudentPredicate(String userInput) {","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"        return new StudentContainsMatriculationNumberPredicate(new MatriculationNumber(userInput));","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"SiTingST"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"     * Parses {@code userInput} into a {@code AppointmentContainsMatriculationNumberPredicate}.","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"    private AppointmentContainsMatriculationNumberPredicate prepareAppointmentPredicate(String userInput) {","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"        return new AppointmentContainsMatriculationNumberPredicate(new MatriculationNumber(userInput));","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"fairyinabottle4":13,"yienyoong":1,"SiTingST":38,"-":42}},{"path":"src/test/java/seedu/student/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"fairyinabottle4":5,"-":15}},{"path":"src/test/java/seedu/student/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        model \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        expectedModel \u003d new ModelManager(model.getStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"fairyinabottle4":11,"-":28}},{"path":"src/test/java/seedu/student/logic/commands/statscommands/StatsApptCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yienyoong"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"import seedu.student.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"import seedu.student.testutil.TypicalStudents;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"public class StatsApptCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"    // getTypicalStudentBook() called from TypicalStudents, no appointments","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"    private LocalDate currDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"    // private LocalDate currDate \u003d LocalDate.of(2021, 3, 28);","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"    private LocalDate aliceDate \u003d currDate.minusWeeks(1).plusDays(1);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"    private LocalDate carlDate \u003d currDate.plusWeeks(1).minusDays(1);","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"    private LocalDate danielDate \u003d currDate.plusWeeks(1);","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"    private LocalDate elleDate \u003d currDate.minusWeeks(1);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"    private LocalDate fionaDate \u003d currDate.plusWeeks(2);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"    private LocalDate georgeDate \u003d currDate.minusWeeks(2);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"    private LocalTime currTime \u003d LocalTime.now();","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"    // private LocalTime currTime \u003d LocalTime.of(02, 15);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"    private LocalTime midnight \u003d LocalTime.of(00, 00);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"    private int currHour \u003d currTime.getHour();","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"    private String generalTimeString \u003d String.format(\"%02d\", currHour) + \":00\";","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"    private LocalTime generalTime \u003d LocalTime.parse(generalTimeString);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"    private LocalTime aliceStartTime \u003d generalTime.plusHours(4);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"    private LocalTime bensonStartTime \u003d generalTime.plusHours(1);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"    private LocalDate bensonDate \u003d bensonStartTime.equals(midnight) ? currDate.plusDays(1) : currDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"    private LocalTime carlStartTime \u003d generalTime.minusHours(4);","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"    // past week 6 days ago (included in past)","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"    public final Appointment aliceAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"            .withMatric(TypicalStudents.ALICE.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"            .withStartTime(aliceStartTime).withDate(aliceDate).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"    // upcoming week same day but after current time (included in upcoming)","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"    public final Appointment bensonAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"            .withMatric(TypicalStudents.BENSON.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"            .withStartTime(bensonStartTime).withDate(bensonDate).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"    // upcoming week 6 days later (included in upcoming)","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"    public final Appointment carlAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"            .withMatric(TypicalStudents.CARL.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"            .withStartTime(carlStartTime).withDate(carlDate).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"    // upcoming week 7 days later (not included)","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"    public final Appointment danielAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"            .withMatric(TypicalStudents.DANIEL.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"            .withStartTime(generalTime).withDate(danielDate).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":"    // past week 7 days later (not included)","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"yienyoong"},"content":"    public final Appointment elleAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"yienyoong"},"content":"            .withMatric(TypicalStudents.ELLE.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"yienyoong"},"content":"            .withStartTime(generalTime).withDate(elleDate).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"    // 2 weeks later (not included)","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"    public final Appointment fionaAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yienyoong"},"content":"            .withMatric(TypicalStudents.FIONA.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"yienyoong"},"content":"            .withStartTime(generalTime).withDate(fionaDate).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"yienyoong"},"content":"    // 2 weeks before (not included)","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"yienyoong"},"content":"    public final Appointment georgeAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"yienyoong"},"content":"            .withMatric(TypicalStudents.GEORGE.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"yienyoong"},"content":"            .withStartTime(generalTime).withDate(georgeDate).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"yienyoong"},"content":"    public List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"yienyoong"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(aliceAppointment, bensonAppointment, carlAppointment,","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"yienyoong"},"content":"                danielAppointment, elleAppointment, fionaAppointment, georgeAppointment));","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"yienyoong"},"content":"    public void execute_typicalAppointmentsWithAppointments_successful() {","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"yienyoong"},"content":"        for (Appointment appt : getTypicalAppointments()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"yienyoong"},"content":"            expectedModel.addAppointment(appt);","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"yienyoong"},"content":"        String expectedOutput \u003d \"Number of upcoming appointments in the next week: 2\" + \"\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"yienyoong"},"content":"                + \"Number of appointments in the past week: 1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"yienyoong"},"content":"        StatsApptCommand statsApptCommand \u003d new StatsApptCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"yienyoong"},"content":"        assertCommandSuccess(statsApptCommand, expectedModel, expectedOutput, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"yienyoong"},"content":"    public void execute_typicalAppointmentsEmpty_successful() {","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"yienyoong"},"content":"        String expectedOutput \u003d \"Number of upcoming appointments in the next week: 0\" + \"\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"yienyoong"},"content":"                + \"Number of appointments in the past week: 0\";","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"yienyoong"},"content":"        StatsApptCommand statsApptCommand \u003d new StatsApptCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"yienyoong"},"content":"        assertCommandSuccess(statsApptCommand, expectedModel, expectedOutput, expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"yienyoong":110}},{"path":"src/test/java/seedu/student/logic/commands/statscommands/StatsCommandAllTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandAllTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"        StatsCommandAll firstCommand \u003d new StatsCommandAll();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"        StatsCommandAll secondCommand \u003d new StatsCommandAll();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"        assertTrue(firstCommand.equals(secondCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_typicalStudents_successful() {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"        String expectedOutput \u003d \"Percentage Vaccinated:\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"                + \"   PGPH: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"                + \"   PGPR: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"                + \"   KE7H: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"                + \"   SH: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"                + \"   KRH: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"                + \"   TH: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"                + \"   EH: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"                + \"   RH: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"                + \"   RVRC: 33.33%\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"                + \"   YNC: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"                + \"   TC: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"                + \"   CAPT: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"                + \"   RC4: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"                + \"   USP: 100.00%\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"                + \"   UTR: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"                + \"   DOES NOT LIVE ON CAMPUS: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"                + \"   FASS: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"                + \"   BIZ: 0.00%\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"                + \"   COM: 0.00%\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"                + \"   SCALE: 100.00%\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"                + \"   DEN: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"                + \"   SDE: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"                + \"   DNUS: 0.00%\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"                + \"   ENG: 100.00%\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"                + \"   ISEP: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"                + \"   LAW: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"                + \"   MED: 0.00%\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"                + \"   MUSIC: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"                + \"   SPH: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"                + \"   SPP: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"                + \"   SCI: No available data\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"                + \"   USP: 100.00%\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"                + \"   YNC: No available data\\n\";","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"        StatsCommandAll statsCommandAll \u003d new StatsCommandAll();","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"        assertCommandSuccess(statsCommandAll, expectedModel, expectedOutput, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"fairyinabottle4":8,"yienyoong":55}},{"path":"src/test/java/seedu/student/logic/commands/statscommands/StatsCommandFacultyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.statscommands.StatsCommandFaculty.MESSAGE_STATS_FAILURE;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandFacultyTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"        StatsCommandFaculty firstCommand \u003d new StatsCommandFaculty(new Faculty(\"SCI\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"        StatsCommandFaculty secondCommand \u003d new StatsCommandFaculty(new Faculty(\"SCI\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"        assertTrue(firstCommand.equals(secondCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"        StatsCommandFaculty thirdCommand \u003d new StatsCommandFaculty(new Faculty(\"COM\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"        StatsCommandFaculty fourthCommand \u003d new StatsCommandFaculty(new Faculty(\"USP\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"        assertFalse(thirdCommand.equals(fourthCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"    // test no avaliable data","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_typicalStudents_noAvailableData() {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"        StatsCommandFaculty statsCommandFaculty \u003d new StatsCommandFaculty(new Faculty(\"YNC\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"        assertCommandFailure(statsCommandFaculty, expectedModel, MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"    // test success","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_typicalStudents_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"        String expectedOutput \u003d \"Percentage USP vaccinated: 100.00%\";","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"        StatsCommandFaculty statsCommandFaculty \u003d new StatsCommandFaculty(new Faculty(\"USP\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"        assertCommandSuccess(statsCommandFaculty, expectedModel, expectedOutput, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"fairyinabottle4":12,"yienyoong":33}},{"path":"src/test/java/seedu/student/logic/commands/statscommands/StatsCommandNusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.statscommands.StatsCommandNus.MESSAGE_STATS_FAILURE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandNusTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"        StatsCommandNus firstCommand \u003d new StatsCommandNus();","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"        StatsCommandNus secondCommand \u003d new StatsCommandNus();","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"        assertTrue(firstCommand.equals(secondCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_typicalStudents_successful() {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"        String expectedOutput \u003d \"Percentage NUS vaccinated: 42.86%\";","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"        StatsCommandNus statsCommandNus \u003d new StatsCommandNus();","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"        assertCommandSuccess(statsCommandNus, expectedModel, expectedOutput, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_typicalStudents_noAvailableData() {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"        StatsCommandNus statsCommandNus \u003d new StatsCommandNus();","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        Model emptyModel \u003d new ModelManager(new StudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"        assertCommandFailure(statsCommandNus, emptyModel, MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"fairyinabottle4":12,"yienyoong":27,"SiTingST":1}},{"path":"src/test/java/seedu/student/logic/commands/statscommands/StatsCommandResidenceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.commands.statscommands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.statscommands.StatsCommandResidence.MESSAGE_STATS_FAILURE;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ModelManager;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandResidenceTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"    private static final String VALID_VACCINATED_STATUS_BOB \u003d \"vaccinated\";","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    private static final Student DOES_NOT_LIVE_ON_CAMPUS_BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"            .withFaculty(VALID_FACULTY_BOB).withVacStatus(VALID_VACCINATED_STATUS_BOB)","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"            .withMedDetails(VALID_DETAILS_BOB).withMatric(VALID_MATRIC_BOB)","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"            .withSchoolRes(\"DOES_NOT_LIVE_ON_CAMPUS\").build();","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudentBook(), new UserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"        StatsCommandResidence firstCommand \u003d new StatsCommandResidence(new SchoolResidence(\"RVRC\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"        StatsCommandResidence secondCommand \u003d new StatsCommandResidence(new SchoolResidence(\"RVRC\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"        assertTrue(firstCommand.equals(secondCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"        StatsCommandResidence thirdCommand \u003d new StatsCommandResidence(new SchoolResidence(\"CAPT\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"        StatsCommandResidence fourthCommand \u003d new StatsCommandResidence(new SchoolResidence(\"KRH\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"        assertFalse(thirdCommand.equals(fourthCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"    // test no avaliable data","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_typicalStudents_noAvailableData() {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"        StatsCommandResidence statsCommandResidence \u003d new StatsCommandResidence(new SchoolResidence(\"UTR\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"        assertCommandFailure(statsCommandResidence, expectedModel, MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"    // test success","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_typicalStudents_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"        String expectedOutput \u003d \"Percentage RVRC vaccinated: 33.33%\";","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"        StatsCommandResidence statsCommandResidence \u003d new StatsCommandResidence(new SchoolResidence(\"RVRC\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"        assertCommandSuccess(statsCommandResidence, expectedModel, expectedOutput, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"    // test not on campus no data","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_typicalStudentsNotOnCampus_noAvailableData() {","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"        SchoolResidence notOnCampus \u003d new SchoolResidence(\"DOES_NOT_LIVE_ON_CAMPUS\");","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"        StatsCommandResidence statsCommandResidence \u003d new StatsCommandResidence(notOnCampus);","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"        assertCommandFailure(statsCommandResidence, expectedModel, MESSAGE_STATS_FAILURE);","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"yienyoong"},"content":"    // test not on campus success","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    public void execute_typicalStudentsNotOnCampus_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBook ab \u003d getTypicalStudentBook();","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"        ab.addStudent(DOES_NOT_LIVE_ON_CAMPUS_BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"        Model newModel \u003d new ModelManager(ab, new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"yienyoong"},"content":"        String expectedOutput \u003d \"Percentage DOES NOT LIVE ON CAMPUS vaccinated: 100.00%\";","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"yienyoong"},"content":"        SchoolResidence notOnCampus \u003d new SchoolResidence(\"DOES_NOT_LIVE_ON_CAMPUS\");","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"yienyoong"},"content":"        StatsCommandResidence statsCommandResidence \u003d new StatsCommandResidence(notOnCampus);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"yienyoong"},"content":"        assertCommandSuccess(statsCommandResidence, newModel, expectedOutput, newModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"fairyinabottle4":27,"yienyoong":58}},{"path":"src/test/java/seedu/student/logic/parser/AddAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.DATE_DESC_AMY_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.DATE_DESC_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_MATRIC_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.MATRIC_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.MATRIC_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.START_TIME_DESC_AMY_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.START_TIME_DESC_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DATE_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_START_TIME_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalAppointments.BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"public class AddAppointmentCommandParserTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    private AddAppointmentCommandParser parser \u003d new AddAppointmentCommandParser();","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        Appointment expectedAppointment \u003d new AppointmentBuilder(BOB_APPOINTMENT).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + MATRIC_DESC_BOB + DATE_DESC_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"                        + START_TIME_DESC_BOB_APPOINTMENT,","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"                new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"        // multiple matriculation numbers - last matric number accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"        assertParseSuccess(parser, MATRIC_DESC_AMY + MATRIC_DESC_BOB + DATE_DESC_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"                        + START_TIME_DESC_BOB_APPOINTMENT,","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"            new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"        assertParseSuccess(parser, MATRIC_DESC_BOB + DATE_DESC_AMY_APPOINTMENT + DATE_DESC_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"                        + START_TIME_DESC_BOB_APPOINTMENT,","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"                new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"        // multiple start times  - last start ime accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"        assertParseSuccess(parser, MATRIC_DESC_BOB + DATE_DESC_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"                        + START_TIME_DESC_AMY_APPOINTMENT + START_TIME_DESC_BOB_APPOINTMENT,","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"                new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"        // multiple end times  - last end time accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"        assertParseSuccess(parser, MATRIC_DESC_BOB + DATE_DESC_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"                    + START_TIME_DESC_BOB_APPOINTMENT,","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"            new AddAppointmentCommand(expectedAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppointmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"        // missing matriculation number prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"        assertParseFailure(parser, VALID_MATRIC_BOB + DATE_DESC_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"                + START_TIME_DESC_BOB_APPOINTMENT, expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"        // missing date prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"        assertParseFailure(parser, MATRIC_DESC_BOB + VALID_DATE_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"                + START_TIME_DESC_BOB_APPOINTMENT, expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"        // missing start time prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"        assertParseFailure(parser, MATRIC_DESC_BOB + DATE_DESC_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"                + VALID_START_TIME_BOB_APPOINTMENT, expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"        assertParseFailure(parser, VALID_MATRIC_BOB + VALID_DATE_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"                + VALID_START_TIME_BOB_APPOINTMENT, expectedMessage);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"picasdan9"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"picasdan9"},"content":"        // invalid matriculation number","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":"        assertParseFailure(parser, INVALID_MATRIC_DESC + DATE_DESC_BOB_APPOINTMENT","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"picasdan9"},"content":"                        + START_TIME_DESC_BOB_APPOINTMENT,","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"                MatriculationNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":20,"picasdan9":66}},{"path":"src/test/java/seedu/student/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.DETAILS_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.DETAILS_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.FACULTY_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.FACULTY_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_DETAILS_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_FACULTY_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_MATRIC_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_RESIDENCE_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.MATRIC_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.MATRIC_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.RESIDENCE_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.RESIDENCE_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.STATUS_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.AddCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"        Student expectedStudent \u003d new StudentBuilder(BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"        // multiple matriculation numbers - last matric number accepted","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + FACULTY_DESC_BOB + MATRIC_DESC_AMY + MATRIC_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"        // multiple faculties - last faculty accepted","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_AMY + FACULTY_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"                        + EMAIL_DESC_AMY + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"        // multiple vaccination statuses - last vaccination status accepted","lastModifiedDate":"2021-02-28"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_AMY + STATUS_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"                        + DETAILS_DESC_BOB + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"        // multiple medical details  - last medical details accepted","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_AMY","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"                        + DETAILS_DESC_BOB + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"        // multiple school residences  - last school residences accepted","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_AMY + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":129,"author":{"gitId":"fairyinabottle4"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-03"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":"        Student expectedStudent \u003d new StudentBuilder(AMY).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + MATRIC_DESC_AMY + FACULTY_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"fairyinabottle4"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + STATUS_DESC_AMY + DETAILS_DESC_AMY + RESIDENCE_DESC_AMY,","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"                new AddCommand(expectedStudent));","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":"        // missing matriculation number prefix","lastModifiedDate":"2021-02-28"},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_MATRIC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":"        // missing faculty prefix","lastModifiedDate":"2021-03-09"},{"lineNumber":149,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + VALID_FACULTY_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"fairyinabottle4"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":158,"author":{"gitId":"fairyinabottle4"},"content":"                + VALID_EMAIL_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"                + EMAIL_DESC_BOB + VALID_ADDRESS_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":164,"author":{"gitId":"fairyinabottle4"},"content":"        // missing vaccination status prefix","lastModifiedDate":"2021-02-28"},{"lineNumber":165,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_MATRIC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":166,"author":{"gitId":"fairyinabottle4"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + VALID_STATUS_BOB + DETAILS_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"fairyinabottle4"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":168,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":169,"author":{"gitId":"fairyinabottle4"},"content":"        // missing medical details prefix","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_MATRIC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":171,"author":{"gitId":"fairyinabottle4"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + VALID_DETAILS_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":172,"author":{"gitId":"fairyinabottle4"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_MATRIC_BOB + FACULTY_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":176,"author":{"gitId":"fairyinabottle4"},"content":"                + VALID_EMAIL_BOB + VALID_ADDRESS_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":183,"author":{"gitId":"fairyinabottle4"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":184,"author":{"gitId":"fairyinabottle4"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":185,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":186,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid matriculation number","lastModifiedDate":"2021-02-28"},{"lineNumber":187,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_MATRIC_DESC + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":188,"author":{"gitId":"fairyinabottle4"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":189,"author":{"gitId":"fairyinabottle4"},"content":"                MatriculationNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid faculty","lastModifiedDate":"2021-03-09"},{"lineNumber":192,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + INVALID_FACULTY_DESC + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":193,"author":{"gitId":"fairyinabottle4"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":194,"author":{"gitId":"fairyinabottle4"},"content":"                Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":195,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-03-09"},{"lineNumber":198,"author":{"gitId":"fairyinabottle4"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":199,"author":{"gitId":"fairyinabottle4"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":203,"author":{"gitId":"fairyinabottle4"},"content":"                        + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":204,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":208,"author":{"gitId":"fairyinabottle4"},"content":"                        + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":209,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":210,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":211,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid vaccination status","lastModifiedDate":"2021-02-28"},{"lineNumber":212,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":213,"author":{"gitId":"fairyinabottle4"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_STATUS_DESC + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":214,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB, VaccinationStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid medical details","lastModifiedDate":"2021-03-02"},{"lineNumber":217,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":218,"author":{"gitId":"fairyinabottle4"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + INVALID_DETAILS_DESC","lastModifiedDate":"2021-03-09"},{"lineNumber":219,"author":{"gitId":"fairyinabottle4"},"content":"                        + RESIDENCE_DESC_BOB,","lastModifiedDate":"2021-03-09"},{"lineNumber":220,"author":{"gitId":"fairyinabottle4"},"content":"                MedicalDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid school residence","lastModifiedDate":"2021-03-03"},{"lineNumber":223,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":224,"author":{"gitId":"fairyinabottle4"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":225,"author":{"gitId":"fairyinabottle4"},"content":"                        + INVALID_RESIDENCE_DESC, SchoolResidence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":226,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":227,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + MATRIC_DESC_BOB + FACULTY_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":230,"author":{"gitId":"fairyinabottle4"},"content":"                + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + STATUS_DESC_BOB + DETAILS_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":233,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + MATRIC_DESC_BOB + FACULTY_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":234,"author":{"gitId":"fairyinabottle4"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + STATUS_DESC_BOB + DETAILS_DESC_BOB","lastModifiedDate":"2021-03-09"},{"lineNumber":235,"author":{"gitId":"fairyinabottle4"},"content":"                        + DETAILS_DESC_BOB, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"fairyinabottle4":184,"-":53}},{"path":"src/test/java/seedu/student/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"fairyinabottle4":1,"-":149}},{"path":"src/test/java/seedu/student/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.Command;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"fairyinabottle4":3,"-":35}},{"path":"src/test/java/seedu/student/logic/parser/DeleteStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalMatricNumbers.MATRIC_NUMBER_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":" * outside of the DeleteStudentCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":" * same path through the DeleteStudentCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"public class DeleteStudentCommandParserTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseSuccess(parser, MATRIC_NUMBER_FIRST_STUDENT,","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"                new DeleteStudentCommand(new MatriculationNumber(MATRIC_NUMBER_FIRST_STUDENT)));","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"fairyinabottle4":7,"yienyoong":7,"-":21}},{"path":"src/test/java/seedu/student/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_DETAILS_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_FACULTY_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_MATRIC_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_RESIDENCE_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_FACULTY_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_RESIDENCE_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalIndexes.INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, \"1 o/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MATRIC_DESC,","lastModifiedDate":"2021-02-28"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"                MatriculationNumber.MESSAGE_CONSTRAINTS); // invalid matric number","lastModifiedDate":"2021-02-28"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, \"1\" + INVALID_FACULTY_DESC, Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STATUS_DESC, VaccinationStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, \" 1\" + INVALID_DETAILS_DESC, MedicalDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, \"1\" + INVALID_RESIDENCE_DESC, SchoolResidence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"                        + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"        Index targetIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"                .withMatric(VALID_MATRIC_AMY).withFaculty(VALID_FACULTY_AMY)","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":"                .withVacStatus(VALID_STATUS_AMY).withSchoolRes(VALID_RESIDENCE_AMY)","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"                .withMedDetails(VALID_DETAILS_BOB).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"fairyinabottle4"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":"        Index targetIndex \u003d INDEX_THIRD_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"fairyinabottle4"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"fairyinabottle4"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-02"},{"lineNumber":174,"author":{"gitId":"fairyinabottle4"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"fairyinabottle4"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"fairyinabottle4"},"content":"        Index targetIndex \u003d INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"fairyinabottle4":80,"-":121}},{"path":"src/test/java/seedu/student/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.FacultyContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidenceContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatusContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"    private final FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"    public void parse_validArgs_returnsFilterCommandByVaccinationStatus() {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        FilterCommand expectedFilterCommandByVaccinationStatus \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"                new FilterCommand(new VaccinationStatusContainsKeywords(\"NOT_VACCINATED\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"        assertParseSuccess(parser, \"NOT_VACCINATED\", expectedFilterCommandByVaccinationStatus);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        assertParseSuccess(parser, \" \\n NOT_VACCINATED \\n \\t\", expectedFilterCommandByVaccinationStatus);","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"    public void parse_validArgs_returnsFilterCommandByFaculty() {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        FilterCommand expectedFilterCommandByFaculty \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"                new FilterCommand(new FacultyContainsKeywords(\"MED\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"        assertParseSuccess(parser, \"MED\", expectedFilterCommandByFaculty);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        assertParseSuccess(parser, \" \\n MED \\n \\t\", expectedFilterCommandByFaculty);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    public void parse_validArgs_returnsFilterCommandBySchoolResidence() {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"        FilterCommand expectedFilterCommandBySchoolResidence \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"                new FilterCommand(new SchoolResidenceContainsKeywords(\"CAPT\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"        assertParseSuccess(parser, \"CAPT\", expectedFilterCommandBySchoolResidence);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        assertParseSuccess(parser, \" \\n CAPT \\n \\t\", expectedFilterCommandBySchoolResidence);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"        // Filter by vaccination status","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"not vaccinated\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"vaccinate\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"        // Filter by faculty","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"Science\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"Computing\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"        // Filter by school residence","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"RVRT\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"College of Alice \u0026 Peter Tan\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"                FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":8,"SiTingST":74}},{"path":"src/test/java/seedu/student/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.appointment.AppointmentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.student.StudentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"     \", String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        MatriculationNumber matriculationNumber \u003d new MatriculationNumber(\"A0202893R\");","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"                new FindCommand(new StudentContainsMatriculationNumberPredicate(matriculationNumber),","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"                                new AppointmentContainsMatriculationNumberPredicate(matriculationNumber));","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        assertParseSuccess(parser, \"A0202893R\", expectedFindCommand);","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"        assertParseSuccess(parser, \" \\n A0202893R \\n \\t\", expectedFindCommand);","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"    public void parse_invalidArgs_failure() {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        // invalid matriculation number with all numbers","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"0234567891\", String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        // invalid matriculation number not starting with alphabet A","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"E0491242F\" , String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"        // invalid matriculation number with only starting alphabet of A","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"A\" , String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        // invalid matriculation number with starting alphabet as A but no ending alphabet","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"A02942125\", String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"        // invalid matriculation number with starting alphabet as A, an ending alphabet but","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        // more than 9 alphanumeric characters","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"A023490931T\", String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"        // invalid matriculation number with starting alphabet as A, an ending alphabet but","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"        // less than 9 alphanumeric characters","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"A0234T\", String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"        // invalid matriculation number with starting alphabet as A, an ending alphabet","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"        // and 9 alphanumeric characters but the second to eight-th position are alphanumeric characters","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"A027E34D\", String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"        // invalid matriculation number with starting alphabet as A, no ending alphabet","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"        // and 9 alphanumeric characters but the second to eight-th position are alphanumeric characters","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"A027E341\", String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"SiTingST"},"content":"        // invalid matriculation number with no starting alphabet as A, an ending alphabet","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"        // and 9 alphanumeric characters but the second to eight-th position are alphanumeric characters","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"        assertParseFailure(parser, \"Q0123683R\", String.format(MatriculationNumber.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"fairyinabottle4":5,"SiTingST":61,"-":21}},{"path":"src/test/java/seedu/student/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"fairyinabottle4":11,"-":132}},{"path":"src/test/java/seedu/student/logic/parser/StatsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"yienyoong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommandAll;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommandFaculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommandNus;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.statscommands.StatsCommandResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"yienyoong"},"content":"public class StatsCommandParserTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"yienyoong"},"content":"    private final StatsCommandParser parser \u003d new StatsCommandParser();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"yienyoong"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"yienyoong"},"content":"    public void parse_validArgs_returnsStatsCommandAll() {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"yienyoong"},"content":"        StatsCommandAll expectedStatsCommandAll \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"yienyoong"},"content":"                new StatsCommandAll();","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"        assertParseSuccess(parser, \"all\", expectedStatsCommandAll);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"yienyoong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"yienyoong"},"content":"        assertParseSuccess(parser, \" \\n all   \\n \\t\", expectedStatsCommandAll);","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"yienyoong"},"content":"    public void parse_validArgs_returnsStatsCommandNus() {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"yienyoong"},"content":"        StatsCommandNus expectedStatsCommandNus \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"                new StatsCommandNus();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"yienyoong"},"content":"        assertParseSuccess(parser, \"NUS\", expectedStatsCommandNus);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"yienyoong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"yienyoong"},"content":"        assertParseSuccess(parser, \" \\n NUS   \\n \\t\", expectedStatsCommandNus);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"yienyoong"},"content":"    public void parse_validArgs_returnsStatsCommandFaculty() {","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"yienyoong"},"content":"        StatsCommandFaculty expectedStatsCommandFaculty \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"yienyoong"},"content":"                new StatsCommandFaculty(new Faculty(\"COM\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"yienyoong"},"content":"        assertParseSuccess(parser, \"COM\", expectedStatsCommandFaculty);","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"        assertParseSuccess(parser, \" \\n COM   \\n \\t\", expectedStatsCommandFaculty);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"yienyoong"},"content":"    public void parse_validArgs_returnsStatsCommandResidence() {","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"yienyoong"},"content":"        StatsCommandResidence expectedStatsCommandResidence \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"                new StatsCommandResidence(new SchoolResidence(\"CAPT\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"        assertParseSuccess(parser, \"CAPT\", expectedStatsCommandResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"        assertParseSuccess(parser, \" \\n CAPT   \\n \\t\", expectedStatsCommandResidence);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"    //","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"yienyoong"},"content":"    public void parse_invalidArgs_returnsStatsCommandAll() {","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"AlL\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"All\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"ALL\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \" \\n AlL   \\n \\t\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"abcd\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \" \\n 123   \\n \\t\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"yienyoong"},"content":"    public void parse_invalidArgs_returnsStatsCommandNus() {","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"nus\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"NuS\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"NUs\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"\\n nUs   \\n \\t\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"yienyoong"},"content":"    public void parse_invalidArgs_returnsStatsCommandFaculty() {","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"CoM\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"yienyoong"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"yienyoong"},"content":"    public void parse_invalidArgs_returnsStatsCommandResidence() {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"yienyoong"},"content":"        assertParseFailure(parser, \"CapT\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"yienyoong"},"content":"                StatsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"fairyinabottle4":11,"yienyoong":103}},{"path":"src/test/java/seedu/student/logic/parser/StudentBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalMatricNumbers.MATRIC_NUMBER_FIRST_STUDENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.AddCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"yienyoong"},"content":"import seedu.student.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.FilterCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.ListCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.appointment.AppointmentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.student.StudentContainsMatriculationNumberPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatusContainsKeywords;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"public class StudentBookParserTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    private final StudentBookParser parser \u003d new StudentBookParser();","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"yienyoong"},"content":"        DeleteStudentCommand command \u003d (DeleteStudentCommand) parser.parseCommand(","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"yienyoong"},"content":"                DeleteStudentCommand.COMMAND_WORD + \" \" + MATRIC_NUMBER_FIRST_STUDENT);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"yienyoong"},"content":"        assertEquals(new DeleteStudentCommand(new MatriculationNumber(MATRIC_NUMBER_FIRST_STUDENT)), command);","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"                + INDEX_FIRST_STUDENT.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_STUDENT, descriptor), command);","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"SiTingST"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"SiTingST"},"content":"        String keywords \u003d \"NOT_VACCINATED\";","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"SiTingST"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"                FilterCommand.COMMAND_WORD + \" \" + keywords);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"        assertEquals(new FilterCommand(new VaccinationStatusContainsKeywords(keywords)), command);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"SiTingST"},"content":"        MatriculationNumber matriculationNumber \u003d new MatriculationNumber(\"A0287543E\");","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"                FindCommand.COMMAND_WORD + \" \" + matriculationNumber);","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"        assertEquals(new FindCommand(new StudentContainsMatriculationNumberPredicate(matriculationNumber),","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"SiTingST"},"content":"                new AppointmentContainsMatriculationNumberPredicate(matriculationNumber)), command);","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"fairyinabottle4":31,"yienyoong":4,"SiTingST":15,"-":62}},{"path":"src/test/java/seedu/student/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBookBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(new StudentBook(), new StudentBook(modelManager.getStudentBook()));","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"        userPrefs.setStudentBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        userPrefs.setStudentBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudentBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setStudentBookFilePath(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudentBookFilePath_validPath_setsStudentBookFilePath() {","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"        modelManager.setStudentBookFilePath(path);","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(path, modelManager.getStudentBookFilePath());","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"    public void hasStudent_studentNotInStudentBook_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"    public void hasStudent_studentInStudentBook_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBook addressBook \u003d new StudentBookBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBook differentStudentBook \u003d new StudentBook();","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentStudentBook, userPrefs)));","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"SiTingST"},"content":"        /*","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"SiTingST"},"content":"        String keywords \u003d ALICE.getName().fullName;","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"        modelManager.updateFilteredStudentList(","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"SiTingST"},"content":"                new StudentContainsMatriculationNumberPredicate(new MatriculationNumber(keywords)));","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"SiTingST"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"SiTingST"},"content":"        differentUserPrefs.setStudentBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"fairyinabottle4":27,"SiTingST":7,"-":98}},{"path":"src/test/java/seedu/student/model/StudentBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"import seedu.student.model.appointment.SameDateAppointmentList;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"yienyoong"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"public class StudentBookTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"    private final StudentBook studentBook \u003d new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(Collections.emptyList(), studentBook.getStudentList());","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"        assertThrows(NullPointerException.class, () -\u003e studentBook.resetData(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    public void resetData_withValidReadOnlyStudentBook_replacesData() {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBook newData \u003d getTypicalStudentBook();","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        studentBook.resetData(newData);","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"        assertEquals(newData, studentBook);","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBookStub newData \u003d new StudentBookStub(newStudents);","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e studentBook.resetData(newData));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e studentBook.hasStudent(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"    public void hasStudent_studentNotInStudentBook_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(studentBook.hasStudent(ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"    public void hasStudent_studentInStudentBook_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"        studentBook.addStudent(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(studentBook.hasStudent(ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInStudentBook_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"        studentBook.addStudent(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(studentBook.hasStudent(editedAlice));","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e studentBook.getStudentList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"     * A stub ReadOnlyStudentBook whose students list can violate interface constraints.","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"SiTingST"},"content":"    private static class StudentBookStub implements ReadOnlyStudentBook {","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"picasdan9"},"content":"        private final ObservableList\u003cSameDateAppointmentList\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"            return students;","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"yienyoong"},"content":"        public boolean isExistingMatricNumber(MatriculationNumber matricNum) {","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"yienyoong"},"content":"            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"yienyoong"},"content":"        public Student getStudent(MatriculationNumber matriculationNumber) {","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"picasdan9"},"content":"        public ObservableList\u003cSameDateAppointmentList\u003e getAppointmentList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"picasdan9"},"content":"            return appointments;","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"yienyoong"},"content":"        @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"yienyoong"},"content":"        public Appointment getAppointment(MatriculationNumber matricNum) {","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"yienyoong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"yienyoong"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"picasdan9"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"picasdan9"},"content":"        public List\u003cAppointment\u003e getFlatAppointmentList() {","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"picasdan9"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"fairyinabottle4":36,"yienyoong":16,"SiTingST":6,"picasdan9":14,"-":59}},{"path":"src/test/java/seedu/student/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudentBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setStudentBookFilePath(null));","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"fairyinabottle4":3,"SiTingST":1,"-":17}},{"path":"src/test/java/seedu/student/model/appointment/AppointmentContainsMatriculationNumberPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package seedu.student.model.appointment;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"public class AppointmentContainsMatriculationNumberPredicateTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    public void equals() {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        MatriculationNumber firstMatriculationNumberPredicate \u003d new MatriculationNumber(\"A0987234T\");","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        MatriculationNumber secondMatriculationNumberPredicate \u003d new MatriculationNumber(\"A1234567Y\");","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        AppointmentContainsMatriculationNumberPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"                new AppointmentContainsMatriculationNumberPredicate(firstMatriculationNumberPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        AppointmentContainsMatriculationNumberPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"                new AppointmentContainsMatriculationNumberPredicate(secondMatriculationNumberPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        AppointmentContainsMatriculationNumberPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"                new AppointmentContainsMatriculationNumberPredicate(firstMatriculationNumberPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    /*@Test","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    public void test_matriculationNumberContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        AppointmentContainsMatriculationNumberPredicate predicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"                new AppointmentContainsMatriculationNumberPredicate(new MatriculationNumber(\"A9012345J\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"       //assertTrue(predicate.test(new AppointmentBuilder().withDate()));","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"   */","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"      /* Zero matriculation numbeer","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"        AppointmentContainsMatriculationNumberPredicate predicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"                new AppointmentContainsMatriculationNumberPredicate(new MatriculationNumber(\"\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"        // assertFalse(predicate.test(new StudentBuilder().withMatric(\"A0984245T\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        // Non-matching matriculation number","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        predicate \u003d new AppointmentContainsMatriculationNumberPredicate(new MatriculationNumber(\"A0234673E\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"        //  assertFalse(predicate.test(new StudentBuilder().withMatric(\"A0394852T\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"        // Matriculation number that includes  phone, email and address","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"        predicate \u003d new AppointmentContainsMatriculationNumberPredicate(new MatriculationNumber(\"A3458911D  \" +","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"                \"12345 alice@email.com Main Street)\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"     /*   assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withMatric(\"A3456789D\").withPhone(\"12345\")","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"      */","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"SiTingST":71}},{"path":"src/test/java/seedu/student/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DATE_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_START_TIME_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalAppointments.ALICE_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalAppointments.BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.AppointmentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"public class AppointmentTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    public void isSameAppointment() {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"        assertTrue(ALICE_APPOINTMENT.isSameAppointment(ALICE_APPOINTMENT));","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"        assertFalse(ALICE_APPOINTMENT.isSameAppointment(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"        // same matriculation number, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"        Appointment editedAliceAppointment \u003d new AppointmentBuilder(ALICE_APPOINTMENT)","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"                .withDate(VALID_DATE_BOB_APPOINTMENT).withStartTime(VALID_START_TIME_BOB_APPOINTMENT).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"        assertTrue(ALICE_APPOINTMENT.isSameAppointment(editedAliceAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"        // different matriculation number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        editedAliceAppointment \u003d new AppointmentBuilder(ALICE_APPOINTMENT).withMatric(VALID_MATRIC_BOB).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"        assertFalse(ALICE_APPOINTMENT.isSameAppointment(editedAliceAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"        Appointment aliceAppointmentCopy \u003d new AppointmentBuilder(ALICE_APPOINTMENT).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"        assertTrue(ALICE_APPOINTMENT.equals(aliceAppointmentCopy));","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"        assertTrue(ALICE_APPOINTMENT.equals(ALICE_APPOINTMENT));","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"        assertFalse(ALICE_APPOINTMENT.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"        assertFalse(ALICE_APPOINTMENT.equals(5));","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"        // different appointments -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"        assertFalse(ALICE_APPOINTMENT.equals(BOB_APPOINTMENT));","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"        Appointment editedAliceAppointment \u003d new AppointmentBuilder(ALICE_APPOINTMENT)","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"                .withDate(VALID_DATE_BOB_APPOINTMENT).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"        assertFalse(ALICE_APPOINTMENT.equals(editedAliceAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"        // different start time -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"        editedAliceAppointment \u003d new AppointmentBuilder(ALICE_APPOINTMENT)","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"                .withStartTime(VALID_START_TIME_BOB_APPOINTMENT).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"        assertFalse(ALICE_APPOINTMENT.equals(editedAliceAppointment));","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":7,"picasdan9":56}},{"path":"src/test/java/seedu/student/model/student/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"fairyinabottle4":2,"-":34}},{"path":"src/test/java/seedu/student/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"fairyinabottle4":2,"-":59}},{"path":"src/test/java/seedu/student/model/student/FacultyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"public class FacultyTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Faculty(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_invalidFaculty_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        String invalidFaculty \u003d \"\";","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Faculty(invalidFaculty));","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public void isValidFaculty() {","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        // null faculty","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e Faculty.isValidFaculty(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid faculty","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(Faculty.isValidFaculty(\"\")); // empty string","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(Faculty.isValidFaculty(\" \")); // spaces only","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(Faculty.isValidFaculty(\"C0M\")); // numbers","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(Faculty.isValidFaculty(\"SOC\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(Faculty.isValidFaculty(\"scale\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(Faculty.isValidFaculty(\"sCaLE\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        // valid faculty","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(Faculty.isValidFaculty(\"YNC\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(Faculty.isValidFaculty(\"COM\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(Faculty.isValidFaculty(\"SCALE\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"fairyinabottle4":40}},{"path":"src/test/java/seedu/student/model/student/MatriculationNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"public class MatriculationNumberTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MatriculationNumber(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_invalidMatric_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        String invalidMatric \u003d \"\";","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MatriculationNumber(invalidMatric));","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public void isValidMatric() {","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        // null matriculation number","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e MatriculationNumber.isValidMatric(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid matriculation number","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MatriculationNumber.isValidMatric(\"\")); // empty string","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MatriculationNumber.isValidMatric(\" \")); // spaces only","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MatriculationNumber.isValidMatric(\"E0406245\")); //NUSNET ID","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MatriculationNumber.isValidMatric(\"E0406245Z\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MatriculationNumber.isValidMatric(\"A0199S644\")); //Alphabet in the numbers part","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MatriculationNumber.isValidMatric(\"A0%%$991F\")); //Special char in the numbers part","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MatriculationNumber.isValidMatric(\"A1234H\")); //Not long enough","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MatriculationNumber.isValidMatric(\"A123456L\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MatriculationNumber.isValidMatric(\"A019%264N\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        // valid matriculation number","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(MatriculationNumber.isValidMatric(\"A0123456L\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(MatriculationNumber.isValidMatric(\"A0199264N\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(MatriculationNumber.isValidMatric(\"A0607891T\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"fairyinabottle4":43}},{"path":"src/test/java/seedu/student/model/student/MedicalDetailsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"public class MedicalDetailsTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MedicalDetails(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_invalidMedicalDetails_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        String invalidMedicalDetails \u003d \"\";","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new MedicalDetails(invalidMedicalDetails));","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public void isValidMedicalDetails() {","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        // null medical details","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e MedicalDetails.isValidMedicalDetails(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid medical details","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MedicalDetails.isValidMedicalDetails(\"\")); // empty string","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(MedicalDetails.isValidMedicalDetails(\" \")); // spaces only","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        // valid medical details","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(MedicalDetails.isValidMedicalDetails(\"history of anaphylaxis\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(MedicalDetails.isValidMedicalDetails(\"this is rubbish\")); // gibberish","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(MedicalDetails.isValidMedicalDetails(\"Received heart bypass surgery in 2018\")); // long history","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"fairyinabottle4":36}},{"path":"src/test/java/seedu/student/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"fairyinabottle4":2,"-":38}},{"path":"src/test/java/seedu/student/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"fairyinabottle4":2,"-":38}},{"path":"src/test/java/seedu/student/model/student/SchoolResidenceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"public class SchoolResidenceTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SchoolResidence(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_invalidSchoolResidence_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new SchoolResidence(invalidAddress));","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public void isValidResidence() {","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        // null school residence","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e SchoolResidence.isValidResidence(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid school residences","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(SchoolResidence.isValidResidence(\"\")); // empty string","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(SchoolResidence.isValidResidence(\" \")); // spaces only","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(SchoolResidence.isValidResidence(\"ke7\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(SchoolResidence.isValidResidence(\"sheares\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(SchoolResidence.isValidResidence(\"capt\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(SchoolResidence.isValidResidence(\"sH\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(SchoolResidence.isValidResidence(\"PgpH\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        // valid school residences","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(SchoolResidence.isValidResidence(\"CAPT\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(SchoolResidence.isValidResidence(\"SH\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(SchoolResidence.isValidResidence(\"PGPH\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"fairyinabottle4":41}},{"path":"src/test/java/seedu/student/model/student/StudentContainsMatriculationNumberPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SiTingST"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"SiTingST"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":"public class StudentContainsMatriculationNumberPredicateTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    public void equals() {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"        MatriculationNumber firstMatriculationNumberPredicate \u003d new MatriculationNumber(\"A7890123H\");","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"        MatriculationNumber secondMatriculationNumberPredicate \u003d new MatriculationNumber(\"A0284765R\");","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"        StudentContainsMatriculationNumberPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"                new StudentContainsMatriculationNumberPredicate(firstMatriculationNumberPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"        StudentContainsMatriculationNumberPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"                new StudentContainsMatriculationNumberPredicate(secondMatriculationNumberPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"        StudentContainsMatriculationNumberPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"                new StudentContainsMatriculationNumberPredicate(firstMatriculationNumberPredicate);","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"SiTingST"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"SiTingST"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"    public void test_matriculationNumberContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        // Matching keyword","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"SiTingST"},"content":"        StudentContainsMatriculationNumberPredicate predicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"                new StudentContainsMatriculationNumberPredicate(new MatriculationNumber(\"A9012345J\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"George Best\").withMatric(\"A9012345J\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"SiTingST"},"content":"        // Zero matriculation number","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"SiTingST"},"content":"        StudentContainsMatriculationNumberPredicate predicate \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"                new StudentContainsMatriculationNumberPredicate(new MatriculationNumber(\"A1234245T\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"        assertFalse(predicate.test(new StudentBuilder().withMatric(\"A0984245T\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"SiTingST"},"content":"        // Non-matching matriculation number","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        predicate \u003d new StudentContainsMatriculationNumberPredicate(new MatriculationNumber(\"A0234673E\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        assertFalse(predicate.test(new StudentBuilder().withMatric(\"A0394852T\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"SiTingST"},"content":"        /*","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"SiTingST"},"content":"        // Matriculation number that includes  phone, email and address","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"SiTingST"},"content":"        predicate \u003d new StudentContainsMatriculationNumberPredicate(new MatriculationNumber(\"A3458911D\" +","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"                \"12345 alice@email.com Main Street)\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withMatric(\"A3456789D\").withPhone(\"12345\")","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"SiTingST"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"SiTingST":70}},{"path":"src/test/java/seedu/student/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_RESIDENCE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"public class StudentTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    public void isSameStudent() {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        // same matriculation number, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).withFaculty(VALID_FACULTY_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"                .withVacStatus(VALID_STATUS_BOB).withMedDetails(VALID_DETAILS_BOB).withSchoolRes(VALID_RESIDENCE_BOB)","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"                .build();","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        // different matriculation number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withMatric(VALID_MATRIC_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"fairyinabottle4":32,"-":45}},{"path":"src/test/java/seedu/student/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.StudentBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"                .build();","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"                .build();","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"fairyinabottle4"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"fairyinabottle4"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"fairyinabottle4"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"fairyinabottle4"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"fairyinabottle4"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"fairyinabottle4"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"fairyinabottle4"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"fairyinabottle4"},"content":"            -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"fairyinabottle4":169}},{"path":"src/test/java/seedu/student/model/student/VaccinationStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.model.student;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"public class VaccinationStatusTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e new VaccinationStatus(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new VaccinationStatus(invalidStatus));","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public void isValidStatus() {","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"        // null vaccination status","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(NullPointerException.class, () -\u003e VaccinationStatus.isValidStatus(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        // invalid vaccination statuses","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(VaccinationStatus.isValidStatus(\"\")); // empty string","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(VaccinationStatus.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(VaccinationStatus.isValidStatus(\"unvaccinated\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(VaccinationStatus.isValidStatus(\"v@ccinated\")); // spaces only","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(VaccinationStatus.isValidStatus(\"vaxxed\")); // spaces only","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"        assertFalse(VaccinationStatus.isValidStatus(\"vax\")); // spaces only","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        // valid vaccination statuses","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(VaccinationStatus.isValidStatus(\"Not Vaccinated\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(VaccinationStatus.isValidStatus(\"NOT VACCINATED\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(VaccinationStatus.isValidStatus(\"vaccinated\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(VaccinationStatus.isValidStatus(\"NOT VACCINATED\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(VaccinationStatus.isValidStatus(\"nOT vACCINATED\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        assertTrue(VaccinationStatus.isValidStatus(\"NOT vaccinated\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"fairyinabottle4":44}},{"path":"src/test/java/seedu/student/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String INVALID_MATRICULATION_NUMBER \u003d \"A12345X\";","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String INVALID_FACULTY \u003d \"FOS\";","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String INVALID_VACCINATION_STATUS \u003d \"vaccinate\";","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String INVALID_MEDICAL_DETAILS \u003d \" \";","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String INVALID_SCHOOL_RESIDENCE \u003d \"tembu\";","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String VALID_MATRICULATION_NUMBER \u003d BENSON.getMatriculationNumber().toString();","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String VALID_FACULTY \u003d BENSON.getFaculty().value;","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String VALID_VACCINATION_STATUS \u003d BENSON.getVaccinationStatus().toString();","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"    private static final String VALID_MEDICAL_DETAILS \u003d BENSON.getMedicalDetails().value;","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"yienyoong"},"content":"    private static final String VALID_SCHOOL_RESIDENCE \u003d BENSON.getSchoolResidence().toSavingString();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY , VALID_PHONE,","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"                        VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(null, VALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_invalidMatriculationNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":68,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, INVALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d MatriculationNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-28"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_nullMatriculationNumber_throwsIllegalValueException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":77,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_PHONE, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS, VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MatriculationNumber.class.getSimpleName());","lastModifiedDate":"2021-02-28"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-28"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_invalidFaculty_throwsIllegalValueException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, INVALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d Faculty.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_nullFaculty_throwsIllegalValueException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, null,","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Faculty.class.getSimpleName());","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":106,"author":{"gitId":"SiTingST"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY, INVALID_PHONE,","lastModifiedDate":"2021-03-20"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"                        VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"                null, VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":125,"author":{"gitId":"SiTingST"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY, VALID_PHONE,","lastModifiedDate":"2021-03-20"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"                        INVALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"                        VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, null, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":144,"author":{"gitId":"SiTingST"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-20"},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"                        INVALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS, VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":153,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, null, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":160,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_invalidVaccinationStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":161,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":162,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":163,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":164,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d VaccinationStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-02-28"},{"lineNumber":165,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-28"},{"lineNumber":166,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":167,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":168,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-02-28"},{"lineNumber":169,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_nullVaccinationStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-02-28"},{"lineNumber":170,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":171,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":172,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":173,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, VaccinationStatus.class.getSimpleName());","lastModifiedDate":"2021-02-28"},{"lineNumber":174,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-02-28"},{"lineNumber":175,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":176,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_invalidMedicalDetails_throwsIllegalValueException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":179,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":180,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, INVALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":181,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":182,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d MedicalDetails.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-02"},{"lineNumber":183,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":184,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":185,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":186,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":187,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_nullMedicalDetails_throwsIllegalValueException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":188,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":189,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, null,","lastModifiedDate":"2021-03-09"},{"lineNumber":190,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":191,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MedicalDetails.class.getSimpleName());","lastModifiedDate":"2021-03-02"},{"lineNumber":192,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":195,"author":{"gitId":"fairyinabottle4"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":196,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_invalidSchoolResidence_throwsIllegalValueException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":197,"author":{"gitId":"SiTingST"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_NAME, VALID_MATRICULATION_NUMBER, VALID_FACULTY,","lastModifiedDate":"2021-03-20"},{"lineNumber":198,"author":{"gitId":"fairyinabottle4"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_VACCINATION_STATUS, VALID_MEDICAL_DETAILS,","lastModifiedDate":"2021-03-09"},{"lineNumber":199,"author":{"gitId":"fairyinabottle4"},"content":"                INVALID_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-09"},{"lineNumber":200,"author":{"gitId":"fairyinabottle4"},"content":"        String expectedMessage \u003d SchoolResidence.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-03"},{"lineNumber":201,"author":{"gitId":"fairyinabottle4"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-03"},{"lineNumber":202,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fairyinabottle4":108,"yienyoong":1,"SiTingST":23,"-":71}},{"path":"src/test/java/seedu/student/storage/JsonSerializableStudentBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.util.JsonUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.testutil.TypicalStudents;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"public class JsonSerializableStudentBookTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableStudentBookTest\");","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    private static final Path TYPICAL_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentsStudentBook.json\");","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"    private static final Path INVALID_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentsStudentBook.json\");","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    private static final Path DUPLICATE_STUDENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentsStudentBook.json\");","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"        JsonSerializableStudentBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SiTingST"},"content":"                JsonSerializableStudentBook.class).get();","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        StudentBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBook typicalStudentsStudentBook \u003d TypicalStudents.getTypicalStudentBook();","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"        assertEquals(addressBookFromFile, typicalStudentsStudentBook);","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        JsonSerializableStudentBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENTS_FILE,","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"SiTingST"},"content":"                JsonSerializableStudentBook.class).get();","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"SiTingST"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"SiTingST"},"content":"        JsonSerializableStudentBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENTS_FILE,","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"SiTingST"},"content":"                JsonSerializableStudentBook.class).get();","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"SiTingST"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableStudentBook.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fairyinabottle4":9,"SiTingST":15,"-":23}},{"path":"src/test/java/seedu/student/storage/JsonStudentBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.HOON;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.IDA;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"public class JsonStudentBookStorageTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonStudentBookStorageTest\");","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    public void readStudentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"        assertThrows(NullPointerException.class, () -\u003e readStudentBook(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    private java.util.Optional\u003cReadOnlyStudentBook\u003e readStudentBook(String filePath) throws Exception {","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"        return new JsonStudentBookStorage(Paths.get(filePath)).readStudentBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"SiTingST"},"content":"        assertFalse(readStudentBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"SiTingST"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStudentBook(\"notJsonFormatStudentBook.json\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"SiTingST"},"content":"    public void readInvalidStudentBook_throwDataConversionException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"SiTingST"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStudentBook(\"invalidStudentsStudentBook.json\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"    public void readStudentBook_invalidAndValidStudentsStudentBook_throwDataConversionException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStudentBook(\"invalidAndValidStudentsStudentBook.json\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"    public void readAndSaveStudentBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        Path filePath \u003d testFolder.resolve(\"TempStudentBook.json\");","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBook original \u003d getTypicalStudentBook();","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"        JsonStudentBookStorage jsonStudentBookStorage \u003d new JsonStudentBookStorage(filePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"        jsonStudentBookStorage.saveStudentBook(original, filePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"        ReadOnlyStudentBook readBack \u003d jsonStudentBookStorage.readStudentBook(filePath).get();","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"SiTingST"},"content":"        assertEquals(original, new StudentBook(readBack));","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"        jsonStudentBookStorage.saveStudentBook(original, filePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"        readBack \u003d jsonStudentBookStorage.readStudentBook(filePath).get();","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"SiTingST"},"content":"        assertEquals(original, new StudentBook(readBack));","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"        jsonStudentBookStorage.saveStudentBook(original); // file path not specified","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"        readBack \u003d jsonStudentBookStorage.readStudentBook().get(); // file path not specified","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"SiTingST"},"content":"        assertEquals(original, new StudentBook(readBack));","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"SiTingST"},"content":"    public void saveStudentBook_nullStudentBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"SiTingST"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStudentBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"SiTingST"},"content":"     * Saves {@code studentBook} at the specified {@code filePath}.","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"SiTingST"},"content":"    private void saveStudentBook(ReadOnlyStudentBook addressBook, String filePath) {","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"SiTingST"},"content":"            new JsonStudentBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-20"},{"lineNumber":100,"author":{"gitId":"SiTingST"},"content":"                    .saveStudentBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"SiTingST"},"content":"    public void saveStudentBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"SiTingST"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStudentBook(new StudentBook(), null));","lastModifiedDate":"2021-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"fairyinabottle4":21,"SiTingST":24,"-":65}},{"path":"src/test/java/seedu/student/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"SiTingST"},"content":"        userPrefs.setStudentBookFilePath(Paths.get(\"studentbook.json\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"fairyinabottle4":5,"SiTingST":1,"-":117}},{"path":"src/test/java/seedu/student/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.storage;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.TypicalStudents.getTypicalStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.ReadOnlyStudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.UserPrefs;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"SiTingST"},"content":"        JsonStudentBookStorage addressBookStorage \u003d new JsonStudentBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"SiTingST"},"content":"    public void studentBookReadSave() throws Exception {","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"         * {@link JsonStudentBookStorage} class.","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonStudentBookStorageTest} class.","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        StudentBook original \u003d getTypicalStudentBook();","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"SiTingST"},"content":"        storageManager.saveStudentBook(original);","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"SiTingST"},"content":"        ReadOnlyStudentBook retrieved \u003d storageManager.readStudentBook().get();","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"SiTingST"},"content":"        assertEquals(original, new StudentBook(retrieved));","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"SiTingST"},"content":"    public void getStudentBookFilePath() {","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"SiTingST"},"content":"        assertNotNull(storageManager.getStudentBookFilePath());","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":9,"SiTingST":7,"-":52}},{"path":"src/test/java/seedu/student/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    public static final String DEFAULT_MATRIC \u003d \"A0192376F\";","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"    public static final String DEFAULT_DATE \u003d \"2021-01-01\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    public static final String DEFAULT_START_TIME \u003d \"10:00\";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"    public static final String DEFAULT_END_TIME \u003d \"10:30\";","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"    private MatriculationNumber matriculationNumber;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    private LocalDate date;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    private LocalTime endTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"        matriculationNumber \u003d new MatriculationNumber(DEFAULT_MATRIC);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"        date \u003d LocalDate.parse(DEFAULT_DATE);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"        startTime \u003d LocalTime.parse(DEFAULT_START_TIME);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        endTime \u003d LocalTime.parse(DEFAULT_END_TIME);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"        matriculationNumber \u003d appointmentToCopy.getMatriculationNumber();","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"        date \u003d appointmentToCopy.getDate();","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"        startTime \u003d appointmentToCopy.getStartTime();","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"        endTime \u003d appointmentToCopy.getEndTime();","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"     *Sets the {@code MatriculationNumber} of the {@code Appointment} that we are building","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"    public AppointmentBuilder withMatric(String matric) {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"        this.matriculationNumber \u003d new MatriculationNumber(matric);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"     *Sets the {@code date} of the {@code Appointment} that we are building","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"    public AppointmentBuilder withDate(String date) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"yienyoong"},"content":"     *Sets the {@code date} of the {@code Appointment} that we are building","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"    public AppointmentBuilder withDate(LocalDate date) {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"yienyoong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"yienyoong"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"     *Sets the {@code startTime} of the {@code Appointment} that we are building","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"    public AppointmentBuilder withStartTime(String startTime) {","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"        this.startTime \u003d LocalTime.parse(startTime);","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"yienyoong"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"yienyoong"},"content":"     *Sets the {@code startTime} of the {@code Appointment} that we are building","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"yienyoong"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"yienyoong"},"content":"    public AppointmentBuilder withStartTime(LocalTime startTime) {","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"yienyoong"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"yienyoong"},"content":"        return this;","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"yienyoong"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":"     * Builds a new Person object.","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"picasdan9"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"picasdan9"},"content":"     * @return a person object.","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"picasdan9"},"content":"    public Appointment build() {","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"picasdan9"},"content":"        return new Appointment(matriculationNumber, date, startTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"fairyinabottle4":3,"yienyoong":16,"picasdan9":74}},{"path":"src/test/java/seedu/student/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"fairyinabottle4":1,"-":33}},{"path":"src/test/java/seedu/student/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setMatriculationNumber(student.getMatriculationNumber());","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setFaculty(student.getFaculty());","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setAddress(student.getAddress());","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setVaccinationStatus(student.getVaccinationStatus());","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setMedicalDetails(student.getMedicalDetails());","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setSchoolResidence(student.getSchoolResidence());","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code MatricuationNumber} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder withMatric(String matric) {","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setMatriculationNumber(new MatriculationNumber(matric));","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code Faculty} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder withFaculty(String faculty) {","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setFaculty(new Faculty(faculty));","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code Phone} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code Address} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code vaccinationStatus} of the {@code vaccinationStatus} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder withVacStatus(String vaccinationStatus) {","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setVaccinationStatus(new VaccinationStatus(vaccinationStatus));","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code medicalDetails} of the {@code medicalDetails} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder withMedDetails(String medicalDetails) {","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setMedicalDetails(new MedicalDetails(medicalDetails));","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code schoolResidence} of the {@code schoolResidence} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptorBuilder withSchoolRes(String schoolResidence) {","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.setSchoolResidence(new SchoolResidence(schoolResidence));","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"        return descriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"fairyinabottle4":120}},{"path":"src/test/java/seedu/student/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":1,"-":71}},{"path":"src/test/java/seedu/student/testutil/StudentBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"SiTingST"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"SiTingST"},"content":" * A utility class to help with building Studentbook objects.","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"SiTingST"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"SiTingST"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"SiTingST"},"content":"public class StudentBookBuilder {","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"SiTingST"},"content":"    private StudentBook studentBook;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"SiTingST"},"content":"    public StudentBookBuilder() {","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"SiTingST"},"content":"        studentBook \u003d new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"SiTingST"},"content":"    public StudentBookBuilder(StudentBook studentBook) {","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"SiTingST"},"content":"        this.studentBook \u003d studentBook;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"SiTingST"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"SiTingST"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBookBuilder withStudent(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"        studentBook.addStudent(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"SiTingST"},"content":"        return this;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"SiTingST"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"SiTingST"},"content":"    public StudentBook build() {","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"SiTingST"},"content":"        return studentBook;","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"SiTingST"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"SiTingST"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"fairyinabottle4":7,"SiTingST":27}},{"path":"src/test/java/seedu/student/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Address;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Email;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MatriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.MedicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.SchoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.VaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"public class StudentBuilder {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DEFAULT_MATRIC \u003d \"A0192376F\";","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DEFAULT_FACULTY \u003d \"COM\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DEFAULT_VAC_STATUS \u003d \"not vaccinated\";","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DEFAULT_MED_DETAILS \u003d \"none\";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String DEFAULT_SCHOOL_RESIDENCE \u003d \"RVRC\";","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"fairyinabottle4"},"content":"    private Name name;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"    private MatriculationNumber matriculationNumber;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"fairyinabottle4"},"content":"    private Faculty faculty;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    private Phone phone;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"fairyinabottle4"},"content":"    private Email email;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    private Address address;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"    private VaccinationStatus vaccinationStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"    private MedicalDetails medicalDetails;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"    private SchoolResidence schoolResidence;","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder() {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"        matriculationNumber \u003d new MatriculationNumber(DEFAULT_MATRIC);","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"        faculty \u003d new Faculty(DEFAULT_FACULTY);","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"        vaccinationStatus \u003d new VaccinationStatus(DEFAULT_VAC_STATUS);","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"        medicalDetails \u003d new MedicalDetails(DEFAULT_MED_DETAILS);","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"        schoolResidence \u003d new SchoolResidence(DEFAULT_SCHOOL_RESIDENCE);","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"        matriculationNumber \u003d studentToCopy.getMatriculationNumber();","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"        faculty \u003d studentToCopy.getFaculty();","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"        address \u003d studentToCopy.getAddress();","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"        vaccinationStatus \u003d studentToCopy.getVaccinationStatus();","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"fairyinabottle4"},"content":"        medicalDetails \u003d studentToCopy.getMedicalDetails();","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"        schoolResidence \u003d studentToCopy.getSchoolResidence();","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"     *Sets the {@code MatriculationNumber} of the {@code Student} that we are building","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder withMatric(String matric) {","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"        this.matriculationNumber \u003d new MatriculationNumber(matric);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"     *Sets the {@code Faculty} of the {@code Student} that we are building","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder withFaculty(String faculty) {","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"fairyinabottle4"},"content":"        this.faculty \u003d new Faculty(faculty);","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code Address} of the {@code Student} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder withAddress(String address) {","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"fairyinabottle4"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"fairyinabottle4"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"fairyinabottle4"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"fairyinabottle4"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"fairyinabottle4"},"content":"     *Sets the {@code VaccinationStatus} of the {@code Student} that we are building","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder withVacStatus(String vaccinationStatus) {","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"fairyinabottle4"},"content":"        this.vaccinationStatus \u003d new VaccinationStatus(vaccinationStatus);","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"fairyinabottle4"},"content":"     *Sets the {@code MedicalDetails} of the {@code Student} that we are building","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder withMedDetails(String medicalDetails) {","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"fairyinabottle4"},"content":"        this.medicalDetails \u003d new MedicalDetails(medicalDetails);","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"fairyinabottle4"},"content":"     *Sets the {@code schoolResidence} of the {@code Student} that we are building","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"fairyinabottle4"},"content":"    public StudentBuilder withSchoolRes(String schoolResidence) {","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"fairyinabottle4"},"content":"        this.schoolResidence \u003d new SchoolResidence(schoolResidence);","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"fairyinabottle4"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"fairyinabottle4"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"fairyinabottle4"},"content":"     * Builds a new Student object.","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"fairyinabottle4"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"fairyinabottle4"},"content":"     * @return a student object.","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"fairyinabottle4"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"fairyinabottle4"},"content":"    public Student build() {","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"fairyinabottle4"},"content":"        return new Student(name, matriculationNumber, faculty, phone, email, address, vaccinationStatus, medicalDetails,","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"fairyinabottle4"},"content":"                schoolResidence);","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"fairyinabottle4"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"fairyinabottle4"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"fairyinabottle4":151}},{"path":"src/test/java/seedu/student/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MATRICULATION_NUMBER;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_MEDICAL_DETAILS;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_SCHOOL_RESIDENCE;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.parser.CliSyntax.PREFIX_VACCINATION_STATUS;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.AddCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":" * A utility class for Student.","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"public class StudentUtil {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"fairyinabottle4"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"        sb.append(PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"        sb.append(PREFIX_MATRICULATION_NUMBER + student.getMatriculationNumber().value + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"        sb.append(PREFIX_FACULTY + student.getFaculty().value + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"        sb.append(PREFIX_PHONE + student.getPhone().value + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        sb.append(PREFIX_ADDRESS + student.getAddress().value + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"        sb.append(PREFIX_VACCINATION_STATUS + student.getVaccinationStatus().textUI + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"        sb.append(PREFIX_MEDICAL_DETAILS + student.getMedicalDetails().value + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"        sb.append(PREFIX_SCHOOL_RESIDENCE + student.getSchoolResidence().toSavingString() + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.getMatriculationNumber().ifPresent(matriculationNumber -\u003e sb.append(PREFIX_MATRICULATION_NUMBER)","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"                .append(matriculationNumber.value).append(\" \"));","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.getFaculty().ifPresent(faculty -\u003e sb.append(PREFIX_FACULTY).append(faculty.value).append(\" \"));","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.getVaccinationStatus().ifPresent(vaccinationStatus -\u003e sb.append(PREFIX_VACCINATION_STATUS)","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"yienyoong"},"content":"                .append(vaccinationStatus.textUI).append(\" \"));","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.getMedicalDetails().ifPresent(medicalDetails -\u003e sb.append(PREFIX_MEDICAL_DETAILS)","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"                .append(medicalDetails.value).append(\" \"));","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"        descriptor.getSchoolResidence().ifPresent(schoolResidence -\u003e sb.append(PREFIX_SCHOOL_RESIDENCE)","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"yienyoong"},"content":"                .append(schoolResidence.toSavingString()).append(\" \"));","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"fairyinabottle4":39,"yienyoong":2,"-":25}},{"path":"src/test/java/seedu/student/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fairyinabottle4":11,"-":44}},{"path":"src/test/java/seedu/student/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DATE_AMY_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DATE_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_START_TIME_AMY_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_START_TIME_BOB_APPOINTMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.appointment.Appointment;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"public class TypicalAppointments {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    public static final Appointment ALICE_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"fairyinabottle4"},"content":"            .withMatric(TypicalStudents.ALICE.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"            .withStartTime(\"10:00\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    public static final Appointment BENSON_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"            .withMatric(TypicalStudents.BENSON.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"            .withStartTime(\"10:30\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    public static final Appointment CARL_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"yienyoong"},"content":"            .withMatric(TypicalStudents.CARL.getMatriculationNumber().toString())","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"            .withStartTime(\"11:00\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    public static final Appointment AMY_APPOINTMENT \u003d new AppointmentBuilder().withMatric(VALID_MATRIC_AMY)","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"            .withDate(VALID_DATE_AMY_APPOINTMENT).withStartTime(VALID_START_TIME_AMY_APPOINTMENT).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    public static final Appointment BOB_APPOINTMENT \u003d new AppointmentBuilder().withMatric(VALID_MATRIC_BOB)","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"            .withDate(VALID_DATE_BOB_APPOINTMENT).withStartTime(VALID_START_TIME_BOB_APPOINTMENT).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    private TypicalAppointments() {} // prevents instantiation","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"     * Returns an {@code AddressBook} with all the typical appointments.","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"    public static StudentBook getTypicalStudentBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"SiTingST"},"content":"        StudentBook ab \u003d new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"        return ab;","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"fairyinabottle4"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TypicalStudents.ALICE, TypicalStudents.BENSON, TypicalStudents.CARL));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_APPOINTMENT, BENSON_APPOINTMENT, CARL_APPOINTMENT));","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"fairyinabottle4":19,"yienyoong":1,"SiTingST":1,"picasdan9":42}},{"path":"src/test/java/seedu/student/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"fairyinabottle4":5,"-":7}},{"path":"src/test/java/seedu/student/testutil/TypicalMatricNumbers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"yienyoong"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"yienyoong"},"content":"public class TypicalMatricNumbers {","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MATRIC_NUMBER_FIRST_STUDENT \u003d \"A1234567X\"; // Not in TypicalAddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MATRIC_NUMBER_SECOND_STUDENT \u003d \"A7654321J\"; // Not in TypicalAddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"    public static final String MATRIC_NUMBER_THIRD_STUDENT \u003d \"A1231231F\"; // Not in TypicalAddressBook","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"yienyoong"},"content":"    public static final String MATRIC_NUMBER_FOURTH_STUDENT \u003d \"A3456789D\"; // ALICE","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"yienyoong"},"content":"    public static final String MATRIC_NUMBER_FIFTH_STUDENT \u003d \"A4567890E\"; // BENSON","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"yienyoong"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"fairyinabottle4":4,"yienyoong":6}},{"path":"src/test/java/seedu/student/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DETAILS_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_DETAILS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_FACULTY_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_FACULTY_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_MATRIC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_RESIDENCE_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_RESIDENCE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.StudentBook;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.model.student.Student;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"fairyinabottle4"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"fairyinabottle4"},"content":"public class TypicalStudents {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\").withMatric(\"A3456789D\")","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"fairyinabottle4"},"content":"            .withFaculty(\"COM\").withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"fairyinabottle4"},"content":"            .withPhone(\"94351253\").withVacStatus(\"not vaccinated\").withMedDetails(\"shellfish allergy\")","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"fairyinabottle4"},"content":"            .withSchoolRes(\"RVRC\").build();","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\").withMatric(\"A4567890E\")","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"fairyinabottle4"},"content":"            .withFaculty(\"DNUS\").withSchoolRes(\"RVRC\").withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"fairyinabottle4"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withVacStatus(\"not vaccinated\").withMedDetails(\"none\")","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"fairyinabottle4"},"content":"            .build();","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withMatric(\"A5678901F\")","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"fairyinabottle4"},"content":"            .withFaculty(\"USP\").withPhone(\"95352563\").withSchoolRes(\"USP\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"fairyinabottle4"},"content":"            .withVacStatus(\"vaccinated\").withMedDetails(\"none\").withAddress(\"wall street\").build();","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withFaculty(\"SCALE\")","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"fairyinabottle4"},"content":"            .withPhone(\"87652533\").withSchoolRes(\"RVRC\").withMatric(\"A6789012G\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"fairyinabottle4"},"content":"            .withAddress(\"10th street\").withMedDetails(\"pollen allergy\").withVacStatus(\"vaccinated\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withFaculty(\"BIZ\")","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"fairyinabottle4"},"content":"            .withPhone(\"9482224\").withSchoolRes(\"RVRC\").withMatric(\"A7890123H\").withEmail(\"werner@example.com\")","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"fairyinabottle4"},"content":"            .withVacStatus(\"not vaccinated\").withMedDetails(\"none\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withFaculty(\"ENG\")","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"fairyinabottle4"},"content":"            .withPhone(\"9482427\").withSchoolRes(\"RVRC\").withMatric(\"A8901234I\").withEmail(\"lydia@example.com\")","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"fairyinabottle4"},"content":"            .withVacStatus(\"vaccinated\").withMedDetails(\"bee sting allergy\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withFaculty(\"MED\")","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"fairyinabottle4"},"content":"            .withPhone(\"9482442\").withSchoolRes(\"RVRC\").withMatric(\"A9012345J\").withEmail(\"anna@example.com\")","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"fairyinabottle4"},"content":"            .withVacStatus(\"not vaccinated\").withMedDetails(\"none\").withAddress(\"4th street\").build();","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"fairyinabottle4"},"content":"            .withMatric(\"A0126563B\").withMedDetails(\"none\").withSchoolRes(\"USP\").withEmail(\"stefan@example.com\")","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"fairyinabottle4"},"content":"            .withFaculty(\"SDE\").withVacStatus(\"vaccinated\").withAddress(\"little india\").build();","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"fairyinabottle4"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withMatric(\"A6754321K\").withMedDetails(\"none\")","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"fairyinabottle4"},"content":"            .withSchoolRes(\"USP\").withFaculty(\"SDE\").withVacStatus(\"vaccinated\").build();","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"fairyinabottle4"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"fairyinabottle4"},"content":"            .withFaculty(VALID_FACULTY_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"fairyinabottle4"},"content":"            .withMedDetails(VALID_DETAILS_AMY).withMatric(VALID_MATRIC_AMY).withVacStatus(VALID_STATUS_AMY)","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"fairyinabottle4"},"content":"            .withSchoolRes(VALID_RESIDENCE_AMY).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"fairyinabottle4"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"fairyinabottle4"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withFaculty(VALID_FACULTY_BOB)","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"fairyinabottle4"},"content":"            .withVacStatus(VALID_STATUS_BOB).withMedDetails(VALID_DETAILS_BOB).withMatric(VALID_MATRIC_BOB)","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"fairyinabottle4"},"content":"            .withSchoolRes(VALID_RESIDENCE_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"fairyinabottle4"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"fairyinabottle4"},"content":"     * Returns an {@code StudentBook} with all the typical persons.","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"fairyinabottle4"},"content":"    public static StudentBook getTypicalStudentBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"SiTingST"},"content":"        StudentBook ab \u003d new StudentBook();","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"fairyinabottle4"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"fairyinabottle4"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"fairyinabottle4"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"fairyinabottle4":67,"SiTingST":1,"-":26}},{"path":"src/test/java/seedu/student/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"fairyinabottle4":1,"-":34}},{"path":"src/test/java/seedu/student/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fairyinabottle4"},"content":"package seedu.student.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"fairyinabottle4"},"content":"import static seedu.student.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"fairyinabottle4"},"content":"import seedu.student.MainApp;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"fairyinabottle4":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"\u003c?import seedu.student.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"fairyinabottle4":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"fairyinabottle4"},"content":"\u003cfx:root type\u003d\"seedu.student.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"fairyinabottle4":1,"-":5}}]
