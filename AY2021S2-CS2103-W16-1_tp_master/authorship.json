[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-W16-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-W16-1/tp/actions)","lastModifiedDate":"2021-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"Are you always overwhelmed by a lot of commitments and struggling to keep track of them?","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"Introducing **SOChedule**, **a desktop task managing app** that will make your life much easier:","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"* SOChedule is a one-stop solution for managing tasks and events, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"* This app is meant for users who can type fast, and prefer typing over mouse/voice commands.","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"## About Us","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"For more details on our project team members, do check out the [AboutUs](https://github.com/AY2021S2-CS2103-W16-1/tp/blob/master/docs/AboutUs.md) page.","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"## User Guide","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"For more information on how to use SOChedule, you may refer to the [User Guide](https://github.com/AY2021S2-CS2103-W16-1/tp/blob/master/docs/UserGuide.md).","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"## Developer Guide","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"For more information on how we develop SOChedule, you may refer to the [Developer Guide](https://github.com/AY2021S2-CS2103-W16-1/tp/blob/master/docs/DeveloperGuide.md).","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"## Acknowledgments","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"This project is based on the AddressBook-Level3 project, created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"YuFeng0930":17,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    archiveName \u003d \u0027sochedule.jar\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":71,"SoulUseless":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"### Cheng Yu Feng","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"\u003cimg src\u003d\"images/yufeng0930.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"[[github](https://github.com/YuFeng0930)]","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Events Team","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"### Ding You Jia, Danelynn","lastModifiedDate":"2021-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"\u003cimg src\u003d\"images/icelenaugust.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"[[github](http://github.com/icelenaugust)]","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Tasks Team","lastModifiedDate":"2021-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"### Li Jiahe","lastModifiedDate":"2021-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"\u003cimg src\u003d\"images/ljhgab.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"[[github](https://github.com/ljhgab)]","lastModifiedDate":"2021-02-25"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Tasks Team","lastModifiedDate":"2021-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"### Yap Jing Kang","lastModifiedDate":"2021-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"\u003cimg src\u003d\"images/souluseless.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"[[github](http://github.com/souluseless)]","lastModifiedDate":"2021-02-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Tasks Team","lastModifiedDate":"2021-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"### Yu Jiaxiang","lastModifiedDate":"2021-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"\u003cimg src\u003d\"images/litone01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"[[github](http://github.com/litone01)]","lastModifiedDate":"2021-02-25"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"[[portfolio](team/litone01.md)]","lastModifiedDate":"2021-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Events Team","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"YuFeng0930":2,"icelenaugust":2,"-":36,"SoulUseless":13,"ljhgab":3,"litone01":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"## Table of Contents","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"1. [Preface](#1-preface)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"1. [Setting up, getting started](#2-setting-up-getting-started)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"1. [Design](#3-design)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"   3.1  [Architecture: High Level View](#31-architecture)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"   3.2  [UI Component](#32-ui-component)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"   3.3  [Logic Component](#33-logic-component)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"   3.4  [Model Component](#34-model-component)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"   3.5  [Storage Component](#35-storage-component)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"   3.6  [Common Classes](#36-common-classes)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"1. [Implementation](#4-implementation)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"   4.1 [SOChedule](#41-sochedule)\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"       4.1.1 [Overview](#411-overview)\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"       4.1.2 [Implementation of SOChedule-level Commands](#412-implementation)\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"   4.2 [Task](#42-task)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"       4.1.1 [Overview](#421-overview)\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"       4.1.2 [Implementation of Task-level Commands](#422-implementation)\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"   4.3 [Event](#43-event)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"       4.1.1 [Overview](#431-overview)\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"       4.1.2 [Implementation of Event-level Commands](#432-implementation)\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"1. [Planned Features](#5-documentation-logging-testing-configuration-dev-ops)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"1. [Appendix](#appendix)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"   A1. [Product Scope](#a1-product-scope)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"   A2. [User Stories](#a2-user-stories)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"   A3. [Use Cases](#a3-use-cases)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"   A4. [Non-Functional Requirements](#a4-non-functional-requirements)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"   A5. [Glossary](#a5-glossary)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"   A6. [Instructions for Manual Testing](#a6-instructions-for-manual-testing)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"   A7. [Launch and Shutdown](#a7-launch-and-shutdown)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"   A8. [Saving Data](#a8-saving-data)\u003cbr\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"## 1. Preface","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"SOChedule is a one-stop solution for managing tasks and events, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).  ","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"The Developer Guide for Sochedule is designed to showcase the high level architecture systems used to design and implement Sochedule.","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"The link to the repository can be found [here](https://github.com/AY2021S2-CS2103-W16-1/tp).","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"## 2. Setting up, getting started","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"## 3. Design","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"### 3.1 Architecture","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"![Architecture Diagram](images/ArchitectureDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete_task 1`.","lastModifiedDate":"2021-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"icelenaugust"},"content":"![Architecture Sequence Diagram](images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"### 3.2 UI component","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"### 3.3 Logic component","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"ljhgab"},"content":"1. `Logic` uses the `SocheduleParser` class to parse the user command.","lastModifiedDate":"2021-04-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"ljhgab"},"content":"1. The command execution can affect the `Model` (e.g. adding a task or an event).","lastModifiedDate":"2021-04-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"ljhgab"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete_task 1\")` API call.","lastModifiedDate":"2021-04-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"ljhgab"},"content":"![Interactions Inside the Logic Component for the `delete_task 1` Command](images/DeleteTaskCommandSequenceDiagram.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"ljhgab"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteTaskCommandParser`should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-04-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":133,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":134,"author":{"gitId":"SoulUseless"},"content":"### 3.4 Model component","lastModifiedDate":"2021-03-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"litone01"},"content":"**API** : [`Model.java`](https://github.com/AY2021S2-CS2103-W16-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"litone01"},"content":"* stores the Sochedule data.","lastModifiedDate":"2021-04-02"},{"lineNumber":144,"author":{"gitId":"litone01"},"content":"* exposes an unmodifiable `ObservableList\u003cTask\u003e` and an unmodifiable `ObservableList\u003cEvent\u003e`that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-04-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"litone01"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2021-04-02"},{"lineNumber":149,"author":{"gitId":"litone01"},"content":"**Note:** An (arguably) more OOP model can store a `Tag` list and a `Category` list in the `Sochedule`, which `Task` and `Event` can refer.","lastModifiedDate":"2021-04-02"},{"lineNumber":150,"author":{"gitId":"litone01"},"content":"This allows `Sochedule` to only require one `Tag` object per unique `Tag`, and one `Category` object per unique `Object`, ","lastModifiedDate":"2021-04-02"},{"lineNumber":151,"author":{"gitId":"litone01"},"content":"instead of each `Task` and `Event` needing their own `Tag` and `Category` object.\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"litone01"},"content":"#### 3.4.1 Design considerations for Task-related Models","lastModifiedDate":"2021-04-02"},{"lineNumber":156,"author":{"gitId":"litone01"},"content":"When implementing Task-related models, it is important to avoid adding duplicate tasks. ","lastModifiedDate":"2021-04-02"},{"lineNumber":157,"author":{"gitId":"litone01"},"content":"For example, it is undesirable for users to add the same task, completing CS2103 Quiz before 2021-06-01, twice into the task list. ","lastModifiedDate":"2021-04-02"},{"lineNumber":158,"author":{"gitId":"litone01"},"content":"Because these two tasks contain the same information and can potentially cause confusion for users ","lastModifiedDate":"2021-04-02"},{"lineNumber":159,"author":{"gitId":"litone01"},"content":"when he completes one and finds another task with the same description still left uncompleted.","lastModifiedDate":"2021-04-02"},{"lineNumber":160,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":161,"author":{"gitId":"litone01"},"content":"In our application, we require users to minimally provide the name, deadline and priority when creating a task.","lastModifiedDate":"2021-04-02"},{"lineNumber":162,"author":{"gitId":"litone01"},"content":"To ensure duplicates are handled, our team went through several alternatives and here are our considerations.","lastModifiedDate":"2021-04-02"},{"lineNumber":163,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":164,"author":{"gitId":"litone01"},"content":"* Alternative 1 (Chosen Implementation): `equals(Task task)` method should check if the name, priority, deadline, ","lastModifiedDate":"2021-04-02"},{"lineNumber":165,"author":{"gitId":"litone01"},"content":"  tags (if any) and categories (if any) are equal.","lastModifiedDate":"2021-04-02"},{"lineNumber":166,"author":{"gitId":"litone01"},"content":"  * Pros:  ","lastModifiedDate":"2021-04-02"},{"lineNumber":167,"author":{"gitId":"litone01"},"content":"    * Tasks with same name but different deadline, priority and/or any other fields are allowed.","lastModifiedDate":"2021-04-02"},{"lineNumber":168,"author":{"gitId":"litone01"},"content":"  * Cons:","lastModifiedDate":"2021-04-02"},{"lineNumber":169,"author":{"gitId":"litone01"},"content":"    * Harder to implement.","lastModifiedDate":"2021-04-02"},{"lineNumber":170,"author":{"gitId":"litone01"},"content":"* Alternative 2 : `equals(Task task)` method should check for the equality of task name only.","lastModifiedDate":"2021-04-02"},{"lineNumber":171,"author":{"gitId":"litone01"},"content":"    * Pros:","lastModifiedDate":"2021-04-02"},{"lineNumber":172,"author":{"gitId":"litone01"},"content":"        * Easier to implement.","lastModifiedDate":"2021-04-02"},{"lineNumber":173,"author":{"gitId":"litone01"},"content":"        * Ensure that the task names are always distinct.","lastModifiedDate":"2021-04-02"},{"lineNumber":174,"author":{"gitId":"litone01"},"content":"    * Cons:","lastModifiedDate":"2021-04-02"},{"lineNumber":175,"author":{"gitId":"litone01"},"content":"        * Less flexibility and may not meet some users\u0027 need because task with same name but other different fields are not allowed.","lastModifiedDate":"2021-04-02"},{"lineNumber":176,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":177,"author":{"gitId":"litone01"},"content":"We chose Alternative 1 because it is more flexible and suitable for users\u0027 need. ","lastModifiedDate":"2021-04-02"},{"lineNumber":178,"author":{"gitId":"litone01"},"content":"There can be multiple tasks with same name but other different fields, like deadlines. ","lastModifiedDate":"2021-04-02"},{"lineNumber":179,"author":{"gitId":"litone01"},"content":"For example, a user may need to create two tasks with the same name \u00272103 quiz\u0027,","lastModifiedDate":"2021-04-02"},{"lineNumber":180,"author":{"gitId":"litone01"},"content":"but one is due on this Monday and the other is due the next Monday. Both of these 2 tasks should be allowed in our task list.","lastModifiedDate":"2021-04-02"},{"lineNumber":181,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":182,"author":{"gitId":"litone01"},"content":"#### 3.4.2 Design considerations for Event-Related Models","lastModifiedDate":"2021-04-02"},{"lineNumber":183,"author":{"gitId":"litone01"},"content":"Similar to Task-related Models, we face the same challenge when choosing between checking for the equality of name only and ","lastModifiedDate":"2021-04-02"},{"lineNumber":184,"author":{"gitId":"litone01"},"content":"checking for all fields entered by the user. We chose to check for all fields for the same reasons as mentioned above.","lastModifiedDate":"2021-04-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"SoulUseless"},"content":"### 3.5 Storage component","lastModifiedDate":"2021-03-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"SoulUseless"},"content":"**API** : [`Storage.java`](https://github.com/AY2021S2-CS2103-W16-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-03-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"SoulUseless"},"content":"* can save the Sochedule data in json format and read it back.","lastModifiedDate":"2021-03-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"SoulUseless"},"content":"### 3.6 Common classes","lastModifiedDate":"2021-03-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":201,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"SoulUseless"},"content":"## 4 Implementation","lastModifiedDate":"2021-03-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"SoulUseless"},"content":"This section describes some noteworthy details on how [Sochedule](#41-sochedule), [Task](#42-task) and [Event](#43-event) are implemented.","lastModifiedDate":"2021-03-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"SoulUseless"},"content":"### 4.1 Sochedule","lastModifiedDate":"2021-03-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"icelenaugust"},"content":"#### 4.1.1 Overview","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"icelenaugust"},"content":"#### 4.1.2 Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"icelenaugust"},"content":"**Implementation of ClearCommand**  ","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"icelenaugust"},"content":"The following is a detailed explanation on how ClearCommand is implemented.","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"icelenaugust"},"content":"**Step 1**: User executes `clear` command to clear task and event lists.","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"icelenaugust"},"content":"An `ClearCommandParser` object is created, and the `ClearCommandParser#parse(String args)` method is called.","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"icelenaugust"},"content":"A `ClearCommand` object is returned.","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"icelenaugust"},"content":"**Step 2**: On `ClearCommand#execute()`, `Model#setSochedule(new Sochedule())` is called.","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"icelenaugust"},"content":"This will replace Sochedule data with a new empty Sochedule.","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"icelenaugust"},"content":"For brevity, lower level implementation is omitted.","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"icelenaugust"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-27"},{"lineNumber":226,"author":{"gitId":"icelenaugust"},"content":"A success message will be appended with `CommandResult#MESSAGE_SUCCESS`.","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"icelenaugust"},"content":"The sequence diagram for `ClearCommand` can be found below.","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"icelenaugust"},"content":"![Sequence Diagram of Clear Command](images/ClearCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":234,"author":{"gitId":"icelenaugust"},"content":"**Implementation of SummaryCommand**  ","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"icelenaugust"},"content":"The following is a detailed explanation on how SummaryCommand is implemented.","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"icelenaugust"},"content":"**Step 1**: User executes `summary` command to get a summary of the current completion status of tasks and events.","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"icelenaugust"},"content":"An `SummaryCommandParser` object is created, and the `SummaryCommandParser#parse(String args)` method is called.","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"icelenaugust"},"content":"A `SummaryCommand` object is returned.","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"icelenaugust"},"content":"**Step 2**: On `SummaryCommand#execute()`, `Model#getNumCompletedTask()`,","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"icelenaugust"},"content":"`Model#getFilteredTaskList()`,","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"icelenaugust"},"content":"`Model#getNumOverdueTask()`,","lastModifiedDate":"2021-03-24"},{"lineNumber":244,"author":{"gitId":"icelenaugust"},"content":"`Model#getNumIncompleteTask()`,","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"icelenaugust"},"content":"`Model#getNumIncomingEvents()` are called.","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"icelenaugust"},"content":"This will get different statistics on task and event completion.","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"icelenaugust"},"content":"For brevity, lower level implementation is omitted.","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"icelenaugust"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"icelenaugust"},"content":"A success message will be appended with `CommandResult#MESSAGE_SUCCESS`.","lastModifiedDate":"2021-03-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"icelenaugust"},"content":"The sequence diagram for `SummaryCommand` can be found below.","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"icelenaugust"},"content":"![Sequence Diagram of Summary Command](images/SummaryCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":258,"author":{"gitId":"litone01"},"content":"**Implementation of FindScheduleCommand**  ","lastModifiedDate":"2021-04-02"},{"lineNumber":259,"author":{"gitId":"litone01"},"content":"The following is a detailed explanation on how SummaryCommand is implemented.","lastModifiedDate":"2021-04-02"},{"lineNumber":260,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":261,"author":{"gitId":"litone01"},"content":"**Step 1**: User executes `find_schedule DATE` command to find the ongoing tasks and events before or on the given date.","lastModifiedDate":"2021-04-02"},{"lineNumber":262,"author":{"gitId":"litone01"},"content":"An `FindScheduleCommandParser` object is created, and the `FindScheduleCommandParser#parse(String args)` method is called.","lastModifiedDate":"2021-04-02"},{"lineNumber":263,"author":{"gitId":"litone01"},"content":"The method conducts parses the `DATE` and conducts validation checks to ensure that it complies with the specification.","lastModifiedDate":"2021-04-02"},{"lineNumber":264,"author":{"gitId":"litone01"},"content":"Two predicates, `TaskFindSchedulePredicate(Date date)` and `EventFindSchedulePredicate(Date date)` are created based on the given date.","lastModifiedDate":"2021-04-02"},{"lineNumber":265,"author":{"gitId":"litone01"},"content":"Then, a `FindScheduleCommand` object is created given the two predicates and returned.","lastModifiedDate":"2021-04-02"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":267,"author":{"gitId":"litone01"},"content":"**Step 2**: On `FindScheduleCommand#execute()`, ","lastModifiedDate":"2021-04-02"},{"lineNumber":268,"author":{"gitId":"litone01"},"content":"`Model#updateFilteredTaskList(TaskFindSchedulePredicate taskPredicate)` ","lastModifiedDate":"2021-04-02"},{"lineNumber":269,"author":{"gitId":"litone01"},"content":"and `Model#updateFilteredEventList(EventFindSchedulePredicate eventPredicate)` are called.","lastModifiedDate":"2021-04-02"},{"lineNumber":270,"author":{"gitId":"litone01"},"content":"This will update the task list to only show the uncompleted tasks with deadline before or on the given date.","lastModifiedDate":"2021-04-02"},{"lineNumber":271,"author":{"gitId":"litone01"},"content":"Similary, the event list will be updated to only show the events with start date before or on the given date and end date after or on the given date.","lastModifiedDate":"2021-04-02"},{"lineNumber":272,"author":{"gitId":"litone01"},"content":"For brevity, lower level implementation of `Model#updateFilteredTaskList(TaskFindSchedulePredicate taskPredicate)` ","lastModifiedDate":"2021-04-02"},{"lineNumber":273,"author":{"gitId":"litone01"},"content":"and `Model#updateFilteredEventList(EventFindSchedulePredicate eventPredicate)` are omitted.","lastModifiedDate":"2021-04-02"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":275,"author":{"gitId":"litone01"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-04-02"},{"lineNumber":276,"author":{"gitId":"litone01"},"content":"A success message will be appended with `CommandResult#MESSAGE_FIND_SCHEDULE_SUCCESS`.","lastModifiedDate":"2021-04-02"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":278,"author":{"gitId":"litone01"},"content":"The sequence diagram for `FindScheduleCommand` can be found below.","lastModifiedDate":"2021-04-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":280,"author":{"gitId":"litone01"},"content":"![Sequence Diagram of FindSchedule Command](images/FindScheduleCommandSequenceDiagram.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":281,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":282,"author":{"gitId":"litone01"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2021-04-02"},{"lineNumber":283,"author":{"gitId":"litone01"},"content":"**Note:** Due to the size constraint, the argument `taskPredicate` is not shown in the sequence diagram ","lastModifiedDate":"2021-04-02"},{"lineNumber":284,"author":{"gitId":"litone01"},"content":"when calling the method `Model#updateFilteredTaskList(TaskFindSchedulePredicate taskPredicate)`.","lastModifiedDate":"2021-04-02"},{"lineNumber":285,"author":{"gitId":"litone01"},"content":"Same for the method `Model#updateFilteredEventList(EventFindSchedulePredicate eventPredicate)`.","lastModifiedDate":"2021-04-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":288,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":289,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":290,"author":{"gitId":"SoulUseless"},"content":"### 4.2 Task","lastModifiedDate":"2021-03-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"icelenaugust"},"content":"#### 4.2.1 Overview","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"icelenaugust"},"content":"#### 4.2.2 Implementation","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"ljhgab"},"content":"**Implementation of AddTaskCommand**","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"ljhgab"},"content":"The following is a detailed explanation on how AddTaskCommand is implemented.","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"ljhgab"},"content":"**Step1**: User executes `add_task n/TASKNAME d/DEADLINE p/PRIORITY [c/CATEGORY]... [t/TAG]...` command to add the ","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"ljhgab"},"content":"specific task with given arguments. An `AddTaskCommandParser` object is created, and the ","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"ljhgab"},"content":"`AddTaskParser#parse(String args)` method is called. The method conducts parses the `args` and conducts validation","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"ljhgab"},"content":"checks to ensure that it compiles with the specification. An `AddTaskCommand` object is returned.","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":304,"author":{"gitId":"ljhgab"},"content":"**Step 2**: On `AddTaskCommand#execute()`, `Model#addTasks(Task taskToAdd)` is called.","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"ljhgab"},"content":"This will add the task specified into the task list.","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"ljhgab"},"content":"For brevity, lower level implementation of `Model#addTasks(Task taskToAdd)` is omitted.","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"ljhgab"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"ljhgab"},"content":"A success message will be appended with `CommandResult#MESSAGE_ADD_TASK_SUCCESS`.","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"ljhgab"},"content":"The UI will also update as the underlying task list has been modified.","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"ljhgab"},"content":"The sequence diagram for `AddTaskCommand` can be found below.","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":314,"author":{"gitId":"ljhgab"},"content":"![Sequence Diagram of AddTask Command](images/AddTaskCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":315,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":316,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":317,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":318,"author":{"gitId":"icelenaugust"},"content":"**Implementation of DeleteTaskCommand**  ","lastModifiedDate":"2021-03-27"},{"lineNumber":319,"author":{"gitId":"icelenaugust"},"content":"The following is a detailed explanation on how DeleteTaskCommand is implemented.","lastModifiedDate":"2021-03-27"},{"lineNumber":320,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":321,"author":{"gitId":"icelenaugust"},"content":"**Step 1**: User executes `delete_task Index` command to delete the task at the given index.","lastModifiedDate":"2021-03-27"},{"lineNumber":322,"author":{"gitId":"ljhgab"},"content":"A `DeleteTaskParser` object is created, and the `DeleteTaskParser#parse(String args)` method is called.","lastModifiedDate":"2021-03-30"},{"lineNumber":323,"author":{"gitId":"icelenaugust"},"content":"The method conducts parses the `args` and conducts validation checks to ensure that it complies with the specification.","lastModifiedDate":"2021-03-27"},{"lineNumber":324,"author":{"gitId":"icelenaugust"},"content":"A `DeleteTaskCommand` object is returned.","lastModifiedDate":"2021-03-27"},{"lineNumber":325,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":326,"author":{"gitId":"icelenaugust"},"content":"**Step 2**: On `DeleteTaskCommand#execute()`, `Model#deleteTasks(Task taskToDelete)` is called.","lastModifiedDate":"2021-03-27"},{"lineNumber":327,"author":{"gitId":"icelenaugust"},"content":"This will delete the task at the specified index.","lastModifiedDate":"2021-03-27"},{"lineNumber":328,"author":{"gitId":"icelenaugust"},"content":"For brevity, lower level implementation of `Model#deleteTasks(Task taskToDelete)` is omitted.","lastModifiedDate":"2021-03-27"},{"lineNumber":329,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":330,"author":{"gitId":"icelenaugust"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-27"},{"lineNumber":331,"author":{"gitId":"icelenaugust"},"content":"A success message will be appended with `CommandResult#MESSAGE_DELETE_TASK_SUCCESS`.","lastModifiedDate":"2021-03-27"},{"lineNumber":332,"author":{"gitId":"icelenaugust"},"content":"The UI will also update as the underlying task list has been modified.","lastModifiedDate":"2021-03-27"},{"lineNumber":333,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"icelenaugust"},"content":"The sequence diagram for `DeleteTaskCommand` can be found below.","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":336,"author":{"gitId":"icelenaugust"},"content":"![Sequence Diagram of DeleteTask Command](images/DeleteTaskCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":338,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":339,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":340,"author":{"gitId":"litone01"},"content":"**Implementation of UndoneTaskCommand**  ","lastModifiedDate":"2021-04-02"},{"lineNumber":341,"author":{"gitId":"litone01"},"content":"The following is a detailed explanation on how UndoneTaskCommand is implemented.","lastModifiedDate":"2021-04-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":343,"author":{"gitId":"litone01"},"content":"**Step 1**: User executes `undone_task Index` command to mark the completed task at the given index as uncompleted. ","lastModifiedDate":"2021-04-02"},{"lineNumber":344,"author":{"gitId":"litone01"},"content":"Let us call this task the target task.","lastModifiedDate":"2021-04-02"},{"lineNumber":345,"author":{"gitId":"litone01"},"content":"A `UndoneTaskCommandParser` object is created, and the `UndoneTaskCommandParser#parse(String args)` method is called.","lastModifiedDate":"2021-04-02"},{"lineNumber":346,"author":{"gitId":"litone01"},"content":"The method conducts parses the `args` and conducts validation checks to ensure that the given index is a valid unsigned non-zero integer.","lastModifiedDate":"2021-04-02"},{"lineNumber":347,"author":{"gitId":"litone01"},"content":"A `UndoneTaskCommand` object is returned.","lastModifiedDate":"2021-04-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":349,"author":{"gitId":"litone01"},"content":"**Step 2**: On `UndoneTaskCommand#execute()`, the index is further checked to ensure it is not out of range (i.e. larger than the size of task list)","lastModifiedDate":"2021-04-02"},{"lineNumber":350,"author":{"gitId":"litone01"},"content":"and the target task is indeed a completed task.","lastModifiedDate":"2021-04-02"},{"lineNumber":351,"author":{"gitId":"litone01"},"content":"Afterwards, `UndoneTaskCommand#createUncompletedTask()` method is called.","lastModifiedDate":"2021-04-02"},{"lineNumber":352,"author":{"gitId":"litone01"},"content":"This method copies the information of the target task and creates an uncompleted task with exactly the same information as the target task.","lastModifiedDate":"2021-04-02"},{"lineNumber":353,"author":{"gitId":"litone01"},"content":"Finally, `Model#setTask(Task taskToUndone, Task uncompletedTask)` and `Model#updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS)` method are called.","lastModifiedDate":"2021-04-02"},{"lineNumber":354,"author":{"gitId":"litone01"},"content":"These two methods updates the target task in the task list and refresh the UI to show the update.","lastModifiedDate":"2021-04-02"},{"lineNumber":355,"author":{"gitId":"litone01"},"content":"For brevity, lower level implementation of `UndoneTaskCommand#createUncompletedTask()`, ","lastModifiedDate":"2021-04-02"},{"lineNumber":356,"author":{"gitId":"litone01"},"content":"`Model#setTask(Task taskToUndone, Task uncompletedTask)`, `Model#updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS)` are omitted.","lastModifiedDate":"2021-04-02"},{"lineNumber":357,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":358,"author":{"gitId":"litone01"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-04-02"},{"lineNumber":359,"author":{"gitId":"litone01"},"content":"A success message will be appended with `CommandResult#MESSAGE_UNDONE_TASK_SUCCESS`.","lastModifiedDate":"2021-04-02"},{"lineNumber":360,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":361,"author":{"gitId":"litone01"},"content":"The sequence diagram for `UndoneTaskCommand` can be found below.","lastModifiedDate":"2021-04-02"},{"lineNumber":362,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":363,"author":{"gitId":"litone01"},"content":"![Sequence Diagram of UndoneTask Command](images/UndoneTaskCommandSequenceDiagram.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":364,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":365,"author":{"gitId":"litone01"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: ","lastModifiedDate":"2021-04-02"},{"lineNumber":366,"author":{"gitId":"litone01"},"content":"**Note:** Due to the size constraint, the argument `PREDICATE_SHOW_ALL_TASKS` is not shown in the sequence diagram ","lastModifiedDate":"2021-04-02"},{"lineNumber":367,"author":{"gitId":"litone01"},"content":"when calling the method `Model#updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS)`.","lastModifiedDate":"2021-04-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":370,"author":{"gitId":"YuFeng0930"},"content":"**Implementation of EditTaskCommand**  ","lastModifiedDate":"2021-03-31"},{"lineNumber":371,"author":{"gitId":"YuFeng0930"},"content":"The following is a detailed explanation on how EditTaskCommand is implemented.","lastModifiedDate":"2021-03-31"},{"lineNumber":372,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":373,"author":{"gitId":"YuFeng0930"},"content":"**Step 1**: User executes `Edit_task Index` command to Edit the task at the given index.","lastModifiedDate":"2021-03-31"},{"lineNumber":374,"author":{"gitId":"litone01"},"content":"An `EditTaskCommandParser` object is created, and the `EditTaskCommandParser#parse(String args)` method is called.","lastModifiedDate":"2021-04-02"},{"lineNumber":375,"author":{"gitId":"YuFeng0930"},"content":"The method conducts parses the `args` and conducts validation checks to ensure that it complies with the specification.","lastModifiedDate":"2021-03-31"},{"lineNumber":376,"author":{"gitId":"YuFeng0930"},"content":"An `EditTaskDescriptor` object is created, and it contains all the field an Task needed. ","lastModifiedDate":"2021-03-31"},{"lineNumber":377,"author":{"gitId":"YuFeng0930"},"content":"If the field is edited, then store the edited one; otherwise, store the original value.","lastModifiedDate":"2021-03-31"},{"lineNumber":378,"author":{"gitId":"YuFeng0930"},"content":"An `EditTaskCommand` object (with the `EditTaskDescriptor` as a parameter) is returned.","lastModifiedDate":"2021-03-31"},{"lineNumber":379,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":380,"author":{"gitId":"YuFeng0930"},"content":"**Step 2**: On `EditTaskCommand#execute()`, `Model#getFilteredTaskList()` and ","lastModifiedDate":"2021-03-31"},{"lineNumber":381,"author":{"gitId":"YuFeng0930"},"content":"`Model#createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor)` are called.","lastModifiedDate":"2021-03-31"},{"lineNumber":382,"author":{"gitId":"YuFeng0930"},"content":"These will create the edited Task. Then, `Model#setTask(Task taskToEdit, Task editedTask)` and ","lastModifiedDate":"2021-03-31"},{"lineNumber":383,"author":{"gitId":"YuFeng0930"},"content":"`Model#updateFilteredTaskList()` are called. These will update the edited Task into the task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":384,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":385,"author":{"gitId":"YuFeng0930"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-31"},{"lineNumber":386,"author":{"gitId":"YuFeng0930"},"content":"A success message `EditTaskCommand#MESSAGE_EDIT_TASK_SUCCESS` will be displayed.","lastModifiedDate":"2021-03-31"},{"lineNumber":387,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":388,"author":{"gitId":"YuFeng0930"},"content":"The UI will also update as the underlying task list has been modified.","lastModifiedDate":"2021-03-31"},{"lineNumber":389,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":390,"author":{"gitId":"YuFeng0930"},"content":"The sequence diagram for `EditTaskCommand` can be found below.","lastModifiedDate":"2021-03-31"},{"lineNumber":391,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":392,"author":{"gitId":"YuFeng0930"},"content":"![Sequence Diagram of EditTask Command](images/EditTaskCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":393,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":394,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":395,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":396,"author":{"gitId":"SoulUseless"},"content":"**Implementation of SortTaskCommand**  ","lastModifiedDate":"2021-03-21"},{"lineNumber":397,"author":{"gitId":"SoulUseless"},"content":"The following is a detailed explanation on how SortTaskCommand is implemented in the Logic component.","lastModifiedDate":"2021-03-28"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"SoulUseless"},"content":"**Step 1**: User executes `sort SORT_VAR` command to sort the tasks based on the `SORT_VAR` provided.","lastModifiedDate":"2021-03-21"},{"lineNumber":400,"author":{"gitId":"litone01"},"content":"An `SortTaskCommandParser` object is created, and the `SortTaskCommandParser#parse(String args)` method is called. ","lastModifiedDate":"2021-04-02"},{"lineNumber":401,"author":{"gitId":"SoulUseless"},"content":"The method conducts parses the `SORT_VAR` and conducts validation checks to ensure that it complies with the specification.","lastModifiedDate":"2021-03-21"},{"lineNumber":402,"author":{"gitId":"SoulUseless"},"content":"A `SortTaskCommand` object is returned.","lastModifiedDate":"2021-03-21"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"SoulUseless"},"content":"**Step 2**: On `SortTaskCommand#execute()`, `Model#sortTasks(String comparingVar)` is called.","lastModifiedDate":"2021-03-21"},{"lineNumber":405,"author":{"gitId":"SoulUseless"},"content":"This will cause the task list to sort itself, based on the provided `comparingVar`.","lastModifiedDate":"2021-03-21"},{"lineNumber":406,"author":{"gitId":"SoulUseless"},"content":"For brevity, lower level implementation of `Model#sortTasks(String comparingVar)` is omitted.","lastModifiedDate":"2021-03-21"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"SoulUseless"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-21"},{"lineNumber":409,"author":{"gitId":"SoulUseless"},"content":"A success message will be appended with `CommandResult#MESSAGE_SORT_TASK_SUCCESS`.","lastModifiedDate":"2021-03-21"},{"lineNumber":410,"author":{"gitId":"SoulUseless"},"content":"The UI will also update as the underlying task list has been modified.","lastModifiedDate":"2021-03-21"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"SoulUseless"},"content":"The sequence diagram for `sortTaskCommand` can be found below.","lastModifiedDate":"2021-03-21"},{"lineNumber":413,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":414,"author":{"gitId":"icelenaugust"},"content":"![Sequence Diagram of SortTask Command](images/SortTaskSequenceDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"SoulUseless"},"content":"***Lower Level implementation***  ","lastModifiedDate":"2021-03-28"},{"lineNumber":417,"author":{"gitId":"SoulUseless"},"content":"The following is a brief explanation , as shown in a sequence diagram, of how sorting is implemented inside the Model component.","lastModifiedDate":"2021-03-28"},{"lineNumber":418,"author":{"gitId":"SoulUseless"},"content":"![Sequence Diagram of SortTaskCommand in Model Component](images/SortTaskModelSequenceDiagram.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":419,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":420,"author":{"gitId":"SoulUseless"},"content":"***Design Considerations for `SortTaskCommand`***","lastModifiedDate":"2021-04-07"},{"lineNumber":421,"author":{"gitId":"SoulUseless"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":422,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":423,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003e Alternative 1 (Chosen Implementation) \u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":424,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003e Alternative 2 \u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":425,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":426,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":427,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e ","lastModifiedDate":"2021-04-07"},{"lineNumber":428,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":429,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003ePersistent Sorting using a Comparator\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":430,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003e Pros:","lastModifiedDate":"2021-04-07"},{"lineNumber":431,"author":{"gitId":"SoulUseless"},"content":"                    \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":432,"author":{"gitId":"SoulUseless"},"content":"                        \u003cli\u003eUX considerations when users expect sorting to be persistent over multiple commands\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":433,"author":{"gitId":"SoulUseless"},"content":"                    \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":434,"author":{"gitId":"SoulUseless"},"content":"                \u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":435,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003e Cons:","lastModifiedDate":"2021-04-07"},{"lineNumber":436,"author":{"gitId":"SoulUseless"},"content":"                    \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":437,"author":{"gitId":"SoulUseless"},"content":"                        \u003cli\u003eAdditional Testing of Comparator needed\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":438,"author":{"gitId":"SoulUseless"},"content":"                        \u003cli\u003eAdditional component added might add to complexity\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":439,"author":{"gitId":"SoulUseless"},"content":"                    \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":440,"author":{"gitId":"SoulUseless"},"content":"                \u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":441,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":442,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":443,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e ","lastModifiedDate":"2021-04-07"},{"lineNumber":444,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":445,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eTransient Sorting by sorting the UniqueTaskList directly\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":446,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003e Pros:","lastModifiedDate":"2021-04-07"},{"lineNumber":447,"author":{"gitId":"SoulUseless"},"content":"                    \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":448,"author":{"gitId":"SoulUseless"},"content":"                        \u003cli\u003eStraightforward implementation\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":449,"author":{"gitId":"SoulUseless"},"content":"                        \u003cli\u003eLess testing required due to less components\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":450,"author":{"gitId":"SoulUseless"},"content":"                    \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":451,"author":{"gitId":"SoulUseless"},"content":"                \u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":452,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003e Cons:","lastModifiedDate":"2021-04-07"},{"lineNumber":453,"author":{"gitId":"SoulUseless"},"content":"                    \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":454,"author":{"gitId":"SoulUseless"},"content":"                        \u003cli\u003eUX might be compromised as order is not maintained over command executions\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":455,"author":{"gitId":"SoulUseless"},"content":"                    \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":456,"author":{"gitId":"SoulUseless"},"content":"                \u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":457,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":458,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":459,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":460,"author":{"gitId":"SoulUseless"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":461,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":462,"author":{"gitId":"SoulUseless"},"content":"Our group decided to go with alternative 1 and implemented an additional sort comparator known as `TaskComparator`.","lastModifiedDate":"2021-04-07"},{"lineNumber":463,"author":{"gitId":"SoulUseless"},"content":"This is to ensure smoother UX, as well as better integration with other commands.","lastModifiedDate":"2021-04-07"},{"lineNumber":464,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":465,"author":{"gitId":"SoulUseless"},"content":"By implementing it in this way, our group is able to ensure that the sort order remains consistent over commands that could either:","lastModifiedDate":"2021-04-07"},{"lineNumber":466,"author":{"gitId":"SoulUseless"},"content":"* Alter the number of tasks shown at any one time (See \u003ccode\u003efind_task\u003c/code\u003e)\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":467,"author":{"gitId":"SoulUseless"},"content":"* Change the order of task appearance independent of \u003ccode\u003esort_task\u003c/code\u003e (See \u003ccode\u003epin_task\u003c/code\u003e)\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":468,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":469,"author":{"gitId":"SoulUseless"},"content":"This would enable SOChedule to better serve the needs of its user base. ","lastModifiedDate":"2021-04-07"},{"lineNumber":470,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":471,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":472,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":473,"author":{"gitId":"SoulUseless"},"content":"**Implementation of PinTaskCommand/UnpinTaskCommand**  ","lastModifiedDate":"2021-03-28"},{"lineNumber":474,"author":{"gitId":"SoulUseless"},"content":"The following is a detailed explanation on how PinTaskCommand is implemented.","lastModifiedDate":"2021-03-28"},{"lineNumber":475,"author":{"gitId":"SoulUseless"},"content":"UnpinTaskCommand is largely similar in implementation to PinTaskCommand and will be omitted for brevity.","lastModifiedDate":"2021-03-28"},{"lineNumber":476,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":477,"author":{"gitId":"icelenaugust"},"content":"**Step 1**: User executes `pin_task INDEX` command to pin the task at the given index.","lastModifiedDate":"2021-03-30"},{"lineNumber":478,"author":{"gitId":"litone01"},"content":"An `PinTaskCommandParser` object is created, and the `PinTaskCommandParser#parse(String args)` method is called.","lastModifiedDate":"2021-04-02"},{"lineNumber":479,"author":{"gitId":"SoulUseless"},"content":"The method conducts parses the `args` and conducts validation checks to ensure that it complies with the specification.","lastModifiedDate":"2021-03-28"},{"lineNumber":480,"author":{"gitId":"SoulUseless"},"content":"A `PinTaskCommand` object is returned.","lastModifiedDate":"2021-03-28"},{"lineNumber":481,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":482,"author":{"gitId":"SoulUseless"},"content":"**Step 2**: On `PinTaskCommand#execute()`, `Model#pinTask(Task task)` is called.","lastModifiedDate":"2021-03-28"},{"lineNumber":483,"author":{"gitId":"SoulUseless"},"content":"This will pin the task at the specified index.","lastModifiedDate":"2021-03-28"},{"lineNumber":484,"author":{"gitId":"SoulUseless"},"content":"Subsequently, the underlying task list will be sorted by calling `Model#sortTasksDefault()`, with pinned tasks being first in priority, followed by the last sorted variable ","lastModifiedDate":"2021-03-28"},{"lineNumber":485,"author":{"gitId":"SoulUseless"},"content":"(if `sort_task` was not called before, task list will be sorted by name).","lastModifiedDate":"2021-03-28"},{"lineNumber":486,"author":{"gitId":"SoulUseless"},"content":"For brevity, lower level implementation of `Model#pinTask(Task task)` is omitted.","lastModifiedDate":"2021-03-28"},{"lineNumber":487,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":488,"author":{"gitId":"SoulUseless"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-28"},{"lineNumber":489,"author":{"gitId":"SoulUseless"},"content":"A success message will be appended with `CommandResult#MESSAGE_PIN_TASK_SUCCESS`.","lastModifiedDate":"2021-03-28"},{"lineNumber":490,"author":{"gitId":"SoulUseless"},"content":"The UI will also update as the underlying task list has been modified.","lastModifiedDate":"2021-03-28"},{"lineNumber":491,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":492,"author":{"gitId":"SoulUseless"},"content":"The sequence diagram for `PinTaskCommand` can be found below.","lastModifiedDate":"2021-03-28"},{"lineNumber":493,"author":{"gitId":"SoulUseless"},"content":"It is largely similar to `SortTaskCommand`, with a some minor differences:","lastModifiedDate":"2021-03-28"},{"lineNumber":494,"author":{"gitId":"SoulUseless"},"content":"* Instead of `SortTask`-related parsers and commands, `PinTask`-related parsers and commands are created and activated.","lastModifiedDate":"2021-03-28"},{"lineNumber":495,"author":{"gitId":"SoulUseless"},"content":"* Additional call to `Model#sortTaskDefault()` after `Model#pinTask(Task)`","lastModifiedDate":"2021-03-28"},{"lineNumber":496,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":497,"author":{"gitId":"SoulUseless"},"content":"![Sequence Diagram of PinTaskCommand](images/PinTaskSequenceDiagram.png)","lastModifiedDate":"2021-03-28"},{"lineNumber":498,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":499,"author":{"gitId":"SoulUseless"},"content":"The below activity diagram summarises what happens when `pin_task` is called.","lastModifiedDate":"2021-04-07"},{"lineNumber":500,"author":{"gitId":"SoulUseless"},"content":"It can also be similarly extrapolated to apply to `unpin_task`.","lastModifiedDate":"2021-04-07"},{"lineNumber":501,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":502,"author":{"gitId":"SoulUseless"},"content":"![Activity Diagram of PinTaskCommand](images/PinTaskActivityDiagram.png)","lastModifiedDate":"2021-04-07"},{"lineNumber":503,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":504,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":505,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":506,"author":{"gitId":"YuFeng0930"},"content":"**Implementation of ClearCompletedTaskCommand**  ","lastModifiedDate":"2021-03-31"},{"lineNumber":507,"author":{"gitId":"YuFeng0930"},"content":"The following is a detailed explanation on how ClearCompletedTaskCommand is implemented.","lastModifiedDate":"2021-03-31"},{"lineNumber":508,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":509,"author":{"gitId":"YuFeng0930"},"content":"**Step 1**: User executes `clear_completed_task` command to clear completed tasks in task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":510,"author":{"gitId":"YuFeng0930"},"content":"A `ClearCompletedTaskCommand` object is created and returned.","lastModifiedDate":"2021-03-31"},{"lineNumber":511,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":512,"author":{"gitId":"YuFeng0930"},"content":"**Step 2**: On `ClearCompletedTaskCommand#execute()`, `Model#clearCompletedTasks()` is called.","lastModifiedDate":"2021-03-31"},{"lineNumber":513,"author":{"gitId":"YuFeng0930"},"content":"This will delete all ticked tasks (all completed tasks).","lastModifiedDate":"2021-03-31"},{"lineNumber":514,"author":{"gitId":"YuFeng0930"},"content":"For brevity, lower level implementation of `Model#clearCompletedTasks()` is omitted.","lastModifiedDate":"2021-03-31"},{"lineNumber":515,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":516,"author":{"gitId":"YuFeng0930"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-31"},{"lineNumber":517,"author":{"gitId":"YuFeng0930"},"content":"A success message `ClearCompletedTaskCommand#MESSAGE_CLEAR_COMPLETED_TASK_SUCCESS` will be displayed.","lastModifiedDate":"2021-03-31"},{"lineNumber":518,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":519,"author":{"gitId":"YuFeng0930"},"content":"The sequence diagram for `ClearCompletedTaskCommand` can be found below.","lastModifiedDate":"2021-03-31"},{"lineNumber":520,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":521,"author":{"gitId":"YuFeng0930"},"content":"![Sequence Diagram of Clear Command](images/ClearCompletedTaskCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":522,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":523,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":524,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":525,"author":{"gitId":"YuFeng0930"},"content":"**Implementation of ClearExpiredTaskCommand**  ","lastModifiedDate":"2021-03-31"},{"lineNumber":526,"author":{"gitId":"YuFeng0930"},"content":"The following is a detailed explanation on how ClearExpiredTaskCommand is implemented.","lastModifiedDate":"2021-03-31"},{"lineNumber":527,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":528,"author":{"gitId":"YuFeng0930"},"content":"**Step 1**: User executes `clear_completed_task` command to clear completed tasks in task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":529,"author":{"gitId":"YuFeng0930"},"content":"A `ClearExpiredTaskCommand` object is created and returned.","lastModifiedDate":"2021-03-31"},{"lineNumber":530,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":531,"author":{"gitId":"YuFeng0930"},"content":"**Step 2**: On `ClearExpiredTaskCommand#execute()`, `Model#clearExpiredTasks()` is called.","lastModifiedDate":"2021-03-31"},{"lineNumber":532,"author":{"gitId":"YuFeng0930"},"content":"This will delete all expired tasks whose deadline have already past.","lastModifiedDate":"2021-03-31"},{"lineNumber":533,"author":{"gitId":"YuFeng0930"},"content":"For brevity, lower level implementation of `Model#clearExpiredTasks()` is omitted.","lastModifiedDate":"2021-03-31"},{"lineNumber":534,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":535,"author":{"gitId":"YuFeng0930"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-31"},{"lineNumber":536,"author":{"gitId":"YuFeng0930"},"content":"A success message `ClearExpiredTaskCommand#MESSAGE_CLEAR_EXPIRED_TASK_SUCCESS` will be displayed.","lastModifiedDate":"2021-03-31"},{"lineNumber":537,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":538,"author":{"gitId":"YuFeng0930"},"content":"The sequence diagram for `ClearExpiredTaskCommand` can be found below.","lastModifiedDate":"2021-03-31"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":540,"author":{"gitId":"YuFeng0930"},"content":"![Sequence Diagram of Clear Command](images/ClearExpiredTaskCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":542,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":544,"author":{"gitId":"SoulUseless"},"content":"### 4.3 Event","lastModifiedDate":"2021-03-21"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"SoulUseless"},"content":"#### 4.3.1 Overview","lastModifiedDate":"2021-03-21"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"SoulUseless"},"content":"#### 4.3.2 Implementation","lastModifiedDate":"2021-03-21"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"YuFeng0930"},"content":"**Implementation of AddEventCommand**","lastModifiedDate":"2021-03-31"},{"lineNumber":551,"author":{"gitId":"YuFeng0930"},"content":"The following is a detailed explanation on how AddEventCommand is implemented.","lastModifiedDate":"2021-03-31"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":553,"author":{"gitId":"YuFeng0930"},"content":"**Step1**: User executes `add_event n/TASKNAME sd/STARTDATE st/STARTTIME ed/ENDDATE et/ENDTIME [c/CATEGORY]... [t/TAG]...` ","lastModifiedDate":"2021-03-31"},{"lineNumber":554,"author":{"gitId":"YuFeng0930"},"content":"command to add the specific event with given arguments. An `AddEventCommandParser` object is created, and the ","lastModifiedDate":"2021-03-31"},{"lineNumber":555,"author":{"gitId":"YuFeng0930"},"content":"`AddEventParser#parse(String args)` method is called. The method conducts parses the `args` and conducts validation","lastModifiedDate":"2021-03-31"},{"lineNumber":556,"author":{"gitId":"YuFeng0930"},"content":"checks to ensure that it compiles with the specification. An `AddEventCommand` object is returned.","lastModifiedDate":"2021-03-31"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":558,"author":{"gitId":"YuFeng0930"},"content":"**Step 2**: On `AddEventCommand#execute()`, `Model#addEvents(Event eventToAdd)` is called.","lastModifiedDate":"2021-03-31"},{"lineNumber":559,"author":{"gitId":"YuFeng0930"},"content":"This will add the event specified into the event list.","lastModifiedDate":"2021-03-31"},{"lineNumber":560,"author":{"gitId":"YuFeng0930"},"content":"For brevity, lower level implementation of `Model#addEvents(Event eventToAdd)` is omitted.","lastModifiedDate":"2021-03-31"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":562,"author":{"gitId":"YuFeng0930"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-31"},{"lineNumber":563,"author":{"gitId":"YuFeng0930"},"content":"A success message `AddEventCommand#MESSAGE_ADD_EVENT_SUCCES` will be displayed.","lastModifiedDate":"2021-03-31"},{"lineNumber":564,"author":{"gitId":"YuFeng0930"},"content":"The UI will also update as the underlying event list has been modified.","lastModifiedDate":"2021-03-31"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":566,"author":{"gitId":"YuFeng0930"},"content":"The sequence diagram for `AddEventCommand` can be found below.","lastModifiedDate":"2021-03-31"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":568,"author":{"gitId":"YuFeng0930"},"content":"![Sequence Diagram of AddEvent Command](images/AddEventCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":570,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":572,"author":{"gitId":"YuFeng0930"},"content":"**Implementation of DeleteEventCommand**  ","lastModifiedDate":"2021-03-31"},{"lineNumber":573,"author":{"gitId":"YuFeng0930"},"content":"The following is a detailed explanation on how DeleteEventCommand is implemented.","lastModifiedDate":"2021-03-31"},{"lineNumber":574,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":575,"author":{"gitId":"YuFeng0930"},"content":"**Step 1**: User executes `delete_event Index` command to delete the event at the given index.","lastModifiedDate":"2021-03-31"},{"lineNumber":576,"author":{"gitId":"YuFeng0930"},"content":"A `DeleteEventParser` object is created, and the `DeleteEventParser#parse(String args)` method is called.","lastModifiedDate":"2021-03-31"},{"lineNumber":577,"author":{"gitId":"YuFeng0930"},"content":"The method conducts parses the `args` and conducts validation checks to ensure that it complies with the specification.","lastModifiedDate":"2021-03-31"},{"lineNumber":578,"author":{"gitId":"YuFeng0930"},"content":"A `DeleteEventCommand` object is returned.","lastModifiedDate":"2021-03-31"},{"lineNumber":579,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":580,"author":{"gitId":"YuFeng0930"},"content":"**Step 2**: On `DeleteEventCommand#execute()`, `Model#deleteEvents(Event eventToDelete)` is called.","lastModifiedDate":"2021-03-31"},{"lineNumber":581,"author":{"gitId":"YuFeng0930"},"content":"This will delete the event at the specified index.","lastModifiedDate":"2021-03-31"},{"lineNumber":582,"author":{"gitId":"YuFeng0930"},"content":"For brevity, lower level implementation of `Model#deleteEvents(Event eventToDelete)` is omitted.","lastModifiedDate":"2021-03-31"},{"lineNumber":583,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":584,"author":{"gitId":"YuFeng0930"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-31"},{"lineNumber":585,"author":{"gitId":"YuFeng0930"},"content":"A success message `DeleteEventCommand#MESSAGE_DELETE_EVENT_SUCCESS` will be displayed.","lastModifiedDate":"2021-03-31"},{"lineNumber":586,"author":{"gitId":"YuFeng0930"},"content":"The UI will also update as the underlying event list has been modified.","lastModifiedDate":"2021-03-31"},{"lineNumber":587,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":588,"author":{"gitId":"YuFeng0930"},"content":"The sequence diagram for `DeleteEventCommand` can be found below.","lastModifiedDate":"2021-03-31"},{"lineNumber":589,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":590,"author":{"gitId":"YuFeng0930"},"content":"![Sequence Diagram of DeleteEvent Command](images/DeleteEventCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":591,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":592,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":593,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":594,"author":{"gitId":"YuFeng0930"},"content":"**Implementation of EditEventCommand**  ","lastModifiedDate":"2021-03-31"},{"lineNumber":595,"author":{"gitId":"YuFeng0930"},"content":"The following is a detailed explanation on how EditEventCommand is implemented.","lastModifiedDate":"2021-03-31"},{"lineNumber":596,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":597,"author":{"gitId":"YuFeng0930"},"content":"**Step 1**: User executes `Edit_event Index` command to Edit the event at the given index.","lastModifiedDate":"2021-03-31"},{"lineNumber":598,"author":{"gitId":"YuFeng0930"},"content":"An `EditEventParser` object is created, and the `EditEventParser#parse(String args)` method is called.","lastModifiedDate":"2021-03-31"},{"lineNumber":599,"author":{"gitId":"YuFeng0930"},"content":"The method conducts parses the `args` and conducts validation checks to ensure that it complies with the specification.","lastModifiedDate":"2021-03-31"},{"lineNumber":600,"author":{"gitId":"YuFeng0930"},"content":"An `EditEventDescriptor` object is created, and it contains all the field an Event needed. ","lastModifiedDate":"2021-03-31"},{"lineNumber":601,"author":{"gitId":"YuFeng0930"},"content":"If the field is edited, then store the edited one; otherwise, store the original value.","lastModifiedDate":"2021-03-31"},{"lineNumber":602,"author":{"gitId":"YuFeng0930"},"content":"An `EditEventCommand` object (with the `EditEventDescriptor` as a parameter) is returned.","lastModifiedDate":"2021-03-31"},{"lineNumber":603,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":604,"author":{"gitId":"YuFeng0930"},"content":"**Step 2**: On `EditEventCommand#execute()`, `Model#getFilteredEventList()` and ","lastModifiedDate":"2021-03-31"},{"lineNumber":605,"author":{"gitId":"YuFeng0930"},"content":"`Model#createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor)` are called.","lastModifiedDate":"2021-03-31"},{"lineNumber":606,"author":{"gitId":"YuFeng0930"},"content":"These will create the edited Event. Then, `Model#setEvent(Event eventToEdit, Event editedEvent)` and ","lastModifiedDate":"2021-03-31"},{"lineNumber":607,"author":{"gitId":"YuFeng0930"},"content":"`Model#updateFilteredEventList()` are called. These will update the edited Event into the event list.","lastModifiedDate":"2021-03-31"},{"lineNumber":608,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":609,"author":{"gitId":"YuFeng0930"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-31"},{"lineNumber":610,"author":{"gitId":"YuFeng0930"},"content":"A success message `EditEventCommand#MESSAGE_EDIT_TASK_SUCCESS` will be displayed.","lastModifiedDate":"2021-03-31"},{"lineNumber":611,"author":{"gitId":"YuFeng0930"},"content":"The UI will also update as the underlying event list has been modified.","lastModifiedDate":"2021-03-31"},{"lineNumber":612,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":613,"author":{"gitId":"YuFeng0930"},"content":"The sequence diagram for `EditEventCommand` can be found below.","lastModifiedDate":"2021-03-31"},{"lineNumber":614,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":615,"author":{"gitId":"YuFeng0930"},"content":"![Sequence Diagram of EditEvent Command](images/EditEventCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":616,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":617,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":618,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":619,"author":{"gitId":"icelenaugust"},"content":"**Implementation of FindFreeTimeCommand**  ","lastModifiedDate":"2021-03-30"},{"lineNumber":620,"author":{"gitId":"icelenaugust"},"content":"The following is a detailed explanation on how FindFreeTaskCommand is implemented.","lastModifiedDate":"2021-03-30"},{"lineNumber":621,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":622,"author":{"gitId":"icelenaugust"},"content":"**Step 1**: User executes `free_time DATE` command to find free time slots in the given day.","lastModifiedDate":"2021-03-30"},{"lineNumber":623,"author":{"gitId":"icelenaugust"},"content":"An `FindFreeTimeCommandParser` object is created, and the `FindFreeTimeCommandParser#parse(String args)` method is called.","lastModifiedDate":"2021-03-30"},{"lineNumber":624,"author":{"gitId":"icelenaugust"},"content":"The method conducts parses the `args` and conducts validation checks to ensure that it complies with the specification.","lastModifiedDate":"2021-03-30"},{"lineNumber":625,"author":{"gitId":"icelenaugust"},"content":"A `FindFreeTimeCommand` object is returned.","lastModifiedDate":"2021-03-30"},{"lineNumber":626,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":627,"author":{"gitId":"icelenaugust"},"content":"**Step 2**: On `FindFreeTimeCommand#execute()`, `Model#getFreeTimeSlots(Date date)` is called.","lastModifiedDate":"2021-03-30"},{"lineNumber":628,"author":{"gitId":"icelenaugust"},"content":"This will get free time slots and store in a string arraylist.","lastModifiedDate":"2021-03-30"},{"lineNumber":629,"author":{"gitId":"icelenaugust"},"content":"For brevity, lower level implementation of `Model#getFreeTimeSlots(Date date)` is omitted.","lastModifiedDate":"2021-03-30"},{"lineNumber":630,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":631,"author":{"gitId":"icelenaugust"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-30"},{"lineNumber":632,"author":{"gitId":"icelenaugust"},"content":"A success message will be appended with `CommandResult#MESSAGE_FIND_FREE_TIME_SUCCESS`.","lastModifiedDate":"2021-03-30"},{"lineNumber":633,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":634,"author":{"gitId":"icelenaugust"},"content":"The sequence diagram for `FindFreeTimeCommand` can be found below.","lastModifiedDate":"2021-03-30"},{"lineNumber":635,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":636,"author":{"gitId":"icelenaugust"},"content":"![Sequence Diagram of FindFreeTimeCommand](images/FindFreeTimeCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-30"},{"lineNumber":637,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":638,"author":{"gitId":"icelenaugust"},"content":"The below activity diagram summarises what happens when `free_time` is called.","lastModifiedDate":"2021-04-08"},{"lineNumber":639,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":640,"author":{"gitId":"icelenaugust"},"content":"![Activity Diagram of FindFreeTimeCommand](images/FindFreeTimeActivityDiagram.png)","lastModifiedDate":"2021-04-08"},{"lineNumber":641,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":642,"author":{"gitId":"icelenaugust"},"content":"***Design Considerations for `FindFreeTimeCommand`***","lastModifiedDate":"2021-04-08"},{"lineNumber":643,"author":{"gitId":"icelenaugust"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":644,"author":{"gitId":"icelenaugust"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":645,"author":{"gitId":"icelenaugust"},"content":"        \u003cth\u003e Alternative 1 (Chosen Implementation) \u003c/th\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":646,"author":{"gitId":"icelenaugust"},"content":"        \u003cth\u003e Alternative 2 \u003c/th\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":647,"author":{"gitId":"icelenaugust"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":648,"author":{"gitId":"icelenaugust"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":649,"author":{"gitId":"icelenaugust"},"content":"        \u003ctd\u003e ","lastModifiedDate":"2021-04-08"},{"lineNumber":650,"author":{"gitId":"icelenaugust"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":651,"author":{"gitId":"icelenaugust"},"content":"                \u003cli\u003eSeveral helper functions were implemented in UniqueEventList class\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":652,"author":{"gitId":"icelenaugust"},"content":"                \u003cli\u003e Pros:","lastModifiedDate":"2021-04-08"},{"lineNumber":653,"author":{"gitId":"icelenaugust"},"content":"                    \u003cul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":654,"author":{"gitId":"icelenaugust"},"content":"                        \u003cli\u003eEach function hanles a small part of logic\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":655,"author":{"gitId":"icelenaugust"},"content":"                        \u003cli\u003eEasier to detect bugs\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":656,"author":{"gitId":"icelenaugust"},"content":"                        \u003cli\u003eBetter readability of code\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":657,"author":{"gitId":"icelenaugust"},"content":"                    \u003c/ul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":658,"author":{"gitId":"icelenaugust"},"content":"                \u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":659,"author":{"gitId":"icelenaugust"},"content":"                \u003cli\u003e Cons:","lastModifiedDate":"2021-04-08"},{"lineNumber":660,"author":{"gitId":"icelenaugust"},"content":"                    \u003cul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":661,"author":{"gitId":"icelenaugust"},"content":"                        \u003cli\u003eLonger lines of code\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":662,"author":{"gitId":"icelenaugust"},"content":"                        \u003cli\u003eAffects other classes\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":663,"author":{"gitId":"icelenaugust"},"content":"                    \u003c/ul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":664,"author":{"gitId":"icelenaugust"},"content":"                \u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":665,"author":{"gitId":"icelenaugust"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":666,"author":{"gitId":"icelenaugust"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":667,"author":{"gitId":"icelenaugust"},"content":"        \u003ctd\u003e ","lastModifiedDate":"2021-04-08"},{"lineNumber":668,"author":{"gitId":"icelenaugust"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":669,"author":{"gitId":"icelenaugust"},"content":"                \u003cli\u003eWrite methods in FindFreeTimeCommand class directly\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":670,"author":{"gitId":"icelenaugust"},"content":"                \u003cli\u003e Pros:","lastModifiedDate":"2021-04-08"},{"lineNumber":671,"author":{"gitId":"icelenaugust"},"content":"                    \u003cul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":672,"author":{"gitId":"icelenaugust"},"content":"                        \u003cli\u003eStraightforward implementation\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":673,"author":{"gitId":"icelenaugust"},"content":"                        \u003cli\u003eLess testing required due to less components\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":674,"author":{"gitId":"icelenaugust"},"content":"                    \u003c/ul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":675,"author":{"gitId":"icelenaugust"},"content":"                \u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":676,"author":{"gitId":"icelenaugust"},"content":"                \u003cli\u003e Cons:","lastModifiedDate":"2021-04-08"},{"lineNumber":677,"author":{"gitId":"icelenaugust"},"content":"                    \u003cul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":678,"author":{"gitId":"icelenaugust"},"content":"                        \u003cli\u003eStrong dependency on Event class and UniqueEventList class\u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":679,"author":{"gitId":"icelenaugust"},"content":"                    \u003c/ul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":680,"author":{"gitId":"icelenaugust"},"content":"                \u003c/li\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":681,"author":{"gitId":"icelenaugust"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":682,"author":{"gitId":"icelenaugust"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":683,"author":{"gitId":"icelenaugust"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":684,"author":{"gitId":"icelenaugust"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":685,"author":{"gitId":"icelenaugust"},"content":"\u003cdiv markdown\u003d\"block\"\u003e","lastModifiedDate":"2021-04-08"},{"lineNumber":686,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":687,"author":{"gitId":"icelenaugust"},"content":"We choose alternative 1 because it presents code in a clearer way. Breaking up long methods into shorter methods will improve","lastModifiedDate":"2021-04-08"},{"lineNumber":688,"author":{"gitId":"icelenaugust"},"content":"readability of the code. Implementing codes under UniqueEventList also reduces dependency.","lastModifiedDate":"2021-04-08"},{"lineNumber":689,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":690,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":691,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":692,"author":{"gitId":"YuFeng0930"},"content":"**Implementation of ClearExpiredEventCommand**  ","lastModifiedDate":"2021-03-31"},{"lineNumber":693,"author":{"gitId":"YuFeng0930"},"content":"The following is a detailed explanation on how ClearExpiredEventCommand is implemented.","lastModifiedDate":"2021-03-31"},{"lineNumber":694,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":695,"author":{"gitId":"YuFeng0930"},"content":"**Step 1**: User executes `clear_completed_event` command to clear completed events in event list.","lastModifiedDate":"2021-03-31"},{"lineNumber":696,"author":{"gitId":"YuFeng0930"},"content":"A `ClearExpiredEventCommand` object is created and returned.","lastModifiedDate":"2021-03-31"},{"lineNumber":697,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":698,"author":{"gitId":"YuFeng0930"},"content":"**Step 2**: On `ClearExpiredEventCommand#execute()`, `Model#clearExpiredEvents()` is called.","lastModifiedDate":"2021-03-31"},{"lineNumber":699,"author":{"gitId":"YuFeng0930"},"content":"This will delete all expired events whose end date time have already past.","lastModifiedDate":"2021-03-31"},{"lineNumber":700,"author":{"gitId":"YuFeng0930"},"content":"For brevity, lower level implementation of `Model#clearExpiredEvents()` is omitted.","lastModifiedDate":"2021-03-31"},{"lineNumber":701,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":702,"author":{"gitId":"YuFeng0930"},"content":"**Step 3**: On execution completion a `CommandResult` is created.","lastModifiedDate":"2021-03-31"},{"lineNumber":703,"author":{"gitId":"YuFeng0930"},"content":"A success message `ClearExpiredEventCommand#MESSAGE_CLEAR_COMPLETED_TASK_SUCCESS` will be displayed.","lastModifiedDate":"2021-03-31"},{"lineNumber":704,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":705,"author":{"gitId":"YuFeng0930"},"content":"The sequence diagram for `ClearExpiredEventCommand` can be found below.","lastModifiedDate":"2021-03-31"},{"lineNumber":706,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":707,"author":{"gitId":"YuFeng0930"},"content":"![Sequence Diagram of Clear Command](images/ClearExpiredEventCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":708,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":709,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":710,"author":{"gitId":"SoulUseless"},"content":"[Return to Table of Contents](#table-of-contents)  ","lastModifiedDate":"2021-04-07"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":712,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"SoulUseless"},"content":"## 5. Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2021-03-21"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":717,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":718,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":719,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":720,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"SoulUseless"},"content":"## Appendix","lastModifiedDate":"2021-03-21"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"SoulUseless"},"content":"### A1. Product scope","lastModifiedDate":"2021-03-21"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"SoulUseless"},"content":"* NUS SOC Student","lastModifiedDate":"2021-02-25"},{"lineNumber":731,"author":{"gitId":"SoulUseless"},"content":"* Prefer using CLI rather than GUI","lastModifiedDate":"2021-02-25"},{"lineNumber":732,"author":{"gitId":"SoulUseless"},"content":"* Struggle to manage their schedule","lastModifiedDate":"2021-02-25"},{"lineNumber":733,"author":{"gitId":"litone01"},"content":"* Have a lot of commitments (6 modules, TA and RA roles while balancing a part time internship)","lastModifiedDate":"2021-04-06"},{"lineNumber":734,"author":{"gitId":"SoulUseless"},"content":"* Can type fast, hate mouse","lastModifiedDate":"2021-02-25"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":736,"author":{"gitId":"SoulUseless"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-25"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":738,"author":{"gitId":"SoulUseless"},"content":"* Provide a simple platform for target users to manage their schedule","lastModifiedDate":"2021-02-25"},{"lineNumber":739,"author":{"gitId":"SoulUseless"},"content":"* CLI commands to manage meetings or schedule with some contacts","lastModifiedDate":"2021-02-25"},{"lineNumber":740,"author":{"gitId":"SoulUseless"},"content":"* CLI commands to add tasks and reminders","lastModifiedDate":"2021-02-25"},{"lineNumber":741,"author":{"gitId":"SoulUseless"},"content":"* GUI to display the schedule of user","lastModifiedDate":"2021-02-25"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"SoulUseless"},"content":"### A2. User stories","lastModifiedDate":"2021-03-21"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"icelenaugust"},"content":"#### Task Related","lastModifiedDate":"2021-04-08"},{"lineNumber":748,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":749,"author":{"gitId":"icelenaugust"},"content":"| Priority | As a …​                            | I want to …​                                                        | So that …​                                                                |","lastModifiedDate":"2021-02-23"},{"lineNumber":750,"author":{"gitId":"icelenaugust"},"content":"| -------- | ------------------------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------------- |","lastModifiedDate":"2021-02-23"},{"lineNumber":751,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | Add a task to my schedule                                              | I can track my task better                                                   |","lastModifiedDate":"2021-02-23"},{"lineNumber":752,"author":{"gitId":"SoulUseless"},"content":"| `* * *`  | SOC Student                           | Delete a task from my schedule from my schedule                        | I can have flexibility in my schedule                                        |","lastModifiedDate":"2021-02-26"},{"lineNumber":753,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | Edit tasks in my schedule                                              | I can have flexibility in my schedule                                        |","lastModifiedDate":"2021-04-08"},{"lineNumber":754,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | View tasks in my schedule                                              | I can have a better sense of what will happen in the following days or weeks |","lastModifiedDate":"2021-02-23"},{"lineNumber":755,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Mark a task complete in my schedule                                    | I can track which tasks I have completed                                     |","lastModifiedDate":"2021-04-08"},{"lineNumber":756,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Undo a completed task in my schedule                                   | I undo the marking if it is done by mistake                                  |","lastModifiedDate":"2021-04-08"},{"lineNumber":757,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | Sort my tasks in my schedule in various orderings                      | I can prioritise my time better                                              |","lastModifiedDate":"2021-02-26"},{"lineNumber":758,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Pin certain tasks in my schedule                                       | I can prioritise my time better                                              |","lastModifiedDate":"2021-04-08"},{"lineNumber":759,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Unpin certain tasks in my schedule                                     | I can prioritise my time better                                              |","lastModifiedDate":"2021-04-08"},{"lineNumber":760,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | View tasks with the deadline on current date                           | I can have a better sense of what tasks are due today                        |","lastModifiedDate":"2021-04-08"},{"lineNumber":761,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Search tasks by certain keywords                                       | I can view the details of the task that I want to find                       |","lastModifiedDate":"2021-04-08"},{"lineNumber":762,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Clear completed tasks                                                  | I can make my schedule cleaner                                               |","lastModifiedDate":"2021-04-08"},{"lineNumber":763,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Clear expired tasks                                                    | I can make my schedule cleaner                                               |","lastModifiedDate":"2021-04-08"},{"lineNumber":764,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Allocate a priority score to a task                                    | I can prioritise my time better                                              |","lastModifiedDate":"2021-04-08"},{"lineNumber":765,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Allocate a category to a task                                          | I can know what category my tasks belong to                                  |","lastModifiedDate":"2021-04-08"},{"lineNumber":766,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":767,"author":{"gitId":"icelenaugust"},"content":"#### Event Related","lastModifiedDate":"2021-04-08"},{"lineNumber":768,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":769,"author":{"gitId":"icelenaugust"},"content":"| Priority | As a …​                            | I want to …​                                                        | So that …​                                                                |","lastModifiedDate":"2021-04-08"},{"lineNumber":770,"author":{"gitId":"icelenaugust"},"content":"| -------- | ------------------------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------------- |","lastModifiedDate":"2021-04-08"},{"lineNumber":771,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | Add an event to my schedule                                            | I can track my events better                                                 |","lastModifiedDate":"2021-04-08"},{"lineNumber":772,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | Delete an event from my schedule from my schedule                      | I can have flexibility in my schedule                                        |","lastModifiedDate":"2021-02-23"},{"lineNumber":773,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | Edit events in my schedule                                             | I can have flexibility in my schedule                                        |","lastModifiedDate":"2021-04-08"},{"lineNumber":774,"author":{"gitId":"SoulUseless"},"content":"| `* * *`  | SOC Student                           | View events in my schedule                                             | I can have a better sense of what will happen in the following days or weeks |","lastModifiedDate":"2021-02-26"},{"lineNumber":775,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | View events that are happening today                                   | I can have a better sense of what events are happening today                 |","lastModifiedDate":"2021-04-08"},{"lineNumber":776,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Search events by certain keywords                                      | I can view the details of the event that I want to find                      |","lastModifiedDate":"2021-04-08"},{"lineNumber":777,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Clear expired events                                                   | I can make my schedule cleaner                                               |","lastModifiedDate":"2021-04-08"},{"lineNumber":778,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Allocate a priority score to an event                                  | I can prioritise my time better                                              |","lastModifiedDate":"2021-04-08"},{"lineNumber":779,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Allocate a category to an event                                        | I can know what category my events belong to                                 |","lastModifiedDate":"2021-04-08"},{"lineNumber":780,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":781,"author":{"gitId":"icelenaugust"},"content":"#### Both Task and Event Related","lastModifiedDate":"2021-04-08"},{"lineNumber":782,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":783,"author":{"gitId":"icelenaugust"},"content":"| Priority | As a …​                            | I want to …​                                                        | So that …​                                                                |","lastModifiedDate":"2021-04-08"},{"lineNumber":784,"author":{"gitId":"icelenaugust"},"content":"| -------- | ------------------------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------------- |","lastModifiedDate":"2021-04-08"},{"lineNumber":785,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Find tasks and events before or on a given date                        | I can keep track of my tasks and events better                               |","lastModifiedDate":"2021-04-08"},{"lineNumber":786,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Find free time slots on a specific date                                | I can allocate my time better                                                |","lastModifiedDate":"2021-04-08"},{"lineNumber":787,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Have a summary of task completion status and events in next 7 days     | I can keep track of my progress and plan ahead for my schedule               |","lastModifiedDate":"2021-04-08"},{"lineNumber":788,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Clear the entire schedule                                              | I can start adding tasks and events from fresh                               |","lastModifiedDate":"2021-04-08"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"SoulUseless"},"content":"### A3. Use cases","lastModifiedDate":"2021-03-21"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"icelenaugust"},"content":"(For all use cases below, the **System** is the `SOChedule` and the **Actor** is the `User`, unless specified otherwise)","lastModifiedDate":"2021-02-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC01 - Adding a task**","lastModifiedDate":"2021-04-07"},{"lineNumber":797,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":798,"author":{"gitId":"SoulUseless"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":799,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":800,"author":{"gitId":"SoulUseless"},"content":"1. User wishes to add a new task.","lastModifiedDate":"2021-02-25"},{"lineNumber":801,"author":{"gitId":"SoulUseless"},"content":"2. User enters the required parameters.","lastModifiedDate":"2021-02-25"},{"lineNumber":802,"author":{"gitId":"SoulUseless"},"content":"3. SOChedule displays a success message for adding the task.","lastModifiedDate":"2021-02-25"},{"lineNumber":803,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":804,"author":{"gitId":"SoulUseless"},"content":"Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":805,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":806,"author":{"gitId":"SoulUseless"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":807,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":808,"author":{"gitId":"SoulUseless"},"content":"* 2a. Some required information about the event is missing in the command.","lastModifiedDate":"2021-02-26"},{"lineNumber":809,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":810,"author":{"gitId":"SoulUseless"},"content":"    * 1a1. SOChedule displays an error message suggesting that information provided when creating","lastModifiedDate":"2021-02-26"},{"lineNumber":811,"author":{"gitId":"SoulUseless"},"content":"      the event is incomplete.","lastModifiedDate":"2021-02-26"},{"lineNumber":812,"author":{"gitId":"SoulUseless"},"content":"      Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":813,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":814,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":815,"author":{"gitId":"SoulUseless"},"content":"* 2b. The date provided for the event is invalid","lastModifiedDate":"2021-02-26"},{"lineNumber":816,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":817,"author":{"gitId":"SoulUseless"},"content":"    * 1b1. SOChedule displays an error message suggesting that date provied for the event","lastModifiedDate":"2021-02-26"},{"lineNumber":818,"author":{"gitId":"SoulUseless"},"content":"      is invalid, or not following the `YYYY-MM-DD` format.","lastModifiedDate":"2021-02-26"},{"lineNumber":819,"author":{"gitId":"SoulUseless"},"content":"      Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":820,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":821,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC02 - Deleting a task**","lastModifiedDate":"2021-04-07"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"SoulUseless"},"content":"1. User requests to \u003cu\u003e list tasks (UC02)\u003c/u\u003e.","lastModifiedDate":"2021-02-26"},{"lineNumber":826,"author":{"gitId":"YuFeng0930"},"content":"2. SOChedule shows a list of tasks.","lastModifiedDate":"2021-02-24"},{"lineNumber":827,"author":{"gitId":"icelenaugust"},"content":"3. User chooses to delete a task.","lastModifiedDate":"2021-02-23"},{"lineNumber":828,"author":{"gitId":"icelenaugust"},"content":"4. User enters the index of the task to be deleted.","lastModifiedDate":"2021-02-23"},{"lineNumber":829,"author":{"gitId":"icelenaugust"},"content":"5. SOChedule displays a success message for deleting the task.","lastModifiedDate":"2021-02-23"},{"lineNumber":830,"author":{"gitId":"SoulUseless"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":831,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"icelenaugust"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2021-02-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"SoulUseless"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":840,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":841,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"icelenaugust"},"content":"    * 3a1. SOChedule shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC03 - Editing a task**","lastModifiedDate":"2021-04-07"},{"lineNumber":848,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":849,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":850,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":851,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC04 - List tasks**","lastModifiedDate":"2021-04-07"},{"lineNumber":852,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":853,"author":{"gitId":"SoulUseless"},"content":"**MSS**","lastModifiedDate":"2021-04-07"},{"lineNumber":854,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":855,"author":{"gitId":"SoulUseless"},"content":"1. User wishes to add a new task.","lastModifiedDate":"2021-04-07"},{"lineNumber":856,"author":{"gitId":"SoulUseless"},"content":"2. User enters the corresponding command.","lastModifiedDate":"2021-04-07"},{"lineNumber":857,"author":{"gitId":"SoulUseless"},"content":"3. SOChedule displays all tasks.","lastModifiedDate":"2021-04-07"},{"lineNumber":858,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":859,"author":{"gitId":"SoulUseless"},"content":"Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":860,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":861,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":862,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC05 - Marking tasks complete**","lastModifiedDate":"2021-04-07"},{"lineNumber":863,"author":{"gitId":"SoulUseless"},"content":"*TO BE EDITED*","lastModifiedDate":"2021-04-07"},{"lineNumber":864,"author":{"gitId":"ljhgab"},"content":"**MSS**","lastModifiedDate":"2021-02-25"},{"lineNumber":865,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":866,"author":{"gitId":"SoulUseless"},"content":"1. User requests to \u003cu\u003e list tasks (UC02)\u003c/u\u003e.","lastModifiedDate":"2021-02-26"},{"lineNumber":867,"author":{"gitId":"ljhgab"},"content":"2. SOChedule shows a list of tasks.","lastModifiedDate":"2021-02-25"},{"lineNumber":868,"author":{"gitId":"ljhgab"},"content":"3. User chooses to mark a task as completed.","lastModifiedDate":"2021-02-25"},{"lineNumber":869,"author":{"gitId":"ljhgab"},"content":"4. User enters the index of the task to be marked.","lastModifiedDate":"2021-02-25"},{"lineNumber":870,"author":{"gitId":"ljhgab"},"content":"5. SOChedule displays a success message for marking the task as completed.","lastModifiedDate":"2021-02-25"},{"lineNumber":871,"author":{"gitId":"SoulUseless"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":872,"author":{"gitId":"ljhgab"},"content":"   Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":873,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":874,"author":{"gitId":"ljhgab"},"content":"**Extensions**","lastModifiedDate":"2021-02-25"},{"lineNumber":875,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":876,"author":{"gitId":"ljhgab"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2021-02-25"},{"lineNumber":877,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":878,"author":{"gitId":"ljhgab"},"content":"  Use case ends.","lastModifiedDate":"2021-02-25"},{"lineNumber":879,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":880,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":881,"author":{"gitId":"ljhgab"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-02-25"},{"lineNumber":882,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":883,"author":{"gitId":"ljhgab"},"content":"    * 3a1. SOChedule shows an error message indicating the invalidity of the index.","lastModifiedDate":"2021-02-25"},{"lineNumber":884,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":885,"author":{"gitId":"ljhgab"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-25"},{"lineNumber":886,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":887,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC06 - Undoing a task completion**","lastModifiedDate":"2021-04-07"},{"lineNumber":888,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":889,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":891,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC07 - Getting tasks today**","lastModifiedDate":"2021-04-07"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":893,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":894,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":895,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC08 - Sorting all tasks**","lastModifiedDate":"2021-04-07"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":897,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-04-07"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":899,"author":{"gitId":"SoulUseless"},"content":"1. User requests to \u003cu\u003e list tasks (UC02)\u003c/u\u003e.","lastModifiedDate":"2021-04-07"},{"lineNumber":900,"author":{"gitId":"SoulUseless"},"content":"2. SOChedule shows a list of tasks.","lastModifiedDate":"2021-04-07"},{"lineNumber":901,"author":{"gitId":"SoulUseless"},"content":"3. User chooses to sort task.","lastModifiedDate":"2021-04-07"},{"lineNumber":902,"author":{"gitId":"SoulUseless"},"content":"4. User enters the sort parameter.","lastModifiedDate":"2021-04-07"},{"lineNumber":903,"author":{"gitId":"SoulUseless"},"content":"5. SOChedule sorts the task list, and displays a success message.","lastModifiedDate":"2021-04-07"},{"lineNumber":904,"author":{"gitId":"SoulUseless"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":905,"author":{"gitId":"SoulUseless"},"content":"   Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":906,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":907,"author":{"gitId":"SoulUseless"},"content":"**Extensions**","lastModifiedDate":"2021-04-07"},{"lineNumber":908,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":909,"author":{"gitId":"SoulUseless"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2021-04-07"},{"lineNumber":910,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":911,"author":{"gitId":"SoulUseless"},"content":"  Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":912,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":913,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":914,"author":{"gitId":"SoulUseless"},"content":"* 4a. The given sort argument is invalid.","lastModifiedDate":"2021-04-07"},{"lineNumber":915,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":916,"author":{"gitId":"SoulUseless"},"content":"    * 4a1. SOChedule shows an error message indicating the invalidity of the sort argument.","lastModifiedDate":"2021-04-07"},{"lineNumber":917,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":918,"author":{"gitId":"SoulUseless"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-04-07"},{"lineNumber":919,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":920,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC09 - Pinning a task**","lastModifiedDate":"2021-04-07"},{"lineNumber":921,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":922,"author":{"gitId":"SoulUseless"},"content":"**MSS**","lastModifiedDate":"2021-04-07"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":924,"author":{"gitId":"SoulUseless"},"content":"1. User requests to \u003cu\u003e list tasks (UC02)\u003c/u\u003e.","lastModifiedDate":"2021-04-07"},{"lineNumber":925,"author":{"gitId":"SoulUseless"},"content":"2. SOChedule shows a list of tasks.","lastModifiedDate":"2021-04-07"},{"lineNumber":926,"author":{"gitId":"SoulUseless"},"content":"3. User chooses to pin a task.","lastModifiedDate":"2021-04-07"},{"lineNumber":927,"author":{"gitId":"SoulUseless"},"content":"4. User enters the index of the task to be pinned.","lastModifiedDate":"2021-04-07"},{"lineNumber":928,"author":{"gitId":"SoulUseless"},"content":"5. SOChedule pins the task, \u003cu\u003e sorts the task list (UC08)\u003c/u\u003e, and displays a success message for pinning the task.","lastModifiedDate":"2021-04-07"},{"lineNumber":929,"author":{"gitId":"SoulUseless"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":930,"author":{"gitId":"SoulUseless"},"content":"   Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":932,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-04-07"},{"lineNumber":933,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":934,"author":{"gitId":"SoulUseless"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2021-04-07"},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":936,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":938,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":939,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-04-07"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":941,"author":{"gitId":"SoulUseless"},"content":"    * 3a1. SOChedule shows an error message indicating the invalidity of the index.","lastModifiedDate":"2021-04-07"},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":943,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-04-07"},{"lineNumber":944,"author":{"gitId":"SoulUseless"},"content":"        ","lastModifiedDate":"2021-04-07"},{"lineNumber":945,"author":{"gitId":"SoulUseless"},"content":"* 3b. The task specified by index is already pinned","lastModifiedDate":"2021-04-07"},{"lineNumber":946,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":947,"author":{"gitId":"SoulUseless"},"content":"    * 3b1. SOChedule shows an error message indicating that task is already pinned.","lastModifiedDate":"2021-04-07"},{"lineNumber":948,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":949,"author":{"gitId":"SoulUseless"},"content":"      Use Case resumes at step 2.","lastModifiedDate":"2021-04-07"},{"lineNumber":950,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":951,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC10 - Unpinning a task**","lastModifiedDate":"2021-04-07"},{"lineNumber":952,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":953,"author":{"gitId":"SoulUseless"},"content":"**MSS**","lastModifiedDate":"2021-04-07"},{"lineNumber":954,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":955,"author":{"gitId":"SoulUseless"},"content":"1. User requests to \u003cu\u003e list tasks (UC02)\u003c/u\u003e.","lastModifiedDate":"2021-04-07"},{"lineNumber":956,"author":{"gitId":"SoulUseless"},"content":"2. SOChedule shows a list of tasks.","lastModifiedDate":"2021-04-07"},{"lineNumber":957,"author":{"gitId":"SoulUseless"},"content":"3. User chooses to unpin a task.","lastModifiedDate":"2021-04-07"},{"lineNumber":958,"author":{"gitId":"SoulUseless"},"content":"4. User enters the index of the task to be unpinned.","lastModifiedDate":"2021-04-07"},{"lineNumber":959,"author":{"gitId":"SoulUseless"},"content":"5. SOChedule unpins the task, \u003cu\u003e sorts the task list (UC08)\u003c/u\u003e, and displays a success message for unpinning the task.","lastModifiedDate":"2021-04-07"},{"lineNumber":960,"author":{"gitId":"SoulUseless"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":961,"author":{"gitId":"SoulUseless"},"content":"   Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":962,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":963,"author":{"gitId":"SoulUseless"},"content":"**Extensions**","lastModifiedDate":"2021-04-07"},{"lineNumber":964,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":965,"author":{"gitId":"SoulUseless"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2021-04-07"},{"lineNumber":966,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":967,"author":{"gitId":"SoulUseless"},"content":"  Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":968,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":969,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":970,"author":{"gitId":"SoulUseless"},"content":"* 3a. The given index is invalid (negative or out of range).","lastModifiedDate":"2021-04-07"},{"lineNumber":971,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":972,"author":{"gitId":"SoulUseless"},"content":"    * 3a1. SOChedule shows an error message indicating the invalidity of the index.","lastModifiedDate":"2021-04-07"},{"lineNumber":973,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":974,"author":{"gitId":"SoulUseless"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-04-07"},{"lineNumber":975,"author":{"gitId":"SoulUseless"},"content":"    ","lastModifiedDate":"2021-04-07"},{"lineNumber":976,"author":{"gitId":"SoulUseless"},"content":"* 3b. The task specified by index is not pinned","lastModifiedDate":"2021-04-07"},{"lineNumber":977,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":978,"author":{"gitId":"SoulUseless"},"content":"    * 3b1. SOChedule shows an error message indicating that task is not pinned.","lastModifiedDate":"2021-04-07"},{"lineNumber":979,"author":{"gitId":"SoulUseless"},"content":"    ","lastModifiedDate":"2021-04-07"},{"lineNumber":980,"author":{"gitId":"SoulUseless"},"content":"      Use Case resumes at step 2.","lastModifiedDate":"2021-04-07"},{"lineNumber":981,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":982,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC11 - Clearing all completed tasks**","lastModifiedDate":"2021-04-07"},{"lineNumber":983,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":984,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":985,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":986,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC12 - Clearing all expired tasks**","lastModifiedDate":"2021-04-07"},{"lineNumber":987,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":988,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":989,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":990,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC13 - Add an event**","lastModifiedDate":"2021-04-07"},{"lineNumber":991,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":992,"author":{"gitId":"litone01"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":993,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":994,"author":{"gitId":"litone01"},"content":"1. User requests to add a new event.","lastModifiedDate":"2021-02-26"},{"lineNumber":995,"author":{"gitId":"litone01"},"content":"1. SOChedule displays a success message for adding the event.","lastModifiedDate":"2021-02-26"},{"lineNumber":996,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":997,"author":{"gitId":"litone01"},"content":"Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":998,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":999,"author":{"gitId":"litone01"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":1000,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1001,"author":{"gitId":"litone01"},"content":"* 1a. Some required information about the event is missing in the command.","lastModifiedDate":"2021-02-26"},{"lineNumber":1002,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1003,"author":{"gitId":"litone01"},"content":"    * 1a1. SOChedule displays an error message suggesting that information provided when creating","lastModifiedDate":"2021-02-26"},{"lineNumber":1004,"author":{"gitId":"litone01"},"content":"      the event is incomplete.","lastModifiedDate":"2021-02-26"},{"lineNumber":1005,"author":{"gitId":"litone01"},"content":"      Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1006,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1007,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1008,"author":{"gitId":"litone01"},"content":"* 1b. The date provided for the event is invalid","lastModifiedDate":"2021-02-26"},{"lineNumber":1009,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1010,"author":{"gitId":"SoulUseless"},"content":"    * 1b1. SOChedule displays an error message suggesting that date provided for the event","lastModifiedDate":"2021-02-26"},{"lineNumber":1011,"author":{"gitId":"litone01"},"content":"      is invalid, or not following the `YYYY-MM-DD` format.","lastModifiedDate":"2021-02-26"},{"lineNumber":1012,"author":{"gitId":"litone01"},"content":"      Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":1013,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":1014,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC14 - Delete an event**","lastModifiedDate":"2021-04-07"},{"lineNumber":1015,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1016,"author":{"gitId":"SoulUseless"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":1017,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1018,"author":{"gitId":"SoulUseless"},"content":"1. User requests to \u003cu\u003e list events (UC06)\u003c/u\u003e.","lastModifiedDate":"2021-02-26"},{"lineNumber":1019,"author":{"gitId":"YuFeng0930"},"content":"2. SOChedule shows a list of events.","lastModifiedDate":"2021-02-24"},{"lineNumber":1020,"author":{"gitId":"YuFeng0930"},"content":"3. User chooses to delete an event.","lastModifiedDate":"2021-02-24"},{"lineNumber":1021,"author":{"gitId":"YuFeng0930"},"content":"4. User enters the index of the event to be deleted.","lastModifiedDate":"2021-02-24"},{"lineNumber":1022,"author":{"gitId":"YuFeng0930"},"content":"5. SOChedule displays a success message for deleting the event.","lastModifiedDate":"2021-02-24"},{"lineNumber":1023,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":1024,"author":{"gitId":"YuFeng0930"},"content":"Use case ends.","lastModifiedDate":"2021-02-24"},{"lineNumber":1025,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":1026,"author":{"gitId":"YuFeng0930"},"content":"**Extensions**","lastModifiedDate":"2021-02-24"},{"lineNumber":1027,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":1028,"author":{"gitId":"YuFeng0930"},"content":"* 2a. The event scheduler is empty.","lastModifiedDate":"2021-02-24"},{"lineNumber":1029,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":1030,"author":{"gitId":"YuFeng0930"},"content":"  Use case ends.","lastModifiedDate":"2021-02-24"},{"lineNumber":1031,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":1032,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1033,"author":{"gitId":"YuFeng0930"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-02-24"},{"lineNumber":1034,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":1035,"author":{"gitId":"YuFeng0930"},"content":"    * 3a1. SOChedule shows an error message.","lastModifiedDate":"2021-02-24"},{"lineNumber":1036,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":1037,"author":{"gitId":"YuFeng0930"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-24"},{"lineNumber":1038,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":1039,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC15 - Editing an event**","lastModifiedDate":"2021-04-07"},{"lineNumber":1040,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1041,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":1042,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1043,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC16 - List events**","lastModifiedDate":"2021-04-07"},{"lineNumber":1044,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1045,"author":{"gitId":"SoulUseless"},"content":"**MSS**","lastModifiedDate":"2021-04-07"},{"lineNumber":1046,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1047,"author":{"gitId":"SoulUseless"},"content":"1. User requests to list all events in the SOChedule.","lastModifiedDate":"2021-04-07"},{"lineNumber":1048,"author":{"gitId":"SoulUseless"},"content":"1. SOChedule displays a list of all events added.","lastModifiedDate":"2021-04-07"},{"lineNumber":1049,"author":{"gitId":"SoulUseless"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":1050,"author":{"gitId":"SoulUseless"},"content":"   Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":1051,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1052,"author":{"gitId":"SoulUseless"},"content":"**Extensions**","lastModifiedDate":"2021-04-07"},{"lineNumber":1053,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1054,"author":{"gitId":"SoulUseless"},"content":"* 1a. No events have been added.","lastModifiedDate":"2021-04-07"},{"lineNumber":1055,"author":{"gitId":"SoulUseless"},"content":"    * 1a1. SOChedule displays an empty list.","lastModifiedDate":"2021-04-07"},{"lineNumber":1056,"author":{"gitId":"SoulUseless"},"content":"      Use case ends.","lastModifiedDate":"2021-04-07"},{"lineNumber":1057,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1058,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC17 - Getting today\u0027s events**","lastModifiedDate":"2021-04-07"},{"lineNumber":1059,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1060,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":1061,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1062,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC18 - Find an event**","lastModifiedDate":"2021-04-07"},{"lineNumber":1063,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1064,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":1065,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1066,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC19 - Clearing expired events**","lastModifiedDate":"2021-04-07"},{"lineNumber":1067,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1068,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":1069,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1070,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC20 - Finding tasks and events before or on given date**","lastModifiedDate":"2021-04-07"},{"lineNumber":1071,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1072,"author":{"gitId":"SoulUseless"},"content":"`\u003cpending\u003e`","lastModifiedDate":"2021-04-07"},{"lineNumber":1073,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1074,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC21 - Finding free time slots**","lastModifiedDate":"2021-04-07"},{"lineNumber":1075,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1076,"author":{"gitId":"icelenaugust"},"content":"**MSS**","lastModifiedDate":"2021-04-08"},{"lineNumber":1077,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1078,"author":{"gitId":"icelenaugust"},"content":"1. User requests to find free time slots on a given date.","lastModifiedDate":"2021-04-08"},{"lineNumber":1079,"author":{"gitId":"icelenaugust"},"content":"2. SOChedule shows a list of free time slots on that date.","lastModifiedDate":"2021-04-08"},{"lineNumber":1080,"author":{"gitId":"icelenaugust"},"content":"   Use case ends.","lastModifiedDate":"2021-04-08"},{"lineNumber":1081,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1082,"author":{"gitId":"icelenaugust"},"content":"**Extensions**","lastModifiedDate":"2021-04-08"},{"lineNumber":1083,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1084,"author":{"gitId":"icelenaugust"},"content":"* 2a. SOChedule notifies that there is no free time slots.","lastModifiedDate":"2021-04-08"},{"lineNumber":1085,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1086,"author":{"gitId":"icelenaugust"},"content":"  Use case ends.","lastModifiedDate":"2021-04-08"},{"lineNumber":1087,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1088,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1089,"author":{"gitId":"icelenaugust"},"content":"* 3a. The given date is invalid.","lastModifiedDate":"2021-04-08"},{"lineNumber":1090,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1091,"author":{"gitId":"icelenaugust"},"content":"    * 3a1. SOChedule shows an error message indicating the invalidity of the date.","lastModifiedDate":"2021-04-08"},{"lineNumber":1092,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1093,"author":{"gitId":"icelenaugust"},"content":"      Use case ends.","lastModifiedDate":"2021-04-08"},{"lineNumber":1094,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1095,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC22 - Getting a summary of SOChedule**","lastModifiedDate":"2021-04-07"},{"lineNumber":1096,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1097,"author":{"gitId":"icelenaugust"},"content":"**MSS**","lastModifiedDate":"2021-04-08"},{"lineNumber":1098,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1099,"author":{"gitId":"icelenaugust"},"content":"1. User requests to have a summary.","lastModifiedDate":"2021-04-08"},{"lineNumber":1100,"author":{"gitId":"icelenaugust"},"content":"2. SOChedule shows a list of different types of tasks and events happening in the next 7 days.","lastModifiedDate":"2021-04-08"},{"lineNumber":1101,"author":{"gitId":"icelenaugust"},"content":"   Use case ends.","lastModifiedDate":"2021-04-08"},{"lineNumber":1102,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1103,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC23 - Clearing SOChedule**","lastModifiedDate":"2021-04-07"},{"lineNumber":1104,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":1105,"author":{"gitId":"icelenaugust"},"content":"**MSS**","lastModifiedDate":"2021-04-08"},{"lineNumber":1106,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":1107,"author":{"gitId":"icelenaugust"},"content":"1. User requests to clear the whole SOChedule.","lastModifiedDate":"2021-04-08"},{"lineNumber":1108,"author":{"gitId":"icelenaugust"},"content":"2. SOChedule clears all tasks and events stored.","lastModifiedDate":"2021-04-08"},{"lineNumber":1109,"author":{"gitId":"icelenaugust"},"content":"3. SOChedule shows an empty list of tasks and events.","lastModifiedDate":"2021-04-08"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1113,"author":{"gitId":"SoulUseless"},"content":"### A4. Non-Functional Requirements","lastModifiedDate":"2021-03-21"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1116,"author":{"gitId":"SoulUseless"},"content":"1.  Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-02-26"},{"lineNumber":1117,"author":{"gitId":"SoulUseless"},"content":"1.  Should be able to hold up to 500 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-02-26"},{"lineNumber":1118,"author":{"gitId":"SoulUseless"},"content":"1.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-02-26"},{"lineNumber":1119,"author":{"gitId":"SoulUseless"},"content":"1.  Should give a response to user\u0027s input within 5 seconds.","lastModifiedDate":"2021-02-26"},{"lineNumber":1120,"author":{"gitId":"SoulUseless"},"content":"1.  The user interface should be intuitive to a SoC freshman with little knowledge about programming.","lastModifiedDate":"2021-02-26"},{"lineNumber":1121,"author":{"gitId":"SoulUseless"},"content":"1.  The source code should be open source.","lastModifiedDate":"2021-02-26"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1125,"author":{"gitId":"SoulUseless"},"content":"### A5. Glossary","lastModifiedDate":"2021-03-21"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1128,"author":{"gitId":"SoulUseless"},"content":"* **Event**: Activities that start at a specific time and ends at a specific time.","lastModifiedDate":"2021-02-26"},{"lineNumber":1129,"author":{"gitId":"SoulUseless"},"content":"* **Task**: Activities to be undertaken that can be marked complete/incomplete. Optionally it has a date field to indicate deadlines.","lastModifiedDate":"2021-02-26"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1133,"author":{"gitId":"SoulUseless"},"content":"### A6. Instructions for manual testing","lastModifiedDate":"2021-03-21"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1142,"author":{"gitId":"SoulUseless"},"content":"### A7. Launch and shutdown","lastModifiedDate":"2021-03-21"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1159,"author":{"gitId":"litone01"},"content":"### Deleting a task (Not in use yet)","lastModifiedDate":"2021-03-16"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1161,"author":{"gitId":"litone01"},"content":"1. Deleting a task while all tasks are being shown","lastModifiedDate":"2021-03-16"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1163,"author":{"gitId":"litone01"},"content":"   1. Prerequisites: List all tasks using the `list_task` command. Multiple tasks in the list.","lastModifiedDate":"2021-03-16"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1165,"author":{"gitId":"litone01"},"content":"   1. Test case: `delete_task 1`\u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":1166,"author":{"gitId":"litone01"},"content":"      Expected: First task is deleted from the list. Details of the deleted task shown in the status message.","lastModifiedDate":"2021-03-16"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1168,"author":{"gitId":"litone01"},"content":"   1. Test case: `delete_task 0`\u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":1169,"author":{"gitId":"litone01"},"content":"      Expected: No task is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-16"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1171,"author":{"gitId":"litone01"},"content":"   1. Other incorrect delete commands to try: `delete_task`, `delete_task x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1176,"author":{"gitId":"SoulUseless"},"content":"### A8. Saving data","lastModifiedDate":"2021-03-21"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YuFeng0930":154,"icelenaugust":202,"-":269,"SoulUseless":391,"ljhgab":47,"litone01":119}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"## User Guide","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"SOChedule is a one-stop solution for NUS School of Computing (SoC) students to manage their tasks and events effectively.","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"Targeted at users who can type fast and prefer typing to mouse input, SOChedule is optimized for use via a Command Line Interface (CLI) ","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"## Feature List","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"### General Commands","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"* Viewing help: [`help`](#viewing-help-help)","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"* Exiting the program: [`exit`](#exiting-the-program-exit)","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"  ","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"### Task-Specific Commands","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"* Adding a task: [`add_task`](#adding-a-task-add_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"* Deleting a task: [`delete_task`](#deleting-a-task-delete_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"* Editing a task: [`edit_task`](#editing-a-task-edit_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"* Listing all tasks: [`list_task`](#listing-all-tasks-list_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"* Marking one or more tasks as done : [`done_task`](#marking-one-or-more-tasks-as-done-done_task)","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"* Marking a task as uncompleted : [`undone_task`](#marking-a-task-as-uncompleted-undone_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"* Getting today\u0027s tasks: [`today_task`](#listing-all-tasks-today-today_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"* Finding tasks by name: [`find_task`](#finding-all-matching-tasks-find_task)","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"* Sorting all tasks: [`sort_task`](#sorting-all-tasks-sort_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"* Pinning a task: [`pin_task`](#pinning-a-task-pin_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"* Unpinning a task: [`unpin_task`](#unpinning-a-task-unpin_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"* Clearing completed tasks: [`clear_completed_task`](#clearing-completed-tasks-clear_completed_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"* Clearing expired tasks: [`clear_expired_task`](#clearing-expired-tasks-clear_expired_task)","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"  ","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"### Event-Specific Commands","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"* Adding an event: [`add_event`](#adding-an-event-add_event)","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"* Deleting an event: [`delete_event`](#deleting-an-event-delete_event)","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"* Editing an event: [`edit_event`](#editing-an-event-edit_event)","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"* Listing all events: [`list_event`](#listing-all-events-list_event)","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"* Getting today\u0027s events: [`today_event`](#listing-all-events-today-today_event)","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"* Finding events by name: [`find_event`](#finding-all-matching-events-find_event)","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"* Clearing expired events: [`clear_expired_event`](#clearing-expired-events-clear_expired_event)","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"### Commands Related to Both Task and Event","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"* Finding tasks and events before or on a given date: [`find_schedule`](#finding-tasks-and-events-before-or-on-a-given-date-find_schedule)","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"* Finding free time slots: [`free_time`](#finding-free-time-slots-free_time)","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"* Summarising tasks and events completion status: [`summary`](#summarising-tasks-and-events-statistics-summary)","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"* Clearing Sochedule: [`clear`](#clearing-sochedule-clear)","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"## Public Parameters for Tasks and Events","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"As listed below are the attributes to be specified for Tasks and Events. All parameters are mandatory unless otherwise stated.","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"### Common to both Task and Event","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003eAttribute\u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003eIdentifier\u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003eRestriction(s)\u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eName\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003en/\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eMaximum 50 characters in length\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eCategory\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003ec/\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eMaximum 20 characters in length each\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eNone, single or multiple Categories can be assigned to a single element\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eNo spaces are allowed\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eTag\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003et/\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eMaximum 20 characters in length each\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eNone, single or multiple Tags can be assigned to a single element\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eNo spaces are allowed\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"### Task-Specific","lastModifiedDate":"2021-04-05"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003eAttribute\u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003eIdentifier\u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003eRestriction(s)\u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eDeadline\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003ed/\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eFollows the format YYYY-MM-DD\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eMust be a date later than the date of creation\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003ePriority\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003ep/\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eSingle digit integer ranging from 0 to 9 inclusive\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003e0 is highest in priority, while 9 is lowest\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"### Event-Specific","lastModifiedDate":"2021-04-05"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003eAttribute\u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003eIdentifier\u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"        \u003cth\u003eRestriction(s)\u003c/th\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":129,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":130,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eStart Date\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":131,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003esd/\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":133,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":134,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eFollows the format YYYY-MM-DD\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":135,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eDate earlier than date of creation allowed (for ongoing events)\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":136,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e              ","lastModifiedDate":"2021-04-07"},{"lineNumber":137,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":138,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":139,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":140,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eEnd Date\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":141,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eed/\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":142,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":143,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":144,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eFollows the format YYYY-MM-DD\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":145,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eMust be a date later than the date of creation\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":146,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eMust be a date after start date\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":147,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":148,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":149,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":150,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":151,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eStart Time\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":152,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003est/\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":153,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":154,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":155,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eFollows the format of hh:mm, in a 24-hour format\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":156,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":157,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":158,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":159,"author":{"gitId":"SoulUseless"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":160,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eEnd Time\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":161,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e\u003ccode\u003eet/\u003c/code\u003e\u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":162,"author":{"gitId":"SoulUseless"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":163,"author":{"gitId":"SoulUseless"},"content":"            \u003cul\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":164,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eFollows the format of hh:mm, in a 24-hour format\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":165,"author":{"gitId":"SoulUseless"},"content":"                \u003cli\u003eIf start date is the same as end date, end time must be a time after start time\u003c/li\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":166,"author":{"gitId":"SoulUseless"},"content":"            \u003c/ul\u003e ","lastModifiedDate":"2021-04-07"},{"lineNumber":167,"author":{"gitId":"SoulUseless"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":168,"author":{"gitId":"SoulUseless"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":169,"author":{"gitId":"SoulUseless"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"icelenaugust"},"content":"1. Download the latest `SOChedule.jar` from [here](https://github.com/AY2021S2-CS2103-W16-1/tp/releases).","lastModifiedDate":"2021-04-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"ljhgab"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your SOChedule.","lastModifiedDate":"2021-02-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"SoulUseless"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. A sample SOChedule is given below. There would not be pre-entered data on first launch so that users can immediately jump in and use.\u003cbr\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"litone01"},"content":"   * **`list_task`** : Lists all tasks.","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"SoulUseless"},"content":"   * **`add_task`**`n/CS2103 assignment d/2021-04-07 p/1 c/schoolwork t/urgent` : Adds a task named `CS2103 assignment` to the SOChedule with its respective attributes. Please verify the validity of the date parameter.","lastModifiedDate":"2021-04-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"litone01"},"content":"   * **`delete_task`**`3` : Deletes the 3rd task shown in the current list.","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":206,"author":{"gitId":"litone01"},"content":"  e.g. in `undone_task INDEX`, `INDEX` is a parameter which can be used as `undone_task 1`.","lastModifiedDate":"2021-04-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":209,"author":{"gitId":"litone01"},"content":"  e.g `n/TASKNAME [t/TAG]` can be used as `n/Quiz t/CS2103` or as `n/Quiz`.","lastModifiedDate":"2021-04-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-04-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":214,"author":{"gitId":"litone01"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":215,"author":{"gitId":"litone01"},"content":"  e.g. if you specify `p/1 p/2`, only `p/2` will be taken.","lastModifiedDate":"2021-04-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":217,"author":{"gitId":"litone01"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list_task`, `list_event`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":218,"author":{"gitId":"litone01"},"content":"  e.g. if the command specifies `list_task 123`, it will be interpreted as `list_task`.","lastModifiedDate":"2021-04-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":222,"author":{"gitId":"ljhgab"},"content":"### Viewing help: `help`","lastModifiedDate":"2021-04-05"},{"lineNumber":223,"author":{"gitId":"ljhgab"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-04-05"},{"lineNumber":224,"author":{"gitId":"ljhgab"},"content":"![helpMessage](images/helpMessage.png)","lastModifiedDate":"2021-04-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":226,"author":{"gitId":"ljhgab"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":229,"author":{"gitId":"litone01"},"content":"### Adding a task: `add_task`","lastModifiedDate":"2021-03-16"},{"lineNumber":230,"author":{"gitId":"ljhgab"},"content":"Adds a task into the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":232,"author":{"gitId":"litone01"},"content":"Format: `add_task n/TASKNAME d/DEADLINE p/PRIORITY [c/CATEGORY]... [t/TAG]...`","lastModifiedDate":"2021-03-16"},{"lineNumber":233,"author":{"gitId":"SoulUseless"},"content":"* `n/` is followed by the task name.","lastModifiedDate":"2021-02-26"},{"lineNumber":234,"author":{"gitId":"YuFeng0930"},"content":"* `d/` is followed by the date, with the format YYYY-MM-DD, deadline cannot be a past date.","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"litone01"},"content":"* `p/` is followed by the priority, with 0 being highest and 9 being lowest. Other inputs are not accepted.","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"SoulUseless"},"content":"* `c/` is followed by the category. It is optional.","lastModifiedDate":"2021-02-26"},{"lineNumber":237,"author":{"gitId":"SoulUseless"},"content":"* `t/` is followed by the tag. It is optional.","lastModifiedDate":"2021-02-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":239,"author":{"gitId":"SoulUseless"},"content":"Examples:","lastModifiedDate":"2021-02-25"},{"lineNumber":240,"author":{"gitId":"YuFeng0930"},"content":"* `add_task n/CS2103 assignment d/2022-02-27 p/1 c/schoolwork t/urgent` adds a new task named \"CS2103 assignment\" with the respective parameters.","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"YuFeng0930"},"content":"* `add_task n/CCA admin work d/2022-02-28 p/2 c/CCA` adds a new task \"CCA admin work\" with the respective parameters.","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":243,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":246,"author":{"gitId":"litone01"},"content":"### Deleting a task: `delete_task`","lastModifiedDate":"2021-03-16"},{"lineNumber":247,"author":{"gitId":"ljhgab"},"content":"Deletes a task from the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"litone01"},"content":"Format: `delete_task INDEX`","lastModifiedDate":"2021-03-16"},{"lineNumber":250,"author":{"gitId":"litone01"},"content":"* Deletes the task at the specified INDEX.","lastModifiedDate":"2021-03-16"},{"lineNumber":251,"author":{"gitId":"litone01"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-03-16"},{"lineNumber":252,"author":{"gitId":"litone01"},"content":"* The index must be a positive and valid integer 1, 2, 3, ...","lastModifiedDate":"2021-03-16"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"litone01"},"content":"* `delete_task 2` deletes the second task in the task list.","lastModifiedDate":"2021-03-16"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":257,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":258,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":259,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":260,"author":{"gitId":"SoulUseless"},"content":"### Editing a task: `edit_task`","lastModifiedDate":"2021-04-05"},{"lineNumber":261,"author":{"gitId":"ljhgab"},"content":"Edits an **existing and uncompleted** task in the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":262,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":263,"author":{"gitId":"SoulUseless"},"content":"Format: `edit_task INDEX [n/TASKNAME] [d/DEADLINE] [p/PRIORITY] [c/CATEGORY]... [t/TAG]...`","lastModifiedDate":"2021-04-05"},{"lineNumber":264,"author":{"gitId":"SoulUseless"},"content":"* Edits the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-04-05"},{"lineNumber":265,"author":{"gitId":"SoulUseless"},"content":"* You can only edit the details of an uncompleted task.","lastModifiedDate":"2021-04-05"},{"lineNumber":266,"author":{"gitId":"SoulUseless"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-04-05"},{"lineNumber":267,"author":{"gitId":"SoulUseless"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-05"},{"lineNumber":268,"author":{"gitId":"litone01"},"content":"* When editing tags/categories, the existing tags/categories of the task will be removed i.e. adding of tags/categories is not cumulative.","lastModifiedDate":"2021-04-06"},{"lineNumber":269,"author":{"gitId":"SoulUseless"},"content":"* You can remove all the task’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2021-04-05"},{"lineNumber":270,"author":{"gitId":"SoulUseless"},"content":"  Similarly, you can remove all the task’s categories by typing `c/` without specifying any categories after it.","lastModifiedDate":"2021-04-05"},{"lineNumber":271,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":272,"author":{"gitId":"SoulUseless"},"content":"Examples:","lastModifiedDate":"2021-04-05"},{"lineNumber":273,"author":{"gitId":"SoulUseless"},"content":"* `edit_task 1 n/editedTaskName` edits the name of the first task (if present in SOChedule) to be `editedTaskName`.","lastModifiedDate":"2021-04-05"},{"lineNumber":274,"author":{"gitId":"SoulUseless"},"content":"* `edit_task 2 p/3 t/` edits the priority of the second task (if present in SOChedule) to be `3` and clears all existing tags. ","lastModifiedDate":"2021-04-05"},{"lineNumber":275,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":276,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":277,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":278,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":279,"author":{"gitId":"SoulUseless"},"content":"### Listing all tasks: `list_task`","lastModifiedDate":"2021-04-05"},{"lineNumber":280,"author":{"gitId":"ljhgab"},"content":"Lists all tasks from the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":281,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":282,"author":{"gitId":"SoulUseless"},"content":"Format: `list_task`","lastModifiedDate":"2021-04-05"},{"lineNumber":283,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":284,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":285,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":286,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":287,"author":{"gitId":"litone01"},"content":"### Marking one or more tasks as done: `done_task`","lastModifiedDate":"2021-04-06"},{"lineNumber":288,"author":{"gitId":"ljhgab"},"content":"Marks one or more task from the task list as completed.","lastModifiedDate":"2021-04-08"},{"lineNumber":289,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":290,"author":{"gitId":"litone01"},"content":"Format: `done_task INDEX1 [INDEX2] ...`","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"litone01"},"content":"* Marks the task(s) at the specified INDEX(es) as complete.","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"litone01"},"content":"* When multiple indexes are provided, they should be separated by a whitespace, e.g. `1 2`.","lastModifiedDate":"2021-04-06"},{"lineNumber":293,"author":{"gitId":"litone01"},"content":"* All specified tasks must be uncompleted and existing before calling this command.","lastModifiedDate":"2021-04-06"},{"lineNumber":294,"author":{"gitId":"litone01"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-03-16"},{"lineNumber":295,"author":{"gitId":"litone01"},"content":"* The index must be a positive and valid integer 1, 2, 3, ...","lastModifiedDate":"2021-03-16"},{"lineNumber":296,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":297,"author":{"gitId":"ljhgab"},"content":"Examples:","lastModifiedDate":"2021-02-25"},{"lineNumber":298,"author":{"gitId":"litone01"},"content":"* `done_task 1` marks the first task in the task list as completed.","lastModifiedDate":"2021-03-16"},{"lineNumber":299,"author":{"gitId":"litone01"},"content":"* `done_task 1 2` marks the first and second task in the task list as completed.","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":301,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":302,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":303,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":304,"author":{"gitId":"litone01"},"content":"### Marking a task as uncompleted: `undone_task`","lastModifiedDate":"2021-03-30"},{"lineNumber":305,"author":{"gitId":"ljhgab"},"content":"Marks a completed task from the task list as uncompleted.","lastModifiedDate":"2021-04-08"},{"lineNumber":306,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"litone01"},"content":"Format: `undone_task INDEX`","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"litone01"},"content":"* Marks the task at the specified INDEX as uncompleted.","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"litone01"},"content":"* The specified task must be completed before calling this command.","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"litone01"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"litone01"},"content":"* The index must be a positive and valid integer 1, 2, 3, ...","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":313,"author":{"gitId":"litone01"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":314,"author":{"gitId":"litone01"},"content":"* `undone_task 1` marks the first task in the task list as uncompleted.","lastModifiedDate":"2021-03-30"},{"lineNumber":315,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":316,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":317,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":318,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"ljhgab"},"content":"### Getting today\u0027s tasks: `today_task`","lastModifiedDate":"2021-04-06"},{"lineNumber":320,"author":{"gitId":"ljhgab"},"content":"Lists all tasks that have deadline on today from the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":321,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":322,"author":{"gitId":"ljhgab"},"content":"Format: `today_task`","lastModifiedDate":"2021-03-30"},{"lineNumber":323,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":324,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":325,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":326,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":327,"author":{"gitId":"ljhgab"},"content":"### Finding tasks by name: `find_task`","lastModifiedDate":"2021-04-06"},{"lineNumber":328,"author":{"gitId":"ljhgab"},"content":"Finds tasks whose names contain any of the given keywords from the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":329,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":330,"author":{"gitId":"ljhgab"},"content":"Format: `find_task KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-04-07"},{"lineNumber":331,"author":{"gitId":"ljhgab"},"content":"* The search is case-insensitive. e.g. `homework` will match `Homework`.","lastModifiedDate":"2021-04-07"},{"lineNumber":332,"author":{"gitId":"ljhgab"},"content":"* The order of the keywords does not matter. e.g. `Practice Problems` will match `Problems Practice`.","lastModifiedDate":"2021-04-07"},{"lineNumber":333,"author":{"gitId":"ljhgab"},"content":"* Only the name of the tasks is searched.","lastModifiedDate":"2021-04-07"},{"lineNumber":334,"author":{"gitId":"ljhgab"},"content":"* Only full words will be matched. e.g. `CS` will not match `CS2103`.","lastModifiedDate":"2021-04-07"},{"lineNumber":335,"author":{"gitId":"ljhgab"},"content":"* Tasks matching at least one keyword will be returned (i.e. `OR` search). e.g. `CS2103 Homework` will return ","lastModifiedDate":"2021-04-07"},{"lineNumber":336,"author":{"gitId":"ljhgab"},"content":"  `ST2131 Homework`, `CS2103 Quiz`.","lastModifiedDate":"2021-04-07"},{"lineNumber":337,"author":{"gitId":"ljhgab"},"content":"  ","lastModifiedDate":"2021-04-07"},{"lineNumber":338,"author":{"gitId":"ljhgab"},"content":"Examples:","lastModifiedDate":"2021-04-07"},{"lineNumber":339,"author":{"gitId":"ljhgab"},"content":"* `find_task Homework` returns `st2131 homework` and `Homework 1`","lastModifiedDate":"2021-04-07"},{"lineNumber":340,"author":{"gitId":"ljhgab"},"content":"* `find_task assignment homework` returns `Assignment 1`, `Homework 2`","lastModifiedDate":"2021-04-07"},{"lineNumber":341,"author":{"gitId":"ljhgab"},"content":"![find_task example](images/find_task-example.png)","lastModifiedDate":"2021-04-07"},{"lineNumber":342,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":343,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":344,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":345,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":346,"author":{"gitId":"SoulUseless"},"content":"### Sorting all tasks: `sort_task`","lastModifiedDate":"2021-03-21"},{"lineNumber":347,"author":{"gitId":"ljhgab"},"content":"Sorts the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":348,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":349,"author":{"gitId":"SoulUseless"},"content":"Format: `sort_task ARGUMENT`","lastModifiedDate":"2021-03-21"},{"lineNumber":350,"author":{"gitId":"SoulUseless"},"content":"* Sorts task list and updates UI based on supplied argument.","lastModifiedDate":"2021-03-21"},{"lineNumber":351,"author":{"gitId":"SoulUseless"},"content":"* Accepted arguments (case-sensitive):","lastModifiedDate":"2021-03-21"},{"lineNumber":352,"author":{"gitId":"SoulUseless"},"content":"   * `name`: Sorts by task name, in increasing lexicographical order","lastModifiedDate":"2021-04-05"},{"lineNumber":353,"author":{"gitId":"SoulUseless"},"content":"   * `deadline`: Sorts by task deadline, in increasing date order","lastModifiedDate":"2021-04-05"},{"lineNumber":354,"author":{"gitId":"SoulUseless"},"content":"   * `completion`: Sorts by task completion status, with completed tasks at the bottom","lastModifiedDate":"2021-03-21"},{"lineNumber":355,"author":{"gitId":"SoulUseless"},"content":"   * `priority`: Sorts by task priority, in decreasing order, from priority 0 on top, to priority 9 at the bottom","lastModifiedDate":"2021-04-05"},{"lineNumber":356,"author":{"gitId":"SoulUseless"},"content":"* On subsequent boots, the following will happen:","lastModifiedDate":"2021-04-06"},{"lineNumber":357,"author":{"gitId":"SoulUseless"},"content":"   * Relative order from previous launch will be preserved.","lastModifiedDate":"2021-04-06"},{"lineNumber":358,"author":{"gitId":"SoulUseless"},"content":"   * However, if any order-altering command is issued, tasks will be sorted by name by default, unless otherwise stated by another `sort_task` command.","lastModifiedDate":"2021-04-06"},{"lineNumber":359,"author":{"gitId":"SoulUseless"},"content":"    ","lastModifiedDate":"2021-03-21"},{"lineNumber":360,"author":{"gitId":"SoulUseless"},"content":"Examples:","lastModifiedDate":"2021-03-21"},{"lineNumber":361,"author":{"gitId":"SoulUseless"},"content":"* `sort_task completion` sorts the task list by completion status.","lastModifiedDate":"2021-03-21"},{"lineNumber":362,"author":{"gitId":"SoulUseless"},"content":"* `sort_task name` sorts the task list by name.","lastModifiedDate":"2021-03-21"},{"lineNumber":363,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":364,"author":{"gitId":"SoulUseless"},"content":"#### Illustration of usage of `sort_task`:","lastModifiedDate":"2021-04-06"},{"lineNumber":365,"author":{"gitId":"SoulUseless"},"content":"![Example of usage of `sort_task`](images/SortTaskUsage.png)","lastModifiedDate":"2021-04-06"},{"lineNumber":366,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":367,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":368,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":369,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":370,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":371,"author":{"gitId":"SoulUseless"},"content":"### Pinning a task: `pin_task`","lastModifiedDate":"2021-03-28"},{"lineNumber":372,"author":{"gitId":"ljhgab"},"content":"Pins a task from the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":373,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":374,"author":{"gitId":"SoulUseless"},"content":"Format: `pin_task INDEX`","lastModifiedDate":"2021-03-28"},{"lineNumber":375,"author":{"gitId":"SoulUseless"},"content":"* Pins the task at the specified INDEX.","lastModifiedDate":"2021-03-28"},{"lineNumber":376,"author":{"gitId":"SoulUseless"},"content":"* Already pinned tasks will be unable to be pinned a second time.","lastModifiedDate":"2021-03-28"},{"lineNumber":377,"author":{"gitId":"SoulUseless"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-03-28"},{"lineNumber":378,"author":{"gitId":"SoulUseless"},"content":"* The index must be a positive and valid integer 1, 2, 3, ...","lastModifiedDate":"2021-03-28"},{"lineNumber":379,"author":{"gitId":"SoulUseless"},"content":"* After pinning, the Task List will be sorted either according to previously entered `sort_task` command, or name (by default). See [here](#illustration-of-the-interaction-between-pin_task-and-sort_task).","lastModifiedDate":"2021-04-06"},{"lineNumber":380,"author":{"gitId":"SoulUseless"},"content":"    * Should there be two or more pinned tasks, the pinned tasks will be sorted as well.","lastModifiedDate":"2021-04-05"},{"lineNumber":381,"author":{"gitId":"SoulUseless"},"content":"    * Only the fact that pinned tasks will appear over the unpinned tasks is guaranteed. Internal order of pinned tasks is not persistent over `sort_task`.","lastModifiedDate":"2021-04-05"},{"lineNumber":382,"author":{"gitId":"SoulUseless"},"content":"* Pinned tasks are persistent over instances of SOChedule.","lastModifiedDate":"2021-03-28"},{"lineNumber":383,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":384,"author":{"gitId":"SoulUseless"},"content":"Examples:","lastModifiedDate":"2021-03-28"},{"lineNumber":385,"author":{"gitId":"ljhgab"},"content":"* `pin_task 1` pins the first task in the task list","lastModifiedDate":"2021-04-08"},{"lineNumber":386,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":387,"author":{"gitId":"SoulUseless"},"content":"#### Illustration of usage of `pin_task`:","lastModifiedDate":"2021-04-06"},{"lineNumber":388,"author":{"gitId":"SoulUseless"},"content":"![Example of usage of `pin_task`](images/PinTaskUsage.png)","lastModifiedDate":"2021-04-06"},{"lineNumber":389,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":390,"author":{"gitId":"SoulUseless"},"content":"#### Illustration of the interaction between `pin_task` and `sort_task`:","lastModifiedDate":"2021-04-06"},{"lineNumber":391,"author":{"gitId":"SoulUseless"},"content":"![Example of interaction of `pin_task` with `sort_task`](images/PinTaskInteractionWithSortTask.png)","lastModifiedDate":"2021-04-06"},{"lineNumber":392,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":393,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":394,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":395,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":396,"author":{"gitId":"SoulUseless"},"content":"### Unpinning a task: `unpin_task`","lastModifiedDate":"2021-03-28"},{"lineNumber":397,"author":{"gitId":"ljhgab"},"content":"Unpins a task from the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":398,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":399,"author":{"gitId":"SoulUseless"},"content":"Format: `unpin_task INDEX`","lastModifiedDate":"2021-03-28"},{"lineNumber":400,"author":{"gitId":"SoulUseless"},"content":"* Unpins the task at the specified INDEX.","lastModifiedDate":"2021-03-28"},{"lineNumber":401,"author":{"gitId":"SoulUseless"},"content":"* Follows similar restrictions to `pin_task`","lastModifiedDate":"2021-03-28"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-28"},{"lineNumber":404,"author":{"gitId":"ljhgab"},"content":"* `unpin_task 1` unpins the first task in the task list","lastModifiedDate":"2021-04-08"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":406,"author":{"gitId":"SoulUseless"},"content":"#### Illustration of usage of `unpin_task`:","lastModifiedDate":"2021-04-06"},{"lineNumber":407,"author":{"gitId":"SoulUseless"},"content":"![Example of usage of `unpin_task`](images/UnpinTaskUsage.png)","lastModifiedDate":"2021-04-06"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":409,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":412,"author":{"gitId":"YuFeng0930"},"content":"### Clearing completed tasks: `clear_completed_task`","lastModifiedDate":"2021-03-24"},{"lineNumber":413,"author":{"gitId":"ljhgab"},"content":"Clear tasks marked as completed from the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":415,"author":{"gitId":"YuFeng0930"},"content":"Format: `clear_completed_task`","lastModifiedDate":"2021-03-24"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":417,"author":{"gitId":"YuFeng0930"},"content":"#### Illustration of usage of `clear_completed_task`:","lastModifiedDate":"2021-04-06"},{"lineNumber":418,"author":{"gitId":"YuFeng0930"},"content":"![Example of usage of `clear_completed_task`](images/ClearCompletedTaskUsage.png)","lastModifiedDate":"2021-04-06"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":420,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":421,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":422,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":423,"author":{"gitId":"YuFeng0930"},"content":"### Clearing expired tasks: `clear_expired_task`","lastModifiedDate":"2021-03-24"},{"lineNumber":424,"author":{"gitId":"ljhgab"},"content":"Clear tasks with past deadlines from the task list.","lastModifiedDate":"2021-04-08"},{"lineNumber":425,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":426,"author":{"gitId":"YuFeng0930"},"content":"Format: `clear_expired_task`","lastModifiedDate":"2021-03-24"},{"lineNumber":427,"author":{"gitId":"YuFeng0930"},"content":"* For a task to be considered expired, the task should have past deadline compare to the local date on the user\u0027s computer, ","lastModifiedDate":"2021-04-06"},{"lineNumber":428,"author":{"gitId":"YuFeng0930"},"content":"hence changing of date on a computer could affect the judgement of expiration.","lastModifiedDate":"2021-04-06"},{"lineNumber":429,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":430,"author":{"gitId":"YuFeng0930"},"content":"#### Illustration of usage of `clear_expired_task`:","lastModifiedDate":"2021-04-06"},{"lineNumber":431,"author":{"gitId":"YuFeng0930"},"content":"![Example of usage of `clear_expired_task`](images/ClearExpiredTaskUsage.png)","lastModifiedDate":"2021-04-06"},{"lineNumber":432,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":433,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":434,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":435,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":436,"author":{"gitId":"litone01"},"content":"### Adding an event: `add_event`","lastModifiedDate":"2021-03-16"},{"lineNumber":437,"author":{"gitId":"ljhgab"},"content":"Adds an event to the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":438,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":439,"author":{"gitId":"YuFeng0930"},"content":"Format: `add_event n/EVENTNAME sd/STARTDATE st/STARTTIME ed/ENDDATE et/ENDTIME [c/CATEGORY]... [t/TAG]...`","lastModifiedDate":"2021-04-06"},{"lineNumber":440,"author":{"gitId":"YuFeng0930"},"content":"* `n/` is followed by the event name, it is case-sensitive.","lastModifiedDate":"2021-04-06"},{"lineNumber":441,"author":{"gitId":"litone01"},"content":"* `sd/` is followed by the starting date, it has to be a **valid date** and in the format of **YYYY-MM-DD**. Here, Y is the year, M is the month, D is the day and all has to be integers.","lastModifiedDate":"2021-03-16"},{"lineNumber":442,"author":{"gitId":"litone01"},"content":"* `st/` is followed by the time in the 24-hour format and in the format of **hh:mm** Here, h is the hour, m is the minute and all has to be integers.","lastModifiedDate":"2021-04-06"},{"lineNumber":443,"author":{"gitId":"YuFeng0930"},"content":"* `ed/` is followed by the end date, it has to be a **valid date** and in the format of **YYYY-MM-DD**.","lastModifiedDate":"2021-03-31"},{"lineNumber":444,"author":{"gitId":"litone01"},"content":"* `et/` is followed by the time in the 24-hour format and in the format of **hh:mm**.","lastModifiedDate":"2021-04-06"},{"lineNumber":445,"author":{"gitId":"YuFeng0930"},"content":"* The STARTDATE and STARTTIME provided can be in the past (ongoing event).","lastModifiedDate":"2021-04-06"},{"lineNumber":446,"author":{"gitId":"YuFeng0930"},"content":"* The STARTDATE and STARTTIME provided should be earlier than ENDDATE and ENDTIME.","lastModifiedDate":"2021-03-31"},{"lineNumber":447,"author":{"gitId":"YuFeng0930"},"content":"* The ENDDATE and ENDTIME provided cannot be a past date time.","lastModifiedDate":"2021-03-31"},{"lineNumber":448,"author":{"gitId":"YuFeng0930"},"content":"* Time overlapping events are allowed.","lastModifiedDate":"2021-04-06"},{"lineNumber":449,"author":{"gitId":"SoulUseless"},"content":"* `c/` is followed by the category. It is optional.","lastModifiedDate":"2021-02-26"},{"lineNumber":450,"author":{"gitId":"SoulUseless"},"content":"* `t/` is followed by the tag. It is optional.","lastModifiedDate":"2021-02-26"},{"lineNumber":451,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":452,"author":{"gitId":"litone01"},"content":"Examples:","lastModifiedDate":"2021-02-26"},{"lineNumber":453,"author":{"gitId":"ljhgab"},"content":"* `add_event n/CS2103 meeting sd/2021-05-27 st/15:00 ed/2022-02-27 et/17:00` adds an event with name `CS2103` and its ","lastModifiedDate":"2021-04-08"},{"lineNumber":454,"author":{"gitId":"ljhgab"},"content":"  respective attributes to the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":455,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":456,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":457,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":458,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":459,"author":{"gitId":"litone01"},"content":"### Deleting an event: `delete_event`","lastModifiedDate":"2021-03-16"},{"lineNumber":460,"author":{"gitId":"ljhgab"},"content":"Deletes an event from the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":461,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":462,"author":{"gitId":"litone01"},"content":"Format: `delete_event INDEX`","lastModifiedDate":"2021-03-16"},{"lineNumber":463,"author":{"gitId":"litone01"},"content":"* Deletes the event at the specified INDEX.","lastModifiedDate":"2021-03-16"},{"lineNumber":464,"author":{"gitId":"litone01"},"content":"* The index refers to the index number shown in the displayed event list.","lastModifiedDate":"2021-03-16"},{"lineNumber":465,"author":{"gitId":"litone01"},"content":"* The index must be a positive and valid integer 1, 2, 3, ...","lastModifiedDate":"2021-03-16"},{"lineNumber":466,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":467,"author":{"gitId":"YuFeng0930"},"content":"Examples:","lastModifiedDate":"2021-02-24"},{"lineNumber":468,"author":{"gitId":"ljhgab"},"content":"* `delete_event 3` deletes the third event from the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":469,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":470,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":471,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":472,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":473,"author":{"gitId":"litone01"},"content":"### Editing an event: `edit_event`","lastModifiedDate":"2021-04-06"},{"lineNumber":474,"author":{"gitId":"ljhgab"},"content":"Edits an **existing and uncompleted** event in the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":475,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":476,"author":{"gitId":"YuFeng0930"},"content":"Format: `edit_event INDEX [n/EVENTNAME] [sd/STARTDATE] [st/STARTTIME] [ed/ENDDATE] [et/ENDTIME] [c/CATEGORY]... [t/TAG]...`","lastModifiedDate":"2021-03-31"},{"lineNumber":477,"author":{"gitId":"YuFeng0930"},"content":"* Edits the event at the specified `INDEX`. The index refers to the index number shown in the displayed event list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-31"},{"lineNumber":478,"author":{"gitId":"YuFeng0930"},"content":"* You can only edit the details of an unexpired event.","lastModifiedDate":"2021-03-31"},{"lineNumber":479,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-31"},{"lineNumber":480,"author":{"gitId":"YuFeng0930"},"content":"* The STARTDATE and STARTTIME provided can be in the past (ongoing event).","lastModifiedDate":"2021-04-06"},{"lineNumber":481,"author":{"gitId":"YuFeng0930"},"content":"* The STARTDATE and STARTTIME provided should be earlier than ENDDATE and ENDTIME.","lastModifiedDate":"2021-03-31"},{"lineNumber":482,"author":{"gitId":"YuFeng0930"},"content":"* The ENDDATE and ENDTIME provided cannot be a past date time.","lastModifiedDate":"2021-03-31"},{"lineNumber":483,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-31"},{"lineNumber":484,"author":{"gitId":"ljhgab"},"content":"* When editing tags/categories, the existing tags/categories of the event will be removed i.e. adding of tags/categories","lastModifiedDate":"2021-04-08"},{"lineNumber":485,"author":{"gitId":"ljhgab"},"content":"  is not cumulative.","lastModifiedDate":"2021-04-08"},{"lineNumber":486,"author":{"gitId":"YuFeng0930"},"content":"* You can remove all the event’s tags by typing `t/` without specifying any tags after it. ","lastModifiedDate":"2021-03-31"},{"lineNumber":487,"author":{"gitId":"YuFeng0930"},"content":"  Similarly, you can remove all the event’s categories by typing `c/` without specifying any categories after it.","lastModifiedDate":"2021-03-31"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":489,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":490,"author":{"gitId":"ljhgab"},"content":"* `edit_event 1 n/editedEventName` edits the name of the first event (if present in the event list) to be ","lastModifiedDate":"2021-04-08"},{"lineNumber":491,"author":{"gitId":"ljhgab"},"content":"  `editedEventName`.","lastModifiedDate":"2021-04-08"},{"lineNumber":492,"author":{"gitId":"ljhgab"},"content":"* `edit_event 2 sd/2021-03-18 t/` edits the start date of the second event (if present in the event list) to be ","lastModifiedDate":"2021-04-08"},{"lineNumber":493,"author":{"gitId":"ljhgab"},"content":"  `2021-03-18`and clears all existing tags.","lastModifiedDate":"2021-04-08"},{"lineNumber":494,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":495,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":496,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":498,"author":{"gitId":"litone01"},"content":"### Listing all events: `list_event`","lastModifiedDate":"2021-03-16"},{"lineNumber":499,"author":{"gitId":"ljhgab"},"content":"Lists all events from the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":501,"author":{"gitId":"litone01"},"content":"Format: `list_event`","lastModifiedDate":"2021-03-16"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":503,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":505,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":506,"author":{"gitId":"ljhgab"},"content":"### Getting today\u0027s events: `today_event`","lastModifiedDate":"2021-04-06"},{"lineNumber":507,"author":{"gitId":"ljhgab"},"content":"Lists all events whose duration have overlap with today from the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":508,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":509,"author":{"gitId":"ljhgab"},"content":"Format: `today_event`","lastModifiedDate":"2021-03-30"},{"lineNumber":510,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":511,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":512,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":513,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":514,"author":{"gitId":"ljhgab"},"content":"### Finding events by name: `find_event`","lastModifiedDate":"2021-04-06"},{"lineNumber":515,"author":{"gitId":"ljhgab"},"content":"Finds events whose names contain any of the given keywords from the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":516,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":517,"author":{"gitId":"ljhgab"},"content":"Format: `find_event KEYWORDS [MORE_KEYWORDS]`","lastModifiedDate":"2021-04-07"},{"lineNumber":518,"author":{"gitId":"ljhgab"},"content":"* The search is case-insensitive. e.g. `meeting` will match `Meeting`.","lastModifiedDate":"2021-04-07"},{"lineNumber":519,"author":{"gitId":"ljhgab"},"content":"* The order of the keywords does not matter. e.g. `Attending Lecture` will match `Lecture Attending`.","lastModifiedDate":"2021-04-07"},{"lineNumber":520,"author":{"gitId":"ljhgab"},"content":"* Only the name of the events is searched.","lastModifiedDate":"2021-04-07"},{"lineNumber":521,"author":{"gitId":"ljhgab"},"content":"* Only full words will be matched. e.g. `CS` will not match `CS2103`.","lastModifiedDate":"2021-04-07"},{"lineNumber":522,"author":{"gitId":"ljhgab"},"content":"* Events matching at least one keyword will be returned (i.e. `OR` search). e.g. `CS2103 Meeting` will return","lastModifiedDate":"2021-04-07"},{"lineNumber":523,"author":{"gitId":"ljhgab"},"content":"  `Project Meeting`, `CS2103 Lecture`.","lastModifiedDate":"2021-04-07"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":525,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-07"},{"lineNumber":526,"author":{"gitId":"ljhgab"},"content":"* `find_event Meeting` returns `project meeting` and `Research Meeting`.","lastModifiedDate":"2021-04-07"},{"lineNumber":527,"author":{"gitId":"ljhgab"},"content":"* `find_event talk competition` returns `Career Talk`, `Coding Competition`","lastModifiedDate":"2021-04-07"},{"lineNumber":528,"author":{"gitId":"ljhgab"},"content":"  ![find_event example](images/find_event-example.png)","lastModifiedDate":"2021-04-07"},{"lineNumber":529,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":530,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":533,"author":{"gitId":"YuFeng0930"},"content":"### Clearing expired events: `clear_expired_event`","lastModifiedDate":"2021-03-24"},{"lineNumber":534,"author":{"gitId":"ljhgab"},"content":"Clears events with past end date time from the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":536,"author":{"gitId":"YuFeng0930"},"content":"Format: `clear_expired_event`","lastModifiedDate":"2021-03-24"},{"lineNumber":537,"author":{"gitId":"YuFeng0930"},"content":"* For an event to be considered expired, the event should have past end date time compare to the local time on the user\u0027s computer, ","lastModifiedDate":"2021-04-06"},{"lineNumber":538,"author":{"gitId":"YuFeng0930"},"content":"hence changing of timing on a computer could affect the judgement of expiration.","lastModifiedDate":"2021-04-06"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":540,"author":{"gitId":"YuFeng0930"},"content":"#### Illustration of usage of `clear_expired_event`:","lastModifiedDate":"2021-04-06"},{"lineNumber":541,"author":{"gitId":"YuFeng0930"},"content":"![Example of usage of `clear_expired_event`](images/ClearExpiredEventUsage.png)","lastModifiedDate":"2021-04-06"},{"lineNumber":542,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":543,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":544,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":545,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":546,"author":{"gitId":"litone01"},"content":"### Finding tasks and events before or on a given date: `find_schedule`","lastModifiedDate":"2021-03-30"},{"lineNumber":547,"author":{"gitId":"ljhgab"},"content":"Finds tasks and events before or on the specified date from the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":548,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":549,"author":{"gitId":"litone01"},"content":"Format: `find_schedule DATE`","lastModifiedDate":"2021-03-30"},{"lineNumber":550,"author":{"gitId":"litone01"},"content":"* Tasks refer to **uncompleted tasks** with deadlines before or on the specified date","lastModifiedDate":"2021-04-07"},{"lineNumber":551,"author":{"gitId":"litone01"},"content":"* Events refer to events with start date before or on the specified date and end date after or on the specified date, ","lastModifiedDate":"2021-04-07"},{"lineNumber":552,"author":{"gitId":"litone01"},"content":"  i.e., `event start date \u003c\u003d given date \u003c\u003d event end date`","lastModifiedDate":"2021-03-30"},{"lineNumber":553,"author":{"gitId":"litone01"},"content":"* Date entered must be a valid date and in the format of `YYYY-MM-DD`, e.g. `2021-04-01`","lastModifiedDate":"2021-03-30"},{"lineNumber":554,"author":{"gitId":"litone01"},"content":"* Only one single date can be entered. If more than one dates are supplied, program will return an error message","lastModifiedDate":"2021-03-30"},{"lineNumber":555,"author":{"gitId":"litone01"},"content":"  indicating invalid date.","lastModifiedDate":"2021-03-30"},{"lineNumber":556,"author":{"gitId":"litone01"},"content":"* After running `find_schedule`, if you wish to view all existing tasks and all existing events, ","lastModifiedDate":"2021-03-30"},{"lineNumber":557,"author":{"gitId":"litone01"},"content":"  please use the `list_task` and `list_event` respectively.","lastModifiedDate":"2021-03-30"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":559,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-30"},{"lineNumber":560,"author":{"gitId":"litone01"},"content":"* `find_schedule 2021-06-01` finds all existing uncompleted tasks with deadlines ","lastModifiedDate":"2021-04-07"},{"lineNumber":561,"author":{"gitId":"litone01"},"content":"  and all existing events with start date before or on the specified date and end date after or on ","lastModifiedDate":"2021-04-07"},{"lineNumber":562,"author":{"gitId":"litone01"},"content":"  before or on `1st June 2021`.","lastModifiedDate":"2021-03-30"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":564,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":567,"author":{"gitId":"icelenaugust"},"content":"### Finding free time slots: `free_time`","lastModifiedDate":"2021-03-31"},{"lineNumber":568,"author":{"gitId":"ljhgab"},"content":"Finds all free time slots on the given date from the event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":570,"author":{"gitId":"icelenaugust"},"content":"Format: `free_time DATE`","lastModifiedDate":"2021-03-31"},{"lineNumber":571,"author":{"gitId":"icelenaugust"},"content":"* **Free time slots** refer to all times in the given date without any event happening","lastModifiedDate":"2021-03-31"},{"lineNumber":572,"author":{"gitId":"icelenaugust"},"content":"* Date entered must be a valid date and in the format of `YYYY-MM-DD`, e.g. `2021-04-01`","lastModifiedDate":"2021-03-31"},{"lineNumber":573,"author":{"gitId":"icelenaugust"},"content":"* Only one single date can be entered. If more than one dates are supplied, program will return an error message","lastModifiedDate":"2021-03-31"},{"lineNumber":574,"author":{"gitId":"icelenaugust"},"content":"  indicating invalid date.","lastModifiedDate":"2021-03-31"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":576,"author":{"gitId":"icelenaugust"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":577,"author":{"gitId":"icelenaugust"},"content":"* `free_time 2021-06-01` finds all free time slots on the given date `1st June 2021`.","lastModifiedDate":"2021-03-31"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":579,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":582,"author":{"gitId":"icelenaugust"},"content":"### Summarising tasks and events statistics: `summary`","lastModifiedDate":"2021-04-05"},{"lineNumber":583,"author":{"gitId":"icelenaugust"},"content":"Displays a summary of tasks completion status and events upcoming in the next 7 days.","lastModifiedDate":"2021-04-05"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":585,"author":{"gitId":"icelenaugust"},"content":"Format: `summary`","lastModifiedDate":"2021-03-31"},{"lineNumber":586,"author":{"gitId":"icelenaugust"},"content":"* **Completed tasks** refer to tasks that are done regardless of when the deadline is.","lastModifiedDate":"2021-04-05"},{"lineNumber":587,"author":{"gitId":"litone01"},"content":"* **Overdue tasks** refer to tasks that are uncompleted and the current date now has passed the deadline,","lastModifiedDate":"2021-04-06"},{"lineNumber":588,"author":{"gitId":"icelenaugust"},"content":"  i.e., `completionStatus is INCOMPLETE` and `deadline is before current date`","lastModifiedDate":"2021-04-05"},{"lineNumber":589,"author":{"gitId":"icelenaugust"},"content":"* **Tasks to be completed before deadline** refer to tasks that are incomplete and the current date now has not passed the deadline,","lastModifiedDate":"2021-04-05"},{"lineNumber":590,"author":{"gitId":"icelenaugust"},"content":"  i.e., `completionStatus is INCOMPLETE` and `deadline is after current date`","lastModifiedDate":"2021-04-05"},{"lineNumber":591,"author":{"gitId":"icelenaugust"},"content":"* **Events upcoming in the next 7 days** refer to events that are going to happen in the next 7 days. Events that are happening today are not included.","lastModifiedDate":"2021-04-05"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":593,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":594,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":595,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":596,"author":{"gitId":"icelenaugust"},"content":"### Clearing Sochedule: `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":597,"author":{"gitId":"ljhgab"},"content":"Clears all tasks and events in the SOChedule\u0027s task list and event list.","lastModifiedDate":"2021-04-08"},{"lineNumber":598,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":599,"author":{"gitId":"icelenaugust"},"content":"Format: `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":600,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":601,"author":{"gitId":"SoulUseless"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-05"},{"lineNumber":602,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":603,"author":{"gitId":"ljhgab"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2021-04-06"},{"lineNumber":604,"author":{"gitId":"ljhgab"},"content":"Exits the program.","lastModifiedDate":"2021-04-06"},{"lineNumber":605,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":606,"author":{"gitId":"ljhgab"},"content":"[Return to Feature List](#feature-list)","lastModifiedDate":"2021-04-06"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":609,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"SoulUseless"},"content":"**A**: Download the JAR file onto the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SOChedule home folder (this is contained within the `/data` folder in the same location as your SOChedule.jar.","lastModifiedDate":"2021-04-05"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"SoulUseless"},"content":"### General commands","lastModifiedDate":"2021-02-26"},{"lineNumber":625,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":626,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"SoulUseless"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-02-25"},{"lineNumber":630,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":631,"author":{"gitId":"SoulUseless"},"content":"### Task-related commands","lastModifiedDate":"2021-02-26"},{"lineNumber":632,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":633,"author":{"gitId":"SoulUseless"},"content":"Action | Format, Examples","lastModifiedDate":"2021-02-26"},{"lineNumber":634,"author":{"gitId":"SoulUseless"},"content":"--------|------------------","lastModifiedDate":"2021-02-26"},{"lineNumber":635,"author":{"gitId":"litone01"},"content":"**Add** | `add_task n/TASKNAME d/DEADLINE p/PRIORITY [c/CATEGORY]... [t/TAG]...` \u003cbr\u003e e.g., `add_task n/CS2103 assignment d/2021-02-27 p/1 c/school work t/urgent`","lastModifiedDate":"2021-03-16"},{"lineNumber":636,"author":{"gitId":"litone01"},"content":"**Delete** | `delete_task INDEX`\u003cbr\u003ee.g., `delete_task 1`","lastModifiedDate":"2021-03-16"},{"lineNumber":637,"author":{"gitId":"litone01"},"content":"**Done** | `done_task INDEX1 [INDEX2] ...`\u003cbr\u003ee.g., `done_task 1 2`","lastModifiedDate":"2021-03-30"},{"lineNumber":638,"author":{"gitId":"litone01"},"content":"**Undone** | `undone_task INDEX`\u003cbr\u003ee.g., `undone_task 1`","lastModifiedDate":"2021-03-30"},{"lineNumber":639,"author":{"gitId":"litone01"},"content":"**Edit** | `edit_task INDEX [n/TASKNAME] [d/DEADLINE] [p/PRIORITY] [c/CATEGORY]... [t/TAG]...` \u003cbr\u003e e.g., `edit_task 1 n/editedTaskName`","lastModifiedDate":"2021-03-30"},{"lineNumber":640,"author":{"gitId":"litone01"},"content":"**List** | `list_task`","lastModifiedDate":"2021-03-16"},{"lineNumber":641,"author":{"gitId":"ljhgab"},"content":"**Today** | `today_task`","lastModifiedDate":"2021-03-30"},{"lineNumber":642,"author":{"gitId":"ljhgab"},"content":"**Find** | `find_task KEYWORDS`\u003cbr\u003ee.g., `find_task homework`","lastModifiedDate":"2021-03-30"},{"lineNumber":643,"author":{"gitId":"YuFeng0930"},"content":"**Sort** | `sort_task ARGUMENT`\u003cbr\u003ee.g., `sort_task name`","lastModifiedDate":"2021-03-24"},{"lineNumber":644,"author":{"gitId":"SoulUseless"},"content":"**Pin** | `pin_task INDEX`\u003cbr\u003ee.g., `pin_task 1`","lastModifiedDate":"2021-03-28"},{"lineNumber":645,"author":{"gitId":"SoulUseless"},"content":"**Unpin** | `unpin_task INDEX`\u003cbr\u003ee.g., `unpin_task 1`","lastModifiedDate":"2021-03-28"},{"lineNumber":646,"author":{"gitId":"litone01"},"content":"**Clear Completed** | `clear_completed_task`","lastModifiedDate":"2021-03-30"},{"lineNumber":647,"author":{"gitId":"litone01"},"content":"**Clear Expired** | `clear_expired_task`","lastModifiedDate":"2021-03-30"},{"lineNumber":648,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":649,"author":{"gitId":"SoulUseless"},"content":"### Event-related commands","lastModifiedDate":"2021-02-26"},{"lineNumber":650,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":651,"author":{"gitId":"SoulUseless"},"content":"Action | Format, Examples","lastModifiedDate":"2021-02-26"},{"lineNumber":652,"author":{"gitId":"SoulUseless"},"content":"--------|------------------","lastModifiedDate":"2021-02-26"},{"lineNumber":653,"author":{"gitId":"litone01"},"content":"**Add** | `add_event n/TASKNAME sd/STARTDATE st/STARTTIME ed/ENDDATE et/ENDTIME [c/CATEGORY]... [t/TAG]...`\u003cbr\u003e e.g., `add_event n/CS2103 meeting sd/2021-02-27 st/15:00 ed/2021-02-27 et/17:00`","lastModifiedDate":"2021-03-16"},{"lineNumber":654,"author":{"gitId":"litone01"},"content":"**Delete** | `delete_event INDEX`\u003cbr\u003ee.g., `delete_event 3`","lastModifiedDate":"2021-03-16"},{"lineNumber":655,"author":{"gitId":"litone01"},"content":"**List** | `list_event`","lastModifiedDate":"2021-03-16"},{"lineNumber":656,"author":{"gitId":"ljhgab"},"content":"**Today** | `today_event`","lastModifiedDate":"2021-03-30"},{"lineNumber":657,"author":{"gitId":"ljhgab"},"content":"**Find** | `find_event KEYWORDS`\u003cbr\u003ee.g., `find_event meeting`","lastModifiedDate":"2021-03-30"},{"lineNumber":658,"author":{"gitId":"litone01"},"content":"**Clear Completed** | `clear_expired_event`","lastModifiedDate":"2021-03-30"},{"lineNumber":659,"author":{"gitId":"icelenaugust"},"content":"**Find Free Time** | `free_time DATE` \u003cbr\u003ee.g., `free_time 2021-01-01`","lastModifiedDate":"2021-03-31"},{"lineNumber":660,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":661,"author":{"gitId":"litone01"},"content":"### Commands related to both task and event","lastModifiedDate":"2021-03-30"},{"lineNumber":662,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":663,"author":{"gitId":"litone01"},"content":"Action | Format, Examples","lastModifiedDate":"2021-03-30"},{"lineNumber":664,"author":{"gitId":"litone01"},"content":"--------|------------------","lastModifiedDate":"2021-03-30"},{"lineNumber":665,"author":{"gitId":"litone01"},"content":"**Find Schedule** | `find_schedule DATE` \u003cbr\u003ee.g., `find_schedule 2021-06-01`","lastModifiedDate":"2021-03-30"},{"lineNumber":666,"author":{"gitId":"icelenaugust"},"content":"**Clear Schedule** | `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":667,"author":{"gitId":"litone01"},"content":"**Summary** | `summary`","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"YuFeng0930":45,"icelenaugust":26,"-":112,"litone01":96,"SoulUseless":293,"ljhgab":95}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"SoulUseless"},"content":"    content: \"SOChedule\";","lastModifiedDate":"2021-04-07"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"SoulUseless":1}},{"path":"docs/diagrams/AddEventCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"participant \":AddEventCommandParser\" as AddEventCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"participant \"s:AddEventCommand\" as AddEventCommand LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"[-\u003e LogicManager : parse(add_event args)","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"activate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(add_event args)","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -\u003e AddEventCommandParser: parse(args)","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"activate AddEventCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"create AddEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"AddEventCommandParser -\u003e AddEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"activate AddEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"AddEventCommandParser \u003c--AddEventCommand : s","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"deactivate AddEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser \u003c--AddEventCommandParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"AddEventCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"destroy AddEventCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e AddEventCommand : execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"activate AddEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"AddEventCommand -\u003e Model : addEvents(Event eventToAdd)","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"AddEventCommand \u003c-- Model","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"create CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"AddEventCommand -\u003e CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"activate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"AddEventCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- AddEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"deactivate AddEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"AddEventCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"destroy AddEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"YuFeng0930":64}},{"path":"docs/diagrams/AddTaskCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"participant \":AddTaskCommandParser\" as AddTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"participant \"s:AddTaskCommand\" as AddTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"[-\u003e LogicManager : parse(add_task)","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"activate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(add_task)","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"SocheduleParser -\u003e AddTaskCommandParser: parse(args)","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"activate AddTaskCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"create AddTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"AddTaskCommandParser -\u003e AddTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"activate AddTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"AddTaskCommandParser \u003c--AddTaskCommand : s","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"deactivate AddTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"SocheduleParser \u003c--AddTaskCommandParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"deactivate AddTaskCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"AddTaskCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"destroy AddTaskCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"LogicManager -\u003e AddTaskCommand : execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"activate AddTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"AddTaskCommand -\u003e Model : addTasks(Task taskToAdd)","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"activate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"AddTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"deactivate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"create CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"AddTaskCommand -\u003e CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"activate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"AddTaskCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"LogicManager \u003c-- AddTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"deactivate AddTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"AddTaskCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"destroy AddTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"ljhgab":64}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"user -[USER_COLOR]\u003e ui : \"delete_task 1\"","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete_task 1\")","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteTask(t)","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveSochedule(sochedule)","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":34,"SoulUseless":4}},{"path":"docs/diagrams/ClearCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"@startuml","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"!include style.puml","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"participant \":ClearCommandParser\" as ClearCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"participant \"s:ClearCommand\" as ClearCommand LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"end box","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"end box","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"[-\u003e LogicManager : parse(clear)","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"activate LogicManager","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(clear)","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser -\u003e ClearCommandParser: parse()","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"activate ClearCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"create ClearCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"ClearCommandParser -\u003e ClearCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"activate ClearCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"ClearCommandParser \u003c--ClearCommand : s","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"deactivate ClearCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser \u003c--ClearCommandParser : s","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"deactivate ClearCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"ClearCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"destroy ClearCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"LogicManager -\u003e ClearCommand : execute()","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"activate ClearCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"ClearCommand -\u003e Model : setSochedule(new Sochedule)","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"activate Model","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"ClearCommand \u003c-- Model","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"deactivate Model","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"create CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"ClearCommand -\u003e CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"activate CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"ClearCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"LogicManager \u003c-- ClearCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"deactivate ClearCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"ClearCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"@enduml","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"icelenaugust":62}},{"path":"docs/diagrams/ClearCompletedTaskCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"participant \"s:ClearCompletedTaskCommand\" as ClearCompletedTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"[-\u003e LogicManager : parse(clear_completed_task)","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"activate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(clear_completed_task)","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"create ClearCompletedTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -\u003e ClearCompletedTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"activate ClearCompletedTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser \u003c--ClearCompletedTaskCommand : s","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"deactivate ClearCompletedTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e ClearCompletedTaskCommand : execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"activate ClearCompletedTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"ClearCompletedTaskCommand -\u003e Model : clearCompletedTasks()","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"ClearCompletedTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"create CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"ClearCompletedTaskCommand -\u003e CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"activate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"ClearCompletedTaskCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- ClearCompletedTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"deactivate ClearCompletedTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"ClearCompletedTaskCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"destroy ClearCompletedTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"YuFeng0930":54}},{"path":"docs/diagrams/ClearExpiredEventCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"participant \"s:ClearExpiredEventCommand\" as ClearExpiredEventCommand LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"[-\u003e LogicManager : parse(clear_expired_event)","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"activate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(clear_expired_event)","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"create ClearExpiredEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -\u003e ClearExpiredEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"activate ClearExpiredEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser \u003c--ClearExpiredEventCommand : s","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"deactivate ClearExpiredEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e ClearExpiredEventCommand : execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"activate ClearExpiredEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredEventCommand -\u003e Model : clearExpiredEvents()","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredEventCommand \u003c-- Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"create CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredEventCommand -\u003e CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"activate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredEventCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- ClearExpiredEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"deactivate ClearExpiredEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredEventCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"destroy ClearExpiredEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"YuFeng0930":54}},{"path":"docs/diagrams/ClearExpiredTaskCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"participant \"s:ClearExpiredTaskCommand\" as ClearExpiredTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"[-\u003e LogicManager : parse(clear_expired_task)","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"activate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(clear_expired_task)","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"create ClearExpiredTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -\u003e ClearExpiredTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"activate ClearExpiredTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser \u003c--ClearExpiredTaskCommand : s","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"deactivate ClearExpiredTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e ClearExpiredTaskCommand : execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"activate ClearExpiredTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredTaskCommand -\u003e Model : clearExpiredTasks()","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"create CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredTaskCommand -\u003e CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"activate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredTaskCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- ClearExpiredTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"deactivate ClearExpiredTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"ClearExpiredTaskCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"destroy ClearExpiredTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"YuFeng0930":54}},{"path":"docs/diagrams/DeleteEventCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"!include style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"participant \":DeleteEventCommandParser\" as DeleteEventCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"participant \"s:DeleteEventCommand\" as DeleteEventCommand LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"[-\u003e LogicManager : parse(delete_event INDEX)","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"activate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(delete_event INDEX)","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -\u003e DeleteEventCommandParser: parse(INDEX)","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"activate DeleteEventCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"create DeleteEventCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"DeleteEventCommandParser -\u003e DeleteEventCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"activate DeleteEventCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"DeleteEventCommandParser \u003c--DeleteEventCommand : s","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser \u003c--DeleteEventCommandParser : s","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"deactivate DeleteEventCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"DeleteEventCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"destroy DeleteEventCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e DeleteEventCommand : execute()","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"activate DeleteEventCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"DeleteEventCommand -\u003e Model : deleteEvents(Event eventToDelete)","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"DeleteEventCommand \u003c-- Model","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"create CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"DeleteEventCommand -\u003e CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"activate CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"DeleteEventCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- DeleteEventCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"deactivate DeleteEventCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"DeleteEventCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"YuFeng0930":62}},{"path":"docs/diagrams/DeleteTaskCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"@startuml","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"!include style.puml","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"participant \":DeleteTaskCommandParser\" as DeleteTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"participant \"s:DeleteTaskCommand\" as DeleteTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"end box","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"end box","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"[-\u003e LogicManager : parse(delete_task INDEX)","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"activate LogicManager","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(delete_task INDEX)","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser -\u003e DeleteTaskCommandParser: parse(INDEX)","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"activate DeleteTaskCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"create DeleteTaskCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"DeleteTaskCommandParser -\u003e DeleteTaskCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"DeleteTaskCommandParser \u003c--DeleteTaskCommand : s","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser \u003c--DeleteTaskCommandParser : s","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"deactivate DeleteTaskCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"DeleteTaskCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"destroy DeleteTaskCommandParser","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"LogicManager -\u003e DeleteTaskCommand : execute()","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"activate DeleteTaskCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"DeleteTaskCommand -\u003e Model : deleteTasks(Task taskToDelete)","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"activate Model","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"DeleteTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"deactivate Model","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"create CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"DeleteTaskCommand -\u003e CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"activate CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"DeleteTaskCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"LogicManager \u003c-- DeleteTaskCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"deactivate DeleteTaskCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"DeleteTaskCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"@enduml","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"icelenaugust":62}},{"path":"docs/diagrams/EditEventCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"@startuml","lastModifiedDate":"2021-04-06"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"start","lastModifiedDate":"2021-04-06"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":":User executes command;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-04-06"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-04-06"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"if () then ([index valid])","lastModifiedDate":"2021-04-06"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"    :Fetch the event to be edited;","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    if () then ([end date time provided])","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"        if () then ([end date time not past])","lastModifiedDate":"2021-04-06"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"        else ([else])","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"            :Show error to user","lastModifiedDate":"2021-04-06"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"            (end date time past);","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"            stop","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"        endif","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    else ([else])","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    endif","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        :Create edited event;","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"else ([else])","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":":Show error to user","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"   (invalid index);","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"stop","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"endif","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"if () then ([edited event same","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"as event to be edit])","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":":Show error to user","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"(no field changed);","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"stop","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"else ([else])","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"if () then ([edited event same","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"as any existing events])","lastModifiedDate":"2021-04-06"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":":Show error to user","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"(duplicated event);","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"stop","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"else ([else])","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":":Replace with edited event;","lastModifiedDate":"2021-04-06"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"endif","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"endif","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"stop","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"@enduml","lastModifiedDate":"2021-04-06"}],"authorContributionMap":{"YuFeng0930":43}},{"path":"docs/diagrams/EditEventCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"participant \":EditEventCommandParser\" as EditEventCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"participant \"s:EditEventCommand\" as EditEventCommand LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"participant \"s:EditEventDescriptor\" as EditEventDescriptor LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"[-\u003e LogicManager : parse(edit_event args)","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"activate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(edit_event args)","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -\u003e EditEventCommandParser: parse(args)","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"activate EditEventCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"create EditEventDescriptor","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommandParser -\u003e EditEventDescriptor","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"activate EditEventDescriptor","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommandParser \u003c--EditEventDescriptor : s","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditEventDescriptor","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"create EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommandParser -\u003e EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"activate EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommandParser \u003c--EditEventCommand : s","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser \u003c--EditEventCommandParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditEventCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"destroy EditEventCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e EditEventCommand : execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"activate EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand -\u003e Model : getFilteredEventList()","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand \u003c-- Model","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand -\u003e EditEventCommand : createEditedEvent(eventToEdit, editEventDescriptor)","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"activate EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand \u003c-- EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"destroy EditEventDescriptor","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand -\u003e Model : setEvent(eventToEdit, editedEvent)","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand \u003c-- Model","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand -\u003e Model : updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS)","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand \u003c-- Model","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"create CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand -\u003e CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"activate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"EditEventCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"destroy EditEventCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"YuFeng0930":87}},{"path":"docs/diagrams/EditTaskCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"!include style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"participant \":EditTaskCommandParser\" as EditTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"participant \"s:EditTaskCommand\" as EditTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"participant \"s:EditTaskDescriptor\" as EditTaskDescriptor LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"[-\u003e LogicManager : parse(edit_task args)","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"activate LogicManager","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(edit_task args)","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -\u003e EditTaskCommandParser: parse(args)","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"activate EditTaskCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"create EditTaskDescriptor","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommandParser -\u003e EditTaskDescriptor","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"activate EditTaskDescriptor","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommandParser \u003c--EditTaskDescriptor : s","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditTaskDescriptor","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"create EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommandParser -\u003e EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"activate EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommandParser \u003c--EditTaskCommand : s","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser \u003c--EditTaskCommandParser : s","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditTaskCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"destroy EditTaskCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"LogicManager -\u003e EditTaskCommand : execute()","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"activate EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand -\u003e Model : getFilteredTaskList()","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand -\u003e EditTaskCommand : createEditedTask(taskToEdit, editTaskDescriptor)","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"activate EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand \u003c-- EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"destroy EditTaskDescriptor","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand -\u003e Model : setTask(taskToEdit, editedTask)","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand -\u003e Model : updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS)","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"activate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"deactivate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"create CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand -\u003e CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"activate CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"LogicManager \u003c-- EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"deactivate EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"EditTaskCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"destroy EditTaskCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"YuFeng0930":87}},{"path":"docs/diagrams/FindFreeTimeActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"@startuml","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"start","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":":User executes `free_time` command;","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":":Create a minute array for the date specified;","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"if () then ([valid date])","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    :Fetch Events from SOChedule;","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"    :Go through all Events present in SOChedule;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    :Update time status for the minute array;","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"    :Go through the minute array to locate all free time slots;","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    if () then ([Find free slot])","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"        :Print out the free time slots in a list;","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    else([else])","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"        :Return no free time on the day;","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    endif","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"else ([else])","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    :Throw invalid date error;","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"endif","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"stop","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"@enduml","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"icelenaugust":20}},{"path":"docs/diagrams/FindFreeTimeCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"@startuml","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"!include style.puml","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"participant \":FindFreeTimeCommandParser\" as FindFreeTimeCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"participant \"s:FindFreeTimeTaskCommand\" as FindFreeTimeCommand LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"end box","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"[-\u003e LogicManager : parse(free_time date)","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"activate LogicManager","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(free_time date)","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser -\u003e FindFreeTimeCommandParser: parse(date)","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"activate FindFreeTimeCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"create FindFreeTimeCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"FindFreeTimeCommandParser -\u003e FindFreeTimeCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"activate FindFreeTimeCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"FindFreeTimeCommandParser \u003c--FindFreeTimeCommand : s","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"deactivate FindFreeTimeCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser \u003c--FindFreeTimeCommandParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"deactivate FindFreeTimeCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"FindFreeTimeCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"destroy FindFreeTimeCommandParser","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"LogicManager -\u003e FindFreeTimeCommand : execute()","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"activate FindFreeTimeCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"FindFreeTimeCommand -\u003e Model : getFreeTimeSlots(Date date)","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"activate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"FindFreeTimeCommand \u003c-- Model","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"deactivate Model","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"create CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"FindFreeTimeCommand -\u003e CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"activate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"FindFreeTimeCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"LogicManager \u003c-- FindFreeTimeCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"deactivate FindFreeTimeCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"FindFreeTimeCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"@enduml","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"icelenaugust":62}},{"path":"docs/diagrams/FindScheduleCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"@startuml","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"!include style.puml","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"participant \":FindScheduleCommandParser\" as FindScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"participant \"f:FindScheduleCommand\" as FindScheduleCommand LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"end box","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"end box","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"[-\u003e LogicManager : parse(find_schedule DATE)","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"activate LogicManager","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(find_schedule DATE)","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"activate SocheduleParser","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"create FindScheduleCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"SocheduleParser -\u003e FindScheduleCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"activate FindScheduleCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"SocheduleParser \u003c-- FindScheduleCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"deactivate FindScheduleCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"SocheduleParser -\u003e FindScheduleCommandParser: parse(DATE)","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"activate FindScheduleCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"create FindScheduleCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"FindScheduleCommandParser -\u003e FindScheduleCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"activate FindScheduleCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"FindScheduleCommandParser \u003c--FindScheduleCommand : f","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"deactivate FindScheduleCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"SocheduleParser \u003c--FindScheduleCommandParser : f","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"deactivate FindScheduleCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"FindScheduleCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"destroy FindScheduleCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"LogicManager \u003c-- SocheduleParser : f","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"LogicManager -\u003e FindScheduleCommand : execute()","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"activate FindScheduleCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"FindScheduleCommand -\u003e Model : updateFilteredTaskList()","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"activate Model","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"FindScheduleCommand \u003c-- Model","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"deactivate Model","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"FindScheduleCommand -\u003e Model : updateFilteredEventList","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"activate Model","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"FindScheduleCommand \u003c-- Model","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"deactivate Model","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"create CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"FindScheduleCommand -\u003e CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"activate CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"FindScheduleCommand \u003c-- CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"LogicManager \u003c-- FindScheduleCommand: result","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"deactivate FindScheduleCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"FindScheduleCommand -[hidden]-\u003e[","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"litone01"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"litone01"},"content":"@enduml","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"litone01":73}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"Class SocheduleParser","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"Class SocheduleParserUtil","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"LogicManager --\u003e\"1\" SocheduleParser","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"SocheduleParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"XYZCommandParser ..\u003e SocheduleParserUtil","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"SocheduleParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"note right of XYZCommand: XYZCommand \u003d AddTaskCommand, \\nFindEventCommand, etc","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":55,"ljhgab":7}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"Interface ReadOnlySochedule \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"Class Sochedule","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"Class ReadOnlySochedule","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"Package Task {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"Class Task","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"Class CompletionStatus","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"Class Priority","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"Class Deadline","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"Class PinnedStatus","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"Class UniqueTaskList","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"Package Event {","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"Class Event","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"Class StartDate","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"Class StartTime","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"Class EndDate","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"Class EndTime","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"Class UniqueEventList","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"Package Category {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"Class Category","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"Sochedule .up.|\u003e ReadOnlySochedule","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"ModelManager o--\u003e \"1\" Sochedule","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"Sochedule *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"UniqueTaskList o--\u003e \"*\" Task","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"Task *--\u003e Deadline","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"Task *--\u003e CompletionStatus","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"Task *--\u003e PinnedStatus","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"Task *--\u003e Priority","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"Task *--\u003e \"*\" Tag","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"Task *--\u003e \"*\" Category","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"Sochedule *--\u003e \"1\" UniqueEventList","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"UniqueEventList o--\u003e \"*\" Event","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"Event *--\u003e StartDate","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"Event *--\u003e StartTime","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"Event *--\u003e EndDate","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"Event *--\u003e EndTime","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"litone01"},"content":"Event *--\u003e \"*\" Tag","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"litone01"},"content":"Event *--\u003e \"*\" Category","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"litone01"},"content":"PinnedStatus -[hidden]right-\u003e CompletionStatus","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"litone01"},"content":"Deadline -[hidden]right-\u003e Priority","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"litone01"},"content":"CompletionStatus -[hidden]right-\u003e Deadline","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"litone01"},"content":"ModelManager -----\u003e\" ~* filtered list\" Task","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"litone01"},"content":"ModelManager -----\u003e\" ~* filtered list\" Event","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":33,"litone01":47}},{"path":"docs/diagrams/PinTaskActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"@startuml","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"start","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":":User executes `pin_task` command;","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"if () then ([valid index])","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    :Fetch Task from SOChedule;","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    if () then ([task not pinned])","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"        :Update PinnedStatus of Task;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"        :Sort TaskList;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"        :Update UI;","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    else([else])","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    endif","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"else ([else])","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"endif","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"stop","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"@enduml","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"SoulUseless":16}},{"path":"docs/diagrams/PinTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"@startuml","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"!include style.puml","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"participant \":PinTaskCommandParser\" as PinTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"participant \"p:PinTaskCommand\" as PinTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"end box","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"end box","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"[-\u003e LogicManager : parse(pin)","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"activate LogicManager","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(pin)","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"SocheduleParser -\u003e PinTaskCommandParser: parse(args)","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"activate PinTaskCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"create PinTaskCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommandParser -\u003e PinTaskCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"activate PinTaskCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommandParser \u003c--PinTaskCommand : p","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"deactivate PinTaskCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"SocheduleParser \u003c--PinTaskCommandParser : p","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"deactivate PinTaskCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"destroy PinTaskCommandParser","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"LogicManager \u003c-- SocheduleParser : p","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"LogicManager -\u003e PinTaskCommand : execute()","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"activate PinTaskCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommand -\u003e Model : pinTask()","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"activate Model","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"deactivate Model","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommand -\u003e Model : sortTaskDefault()","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"activate Model","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"deactivate Model","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"create CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommand -\u003e CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"activate CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"LogicManager \u003c-- PinTaskCommand : CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"deactivate PinTaskCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"PinTaskCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"destroy PinTaskCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"@enduml","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"SoulUseless":69}},{"path":"docs/diagrams/SortTaskModelSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"@startuml","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"!include style.puml","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"participant \":Sochedule\" as Sochedule MODEL_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"participant \"tasks:UniqueTaskList\" as UniqueTaskList MODEL_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"participant \":TaskComparator\" as TaskComparator MODEL_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n FXCollections\" as FXCollections MODEL_COLOR","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"end box","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"[-\u003e ModelManager : sortTasks(comparingVar)","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"activate ModelManager","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"ModelManager -\u003e Sochedule : sortTasks(comparingVar)","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"activate Sochedule","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"Sochedule -\u003e UniqueTaskList : sort(comparingVar)","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"activate UniqueTaskList","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"UniqueTaskList -\u003e TaskComparator : setComparingVar(comparingVar)","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"activate TaskComparator","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"UniqueTaskList \u003c--TaskComparator","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"deactivate TaskComparator","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"UniqueTaskList -\u003e FXCollections : sort(internalList, TaskComparator)","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"activate FXCollections","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"UniqueTaskList \u003c-- FXCollections","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"deactivate FXCollections","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"Sochedule \u003c-- UniqueTaskList","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"deactivate UniqueTaskList","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"ModelManager \u003c-- Sochedule","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"deactivate Sochedule","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"[\u003c-- ModelManager","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"@enduml","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"SoulUseless":40}},{"path":"docs/diagrams/SortTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"@startuml","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"!include style.puml","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"participant \":SortTaskCommandParser\" as SortTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"participant \"s:SortTaskCommand\" as SortTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"end box","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"end box","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"[-\u003e LogicManager : parse(sort)","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"activate LogicManager","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(sort)","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"SocheduleParser -\u003e SortTaskCommandParser: parse(args)","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"activate SortTaskCommandParser","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"create SortTaskCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"SortTaskCommandParser -\u003e SortTaskCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"activate SortTaskCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"SortTaskCommandParser \u003c--SortTaskCommand : s","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"deactivate SortTaskCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"SocheduleParser \u003c--SortTaskCommandParser : s","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"deactivate SortTaskCommandParser","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"SortTaskCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"destroy SortTaskCommandParser","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"LogicManager -\u003e SortTaskCommand : execute()","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"activate SortTaskCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"SortTaskCommand -\u003e Model : sortTasks()","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"activate Model","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"SortTaskCommand \u003c-- Model","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"deactivate Model","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"create CommandResult","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"SortTaskCommand -\u003e CommandResult","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"activate CommandResult","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"SortTaskCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"LogicManager \u003c-- SortTaskCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"deactivate SortTaskCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"SortTaskCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"destroy SortTaskCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"@enduml","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"SoulUseless":64}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"Interface SocheduleStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"Class JsonSocheduleStorage","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"Storage -|\u003e UserPrefsStorage","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"Storage -|\u003e SocheduleStorage","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"StorageManager o--\u003e SocheduleStorage","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"JsonSocheduleStorage .left.|\u003e SocheduleStorage","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"JsonSocheduleStorage .down.\u003e JsonSerializableSochedule","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"JsonSerializableSochedule .right.\u003e JsonAdaptedTask","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"JsonSerializableSochedule .left.\u003e JsonAdaptedEvent","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"JsonAdaptedTask .down.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"JsonAdaptedEvent .down.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"JsonAdaptedTask .down.\u003e JsonAdaptedCategory","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"JsonAdaptedEvent .down.\u003e JsonAdaptedCategory","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"SoulUseless":13}},{"path":"docs/diagrams/SummaryCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"participant \":SummaryCommandParser\" as SummaryCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"participant \"s:SummaryCommand\" as SummaryCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"participant \"CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"[-\u003e LogicManager : parse(summary)","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(undo)","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"activate SocheduleParser","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser -\u003e SummaryCommandParser: parse(args)","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"activate SummaryCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"create SummaryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"SummaryCommandParser -\u003e SummaryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"activate SummaryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"SummaryCommandParser \u003c--SummaryCommand : s","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"deactivate SummaryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser \u003c--SummaryCommandParser : s","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"deactivate SummaryCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"SummaryCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"destroy SummaryCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"LogicManager \u003c-- SocheduleParser : s","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"destroy SocheduleParser","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"LogicManager -\u003e SummaryCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"activate SummaryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand -\u003e Model : getNumCompletedTask()","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand \u003c-- Model","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand -\u003e Model : getFilteredTaskList()","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand \u003c-- Model","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand -\u003e Model : getNumOverdueTask()","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand \u003c-- Model","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand -\u003e Model : getNumIncompleteTask()","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand \u003c-- Model","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand -\u003e Model : getNumIncomingEvents()","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand \u003c-- Model","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"create CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand -\u003e CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand \u003c-- CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"LogicManager \u003c-- SummaryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"deactivate SummaryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"SummaryCommand -[hidden]-\u003e[","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"destroy SummaryCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"[\u003c-- LogicManager : CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"icelenaugust":84}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"Class TaskListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"Class TaskCard","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"Class EventListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"Class EventCard","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"MainWindow *-down-\u003e TaskListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"MainWindow *-down-\u003e EventListPanel","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"TaskListPanel -down-\u003e TaskCard","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"EventListPanel -down-\u003e EventCard","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"EventListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"EventCard --|\u003e UiPart","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"EventCard ..\u003e Model","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"TaskListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"EventListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"icelenaugust":16,"-":52}},{"path":"docs/diagrams/UndoneTaskCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"@startuml","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"!include style.puml","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"participant \":SocheduleParser\" as SocheduleParser LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"participant \":UndoneTaskCommandParser\" as UndoneTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"participant \":UndoneTaskCommand\" as UndoneTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"end box","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"end box","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"[-\u003e LogicManager : parse(undone_task INDEX)","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"activate LogicManager","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"LogicManager -\u003e SocheduleParser : parseCommand(undone_task INDEX)","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"activate SocheduleParser","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"SocheduleParser -\u003e UndoneTaskCommandParser: parse(INDEX)","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"activate UndoneTaskCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"create UndoneTaskCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"UndoneTaskCommandParser -\u003e UndoneTaskCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"activate UndoneTaskCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"UndoneTaskCommandParser \u003c--UndoneTaskCommand :","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"deactivate UndoneTaskCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"SocheduleParser \u003c--UndoneTaskCommandParser : command","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"deactivate UndoneTaskCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"UndoneTaskCommandParser -[hidden]-\u003e[","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"destroy UndoneTaskCommandParser","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"LogicManager \u003c-- SocheduleParser : command","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"deactivate SocheduleParser","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"SocheduleParser -[hidden]-\u003e[","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"LogicManager -\u003e UndoneTaskCommand : execute()","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"activate UndoneTaskCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"UndoneTaskCommand -\u003e Model : setTask(taskToUndone, uncompletedTask)","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"activate Model","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"UndoneTaskCommand \u003c-- Model","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"deactivate Model","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"UndoneTaskCommand -\u003e Model : updateFilteredTaskList()","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"activate Model","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"UndoneTaskCommand \u003c-- Model","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"deactivate Model","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"create CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"UndoneTaskCommand -\u003e CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"activate CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"UndoneTaskCommand \u003c-- CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"LogicManager \u003c-- UndoneTaskCommand: result","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"deactivate UndoneTaskCommand","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"UndoneTaskCommand -[hidden]-\u003e[","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"[\u003c-- LogicManager : commandResult","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"@enduml","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"litone01":67}},{"path":"docs/team/icelenaugust.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"---","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"layout: page","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"title: Ding You Jia, Danelynn\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"---","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"## Project: SOChedule","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"SOChedule is a one-stop solution for NUS School of Computing (SoC) students to manage their tasks and events effectively. Targeted at users who can type fast and prefer typing to mouse input, SOChedule is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"* **New Feature 1**: Added the ability to find the free time slots of a given date.","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"  * What it does: allows the users to get a list of free time slots of a given date.","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"  * Justification: This enhancement is useful for users to locate the time which they can slot a new task or event in. This also allows users to have an overall view of his or her free time for the day.","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    This is especially pertinent when users have a significant number of tasks, and scrolling becomes unpractical.","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"  * Highlights: The implementation requires knowledge from date structure course, and the logic involved is complex. Many helper functions were implemented in the `UniqueEventList` class.","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"* **New Feature 2**: Added the ability to get a summary for task completion status and the events happening in the next 7 days.","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"  * What it does: allows the users to have a summary of task completion status up to current date and the events happening in the next 7 days.","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"  * Justification: This enhancement is useful for users to have an overview of their progress in completing the tasks as well as what events are going to happen in the next 7 days.","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"  * Highlights: The implementation was non-trivial as it required several helper functions in counting different types of tasks, namely, `completed tasks`, `overdue tasks` and `tasks to be completed before deadline`,","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    to multiple parts of SOChedule. Helper functions in counting the number of events happening in the next 7 days were also implemented.","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dicelenaugust\u0026tabRepo\u003dAY2021S2-CS2103-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"* **Project management**:","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"  * Ensured tasks are assigned fairly","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"  * Brainstormed ideas for different features","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"  * Contributed to the overhaul of previous codebase to current needs - Model (Pull requests [\\#45](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/45), [\\#65](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/65), [\\#77](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/77))","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"  * Continuous addition and update of unit tests throughout development to improve test coverage (Pull requests [\\#76](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/76), [\\#121](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/121), [\\#159](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/159), [\\#168](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/168), [\\#222](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/222))","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"  * Updated UI to suit SOChedule (Pull requests [\\#107](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/107), [\\#115](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/115), [\\#185](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/185), [\\#196](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/196), [\\#204](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/204))","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"  * Squashed bugs as and when they are found (Pull requests [\\#313](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/313), [\\#314](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/314), [\\#315](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/315))","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"  * User Guide:","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"    * Added documentation for `free_time`, `summary`, `clear` features (Pull requests [\\#229](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/229))","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"    * Crafted user stories (Pull requests [\\#339](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/339))","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"  * Developer Guide:","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"    * Added implementation details of the `free_time`, `summary`, `delete_task`, `clear` features (Pull requests [\\#212](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/212), [\\#214](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/214))","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    * Updated implementation details of `UI` component (Pull requests [\\#183](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/183))","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"* **Community**:","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/AY2021S2-CS2103T-T11-2/tp/issues/313), [2](https://github.com/AY2021S2-CS2103T-T11-2/tp/issues/315))","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"  ","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"icelenaugust":47}},{"path":"docs/team/litone01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"layout: page","lastModifiedDate":"2021-02-25"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"title: Jiaxiang\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-25"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"---","lastModifiedDate":"2021-02-25"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"## Project: SOChedule (YET TO BE UPDATED)","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"SOChedule is a one-stop solution for managing tasks and events, optimized for use via a Command Line Interface (CLI)","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-25"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-25"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"* **Project management**:","lastModifiedDate":"2021-02-25"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-25"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-25"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-25"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-25"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-25"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"    * User Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-25"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-25"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-25"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-25"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"* **Community**:","lastModifiedDate":"2021-02-25"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-25"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-25"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-25"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-25"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"* **Tools**:","lastModifiedDate":"2021-02-25"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-25"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-25"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-25"}],"authorContributionMap":{"litone01":47}},{"path":"docs/team/souluseless.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"---","lastModifiedDate":"2021-04-07"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"layout: page","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"title: Jing Kang\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"---","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"## Project: SOChedule","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"SOChedule is a one-stop solution for NUS School of Computing (SoC) students to manage their tasks and events effectively. Targeted at users who can type fast and prefer typing to mouse input, SOChedule is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"* **New Feature 1**: Added the ability to sort tasks within the task list.","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    * What it does: allows the users to sort the tasks within the task lists based on a select number of allowed parameters.","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    * Justification: This enhancement is useful for users to sort tasks based on their preference. This is especially pertinent when users have a significant number of tasks, and scrolling becomes unpractical.","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    * Highlights: The implementation was non-trivial as it required significant addition of code to the `Model` class of  SOChedule.","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"        * Model: Required to update Task to make it implement Comparable\u003cTask\u003e to allow it to be sorted easily using a comparator","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"        * Implemented a new component, `TaskComparator` to facilitate sorting of tasks.","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    ","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"* **New Feature 2**: Added the ability to pin and unpin tasks within the task list","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    * What it does: allows the users to pin tasks to the top of task list.","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    * Justification: This enhancement is useful for users to re-arrange their tasks. This is especially useful when users have a lot of tasks, and wish to pin one to the very top to prevent it from being left out.","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    * Highlights: The implementation was non-trivial as it required addition of code to multiple parts of SOChedule.","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"        * Model: Added a new parameter to a Task, modified the existing `sort_task` functionality to prioritise pinned tasks","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"        * Storage: Added a isPinned parameter to the json-adapted Tasks to ensure persistence.","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    ","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dSoulUseless\u0026tabRepo\u003dAY2021S2-CS2103-W16-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"* **Project management**:","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    * Managed milestones within the group to ensure deliverables are on time","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    * Managed the Issues Tracker to ensure tasks are assigned fairly","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    * Brainstormed ideas for different features and design considerations","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    * Contributed to the overhaul of previous codebase to current needs - Model \u0026 Storage (Pull requests [\\#66](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/66), [\\#78](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/78), [\\#84](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/84), [\\#95](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/95))","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    * Continuous addition and update of unit tests throughout development to improve test coverage (Pull requests [\\#96](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/96), [\\#127](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/127), [\\#132](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/132), [\\#136](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/136), [\\#161](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/161), [\\#184](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/184), [\\#192](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/192)) ","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"    * Improve code quality to adhere more closely to coding principles (Pull requests [\\#320](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/320))","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    * Squashed bugs as and when they are found (Pull requests [\\#197](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/197), [\\#317](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/317))","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    * User Guide:","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        * Created and improved readability for feature list and public parameters (Pull requests [\\#317](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/317))","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"        * Added documentation for `sort_task`, `pin_task`, `unpin_task` features (Pull requests [\\#161](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/161), [\\#192](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/192))","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        * Did cosmetic standardisation of user guide formatting (Pull Request [\\#44](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/44))","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        * Created a skeleton for developer guide (Pull request [\\#161](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/161))","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"        * Added implementation details of the `sort_task`, `pin_task`, `unpin_task` feature (Pull requests [\\#161](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/161), [\\#192](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/192))","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        * Updated implementation details of `Storage` component (Pull requests [\\#161](https://github.com/AY2021S2-CS2103-W16-1/tp/pull/161))","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"* **Community**:","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/AY2021S2-CS2103T-W15-2/tp/issues/120), [2](https://github.com/AY2021S2-CS2103T-W15-2/tp/issues/121), [3](https://github.com/AY2021S2-CS2103T-W15-2/tp/issues/122), [4](https://github.com/AY2021S2-CS2103T-W15-2/tp/issues/124), [5](https://github.com/AY2021S2-CS2103T-W15-2/tp/issues/125), [6](https://github.com/AY2021S2-CS2103T-W15-2/tp/issues/126), [7](https://github.com/AY2021S2-CS2103T-W15-2/tp/issues/127), [8](https://github.com/AY2021S2-CS2103T-W15-2/tp/issues/128), [9](https://github.com/AY2021S2-CS2103T-W15-2/tp/issues/123))","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"SoulUseless":51}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.storage.JsonSocheduleStorage;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.storage.SocheduleStorage;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing SOChedule ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"        SocheduleStorage socheduleStorage \u003d new JsonSocheduleStorage(userPrefs.getSocheduleFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        storage \u003d new StorageManager(socheduleStorage, userPrefsStorage);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s sochedule is not found,","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"     * or an empty sochedule will be used instead if errors occur when reading {@code storage}\u0027s sochedule.","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"        Optional\u003cReadOnlySochedule\u003e socheduleOptional;","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"        ReadOnlySochedule initialData;","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"            socheduleOptional \u003d storage.readSochedule();","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"            if (!socheduleOptional.isPresent()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Sochedule\");","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"            initialData \u003d socheduleOptional.orElseGet(Sochedule::new);","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Sochedule\");","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"            initialData \u003d new Sochedule();","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Sochedule\");","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"            initialData \u003d new Sochedule();","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"SoulUseless"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Sochedule\");","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"litone01"},"content":"        logger.info(\"Starting SOChedule \" + MainApp.VERSION);","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"litone01"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping SOChedule ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":159,"SoulUseless":19,"ljhgab":1,"litone01":3}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d event(s) listed!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_PAST_EVENT_END_DATE_TIME \u003d \"The event end date and end time provided are past.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_PAST_DEADLINE \u003d \"The deadline provided should not be earlier than today.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d task(s) listed!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_END_DATETIME_BEFORE_START_DATETIME \u003d \"The event end date and time \"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"            + \"is before start date and time!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"The date format is invalid! \"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"            + \"Date should be in the format of YYYY-MM-DD!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"icelenaugust":2,"-":10,"litone01":7,"ljhgab":2}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"    public String toString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"        int oneBasedIndex \u003d zeroBasedIndex + 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"        return \"\" + oneBasedIndex + \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":54,"litone01":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     * Returns the user prefs\u0027 sochedule file path.","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    Path getSocheduleFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"     * Returns the Sochedule taskList.","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"     * @see Model#getSochedule()","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    ReadOnlySochedule getSochedule();","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"icelenaugust":21,"-":36}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.parser.SocheduleParser;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"    private final SocheduleParser socheduleParser;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"        socheduleParser \u003d new SocheduleParser();","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"        Command command \u003d socheduleParser.parseCommand(commandText);","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"            storage.saveSochedule(model.getSochedule());","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"            logger.warning(FILE_OPS_ERROR_MESSAGE + ioe);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"    public Path getSocheduleFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"        return model.getSocheduleFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"    public ReadOnlySochedule getSochedule() {","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"        return model.getSochedule();","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"icelenaugust"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"icelenaugust":14,"-":68,"litone01":6}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":" * Adds an event to the Sochedule.","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    public static final String COMMAND_WORD \u003d \"add_event\";","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to Sochedule. \"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_STARTDATE + \"YYYY-MM-DD \"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"            + PREFIX_STARTTIME + \"HH:mm \"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_ENDDATE + \"YYYY-MM-DD \"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"            + PREFIX_ENDTIME + \"HH:mm \"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY]... \"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_NAME + \"CS2103 meeting \"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_STARTDATE + \"2021-02-27 \"","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_STARTTIME + \"15:00 \"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_ENDDATE + \"2021-02-27 \"","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_ENDTIME + \"17:00 \"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_CATEGORY + \"School \"","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_TAG + \"TeamProject\";","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_ADD_EVENT_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in Sochedule\";","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"    private final Event toAdd;","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"        toAdd \u003d event;","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_EVENT_SUCCESS, toAdd));","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"                || (other instanceof AddEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"                \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd));","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"YuFeng0930":68,"ljhgab":4}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":" * Adds a task to the Sochedule.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    public static final String COMMAND_WORD \u003d \"add_task\";","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the Sochedule. \"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"            + PREFIX_DEADLINE + \"DEADLINE \"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"            + PREFIX_PRIORITY + \"PRIORITY \"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY]... \"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"            + PREFIX_NAME + \"Homework 1 \"","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"            + PREFIX_DEADLINE + \"2021-01-07 \"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"            + PREFIX_PRIORITY + \"8 \"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"            + PREFIX_CATEGORY + \"Homework \"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"            + PREFIX_TAG + \"MA3110\";","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list\";","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"ljhgab":61,"litone01":5}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":" * Clears the Sochedule.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sochedule has been cleared!\";","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"        model.setSochedule(new Sochedule());","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"icelenaugust":6,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ClearCompletedTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" * Clears the Address Book.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"public class ClearCompletedTaskCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    public static final String COMMAND_WORD \u003d \"clear_completed_task\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_CLEAR_COMPLETED_TASK_SUCCESS \u003d \"Completed tasks (if any) have been cleared!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        model.clearCompletedTasks();","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        return new CommandResult(MESSAGE_CLEAR_COMPLETED_TASK_SUCCESS);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"YuFeng0930":23}},{"path":"src/main/java/seedu/address/logic/commands/ClearExpiredEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" * Clears the Address Book.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"public class ClearExpiredEventCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    public static final String COMMAND_WORD \u003d \"clear_expired_event\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_CLEAR_EXPIRED_EVENT_SUCCESS \u003d \"Expired events (if any) have been cleared!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        model.clearExpiredEvents();","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        return new CommandResult(MESSAGE_CLEAR_EXPIRED_EVENT_SUCCESS);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"YuFeng0930":23}},{"path":"src/main/java/seedu/address/logic/commands/ClearExpiredTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" * Clears the Address Book.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"public class ClearExpiredTaskCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    public static final String COMMAND_WORD \u003d \"clear_expired_task\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_CLEAR_EXPIRED_TASK_SUCCESS \u003d \"Expired tasks (if any) have been cleared!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        model.clearExpiredTasks();","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        return new CommandResult(MESSAGE_CLEAR_EXPIRED_TASK_SUCCESS);","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"YuFeng0930":23}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":" * Deletes an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"    public static final String COMMAND_WORD \u003d \"delete_event\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"                || (other instanceof DeleteEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteEventCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"YuFeng0930":14,"-":39}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    public static final String COMMAND_WORD \u003d \"delete_task\";","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"        if (lastShownList \u003d\u003d null || targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"ljhgab":50,"litone01":1}},{"path":"src/main/java/seedu/address/logic/commands/DoneTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":" * Marks the status of an uncompleted task as complete.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"public class DoneTaskCommand extends Command {","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"    public static final String COMMAND_WORD \u003d \"done_task\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"            + \": Marks the task(s) identified by the index number(s) as complete.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"            + \"Parameters: INDEX1 [INDEX2]...\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"            + \"Also, note that: \\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"            + \"1. Index number is the index shown in the displayed task list.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"            + \"2. Index numbers must be non-zero positive integers and must not contain duplicates.\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"            + \"3. Completed tasks cannot be marked as complete again.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_DONE_TASK_SUCCESS \u003d \"Completed %1$d Task(s).\";","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_TASKS_ALREADY_COMPLETE \u003d","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"            \"Tasks with the following given indexes have already been marked as complete: \";","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_TASK_ALREADY_COMPLETE \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"            \"Task with the following given index has already been marked as complete: \";","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_INDEXES_OUTOFRANGE \u003d \"The following given indexes are invalid: \";","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_INDEX_OUTOFRANGE \u003d \"The following given index is invalid: \";","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"    private List\u003cIndex\u003e outOfRangeTargetIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"    private List\u003cIndex\u003e invalidTargetTaskIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"    public DoneTaskCommand(List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"        // verify if all indexes are valid","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"        if (!areTargetIndexesValid(targetIndexes, lastShownList)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"            String errorMessage \u003d getInvalidIndexesErrorMessage();","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"            throw new CommandException(errorMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"        // check if any target task is already completed","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"        if (areTasksAlreadyCompleted(targetIndexes, lastShownList)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"            String errorMessage \u003d getInvalidTasksErrorMessage();","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"            throw new CommandException(errorMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"        updateTargetTasks(targetIndexes, lastShownList, model);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"        updateTaskList(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"litone01"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_TASK_SUCCESS, targetIndexes.size()));","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"litone01"},"content":"    private boolean areTargetIndexesValid(List\u003cIndex\u003e targetIndexes, List\u003cTask\u003e lastShownList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"litone01"},"content":"        outOfRangeTargetIndexes \u003d findOutOfRangeTargetIndexes(targetIndexes, lastShownList);","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"litone01"},"content":"        return outOfRangeTargetIndexes.isEmpty();","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"litone01"},"content":"    private List\u003cIndex\u003e findOutOfRangeTargetIndexes(List\u003cIndex\u003e targetIndexes, List\u003cTask\u003e lastShownList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"litone01"},"content":"        List\u003cIndex\u003e outOfRangeTargetIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"litone01"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"litone01"},"content":"                outOfRangeTargetIndexes.add(targetIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"litone01"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"litone01"},"content":"        return outOfRangeTargetIndexes;","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"    private String getInvalidIndexesErrorMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"        assert !outOfRangeTargetIndexes.isEmpty();","lastModifiedDate":"2021-04-08"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"        if (outOfRangeTargetIndexes.size() \u003d\u003d 1) {","lastModifiedDate":"2021-04-08"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"            return MESSAGE_INDEX_OUTOFRANGE + outOfRangeTargetIndexes.toString() + \".\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"litone01"},"content":"        } else {","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"litone01"},"content":"            return MESSAGE_INDEXES_OUTOFRANGE + outOfRangeTargetIndexes.toString() + \".\\n\";","lastModifiedDate":"2021-04-08"},{"lineNumber":97,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"litone01"},"content":"    private boolean areTasksAlreadyCompleted(List\u003cIndex\u003e targetIndexes, List\u003cTask\u003e lastShownList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"litone01"},"content":"        invalidTargetTaskIndexes \u003d findInvalidTargetTasks(targetIndexes, lastShownList);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"litone01"},"content":"        return invalidTargetTaskIndexes.size() \u003e 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"litone01"},"content":"    private List\u003cIndex\u003e findInvalidTargetTasks(List\u003cIndex\u003e targetIndexes, List\u003cTask\u003e lastShownList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"litone01"},"content":"        List\u003cIndex\u003e invalidTargetTaskIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"litone01"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"litone01"},"content":"            Task taskToComplete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"litone01"},"content":"            if (taskToComplete.isComplete()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"litone01"},"content":"                invalidTargetTaskIndexes.add(targetIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"litone01"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"litone01"},"content":"        return invalidTargetTaskIndexes;","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"litone01"},"content":"    private String getInvalidTasksErrorMessage() {","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"litone01"},"content":"        assert !invalidTargetTaskIndexes.isEmpty();","lastModifiedDate":"2021-04-08"},{"lineNumber":118,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":119,"author":{"gitId":"litone01"},"content":"        if (invalidTargetTaskIndexes.size() \u003e 1) {","lastModifiedDate":"2021-04-08"},{"lineNumber":120,"author":{"gitId":"litone01"},"content":"            return MESSAGE_TASKS_ALREADY_COMPLETE + invalidTargetTaskIndexes.toString() + \".\\n\";","lastModifiedDate":"2021-04-08"},{"lineNumber":121,"author":{"gitId":"litone01"},"content":"        } else {","lastModifiedDate":"2021-04-08"},{"lineNumber":122,"author":{"gitId":"litone01"},"content":"            return MESSAGE_TASK_ALREADY_COMPLETE + invalidTargetTaskIndexes.toString() + \".\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":125,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"litone01"},"content":"     * Replaces the old tasks with the new and completed tasks.","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"litone01"},"content":"    private void updateTargetTasks(List\u003cIndex\u003e targetIndexes, List\u003cTask\u003e lastShownList, Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"litone01"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"litone01"},"content":"            Task taskToComplete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"litone01"},"content":"            Task completedTask \u003d createCompletedTask(taskToComplete);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"litone01"},"content":"            model.setTask(taskToComplete, completedTask);","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"litone01"},"content":"     * Updates the filter of the filtered task list to show all tasks.","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"litone01"},"content":"    private void updateTaskList(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"litone01"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"litone01"},"content":"     * Creates and returns a {@code Task} with the same details of {@code taskToComplete},","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"litone01"},"content":"     * but completionStatus as complete.","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"litone01"},"content":"     * @param taskToComplete task to be marked as complete.","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"litone01"},"content":"     * @return a completed task.","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"litone01"},"content":"    private Task createCompletedTask(Task taskToComplete) {","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"litone01"},"content":"        assert taskToComplete !\u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"litone01"},"content":"        assert !taskToComplete.isComplete();","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"litone01"},"content":"        Task completedTask \u003d taskToComplete.getCopy();","lastModifiedDate":"2021-04-07"},{"lineNumber":156,"author":{"gitId":"litone01"},"content":"        completedTask.markTaskAsDone();","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"litone01"},"content":"        return completedTask;","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":161,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":162,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":163,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof DoneTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 targetIndexes.equals(((DoneTaskCommand) other).targetIndexes)","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 outOfRangeTargetIndexes.equals(((DoneTaskCommand) other).outOfRangeTargetIndexes)","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 invalidTargetTaskIndexes.equals(((DoneTaskCommand) other).invalidTargetTaskIndexes)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":168,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"ljhgab":33,"litone01":136}},{"path":"src/main/java/seedu/address/logic/commands/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_END_DATETIME_BEFORE_START_DATETIME;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PAST_EVENT_END_DATE_TIME;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.EventDateTimePastPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.EventEndDateTimeValidPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":" * Edits the details of an existing and uncompleted event in SOChedule.","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"    public static final String COMMAND_WORD \u003d \"edit_event\";","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the unexpired event identified \"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"            + \"by the index number used in the displayed event list.\"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"            + \"[\" + PREFIX_STARTDATE + \"STARTDATE] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"            + \"[\" + PREFIX_STARTTIME + \"STARTTIME] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"            + \"[\" + PREFIX_ENDDATE + \"ENDDATE] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"            + \"[\" + PREFIX_ENDTIME + \"ENDTIME] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY]... \"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_NAME + \"editedEventName \"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_ENDDATE + \"2023-01-07 \"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"            + PREFIX_TAG + \"MA3110\";","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the SOChedule.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"No field of this event is changed.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_EXPIRED_EVENT \u003d \"An expired event cannot be edited.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"    private final Index index;","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"     * @param index               of the event in the filtered event list to edit.","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"     * @param editEventDescriptor details to edit the event with.","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"        if (!eventToEdit.isEndDateTimeBeforeNow()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"            throw new CommandException(MESSAGE_EXPIRED_EVENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"        if (!eventToEdit.isSameEvent(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"        if (eventToEdit.isSameEvent(editedEvent)) {","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"            throw new CommandException(MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor)","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"            throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"        Name updatedName \u003d editEventDescriptor.getName().orElse(eventToEdit.getName());","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"        Date updatedStartDate \u003d editEventDescriptor.getStartDate().orElse(eventToEdit.getStartDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"        Time updatedStartTime \u003d editEventDescriptor.getStartTime().orElse(eventToEdit.getStartTime());","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"        Date updatedEndDate \u003d editEventDescriptor.getEndDate().orElse(eventToEdit.getEndDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"        Time updatedEndTime \u003d editEventDescriptor.getEndTime().orElse(eventToEdit.getEndTime());","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"        Set\u003cCategory\u003e updatedCategories \u003d editEventDescriptor.getCategories().orElse(eventToEdit.getCategories());","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"        Set\u003cTag\u003e updatedTags \u003d editEventDescriptor.getTags().orElse(eventToEdit.getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"        if (!isEndDateTimeValid(updatedEndDate, updatedEndTime)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"YuFeng0930"},"content":"            throw new CommandException(String.format(MESSAGE_PAST_EVENT_END_DATE_TIME, EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":"        if (!isStartDateTimeBeforeEndDateTime(updatedStartDate, updatedStartTime, updatedEndDate, updatedEndTime)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"            throw new CommandException(String.format(MESSAGE_END_DATETIME_BEFORE_START_DATETIME,","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"                    EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"        return new Event(updatedName, updatedStartDate, updatedStartTime, updatedEndDate,","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"                updatedEndTime, updatedCategories, updatedTags);","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":"     * Returns true if endDate and endTime are not past.","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":"    private static boolean isEndDateTimeValid(Date endDate, Time endTime) {","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"        return new EventDateTimePastPredicate().test(endDate, endTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"YuFeng0930"},"content":"     * Returns true if startDate and startTime is before endDate and EndTime.","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"YuFeng0930"},"content":"     * @param updatedStartDate the startDate given","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"YuFeng0930"},"content":"     * @param updatedStartTime the startTime given","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"YuFeng0930"},"content":"     * @param updatedEndDate the endDate given","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":"     * @param updatedEndTime the endTime given","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"     * @return a boolean value based on the condition","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"YuFeng0930"},"content":"    private static boolean isStartDateTimeBeforeEndDateTime(Date updatedStartDate, Time updatedStartTime,","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"YuFeng0930"},"content":"                                                            Date updatedEndDate, Time updatedEndTime) {","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"YuFeng0930"},"content":"        return new EventEndDateTimeValidPredicate(updatedStartDate, updatedStartTime)","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"YuFeng0930"},"content":"                .test(updatedEndDate, updatedEndTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"YuFeng0930"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"YuFeng0930"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"YuFeng0930"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"YuFeng0930"},"content":"            return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"YuFeng0930"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"YuFeng0930"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"YuFeng0930"},"content":"            return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"YuFeng0930"},"content":"        // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand e \u003d (EditEventCommand) other;","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"YuFeng0930"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"YuFeng0930"},"content":"                \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"YuFeng0930"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"YuFeng0930"},"content":"        private Name name;","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"YuFeng0930"},"content":"        private Date startDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"YuFeng0930"},"content":"        private Time startTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"YuFeng0930"},"content":"        private Date endDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"YuFeng0930"},"content":"        private Time endTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"YuFeng0930"},"content":"        private Set\u003cCategory\u003e categories;","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"YuFeng0930"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"YuFeng0930"},"content":"        public EditEventDescriptor() {","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"YuFeng0930"},"content":"        /**","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"YuFeng0930"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"YuFeng0930"},"content":"         * A defensive copy of {@code tags} and {@code categories} are used internally.","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"YuFeng0930"},"content":"         */","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"YuFeng0930"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"YuFeng0930"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"YuFeng0930"},"content":"            setStartDate(toCopy.startDate);","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"YuFeng0930"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"YuFeng0930"},"content":"            setEndDate(toCopy.endDate);","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"YuFeng0930"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"YuFeng0930"},"content":"            setCategories(toCopy.categories);","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"YuFeng0930"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"YuFeng0930"},"content":"        /**","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"YuFeng0930"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"YuFeng0930"},"content":"         */","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"YuFeng0930"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"YuFeng0930"},"content":"            return CollectionUtil.isAnyNonNull(name, startDate, startTime, endDate, endTime, categories, tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"YuFeng0930"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"YuFeng0930"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"YuFeng0930"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"YuFeng0930"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"YuFeng0930"},"content":"        public void setStartDate(Date startDate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"YuFeng0930"},"content":"            this.startDate \u003d startDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"YuFeng0930"},"content":"        public Optional\u003cDate\u003e getStartDate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"YuFeng0930"},"content":"            return Optional.ofNullable(startDate);","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"YuFeng0930"},"content":"        public void setStartTime(Time startTime) {","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"YuFeng0930"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"YuFeng0930"},"content":"        public Optional\u003cTime\u003e getStartTime() {","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"YuFeng0930"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"YuFeng0930"},"content":"        public void setEndDate(Date endDate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"YuFeng0930"},"content":"            this.endDate \u003d endDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"YuFeng0930"},"content":"        public Optional\u003cDate\u003e getEndDate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"YuFeng0930"},"content":"            return Optional.ofNullable(endDate);","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"YuFeng0930"},"content":"        public void setEndTime(Time endTime) {","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"YuFeng0930"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":244,"author":{"gitId":"YuFeng0930"},"content":"        public Optional\u003cTime\u003e getEndTime() {","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"YuFeng0930"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"YuFeng0930"},"content":"        /**","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"YuFeng0930"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"YuFeng0930"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-24"},{"lineNumber":251,"author":{"gitId":"YuFeng0930"},"content":"         */","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"YuFeng0930"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"YuFeng0930"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"YuFeng0930"},"content":"        /**","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"YuFeng0930"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"YuFeng0930"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-24"},{"lineNumber":259,"author":{"gitId":"YuFeng0930"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-24"},{"lineNumber":260,"author":{"gitId":"YuFeng0930"},"content":"         */","lastModifiedDate":"2021-03-24"},{"lineNumber":261,"author":{"gitId":"YuFeng0930"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-24"},{"lineNumber":262,"author":{"gitId":"YuFeng0930"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-24"},{"lineNumber":263,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":264,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":265,"author":{"gitId":"YuFeng0930"},"content":"        /**","lastModifiedDate":"2021-03-24"},{"lineNumber":266,"author":{"gitId":"YuFeng0930"},"content":"         * Sets {@code categories} to this object\u0027s {@code categories}.","lastModifiedDate":"2021-03-24"},{"lineNumber":267,"author":{"gitId":"YuFeng0930"},"content":"         * A defensive copy of {@code categories} is used internally.","lastModifiedDate":"2021-03-24"},{"lineNumber":268,"author":{"gitId":"YuFeng0930"},"content":"         */","lastModifiedDate":"2021-03-24"},{"lineNumber":269,"author":{"gitId":"YuFeng0930"},"content":"        public void setCategories(Set\u003cCategory\u003e categories) {","lastModifiedDate":"2021-03-24"},{"lineNumber":270,"author":{"gitId":"YuFeng0930"},"content":"            this.categories \u003d (categories !\u003d null) ? new HashSet\u003c\u003e(categories) : null;","lastModifiedDate":"2021-03-24"},{"lineNumber":271,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":272,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":273,"author":{"gitId":"YuFeng0930"},"content":"        /**","lastModifiedDate":"2021-03-24"},{"lineNumber":274,"author":{"gitId":"YuFeng0930"},"content":"         * Returns an unmodifiable category set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-24"},{"lineNumber":275,"author":{"gitId":"YuFeng0930"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-24"},{"lineNumber":276,"author":{"gitId":"YuFeng0930"},"content":"         * Returns {@code Optional#empty()} if {@code categories} is null.","lastModifiedDate":"2021-03-24"},{"lineNumber":277,"author":{"gitId":"YuFeng0930"},"content":"         */","lastModifiedDate":"2021-03-24"},{"lineNumber":278,"author":{"gitId":"YuFeng0930"},"content":"        public Optional\u003cSet\u003cCategory\u003e\u003e getCategories() {","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"YuFeng0930"},"content":"            return (categories !\u003d null) ? Optional.of(Collections.unmodifiableSet(categories)) : Optional.empty();","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":281,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":282,"author":{"gitId":"YuFeng0930"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":283,"author":{"gitId":"YuFeng0930"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":284,"author":{"gitId":"YuFeng0930"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"YuFeng0930"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"YuFeng0930"},"content":"                return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":287,"author":{"gitId":"YuFeng0930"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"YuFeng0930"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"YuFeng0930"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"YuFeng0930"},"content":"                return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":292,"author":{"gitId":"YuFeng0930"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"YuFeng0930"},"content":"            // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"YuFeng0930"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"YuFeng0930"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"YuFeng0930"},"content":"                    \u0026\u0026 getStartDate().equals(e.getStartDate())","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"YuFeng0930"},"content":"                    \u0026\u0026 getStartTime().equals(e.getStartTime())","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"YuFeng0930"},"content":"                    \u0026\u0026 getEndDate().equals(e.getEndDate())","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"YuFeng0930"},"content":"                    \u0026\u0026 getEndTime().equals(e.getEndTime())","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"YuFeng0930"},"content":"                    \u0026\u0026 getCategories().equals(e.getCategories())","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"YuFeng0930"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":304,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"YuFeng0930":307}},{"path":"src/main/java/seedu/address/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PAST_DEADLINE;","lastModifiedDate":"2021-04-07"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.DatePastPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":" * Edits the details of an existing and uncompleted task in SOChedule.","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"    public static final String COMMAND_WORD \u003d \"edit_task\";","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the uncompleted task identified \"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"            + \"by the index number. \\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE] \"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"            + \"[\" + PREFIX_PRIORITY + \"PRIORITY] \"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"            + \"[\" + PREFIX_CATEGORY + \"CATEGORY]... \"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"            + PREFIX_NAME + \"editedTaskName \"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"            + PREFIX_DEADLINE + \"2022-02-07 \"","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"            + PREFIX_PRIORITY + \"8 \"","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"            + PREFIX_CATEGORY + \"Homework \"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"            + PREFIX_TAG + \"MA311 \\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"            + \"Also, note that: \\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"            + \"1. INDEX is the index shown in the displayed task list.\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"            + \"2. INDEX must be a non-zero positive integer.\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"            + \"3. Completed tasks cannot be edited.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the SOChedule.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"No field of this task is changed.\";","lastModifiedDate":"2021-04-06"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_COMPLETED_TASK \u003d \"A completed task cannot be edited.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"    private final Index index;","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"     * @param index of the task in the filtered task list to edit.","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"     * @param editTaskDescriptor details to edit the task with.","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"litone01"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"litone01"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"litone01"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"litone01"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"litone01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"litone01"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"litone01"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"litone01"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"litone01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"litone01"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"        if (taskToEdit.isComplete()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"            throw new CommandException(MESSAGE_COMPLETED_TASK);","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"litone01"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"litone01"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"        if (taskToEdit.isSameTask(editedTask)) {","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"            throw new CommandException(MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"litone01"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"litone01"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"litone01"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"litone01"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"litone01"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"litone01"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor)","lastModifiedDate":"2021-04-07"},{"lineNumber":113,"author":{"gitId":"litone01"},"content":"            throws CommandException {","lastModifiedDate":"2021-04-07"},{"lineNumber":114,"author":{"gitId":"litone01"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"litone01"},"content":"        Name updatedName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"litone01"},"content":"        Date updatedDeadline \u003d editTaskDescriptor.getDeadline().orElse(taskToEdit.getDeadline());","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"litone01"},"content":"        Priority updatedPriority \u003d editTaskDescriptor.getPriority().orElse(taskToEdit.getPriority());","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"litone01"},"content":"        Set\u003cCategory\u003e updatedCategories \u003d editTaskDescriptor.getCategories().orElse(taskToEdit.getCategories());","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"litone01"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"litone01"},"content":"        if (!isUpdatedDeadlineValid(updatedDeadline)) {","lastModifiedDate":"2021-04-07"},{"lineNumber":123,"author":{"gitId":"litone01"},"content":"            throw new CommandException(String.format(MESSAGE_PAST_DEADLINE));","lastModifiedDate":"2021-04-07"},{"lineNumber":124,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":125,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"        Task editedTask \u003d new Task(updatedName, updatedDeadline, updatedPriority, updatedCategories, updatedTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"        if (taskToEdit.isPinned()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"            editedTask.pin();","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"SoulUseless"},"content":"        return editedTask;","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":134,"author":{"gitId":"litone01"},"content":"     * Returns true if updated deadline is today or after today; otherwise, false.","lastModifiedDate":"2021-04-07"},{"lineNumber":135,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-04-07"},{"lineNumber":136,"author":{"gitId":"litone01"},"content":"     * @param updatedDeadline updated deadline, an Date object","lastModifiedDate":"2021-04-07"},{"lineNumber":137,"author":{"gitId":"litone01"},"content":"     * @return true if updated deadline is today or after today; otherwise, false","lastModifiedDate":"2021-04-07"},{"lineNumber":138,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":139,"author":{"gitId":"litone01"},"content":"    private static boolean isUpdatedDeadlineValid(Date updatedDeadline) {","lastModifiedDate":"2021-04-07"},{"lineNumber":140,"author":{"gitId":"litone01"},"content":"        return new DatePastPredicate().test(updatedDeadline);","lastModifiedDate":"2021-04-07"},{"lineNumber":141,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":142,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":143,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"litone01"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"litone01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"litone01"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"litone01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"litone01"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"litone01"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"litone01"},"content":"        // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"litone01"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"litone01"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"litone01"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"litone01"},"content":"        private Name name;","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"litone01"},"content":"        private Date deadline;","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"litone01"},"content":"        private Priority priority;","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"litone01"},"content":"        private CompletionStatus completionStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"litone01"},"content":"        private Set\u003cCategory\u003e categories;","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"litone01"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"litone01"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"litone01"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"litone01"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"litone01"},"content":"         * A defensive copy of {@code tags} and {@code categories} are used internally.","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"litone01"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"litone01"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"litone01"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"litone01"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"litone01"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"litone01"},"content":"            setCompletionStatus(toCopy.completionStatus);","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"litone01"},"content":"            setCategories(toCopy.categories);","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"litone01"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"litone01"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":185,"author":{"gitId":"litone01"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"litone01"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":187,"author":{"gitId":"litone01"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"litone01"},"content":"            return CollectionUtil.isAnyNonNull(name, deadline, priority, completionStatus, categories, tags);","lastModifiedDate":"2021-03-23"},{"lineNumber":189,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"litone01"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"litone01"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":194,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"litone01"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-23"},{"lineNumber":196,"author":{"gitId":"litone01"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-23"},{"lineNumber":197,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"litone01"},"content":"        public void setDeadline(Date deadline) {","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"litone01"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2021-03-23"},{"lineNumber":201,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":202,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":203,"author":{"gitId":"litone01"},"content":"        public Optional\u003cDate\u003e getDeadline() {","lastModifiedDate":"2021-03-23"},{"lineNumber":204,"author":{"gitId":"litone01"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2021-03-23"},{"lineNumber":205,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":206,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"litone01"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"litone01"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"litone01"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"litone01"},"content":"            return Optional.ofNullable(priority);","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"litone01"},"content":"        public void setCompletionStatus(CompletionStatus completionStatus) {","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"litone01"},"content":"            this.completionStatus \u003d completionStatus;","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"litone01"},"content":"        public Optional\u003cCompletionStatus\u003e getCompletionStatus() {","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"litone01"},"content":"            return Optional.ofNullable(completionStatus);","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":223,"author":{"gitId":"litone01"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"litone01"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"litone01"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"litone01"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":227,"author":{"gitId":"litone01"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"litone01"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"litone01"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"litone01"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"litone01"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"litone01"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"litone01"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"litone01"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"litone01"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"litone01"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"litone01"},"content":"         * Sets {@code categories} to this object\u0027s {@code categories}.","lastModifiedDate":"2021-03-23"},{"lineNumber":242,"author":{"gitId":"litone01"},"content":"         * A defensive copy of {@code categories} is used internally.","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"litone01"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":244,"author":{"gitId":"litone01"},"content":"        public void setCategories(Set\u003cCategory\u003e categories) {","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"litone01"},"content":"            this.categories \u003d (categories !\u003d null) ? new HashSet\u003c\u003e(categories) : null;","lastModifiedDate":"2021-03-23"},{"lineNumber":246,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":247,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":248,"author":{"gitId":"litone01"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":249,"author":{"gitId":"litone01"},"content":"         * Returns an unmodifiable category set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-23"},{"lineNumber":250,"author":{"gitId":"litone01"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-23"},{"lineNumber":251,"author":{"gitId":"litone01"},"content":"         * Returns {@code Optional#empty()} if {@code categories} is null.","lastModifiedDate":"2021-03-23"},{"lineNumber":252,"author":{"gitId":"litone01"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":253,"author":{"gitId":"litone01"},"content":"        public Optional\u003cSet\u003cCategory\u003e\u003e getCategories() {","lastModifiedDate":"2021-03-23"},{"lineNumber":254,"author":{"gitId":"litone01"},"content":"            return (categories !\u003d null) ? Optional.of(Collections.unmodifiableSet(categories)) : Optional.empty();","lastModifiedDate":"2021-03-23"},{"lineNumber":255,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":256,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":257,"author":{"gitId":"litone01"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":258,"author":{"gitId":"litone01"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":259,"author":{"gitId":"litone01"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":260,"author":{"gitId":"litone01"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-23"},{"lineNumber":261,"author":{"gitId":"litone01"},"content":"                return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":262,"author":{"gitId":"litone01"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":263,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":264,"author":{"gitId":"litone01"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":265,"author":{"gitId":"litone01"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":266,"author":{"gitId":"litone01"},"content":"                return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":267,"author":{"gitId":"litone01"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":268,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":269,"author":{"gitId":"litone01"},"content":"            // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":270,"author":{"gitId":"litone01"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2021-03-23"},{"lineNumber":271,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":272,"author":{"gitId":"litone01"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-23"},{"lineNumber":273,"author":{"gitId":"litone01"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline())","lastModifiedDate":"2021-03-23"},{"lineNumber":274,"author":{"gitId":"litone01"},"content":"                    \u0026\u0026 getPriority().equals(e.getPriority())","lastModifiedDate":"2021-03-23"},{"lineNumber":275,"author":{"gitId":"litone01"},"content":"                    \u0026\u0026 getCategories().equals(e.getCategories())","lastModifiedDate":"2021-03-23"},{"lineNumber":276,"author":{"gitId":"litone01"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-23"},{"lineNumber":277,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":278,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":279,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"YuFeng0930":5,"litone01":269,"SoulUseless":5}},{"path":"src/main/java/seedu/address/logic/commands/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"public class FindEventCommand extends Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    public static final String COMMAND_WORD \u003d \"find_event\";","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose names contain any of \"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"            + \"Example: \" + COMMAND_WORD + \" keyword\";","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    private final EventNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    public FindEventCommand(EventNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        return new CommandResult(","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof FindEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 predicate.equals(((FindEventCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"ljhgab":38}},{"path":"src/main/java/seedu/address/logic/commands/FindFreeTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"public class FindFreeTimeCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    public static final String COMMAND_WORD \u003d \"free_time\";","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all free time slots on the given date\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2021-01-07\";","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_FIND_FREE_TIME_SUCCESS \u003d \"Found free time slots on %s: \\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_NO_FREE_TIME \u003d \"There is no free time in the day!\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    private final Date date;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    public FindFreeTimeCommand(Date date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cString\u003e freeTimeSlots \u003d model.getFreeTimeSlots(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"        if (freeTimeSlots.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"            return new CommandResult(MESSAGE_NO_FREE_TIME);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"            String timeSlots \u003d \"\";","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"            for (int i \u003d 0; i \u003c freeTimeSlots.size(); i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"                timeSlots \u003d timeSlots + freeTimeSlots.get(i) + \"\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"            return new CommandResult(String.format(MESSAGE_FIND_FREE_TIME_SUCCESS + timeSlots, date.toString()));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"icelenaugust":40}},{"path":"src/main/java/seedu/address/logic/commands/FindScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"import seedu.address.model.event.EventFindSchedulePredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"import seedu.address.model.task.TaskFindSchedulePredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":" * Finds and displays uncompleted tasks with deadline before or on the specified date","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":" * and events with start date before or on the specified date and end date after or on the specified date.","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"public class FindScheduleCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"    public static final String COMMAND_WORD \u003d \"find_schedule\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"            + \": Finds and displays ongoing tasks and events before or on the specified date.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"            + \"Ongoing tasks refer to uncompleted tasks with deadline before or on the specified date.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"            + \"Ongoing events refer to events with start date before or on the specified date \"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"            + \"and end date after or on the specified date.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"            + \"Parameters: DATE (one single valid date in YYYY-MM-DD format)\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2021-03-29\";","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_FIND_SCHEDULE_SUCCESS \u003d \"Displayed the required tasks and events.\\n\";","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"    private final TaskFindSchedulePredicate taskPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"    private final EventFindSchedulePredicate eventPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"     * Creates a FindScheduleCommand to find the desired tasks and events.","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"     * @param taskPredicate a predicate that tests a Task\u0027s deadline is before or on the by date given.","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"     * @param eventPredicate a predicate that tests a Event\u0027s start date is before or on the by date given.","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"    public FindScheduleCommand(TaskFindSchedulePredicate taskPredicate,","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"                               EventFindSchedulePredicate eventPredicate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"        this.taskPredicate \u003d taskPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"        this.eventPredicate \u003d eventPredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"        model.updateFilteredTaskList(taskPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"        model.updateFilteredEventList(eventPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"        return new CommandResult(MESSAGE_FIND_SCHEDULE_SUCCESS","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"                + String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size())","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"                + \"\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"                + String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"        if (!(other instanceof FindScheduleCommand)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"        FindScheduleCommand f \u003d (FindScheduleCommand) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"        return taskPredicate.equals(f.taskPredicate)","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 eventPredicate.equals(f.eventPredicate); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"litone01":70}},{"path":"src/main/java/seedu/address/logic/commands/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    public static final String COMMAND_WORD \u003d \"find_task\";","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose names contain any of \"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"            + \"Example: \" + COMMAND_WORD + \" keyword\";","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    private final TaskNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        return new CommandResult(","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof FindTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"ljhgab":38}},{"path":"src/main/java/seedu/address/logic/commands/ListEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":" * Lists all events in Sochedule to the user.","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"public class ListEventCommand extends Command {","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"    public static final String COMMAND_WORD \u003d \"list_event\";","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all event(s)\";","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_EMPTY \u003d \"There is no event present!\";","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"        return model.isEventListEmpty() ? new CommandResult(MESSAGE_EMPTY) : new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"YuFeng0930":22,"ljhgab":3}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":" * Lists all tasks in Sochedule to the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    public static final String COMMAND_WORD \u003d \"list_task\";","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all task(s)\";","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_EMPTY \u003d \"There is no task present!\";","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"        return model.isTaskListEmpty() ? new CommandResult(MESSAGE_EMPTY) : new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"ljhgab":24}},{"path":"src/main/java/seedu/address/logic/commands/PinTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":" * Pins a task.","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"public class PinTaskCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    public static final String COMMAND_WORD \u003d \"pin_task\";","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"            + \": Pins the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_PIN_TASK_SUCCESS \u003d \"Pinned Task\";","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_TASK_ALREADY_PINNED \u003d \"This task is already pinned.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    public PinTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"     * Creates and returns a {@code Task} with the same details of {@code taskToPin},","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"     * but pinnedStatus as pinned.","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"     * @param taskToPin task to pin.","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"     * @return a pinned task.","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    private static Task createPinnedTask(Task taskToPin) {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        assert taskToPin !\u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        Task pinnedTask \u003d taskToPin.getCopy();","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"        pinnedTask.pin();","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        return pinnedTask;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        // verify if index is valid","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"        Task taskToPin \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"        // verify is task is already pinned","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"        if (taskToPin.isPinned()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_PINNED);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"        Task pinnedTask \u003d createPinnedTask(taskToPin);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"        //replace the old task with the new and pinned task, update","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"        model.setTask(taskToPin, pinnedTask);","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"        model.sortTasksDefault();","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"        model.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"        return new CommandResult(MESSAGE_PIN_TASK_SUCCESS);","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"                || (other instanceof PinTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 targetIndex.equals(((PinTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"SoulUseless":87}},{"path":"src/main/java/seedu/address/logic/commands/SortTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"public class SortTaskCommand extends Command {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    public static final String COMMAND_WORD \u003d \"sort_task\";","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"            + \": Sorts tasks based on given parameter.\\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"            + \"Supported parameters: \\\"name\\\", \\\"deadline\\\", \\\"priority\\\", \\\"completion\\\" \\n\"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"            + \"Example: \" + COMMAND_WORD + \" name\";","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_SORT_TASK_SUCCESS \u003d \"Sorted Tasks\";","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    private final String comparingVar;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    public SortTaskCommand(String comparingVar) {","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"        this.comparingVar \u003d comparingVar;","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        model.sortTasks(comparingVar);","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"        return new CommandResult(MESSAGE_SORT_TASK_SUCCESS);","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"                || (other instanceof SortTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 comparingVar.equals(((SortTaskCommand) other).comparingVar)); // state check","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"SoulUseless":38}},{"path":"src/main/java/seedu/address/logic/commands/SummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"public class SummaryCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    public static final String COMMAND_WORD \u003d \"summary\";","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"            + \": Shows the summary of task of event completion status.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Summary:\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"            + \"Task\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"            + \"%d task(s) completed out of %d task(s).\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"            + \"%d task(s) is/are overdue.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"            + \"%d tasks(s) to be completed before deadline.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"            + \"Event\\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"            + \"%d event(s) happening in the next 7 days\";","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        int numCompletedTask \u003d model.getNumCompletedTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        int numTotalTask \u003d model.getFilteredTaskList().size();","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        int numOverdueTask \u003d model.getNumOverdueTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"        int numIncompleteTask \u003d model.getNumIncompleteTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        int numIncomingEvents \u003d model.getNumIncomingEvents();","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, numCompletedTask,","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"                numTotalTask, numOverdueTask, numIncompleteTask, numIncomingEvents));","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"icelenaugust":35}},{"path":"src/main/java/seedu/address/logic/commands/TodayEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.EventCoversTodayPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"public class TodayEventCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    public static final String COMMAND_WORD \u003d \"today_event\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all events happen today \"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_TODAY_EVENT_SUCCESS \u003d \"Listed events that happen on today\\n\";","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    private final EventCoversTodayPredicate predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    public TodayEventCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"        this.predicate \u003d new EventCoversTodayPredicate();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        return new CommandResult(MESSAGE_TODAY_EVENT_SUCCESS","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"                + String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof TodayEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 predicate.equals(((TodayEventCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"ljhgab":40}},{"path":"src/main/java/seedu/address/logic/commands/TodayTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.TaskDeadlineIsTodayPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"public class TodayTaskCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    public static final String COMMAND_WORD \u003d \"today_task\";","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all tasks whose deadline is today \"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    public static final String MESSAGE_TODAY_TASK_SUCCESS \u003d \"Listed tasks that have deadline on today\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    private final TaskDeadlineIsTodayPredicate predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    public TodayTaskCommand() {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        this.predicate \u003d new TaskDeadlineIsTodayPredicate();","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        return new CommandResult(MESSAGE_TODAY_TASK_SUCCESS","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"                + String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof TodayTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 predicate.equals(((TodayTaskCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"ljhgab":39}},{"path":"src/main/java/seedu/address/logic/commands/UndoneTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":" * Marks the status of a completed task as uncompleted.","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"public class UndoneTaskCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"    public static final String COMMAND_WORD \u003d \"undone_task\";","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"            + \": Marks the task identified by the index number as uncompleted.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"            + \"Also note: \\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"            + \"1. Index number is the index shown in the displayed task list.\\n\"","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"            + \"2. Index must be an integer greater than zero.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_UNDONE_TASK_SUCCESS \u003d \"Undone Task: %1$s\";","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_TASK_ALREADY_UNCOMPLETED \u003d \"This task has already been marked as uncompleted.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"    public UndoneTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"        // verify if index is valid","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"        Task taskToUndone \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"        // verify if task is already uncompleted","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"        if (!taskToUndone.isComplete()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_UNCOMPLETED);","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"        Task uncompletedTask \u003d createUncompletedTask(taskToUndone);","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"        // replace the old task with the new and completed task and update","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"        model.setTask(taskToUndone, uncompletedTask);","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"        return new CommandResult(String.format(MESSAGE_UNDONE_TASK_SUCCESS, taskToUndone));","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"litone01"},"content":"     * Creates and returns a {@code Task} with the same details of {@code taskToUndone},","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"litone01"},"content":"     * but completionStatus as completed.","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"litone01"},"content":"     * @param taskToUndone task to be marked as uncompleted.","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"litone01"},"content":"     * @return an ucompleted task.","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"litone01"},"content":"    private static Task createUncompletedTask(Task taskToUndone) {","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"litone01"},"content":"        assert taskToUndone !\u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"litone01"},"content":"        assert taskToUndone.isComplete();","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"litone01"},"content":"        Task uncompletedTask \u003d copyTask(taskToUndone);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"litone01"},"content":"        uncompletedTask.markTaskAsUndone();","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"litone01"},"content":"        return uncompletedTask;","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"     * Copies the task given and returns a new task with the same details as the given task.","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"     * @param taskToCopy task to be copied, here is the task to be uncompleted.","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"     * @return a copied task.","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"litone01"},"content":"    private static Task copyTask(Task taskToCopy) {","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"litone01"},"content":"        Name taskName \u003d taskToCopy.getName();","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"litone01"},"content":"        Date deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"litone01"},"content":"        Priority priority \u003d taskToCopy.getPriority();","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"litone01"},"content":"        Set\u003cCategory\u003e categories \u003d taskToCopy.getCategories();","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"litone01"},"content":"        Set\u003cTag\u003e tags \u003d taskToCopy.getTags();","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"litone01"},"content":"        Task copiedTask \u003d new Task(taskName, deadline, priority, categories, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"litone01"},"content":"        if (taskToCopy.isPinned()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"litone01"},"content":"            copiedTask.pin();","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"litone01"},"content":"        return copiedTask;","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"litone01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"litone01"},"content":"                || (other instanceof UndoneTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 targetIndex.equals(((UndoneTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"litone01":115}},{"path":"src/main/java/seedu/address/logic/commands/UnpinTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":" * Unpins a task.","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"public class UnpinTaskCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    public static final String COMMAND_WORD \u003d \"unpin_task\";","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"            + \": Unpins the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_UNPIN_TASK_SUCCESS \u003d \"Unpinned Task\";","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_TASK_ALREADY_UNPINNED \u003d \"This task is not pinned to begin with.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    public UnpinTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"        // verify if index is valid","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        Task taskToUnpin \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        // verify is task is not pinned to begin with","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        if (!taskToUnpin.isPinned()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"            throw new CommandException(MESSAGE_TASK_ALREADY_UNPINNED);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"        Task unpinnedTask \u003d taskToUnpin.getCopy();","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        unpinnedTask.unpin();","lastModifiedDate":"2021-04-06"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        //replace the old task with the new and pinned task, update","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        model.setTask(taskToUnpin, unpinnedTask);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        model.sortTasksDefault();","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        model.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"        return new CommandResult(MESSAGE_UNPIN_TASK_SUCCESS);","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"                || (other instanceof UnpinTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 targetIndex.equals(((UnpinTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"SoulUseless":73}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_END_DATETIME_BEFORE_START_DATETIME;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PAST_EVENT_END_DATE_TIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.EventDateTimePastPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.EventEndDateTimeValidPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STARTDATE,","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"                        PREFIX_STARTTIME, PREFIX_ENDDATE, PREFIX_ENDTIME, PREFIX_CATEGORY, PREFIX_TAG);","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STARTDATE, PREFIX_STARTTIME, PREFIX_ENDDATE,","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"                PREFIX_ENDTIME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"        Name name \u003d SocheduleParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"        Date startDate \u003d SocheduleParserUtil.parseDate(argMultimap.getValue(PREFIX_STARTDATE).get());","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"        Time startTime \u003d SocheduleParserUtil.parseTime(argMultimap.getValue(PREFIX_STARTTIME).get());","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"        Date endDate \u003d SocheduleParserUtil.parseDate(argMultimap.getValue(PREFIX_ENDDATE).get());","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"        Time endTime \u003d SocheduleParserUtil.parseTime(argMultimap.getValue(PREFIX_ENDTIME).get());","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"        Set\u003cCategory\u003e categoryList \u003d SocheduleParserUtil.parseCategories(argMultimap.getAllValues(PREFIX_CATEGORY));","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"        Set\u003cTag\u003e tagList \u003d SocheduleParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"        if (!isEndDateTimeValid(endDate, endTime)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"            throw new ParseException(String.format(MESSAGE_PAST_EVENT_END_DATE_TIME, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        if (!isStartDateTimeBeforeEndDateTime(startDate, startTime, endDate, endTime)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"            throw new ParseException(String.format(MESSAGE_END_DATETIME_BEFORE_START_DATETIME,","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"                    AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"        Event event \u003d new Event(name, startDate, startTime, endDate, endTime, categoryList, tagList);","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"     * Returns true if endDate and endTime are not past.","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"    private boolean isEndDateTimeValid(Date endDate, Time endTime) {","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"        return new EventDateTimePastPredicate().test(endDate, endTime);","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"     * Returns true if startDate and startTime is before endDate and EndTime.","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"ljhgab"},"content":"     * @param startDate the startDate given","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"ljhgab"},"content":"     * @param startTime the startTime given","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"ljhgab"},"content":"     * @param endDate   the endDate given","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"ljhgab"},"content":"     * @param endTime   the endTime given","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"     * @return a boolean value based on the condition","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"    private boolean isStartDateTimeBeforeEndDateTime(Date startDate, Time startTime, Date endDate, Time endTime) {","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"        return new EventEndDateTimeValidPredicate(startDate, startTime).test(endDate, endTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"YuFeng0930":78,"ljhgab":21}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PAST_DEADLINE;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.DatePastPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DEADLINE, PREFIX_PRIORITY,","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"                        PREFIX_CATEGORY, PREFIX_TAG);","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DEADLINE, PREFIX_PRIORITY)","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"        Name name \u003d SocheduleParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"        Date deadline \u003d SocheduleParserUtil.parseDate(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"        Priority priority \u003d SocheduleParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get());","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"        Set\u003cCategory\u003e categoryList \u003d SocheduleParserUtil.parseCategories(argMultimap.getAllValues(PREFIX_CATEGORY));","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"        Set\u003cTag\u003e tagList \u003d SocheduleParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"        if (!isDeadlineBeforeNow(deadline)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"            throw new ParseException(String.format(MESSAGE_PAST_DEADLINE, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"        Task task \u003d new Task(name, deadline, priority, categoryList, tagList);","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2021-03-05"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-05"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"     * Returns true if deadline is not past.","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"    private boolean isDeadlineBeforeNow(Date deadline) {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"        return new DatePastPredicate().test(deadline);","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"YuFeng0930":12,"ljhgab":63}},{"path":"src/main/java/seedu/address/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"     * Returns a ClearCommand object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    public ClearCommand parse(String args) {","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"        return new ClearCommand();","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"icelenaugust":12}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"    // Prefix shared by Events and Tasks","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"    // Prefix for Tasks","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"    // Prefix for Events","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"    public static final Prefix PREFIX_STARTDATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"    public static final Prefix PREFIX_STARTTIME \u003d new Prefix(\"st/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"    public static final Prefix PREFIX_ENDDATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"    public static final Prefix PREFIX_ENDTIME \u003d new Prefix(\"et/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":11,"litone01":12}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"        try {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"            Index index \u003d SocheduleParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"YuFeng0930":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"            Index index \u003d SocheduleParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"YuFeng0930":1,"-":20,"ljhgab":8}},{"path":"src/main/java/seedu/address/logic/parser/DoneTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.DoneTaskCommand;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":" * Parses input arguments and creates a new DoneTaskCommand object.","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"public class DoneTaskCommandParser implements Parser\u003cDoneTaskCommand\u003e {","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneTaskCommand","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"     * and returns a DoneTaskCommand object for execution.","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    public DoneTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"        // checks if args are empty","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"        // parses given arguments into indexes","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"        String[] indexes \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        try {","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"            List\u003cIndex\u003e targetIndexes \u003d SocheduleParserUtil.parseIndexes(Arrays.asList(indexes));","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"            return new DoneTaskCommand(targetIndexes);","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"                    String.format(pe.getMessage() + \"%1$s\", DoneTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"ljhgab":24,"litone01":16}},{"path":"src/main/java/seedu/address/logic/parser/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":" * Parses input arguments and creates a new EditEventCommand object","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"public class EditEventCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEventCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"     * and returns an EditEventCommand object for execution.","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STARTDATE, PREFIX_STARTTIME,","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"                        PREFIX_ENDDATE, PREFIX_ENDTIME, PREFIX_CATEGORY, PREFIX_TAG);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"        Index index;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"        try {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"            index \u003d SocheduleParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"            editEventDescriptor.setName(SocheduleParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"        if (argMultimap.getValue(PREFIX_STARTDATE).isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"            editEventDescriptor.setStartDate(SocheduleParserUtil.parseDate(","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"                    argMultimap.getValue(PREFIX_STARTDATE).get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"        if (argMultimap.getValue(PREFIX_STARTTIME).isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"            editEventDescriptor.setStartTime(SocheduleParserUtil.parseTime(","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"                    argMultimap.getValue(PREFIX_STARTTIME).get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"        if (argMultimap.getValue(PREFIX_ENDDATE).isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"            editEventDescriptor.setEndDate(SocheduleParserUtil.parseDate(","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"                    argMultimap.getValue(PREFIX_ENDDATE).get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"        if (argMultimap.getValue(PREFIX_ENDTIME).isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"            editEventDescriptor.setEndTime(SocheduleParserUtil.parseTime(","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"                    argMultimap.getValue(PREFIX_ENDTIME).get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"        SocheduleParserUtil.parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG))","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"                .ifPresent(editEventDescriptor::setTags);","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"        SocheduleParserUtil.parseCategoriesForEdit(argMultimap.getAllValues(PREFIX_CATEGORY))","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"                .ifPresent(editEventDescriptor::setCategories);","lastModifiedDate":"2021-04-07"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"            throw new ParseException(EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"        return new EditEventCommand(index, editEventDescriptor);","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"YuFeng0930":69,"litone01":5}},{"path":"src/main/java/seedu/address/logic/parser/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":" * Parses input arguments and creates a new EditTaskCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DEADLINE, PREFIX_PRIORITY,","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"                        PREFIX_CATEGORY, PREFIX_TAG);","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"        Index index;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"        try {","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"            index \u003d SocheduleParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"            editTaskDescriptor.setName(SocheduleParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"            editTaskDescriptor.setDeadline(SocheduleParserUtil.parseDate(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"            editTaskDescriptor.setPriority(SocheduleParserUtil.parsePriority(","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"                    argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"        SocheduleParserUtil.parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG))","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"                .ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"        SocheduleParserUtil.parseCategoriesForEdit(argMultimap.getAllValues(PREFIX_CATEGORY))","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"                .ifPresent(editTaskDescriptor::setCategories);","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"litone01":62}},{"path":"src/main/java/seedu/address/logic/parser/FindEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":" * Parses input arguments and creates a new FindEventCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"public class FindEventCommandParser implements Parser\u003cFindEventCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"     * Parses the given {@code String} of arguments in the context of the FindEventCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"     * and returns a FindEventCommand object for execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    public FindEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        return new FindEventCommand(new EventNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"icelenaugust":1,"ljhgab":30}},{"path":"src/main/java/seedu/address/logic/parser/FindFreeTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.commands.FindFreeTimeCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":" * Parses input arguments and creates a new FindFreeTimeCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"public class FindFreeTimeCommandParser implements Parser\u003cFindFreeTimeCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"     * Parses the given {@code String} of arguments in the context of the FindFreeTimeCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     * and returns a FindFreeTimeCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    public FindFreeTimeCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFreeTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        String dateStr \u003d trimmedArgs.split(\" \")[0];","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        if (Date.isValidDate(dateStr)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"            Date date \u003d new Date(dateStr);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"            return new FindFreeTimeCommand(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"                    String.format(MESSAGE_INVALID_DATE));","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"icelenaugust":37}},{"path":"src/main/java/seedu/address/logic/parser/FindScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.FindScheduleCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"import seedu.address.model.event.EventFindSchedulePredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"import seedu.address.model.task.TaskFindSchedulePredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":" * Parses input arguments and creates a new FindScheduleCommand object.","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"public class FindScheduleCommandParser {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"     * Parses the given {@code String} of arguments in the context of the FindScheduleCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"     * and returns a FindScheduleCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"    public FindScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"        Date byDate \u003d SocheduleParserUtil.parseDate(trimmedArgs);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"        return new FindScheduleCommand(new TaskFindSchedulePredicate(byDate),","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"                new EventFindSchedulePredicate(byDate));","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"litone01":33}},{"path":"src/main/java/seedu/address/logic/parser/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"public class FindTaskCommandParser implements Parser\u003cFindTaskCommand\u003e {","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTaskCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"     * and returns a FindTaskCommand object for execution.","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        return new FindTaskCommand(new TaskNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"-":21,"ljhgab":8}},{"path":"src/main/java/seedu/address/logic/parser/PinTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.PinTaskCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"public class PinTaskCommandParser implements Parser\u003cPinTaskCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"     * Parses the given {@code String} of arguments in the context of the PinTaskCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"     * and returns a PinTaskCommand object for execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    public PinTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"            Index index \u003d SocheduleParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"            return new PinTaskCommand(index);","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"                    String.format(pe.getMessage()","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"                            + \"%1$s\", PinTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"SoulUseless":23}},{"path":"src/main/java/seedu/address/logic/parser/SocheduleParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.ClearCompletedTaskCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.ClearExpiredEventCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.ClearExpiredTaskCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.DoneTaskCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.commands.FindFreeTimeCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.FindScheduleCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.PinTaskCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.SortTaskCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.commands.SummaryCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.TodayEventCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.TodayTaskCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.UndoneTaskCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.UnpinTaskCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":" * Parses user input.","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":" * Currently not doing any real work, will be improved in v1.2","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"public class SocheduleParser {","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"     * @param userInput full user input string","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"    @SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"litone01"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"litone01"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"litone01"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"litone01"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"litone01"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"litone01"},"content":"        case DoneTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"litone01"},"content":"            return new DoneTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"litone01"},"content":"        case UndoneTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"litone01"},"content":"            return new UndoneTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"ljhgab"},"content":"        case FindEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"ljhgab"},"content":"            return new FindEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"        case FindScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"            return new FindScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"litone01"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"        case EditEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"            return new EditEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"        case SortTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"            return new SortTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"        case PinTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"            return new PinTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"        case UnpinTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"            return new UnpinTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"        case SummaryCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":"            return new SummaryCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"icelenaugust"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"        case ClearExpiredTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"            return new ClearExpiredTaskCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"        case ClearCompletedTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"            return new ClearCompletedTaskCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"        case ClearExpiredEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"            return new ClearExpiredEventCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"ljhgab"},"content":"        case FindFreeTimeCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"icelenaugust"},"content":"            return new FindFreeTimeCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"ljhgab"},"content":"        case TodayTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"ljhgab"},"content":"            return new TodayTaskCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"ljhgab"},"content":"        case TodayEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"ljhgab"},"content":"            return new TodayEventCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"litone01"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"litone01"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"litone01"},"content":"        case ListEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"litone01"},"content":"            return new ListEventCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"litone01"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"litone01"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-03-07"},{"lineNumber":141,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":142,"author":{"gitId":"litone01"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-07"},{"lineNumber":143,"author":{"gitId":"litone01"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-03-07"},{"lineNumber":144,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":145,"author":{"gitId":"litone01"},"content":"        default:","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"litone01"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-07"},{"lineNumber":147,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":148,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":149,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":150,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"YuFeng0930":16,"icelenaugust":11,"litone01":93,"ljhgab":18,"SoulUseless":12}},{"path":"src/main/java/seedu/address/logic/parser/SocheduleParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"import java.util.Optional;","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.TaskComparator;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"public class SocheduleParserUtil {","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not an integer greater than zero.\\n\";","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_INVALID_INDEXES \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"            \"Some of the given index(es) are not integers greater than zero.\\n\";","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_DUPLICATE_INDEXES \u003d \"Some of the given index(es) contain duplicates.\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"     * trimmed.","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"        requireNonNull(oneBasedIndex);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"     * Parses a list of {@code oneBasedIndex} into an list of {@code Index} and returns the parsed list of Index.","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if any of the specified indexes is invalid or there is any duplicate index.","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"    public static List\u003cIndex\u003e parseIndexes(List\u003cString\u003e oneBasedIndexes) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"        requireNonNull(oneBasedIndexes);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"        List\u003cIndex\u003e parsedIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"        for (String oneBasedIndex : oneBasedIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"            try {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"                parsedIndexes.add(parseIndex(oneBasedIndex));","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEXES);","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"        if (areIndexesDuplicate(parsedIndexes)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"            throw new ParseException(MESSAGE_DUPLICATE_INDEXES);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"        return parsedIndexes;","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"litone01"},"content":"    private static boolean areIndexesDuplicate(List\u003cIndex\u003e parsedIndexes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"litone01"},"content":"        HashSet\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e(parsedIndexes);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"litone01"},"content":"        return indexSet.size() !\u003d parsedIndexes.size();","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"litone01"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"litone01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"litone01"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"litone01"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"litone01"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"litone01"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"litone01"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"litone01"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":99,"author":{"gitId":"litone01"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"litone01"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"litone01"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"litone01"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"litone01"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"litone01"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"litone01"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"litone01"},"content":"        requireNonNull(tags);","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"litone01"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"litone01"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"litone01"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"litone01"},"content":"        return tagSet;","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":120,"author":{"gitId":"litone01"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-04-07"},{"lineNumber":121,"author":{"gitId":"litone01"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-04-07"},{"lineNumber":122,"author":{"gitId":"litone01"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-04-07"},{"lineNumber":123,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":124,"author":{"gitId":"litone01"},"content":"    public static Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-04-07"},{"lineNumber":125,"author":{"gitId":"litone01"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-04-07"},{"lineNumber":126,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":127,"author":{"gitId":"litone01"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":128,"author":{"gitId":"litone01"},"content":"            return Optional.empty();","lastModifiedDate":"2021-04-07"},{"lineNumber":129,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":130,"author":{"gitId":"litone01"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-04-07"},{"lineNumber":131,"author":{"gitId":"litone01"},"content":"        return Optional.of(parseTags(tagSet));","lastModifiedDate":"2021-04-07"},{"lineNumber":132,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":133,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":134,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":135,"author":{"gitId":"litone01"},"content":"     * Parses {@code Collection\u003cString\u003e categories} into a {@code Set\u003cCategory\u003e} if {@code categories} is non-empty.","lastModifiedDate":"2021-04-07"},{"lineNumber":136,"author":{"gitId":"litone01"},"content":"     * If {@code categories} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-04-07"},{"lineNumber":137,"author":{"gitId":"litone01"},"content":"     * {@code Set\u003cCategory\u003e} containing zero categories.","lastModifiedDate":"2021-04-07"},{"lineNumber":138,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":139,"author":{"gitId":"litone01"},"content":"    public static Optional\u003cSet\u003cCategory\u003e\u003e parseCategoriesForEdit(Collection\u003cString\u003e categories) throws ParseException {","lastModifiedDate":"2021-04-07"},{"lineNumber":140,"author":{"gitId":"litone01"},"content":"        assert categories !\u003d null;","lastModifiedDate":"2021-04-07"},{"lineNumber":141,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":142,"author":{"gitId":"litone01"},"content":"        if (categories.isEmpty()) {","lastModifiedDate":"2021-04-07"},{"lineNumber":143,"author":{"gitId":"litone01"},"content":"            return Optional.empty();","lastModifiedDate":"2021-04-07"},{"lineNumber":144,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-04-07"},{"lineNumber":145,"author":{"gitId":"litone01"},"content":"        Collection\u003cString\u003e categorySet \u003d categories.size() \u003d\u003d 1 \u0026\u0026 categories.contains(\"\")","lastModifiedDate":"2021-04-07"},{"lineNumber":146,"author":{"gitId":"litone01"},"content":"                ? Collections.emptySet() : categories;","lastModifiedDate":"2021-04-07"},{"lineNumber":147,"author":{"gitId":"litone01"},"content":"        return Optional.of(parseCategories(categorySet));","lastModifiedDate":"2021-04-07"},{"lineNumber":148,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":149,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":150,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":151,"author":{"gitId":"litone01"},"content":"     * Parses a {@code String date} into a {@code date}.","lastModifiedDate":"2021-03-07"},{"lineNumber":152,"author":{"gitId":"litone01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-07"},{"lineNumber":153,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":154,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":155,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"litone01"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"litone01"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"litone01"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"YuFeng0930"},"content":"        if (!Date.isValidDateFormat(trimmedDate)) {","lastModifiedDate":"2021-04-06"},{"lineNumber":160,"author":{"gitId":"YuFeng0930"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":161,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":162,"author":{"gitId":"litone01"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"litone01"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":164,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"litone01"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2021-03-07"},{"lineNumber":166,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":167,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":168,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":169,"author":{"gitId":"litone01"},"content":"     * Parses a {@code String time} into a {@code time}.","lastModifiedDate":"2021-03-07"},{"lineNumber":170,"author":{"gitId":"litone01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-07"},{"lineNumber":171,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":172,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":173,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":174,"author":{"gitId":"litone01"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":175,"author":{"gitId":"litone01"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-03-07"},{"lineNumber":176,"author":{"gitId":"litone01"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":177,"author":{"gitId":"litone01"},"content":"        if (!Time.isValidTime(trimmedTime)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":178,"author":{"gitId":"litone01"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":179,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":180,"author":{"gitId":"litone01"},"content":"        return new Time(trimmedTime);","lastModifiedDate":"2021-03-07"},{"lineNumber":181,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":182,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":183,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":184,"author":{"gitId":"litone01"},"content":"     * Parses a {@code String priority} into a {@code priority}.","lastModifiedDate":"2021-03-07"},{"lineNumber":185,"author":{"gitId":"litone01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-07"},{"lineNumber":186,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":187,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":188,"author":{"gitId":"litone01"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":189,"author":{"gitId":"litone01"},"content":"        requireNonNull(priority);","lastModifiedDate":"2021-03-07"},{"lineNumber":190,"author":{"gitId":"litone01"},"content":"        String trimmedPriority \u003d priority.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":191,"author":{"gitId":"litone01"},"content":"        if (!Priority.isValidPriority(trimmedPriority)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"litone01"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-07"},{"lineNumber":193,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":194,"author":{"gitId":"litone01"},"content":"        return new Priority(trimmedPriority);","lastModifiedDate":"2021-03-07"},{"lineNumber":195,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":196,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":197,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":198,"author":{"gitId":"litone01"},"content":"     * Parses a {@code String category} into a {@code category}.","lastModifiedDate":"2021-03-07"},{"lineNumber":199,"author":{"gitId":"litone01"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-07"},{"lineNumber":200,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-07"},{"lineNumber":201,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the given {@code category} is invalid.","lastModifiedDate":"2021-03-07"},{"lineNumber":202,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":203,"author":{"gitId":"litone01"},"content":"    public static Category parseCategory(String category) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"litone01"},"content":"        requireNonNull(category);","lastModifiedDate":"2021-03-07"},{"lineNumber":205,"author":{"gitId":"litone01"},"content":"        String trimmedCategory \u003d category.trim();","lastModifiedDate":"2021-03-07"},{"lineNumber":206,"author":{"gitId":"litone01"},"content":"        if (!Category.isValidCategoryName(trimmedCategory)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"litone01"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"litone01"},"content":"        return new Category(trimmedCategory);","lastModifiedDate":"2021-03-07"},{"lineNumber":210,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":211,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":212,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":213,"author":{"gitId":"litone01"},"content":"     * Parses {@code Collection\u003cString\u003e categories} into a {@code Set\u003cCategory\u003e}.","lastModifiedDate":"2021-03-07"},{"lineNumber":214,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":215,"author":{"gitId":"litone01"},"content":"    public static Set\u003cCategory\u003e parseCategories(Collection\u003cString\u003e categories) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":216,"author":{"gitId":"litone01"},"content":"        requireNonNull(categories);","lastModifiedDate":"2021-03-07"},{"lineNumber":217,"author":{"gitId":"litone01"},"content":"        final Set\u003cCategory\u003e categorySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":218,"author":{"gitId":"litone01"},"content":"        for (String categoryName : categories) {","lastModifiedDate":"2021-03-07"},{"lineNumber":219,"author":{"gitId":"litone01"},"content":"            categorySet.add(parseCategory(categoryName));","lastModifiedDate":"2021-03-07"},{"lineNumber":220,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-07"},{"lineNumber":221,"author":{"gitId":"litone01"},"content":"        return categorySet;","lastModifiedDate":"2021-03-07"},{"lineNumber":222,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":223,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":224,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":225,"author":{"gitId":"SoulUseless"},"content":"     * Parses {@code String comparingVar} into a {@code String comparingVar}.","lastModifiedDate":"2021-03-21"},{"lineNumber":226,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":227,"author":{"gitId":"SoulUseless"},"content":"    public static String parseTaskComparingVar(String comparingVar) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":228,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(comparingVar);","lastModifiedDate":"2021-03-21"},{"lineNumber":229,"author":{"gitId":"SoulUseless"},"content":"        String trimmedVar \u003d comparingVar.trim();","lastModifiedDate":"2021-03-21"},{"lineNumber":230,"author":{"gitId":"SoulUseless"},"content":"        if (!TaskComparator.isValidComparingVar(trimmedVar)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":231,"author":{"gitId":"SoulUseless"},"content":"            throw new ParseException(TaskComparator.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":232,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":233,"author":{"gitId":"SoulUseless"},"content":"        return trimmedVar;","lastModifiedDate":"2021-03-21"},{"lineNumber":234,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":235,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"YuFeng0930":3,"litone01":218,"SoulUseless":14}},{"path":"src/main/java/seedu/address/logic/parser/SortTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.SortTaskCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"public class SortTaskCommandParser implements Parser\u003cSortTaskCommand\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"     * Parses the given {@code String} of arguments in the context of the SortTaskCommand","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"     * and returns a SortTaskCommand object for execution.","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    public SortTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"            String comparingVar \u003d SocheduleParserUtil.parseTaskComparingVar(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"            return new SortTaskCommand(comparingVar);","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"SoulUseless":23}},{"path":"src/main/java/seedu/address/logic/parser/SummaryCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.commands.SummaryCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"public class SummaryCommandParser implements Parser\u003cSummaryCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"     * Returns a SummaryCommand object for execution.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    public SummaryCommand parse(String args) {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"        return new SummaryCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"icelenaugust":12}},{"path":"src/main/java/seedu/address/logic/parser/UndoneTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.commands.UndoneTaskCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":" * Parses input arguments and creates a new UndoneTaskCommand object.","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"public class UndoneTaskCommandParser {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneTaskCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"     * and returns a DoneTaskCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"    public UndoneTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"            Index index \u003d SocheduleParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"            return new UndoneTaskCommand(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"                    String.format(pe.getMessage() + \"%1$s\", UndoneTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"litone01":25}},{"path":"src/main/java/seedu/address/logic/parser/UnpinTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.UnpinTaskCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"public class UnpinTaskCommandParser implements Parser\u003cUnpinTaskCommand\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"     * Parses the given {@code String} of arguments in the context of the UnpinTaskCommand","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"     * and returns a UnpinTaskCommand object for execution.","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    public UnpinTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"            Index index \u003d SocheduleParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"            return new UnpinTaskCommand(index);","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"                    String.format(pe.getMessage()","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"                            + \"%1$s\", UnpinTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"SoulUseless":23}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SOChedule \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"     * Replaces Sochedule data with the data in {@code sochedule}.","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    void setSochedule(ReadOnlySochedule sochedule);","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    /** Returns the Sochedule */","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"    ReadOnlySochedule getSochedule();","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"     * Returns the user prefs\u0027 Sochedule file path.","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"    Path getSocheduleFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"     * Sets the user prefs\u0027 Sochedule file path.","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"    void setSocheduleFilePath(Path socheduleFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d task \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"     * Returns true if the task list is currently empty.","lastModifiedDate":"2021-04-06"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"    boolean isTaskListEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"     * Deletes the given task.","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"     * The task must exist in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"     * Adds the given task.","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"icelenaugust"},"content":"     * {@code task} must not already exist in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"     * Complete the given task.","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"     * {@code task} must not already exist in the Sochedule.","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"    void doneTask(Task task);","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"     * Pins the given task.","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"     * {@code task} must not already exist in the Sochedule.","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"    void pinTask(Task task);","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"     * Unpins the given task.","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"     * {@code task} must not already exist in the Sochedule.","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"    void unpinTask(Task task);","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":"     * {@code target} must exist in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"icelenaugust"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"icelenaugust"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"     * Sorts the contents of this list given {@code comparingVar}.","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"     * {@code comparingVar} must be a valid parameter.","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"     * @param comparingVar The value to be used for sorting.","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"    void sortTasks(String comparingVar);","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"     * Sorts the contents of this list using current {@code comparingVar}.","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"    void sortTasksDefault();","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of completed tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"icelenaugust"},"content":"    int getNumCompletedTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of overdue tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"icelenaugust"},"content":"    int getNumOverdueTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of incompleted tasks before deadline.","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"icelenaugust"},"content":"    int getNumIncompleteTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"YuFeng0930"},"content":"     * Clear expired tasks (deadline past).","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"YuFeng0930"},"content":"    void clearExpiredTasks();","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"     * Clear completed tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"YuFeng0930"},"content":"    void clearCompletedTasks();","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"icelenaugust"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"icelenaugust"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":156,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":158,"author":{"gitId":"icelenaugust"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-02"},{"lineNumber":159,"author":{"gitId":"icelenaugust"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":161,"author":{"gitId":"icelenaugust"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":163,"author":{"gitId":"icelenaugust"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d event \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":166,"author":{"gitId":"icelenaugust"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":168,"author":{"gitId":"icelenaugust"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2021-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":171,"author":{"gitId":"ljhgab"},"content":"     * Returns true if the event list is empty.","lastModifiedDate":"2021-04-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":173,"author":{"gitId":"ljhgab"},"content":"    boolean isEventListEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":175,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":176,"author":{"gitId":"icelenaugust"},"content":"     * Deletes the given event.","lastModifiedDate":"2021-03-02"},{"lineNumber":177,"author":{"gitId":"icelenaugust"},"content":"     * The event must exist in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":178,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":179,"author":{"gitId":"icelenaugust"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2021-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":182,"author":{"gitId":"icelenaugust"},"content":"     * Adds the given event.","lastModifiedDate":"2021-03-02"},{"lineNumber":183,"author":{"gitId":"icelenaugust"},"content":"     * {@code event} must not already exist in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":185,"author":{"gitId":"icelenaugust"},"content":"    void addEvent(Event event);","lastModifiedDate":"2021-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":188,"author":{"gitId":"icelenaugust"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2021-03-02"},{"lineNumber":189,"author":{"gitId":"icelenaugust"},"content":"     * {@code target} must exist in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":190,"author":{"gitId":"icelenaugust"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":192,"author":{"gitId":"icelenaugust"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2021-03-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"icelenaugust"},"content":"     * Returns number of events happening in the next 7 days.","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"icelenaugust"},"content":"    int getNumIncomingEvents();","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"icelenaugust"},"content":"     * Returns a list of free time slots.","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"icelenaugust"},"content":"    ArrayList\u003cString\u003e getFreeTimeSlots(Date date);","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"YuFeng0930"},"content":"     * Clear expired events (end date time past).","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"YuFeng0930"},"content":"    void clearExpiredEvents();","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"icelenaugust"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2021-03-02"},{"lineNumber":210,"author":{"gitId":"icelenaugust"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-03-02"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":213,"author":{"gitId":"icelenaugust"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":216,"author":{"gitId":"icelenaugust"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":217,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"YuFeng0930":16,"icelenaugust":103,"-":61,"ljhgab":7,"litone01":6,"SoulUseless":25}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":" * Represents the in-memory model of the Sochedule data.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    private final Sochedule sochedule;","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-03-05"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2021-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"     * Initializes a ModelManager with the given Sochedule and userPrefs.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    public ModelManager(ReadOnlySochedule sochedule, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(sochedule, userPrefs);","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        logger.fine(\"Initializing with SOChedule: \" + sochedule + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        this.sochedule \u003d new Sochedule(sochedule);","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.sochedule.getTaskList());","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.sochedule.getEventList());","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        this(new Sochedule(), new UserPrefs());","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-03-05"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"            return true;","lastModifiedDate":"2021-03-05"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"            return false;","lastModifiedDate":"2021-03-05"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-05"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        // state check","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        // null check is temporary during transition to new data","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"        return (sochedule \u003d\u003d null || sochedule.equals(other.sochedule))","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"                \u0026\u0026 (userPrefs.equals(other.userPrefs))","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 (filteredTasks \u003d\u003d null || filteredTasks.equals(other.filteredTasks))","lastModifiedDate":"2021-03-05"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 (filteredEvents \u003d\u003d null || filteredEvents.equals(other.filteredEvents));","lastModifiedDate":"2021-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"icelenaugust"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SOChedule \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"icelenaugust"},"content":"    public void setSochedule(ReadOnlySochedule sochedule) {","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"icelenaugust"},"content":"        this.sochedule.resetTaskData(sochedule);","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"        this.sochedule.resetEventData(sochedule);","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"    public ReadOnlySochedule getSochedule() {","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"        return sochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"    public Path getSocheduleFilePath() {","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"        return userPrefs.getSocheduleFilePath();","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"    public void setSocheduleFilePath(Path socheduleFilePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"icelenaugust"},"content":"        requireAllNonNull(socheduleFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"icelenaugust"},"content":"        userPrefs.setSocheduleFilePath(socheduleFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":117,"author":{"gitId":"icelenaugust"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d task \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"icelenaugust"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(task);","lastModifiedDate":"2021-03-05"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"        return sochedule.hasTask(task);","lastModifiedDate":"2021-03-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":126,"author":{"gitId":"ljhgab"},"content":"    public boolean isTaskListEmpty() {","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"ljhgab"},"content":"        return sochedule.isTaskListEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"icelenaugust"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"        sochedule.removeTask(target);","lastModifiedDate":"2021-03-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"icelenaugust"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"SoulUseless"},"content":"        sochedule.addTask(task);","lastModifiedDate":"2021-03-05"},{"lineNumber":138,"author":{"gitId":"SoulUseless"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"icelenaugust"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-05"},{"lineNumber":144,"author":{"gitId":"SoulUseless"},"content":"        sochedule.setTask(target, editedTask);","lastModifiedDate":"2021-03-05"},{"lineNumber":145,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"litone01"},"content":"    public void doneTask(Task task) {","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"litone01"},"content":"        requireAllNonNull(task);","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"litone01"},"content":"        sochedule.doneTask(task);","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"SoulUseless"},"content":"    public void pinTask(Task task) {","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(task);","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"SoulUseless"},"content":"        sochedule.pinTask(task);","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"SoulUseless"},"content":"    public void unpinTask(Task task) {","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(task);","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"SoulUseless"},"content":"        sochedule.unpinTask(task);","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":166,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasks(String comparingVar) {","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(comparingVar);","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"SoulUseless"},"content":"        sochedule.sortTasks(comparingVar);","lastModifiedDate":"2021-03-21"},{"lineNumber":169,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":170,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":171,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasksDefault() {","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"SoulUseless"},"content":"        sochedule.sortTasksDefault();","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"YuFeng0930"},"content":"    public void clearExpiredTasks() {","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"YuFeng0930"},"content":"        sochedule.clearExpiredTasks();","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"YuFeng0930"},"content":"    public void clearCompletedTasks() {","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"YuFeng0930"},"content":"        sochedule.clearCompletedTasks();","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of completed tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"icelenaugust"},"content":"    public int getNumCompletedTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"icelenaugust"},"content":"        return sochedule.getNumCompletedTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of overdue tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"icelenaugust"},"content":"    public int getNumOverdueTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"icelenaugust"},"content":"        return sochedule.getNumOverdueTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of incompleted tasks before deadline.","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"icelenaugust"},"content":"    public int getNumIncompleteTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"icelenaugust"},"content":"        return sochedule.getNumIncompleteTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":209,"author":{"gitId":"SoulUseless"},"content":"     * Returns an unmodifiable view of the list of {@code Task}","lastModifiedDate":"2021-03-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":212,"author":{"gitId":"icelenaugust"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":213,"author":{"gitId":"SoulUseless"},"content":"        return filteredTasks;","lastModifiedDate":"2021-03-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":217,"author":{"gitId":"icelenaugust"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-02"},{"lineNumber":218,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(predicate);","lastModifiedDate":"2021-03-05"},{"lineNumber":219,"author":{"gitId":"SoulUseless"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-03-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":222,"author":{"gitId":"icelenaugust"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d event \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":223,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":225,"author":{"gitId":"icelenaugust"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-03-02"},{"lineNumber":226,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(event);","lastModifiedDate":"2021-03-05"},{"lineNumber":227,"author":{"gitId":"SoulUseless"},"content":"        return sochedule.hasEvent(event);","lastModifiedDate":"2021-03-05"},{"lineNumber":228,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":230,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-06"},{"lineNumber":231,"author":{"gitId":"ljhgab"},"content":"    public boolean isEventListEmpty() {","lastModifiedDate":"2021-04-06"},{"lineNumber":232,"author":{"gitId":"ljhgab"},"content":"        return sochedule.isEventListEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":233,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":235,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":236,"author":{"gitId":"icelenaugust"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2021-03-02"},{"lineNumber":237,"author":{"gitId":"SoulUseless"},"content":"        sochedule.removeEvent(target);","lastModifiedDate":"2021-03-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":240,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":241,"author":{"gitId":"icelenaugust"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-03-02"},{"lineNumber":242,"author":{"gitId":"SoulUseless"},"content":"        sochedule.addEvent(event);","lastModifiedDate":"2021-03-05"},{"lineNumber":243,"author":{"gitId":"SoulUseless"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-03-05"},{"lineNumber":244,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":245,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":246,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":247,"author":{"gitId":"icelenaugust"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-03-02"},{"lineNumber":248,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-03-05"},{"lineNumber":249,"author":{"gitId":"SoulUseless"},"content":"        sochedule.setEvent(target, editedEvent);","lastModifiedDate":"2021-03-05"},{"lineNumber":250,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":251,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":252,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"icelenaugust"},"content":"    public int getNumIncomingEvents() {","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"icelenaugust"},"content":"        return sochedule.getNumIncomingEvents();","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"YuFeng0930"},"content":"    public void clearExpiredEvents() {","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"YuFeng0930"},"content":"        sochedule.clearExpiredEvents();","lastModifiedDate":"2021-03-24"},{"lineNumber":259,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":260,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":261,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"icelenaugust"},"content":"     * Returns a list of free time slots.","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":265,"author":{"gitId":"icelenaugust"},"content":"    public ArrayList\u003cString\u003e getFreeTimeSlots(Date date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":266,"author":{"gitId":"icelenaugust"},"content":"        return sochedule.getFreeTimeSlots(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":267,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":269,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":270,"author":{"gitId":"SoulUseless"},"content":"     * Returns an unmodifiable view of the list of {@code Event}","lastModifiedDate":"2021-03-05"},{"lineNumber":271,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":272,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":273,"author":{"gitId":"icelenaugust"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":274,"author":{"gitId":"SoulUseless"},"content":"        return filteredEvents;","lastModifiedDate":"2021-03-05"},{"lineNumber":275,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":276,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":277,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":278,"author":{"gitId":"icelenaugust"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-03-02"},{"lineNumber":279,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(predicate);","lastModifiedDate":"2021-03-05"},{"lineNumber":280,"author":{"gitId":"SoulUseless"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2021-03-05"},{"lineNumber":281,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YuFeng0930":17,"icelenaugust":80,"-":97,"SoulUseless":75,"ljhgab":7,"litone01":6}},{"path":"src/main/java/seedu/address/model/ReadOnlySochedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":" * Unmodifiable view of Sochedule","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"public interface ReadOnlySochedule {","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"     * Returns an unmodifiable view of the Tasks list.","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"     * Returns an unmodifiable view of the Events list.","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"SoulUseless":23}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    Path getSocheduleFilePath();","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"icelenaugust":2,"-":15}},{"path":"src/main/java/seedu/address/model/Sochedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"public class Sochedule implements ReadOnlySochedule {","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    /*","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    public Sochedule() {}","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"     * Creates an Sochedule using the Tasks and Events in the {@code toBeCopied}","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"    public Sochedule(ReadOnlySochedule toBeCopied) {","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"        this();","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"     * Replaces the contents of the events list with {@code events}.","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"     * Resets the existing data of this {@code Sochedule} with {@code newData}.","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"    public void resetData(ReadOnlySochedule newData) {","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"     * Resets the existing task data of this {@code Sochedule} with {@code newData}.","lastModifiedDate":"2021-03-05"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"    public void resetTaskData(ReadOnlySochedule newData) {","lastModifiedDate":"2021-03-05"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-05"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-03-05"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"     * Resets the existing event data of this {@code Sochedule} with {@code newData}.","lastModifiedDate":"2021-03-05"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"    public void resetEventData(ReadOnlySochedule newData) {","lastModifiedDate":"2021-03-05"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-03-05"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"    //// task-level operations","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if a task with the same identity as {@code task} exists in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"     * Returns true if task list is empty.","lastModifiedDate":"2021-04-06"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"    public boolean isTaskListEmpty() {","lastModifiedDate":"2021-04-06"},{"lineNumber":99,"author":{"gitId":"ljhgab"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":100,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"     * Adds a task to Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"     * The task must not already exist in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"        tasks.add(t);","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"     * {@code target} must exist in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing Task in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"     * Removes {@code key} from {@code Sochedule}.","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"     * {@code key} must exist in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"        tasks.remove(key);","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"litone01"},"content":"     * Completes {@code key} from {@code Sochedule}.","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"litone01"},"content":"     * {@code task} must exist in Sochedule.","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"litone01"},"content":"    public void doneTask(Task task) {","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"litone01"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"SoulUseless"},"content":"     * Pins {@code key} from {@code Sochedule}.","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"SoulUseless"},"content":"     * {@code task} must exist in Sochedule.","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"SoulUseless"},"content":"    public void pinTask(Task task) {","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"SoulUseless"},"content":"        task.pin();","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"SoulUseless"},"content":"     * Unpins {@code key} from {@code Sochedule}.","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"SoulUseless"},"content":"     * {@code task} must exist in Sochedule.","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"SoulUseless"},"content":"    public void unpinTask(Task task) {","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"SoulUseless"},"content":"        task.unpin();","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":154,"author":{"gitId":"SoulUseless"},"content":"     * Sorts the contents of this list given {@code comparingVar}.","lastModifiedDate":"2021-03-21"},{"lineNumber":155,"author":{"gitId":"SoulUseless"},"content":"     * {@code comparingVar} must be a valid parameter.","lastModifiedDate":"2021-03-21"},{"lineNumber":156,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":157,"author":{"gitId":"SoulUseless"},"content":"     * @param comparingVar The value to be used for sorting.","lastModifiedDate":"2021-03-21"},{"lineNumber":158,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":159,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasks(String comparingVar) {","lastModifiedDate":"2021-03-21"},{"lineNumber":160,"author":{"gitId":"SoulUseless"},"content":"        assert comparingVar !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"SoulUseless"},"content":"        tasks.sort(comparingVar);","lastModifiedDate":"2021-03-21"},{"lineNumber":162,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":163,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"SoulUseless"},"content":"     * Sorts the contents of this list using current {@code comparingVar}.","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasksDefault() {","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"SoulUseless"},"content":"        tasks.sortDefault();","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of completed tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"icelenaugust"},"content":"    public int getNumCompletedTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"icelenaugust"},"content":"        return tasks.getNumCompletedTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of overdue tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"icelenaugust"},"content":"    public int getNumOverdueTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"icelenaugust"},"content":"        return tasks.getNumOverdueTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of incompleted tasks before deadline.","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"icelenaugust"},"content":"    public int getNumIncompleteTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"icelenaugust"},"content":"        return tasks.getNumIncompleteTask();","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"YuFeng0930"},"content":"     * Clears expired tasks (deadline past).","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"YuFeng0930"},"content":"    public void clearExpiredTasks() {","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"YuFeng0930"},"content":"        tasks.clearExpired();","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"YuFeng0930"},"content":"     * Clears completed tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"YuFeng0930"},"content":"    public void clearCompletedTasks() {","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"YuFeng0930"},"content":"        tasks.clearCompleted();","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"SoulUseless"},"content":"    //// event-level operations","lastModifiedDate":"2021-03-02"},{"lineNumber":208,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":209,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":210,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if a event with the same identity as {@code event} exists in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":211,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":212,"author":{"gitId":"SoulUseless"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-03-02"},{"lineNumber":213,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-02"},{"lineNumber":214,"author":{"gitId":"SoulUseless"},"content":"        return events.contains(event);","lastModifiedDate":"2021-03-02"},{"lineNumber":215,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":216,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":217,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":218,"author":{"gitId":"ljhgab"},"content":"     * Returns true if the event list is empty.","lastModifiedDate":"2021-04-06"},{"lineNumber":219,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":220,"author":{"gitId":"ljhgab"},"content":"    public boolean isEventListEmpty() {","lastModifiedDate":"2021-04-06"},{"lineNumber":221,"author":{"gitId":"ljhgab"},"content":"        return events.isEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":222,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":223,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":224,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":225,"author":{"gitId":"SoulUseless"},"content":"     * Adds a event to Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":226,"author":{"gitId":"SoulUseless"},"content":"     * The event must not already exist in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":227,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":228,"author":{"gitId":"SoulUseless"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-03-02"},{"lineNumber":229,"author":{"gitId":"SoulUseless"},"content":"        events.add(e);","lastModifiedDate":"2021-03-02"},{"lineNumber":230,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":231,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":232,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":233,"author":{"gitId":"SoulUseless"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-03-02"},{"lineNumber":234,"author":{"gitId":"SoulUseless"},"content":"     * {@code target} must exist in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":235,"author":{"gitId":"SoulUseless"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing Event in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":236,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":237,"author":{"gitId":"SoulUseless"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-03-02"},{"lineNumber":238,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2021-03-02"},{"lineNumber":239,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":240,"author":{"gitId":"SoulUseless"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2021-03-02"},{"lineNumber":241,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":242,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":243,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":244,"author":{"gitId":"SoulUseless"},"content":"     * Removes {@code key} from {@code Sochedule}.","lastModifiedDate":"2021-03-02"},{"lineNumber":245,"author":{"gitId":"SoulUseless"},"content":"     * {@code key} must exist in Sochedule.","lastModifiedDate":"2021-03-02"},{"lineNumber":246,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":247,"author":{"gitId":"SoulUseless"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2021-03-02"},{"lineNumber":248,"author":{"gitId":"SoulUseless"},"content":"        events.remove(key);","lastModifiedDate":"2021-03-02"},{"lineNumber":249,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":250,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":251,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"icelenaugust"},"content":"     * Returns number of events happening in the next 7 days.","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"icelenaugust"},"content":"    public int getNumIncomingEvents() {","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"icelenaugust"},"content":"        return events.getNumIncomingEvents();","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":257,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":258,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":259,"author":{"gitId":"YuFeng0930"},"content":"     * Clears expired tasks (end date time past).","lastModifiedDate":"2021-03-24"},{"lineNumber":260,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":261,"author":{"gitId":"YuFeng0930"},"content":"    public void clearExpiredEvents() {","lastModifiedDate":"2021-03-24"},{"lineNumber":262,"author":{"gitId":"YuFeng0930"},"content":"        events.clearExpired();","lastModifiedDate":"2021-03-24"},{"lineNumber":263,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":264,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":265,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":266,"author":{"gitId":"icelenaugust"},"content":"     * Returns a list of free time slots.","lastModifiedDate":"2021-03-29"},{"lineNumber":267,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"icelenaugust"},"content":"    public ArrayList\u003cString\u003e getFreeTimeSlots(Date date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":269,"author":{"gitId":"icelenaugust"},"content":"        return events.getFreeTimeSlots(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":271,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"SoulUseless"},"content":"    //// util methods","lastModifiedDate":"2021-03-02"},{"lineNumber":273,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":274,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":275,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":276,"author":{"gitId":"SoulUseless"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" Tasks;\"","lastModifiedDate":"2021-03-02"},{"lineNumber":277,"author":{"gitId":"SoulUseless"},"content":"                + events.asUnmodifiableObservableList().size() + \" Events\";","lastModifiedDate":"2021-03-02"},{"lineNumber":278,"author":{"gitId":"SoulUseless"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-02"},{"lineNumber":279,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":280,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":281,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":282,"author":{"gitId":"SoulUseless"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":283,"author":{"gitId":"SoulUseless"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-02"},{"lineNumber":284,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":285,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":286,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":287,"author":{"gitId":"SoulUseless"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":288,"author":{"gitId":"SoulUseless"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-02"},{"lineNumber":289,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":290,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":291,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":292,"author":{"gitId":"SoulUseless"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":293,"author":{"gitId":"SoulUseless"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-02"},{"lineNumber":294,"author":{"gitId":"SoulUseless"},"content":"                || (other instanceof Sochedule // instanceof handles nulls","lastModifiedDate":"2021-03-02"},{"lineNumber":295,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 tasks.equals(((Sochedule) other).tasks))","lastModifiedDate":"2021-03-02"},{"lineNumber":296,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 events.equals(((Sochedule) other).events);","lastModifiedDate":"2021-03-02"},{"lineNumber":297,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":298,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":299,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":300,"author":{"gitId":"SoulUseless"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-02"},{"lineNumber":301,"author":{"gitId":"SoulUseless"},"content":"        return tasks.hashCode() ^ events.hashCode();","lastModifiedDate":"2021-03-02"},{"lineNumber":302,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":303,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"YuFeng0930":19,"icelenaugust":56,"SoulUseless":206,"ljhgab":14,"litone01":8}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    private Path socheduleFilePath \u003d Paths.get(\"data\", \"sochedule.json\");","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        setSocheduleFilePath(newUserPrefs.getSocheduleFilePath());","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"    public Path getSocheduleFilePath() {","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        return socheduleFilePath;","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"    public void setSocheduleFilePath(Path socheduleFilePath) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(socheduleFilePath);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"        this.socheduleFilePath \u003d socheduleFilePath;","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"                \u0026\u0026 socheduleFilePath.equals(o.socheduleFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"        return Objects.hash(guiSettings, socheduleFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"        sb.append(\"\\nLocal Sochedule file location : \" + socheduleFilePath);","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"icelenaugust":7,"-":77,"SoulUseless":3}},{"path":"src/main/java/seedu/address/model/common/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":" * Represents a Category in SOChedule.","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":" * Guarantees: immutable; categoryName is valid as declared in {@link #isValidCategoryName(String)}.","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"public class Category {","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"            \"Category names should be alphanumeric, without any spaces and be no longer than 20 characters.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    public static final int MAX_LENGTH \u003d 20;","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"    public final String categoryName;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"     * Constructs a {@code Category}.","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"     * @param categoryName A valid category name.","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    public Category(String categoryName) {","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(categoryName);","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"        checkArgument(isValidCategoryName(categoryName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        this.categoryName \u003d categoryName;","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    public static boolean isValidCategoryName(String test) {","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d MAX_LENGTH;","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"     * Returns the name of the category.","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"     * @return the name of the category.","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"    public String getCategoryName() {","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"        return this.categoryName;","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"                || (other instanceof Category // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 categoryName.equals(((Category) other).categoryName)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"        return categoryName.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"        return categoryName;","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"icelenaugust":16,"SoulUseless":22,"litone01":25}},{"path":"src/main/java/seedu/address/model/common/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":" * Represents a Category in SOChedule.","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":" * Guarantees: immutable; date is valid as declared in {@link #isValidDate(String)}.","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd\");","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    public static final String MESSAGE_CONSTRAINTS_FORMAT \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"            \"Date should be represented in the format of YYYY-MM-DD.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Please make sure the date is valid.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     * Constructs an {@code Date}.","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     * @param dateString A valid date.","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    public Date(String dateString) {","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(dateString);","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"        checkArgument(isValidDateFormat(dateString), MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        checkArgument(isValidDate(dateString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        date \u003d LocalDate.parse(dateString, DATE_FORMATTER);","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"        return date;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"     * Returns true if a given string is in valid format.","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"    public static boolean isValidDateFormat(String test) {","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"            LocalDate.parse(test, DATE_FORMATTER.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"            return true;","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"            return false;","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 date.equals(((Date) other).date)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"        return date.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"     * Returns the date in a string.","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"        return this.date.format(DATE_FORMATTER);","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"        return this.date.compareTo(other.date);","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"litone01"},"content":"     * Returns if the current date is earlier than the given date.","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"litone01"},"content":"     * @param other another Date object to compare with","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"litone01"},"content":"     * @return if the current date is earlier than the given date.","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"litone01"},"content":"    public boolean isBefore(Date other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"        return date.isBefore(other.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"     * Returns if the current date is later than the given date.","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"     * @param other another Date object to compare with","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"litone01"},"content":"     * @return if the current date is later than the given date.","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"litone01"},"content":"    public boolean isAfter(Date other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"litone01"},"content":"        return date.isAfter(other.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"litone01"},"content":"     * Returns if the current date is the same as the given date.","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"litone01"},"content":"     * @param other another Date object to compare with","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"litone01"},"content":"     * @return if the current date is the same as the given date.","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"litone01"},"content":"    public boolean isEqual(Date other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"litone01"},"content":"        return date.isEqual(other.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"YuFeng0930":19,"icelenaugust":37,"litone01":47,"SoulUseless":6}},{"path":"src/main/java/seedu/address/model/common/DatePastPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":" * Tests that the given {@code Date} is today or after today.","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"public class DatePastPredicate implements Predicate\u003cDate\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"    private final LocalDate nowDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    public DatePastPredicate() { }","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"     * Returns true if the given date is today or after today and false, otherwise.","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"     *","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"     * @param date date to compare with.","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"     * @return Returns true if the given date is today or after today and false, otherwise.","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    public boolean test(Date date) {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"        return nowDate.isBefore(date.getDate()) || nowDate.isEqual(date.getDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"                || (other instanceof DatePastPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"                \u0026\u0026 nowDate.equals(((DatePastPredicate) other).nowDate)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"YuFeng0930":23,"litone01":7,"ljhgab":1}},{"path":"src/main/java/seedu/address/model/common/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" * Represents a Task\u0027s or an Event\u0027s name in SOChedule.","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"            \"Names should only contain alphanumeric characters and spaces, should not be blank \\n\"","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"                    + \"and be no longer than 50 characters\";","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    public static final int MAX_LENGTH \u003d 50;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d MAX_LENGTH;","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"    public int compareTo(Name other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        return this.toString().compareTo(other.toString());","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"icelenaugust":3,"-":53,"SoulUseless":9}},{"path":"src/main/java/seedu/address/model/common/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":" * Represents a Tag in the SOChedule.","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"            \"Tags names should be alphanumeric, without any spaces and be no longer than 20 characters.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    public static final int MAX_LENGTH \u003d 20;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d MAX_LENGTH;","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"YuFeng0930":1,"icelenaugust":1,"-":49,"SoulUseless":3,"litone01":1}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.util.Set;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":" * Represents an event in SOChedule.","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"public class Event {","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    // Fields","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    private final Name name;","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    private final Date startDate;","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    private final Time startTime;","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    private final Date endDate;","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    private final Time endTime;","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    private final Set\u003cCategory\u003e categories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     * Name field must be present and not null.","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    public Event(Name name, Date startDate, Time startTime,","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"                Date endDate, Time endTime, Set\u003cCategory\u003e categories, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        requireAllNonNull(name, startDate, endDate);","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        this.categories.addAll(categories);","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        return this.name;","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    public Date getStartDate() {","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        return this.startDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"    public Time getStartTime() {","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        return this.startTime;","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"    public Date getEndDate() {","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"        return this.endDate;","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"    public Time getEndTime() {","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        return this.endTime;","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"    public Set\u003cCategory\u003e getCategories() {","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"        return this.categories;","lastModifiedDate":"2021-03-05"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"     * Returns true if the deadline of the task hasn\u0027t past.","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"    public boolean isEndDateTimeBeforeNow() {","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"        return new EventDateTimePastPredicate().test(this.endDate, this.endTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"            return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName())","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherEvent.getStartDate().equals(getStartDate())","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherEvent.getStartTime().equals(getStartTime())","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherEvent.getEndDate().equals(getEndDate())","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherEvent.getEndTime().equals(getEndTime())","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherEvent.getCategories().equals(getCategories())","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherEvent.getTags().equals(getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"            return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"            return false;","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 otherEvent.getStartDate().equals(getStartDate())","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 otherEvent.getStartTime().equals(getStartTime())","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 otherEvent.getEndDate().equals(getEndDate())","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 otherEvent.getEndTime().equals(getEndTime())","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 otherEvent.getCategories().equals(getCategories())","lastModifiedDate":"2021-03-05"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 otherEvent.getTags().equals(getTags());","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"                .append(\"; Start Date: \")","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"                .append(getStartDate())","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"                .append(\"; Start Time: \")","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"                .append(getStartTime())","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"SoulUseless"},"content":"                .append(\"; End Date: \")","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"SoulUseless"},"content":"                .append(getEndDate())","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"SoulUseless"},"content":"                .append(\"; End Time: \")","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"                .append(getEndTime())","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"SoulUseless"},"content":"                .append(\"; Category: \")","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"SoulUseless"},"content":"                .append(getCategories());","lastModifiedDate":"2021-03-05"},{"lineNumber":135,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"SoulUseless"},"content":"        Set\u003cseedu.address.model.common.Tag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"SoulUseless"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"SoulUseless"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"SoulUseless"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"SoulUseless"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"YuFeng0930":9,"icelenaugust":38,"SoulUseless":89,"litone01":7}},{"path":"src/main/java/seedu/address/model/event/EventCoversTodayPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"public class EventCoversTodayPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"    private final LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"    public EventCoversTodayPredicate() { }","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"        return (event.getStartDate().getDate().isBefore(todayDate) || event.getStartDate().getDate().isEqual(todayDate))","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 (todayDate.isBefore(event.getEndDate().getDate())","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"                || todayDate.isEqual(event.getEndDate().getDate()));","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof EventCoversTodayPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 todayDate.equals(((EventCoversTodayPredicate) other).todayDate)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"ljhgab":24}},{"path":"src/main/java/seedu/address/model/event/EventDateTimePastPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.util.function.BiPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":" * Tests that an {@code Event}\u0027s {@code Date} and {@code Time} is past or not.","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"public class EventDateTimePastPredicate implements BiPredicate\u003cDate, Time\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"    private final LocalDateTime nowDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    public EventDateTimePastPredicate() { }","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    public boolean test(Date date, Time time) {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"        return nowDateTime.isBefore(","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"                LocalDateTime.of(date.getDate(), time.getTime()));","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"                || (other instanceof EventDateTimePastPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"                \u0026\u0026 nowDateTime.equals(((EventDateTimePastPredicate) other).nowDateTime)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"YuFeng0930":27,"ljhgab":1}},{"path":"src/main/java/seedu/address/model/event/EventEndDateTimeValidPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import java.util.function.BiPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":" * Tests that an {@code Event}\u0027s {@code StartDate} and {@code StartTime} is before {@code EndDate} and {@code EndTime}","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"public class EventEndDateTimeValidPredicate implements BiPredicate\u003cDate, Time\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    private final Date startDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"    private final Time startTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"     * Constructs an EventEndDateTimeValidPredicate based on given startDate and startTime.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"     * @param startDate the given startDate","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"     * @param startTime the given startTime","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    public EventEndDateTimeValidPredicate(Date startDate, Time startTime) {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    public boolean test(Date endDate, Time endTime) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.of(startDate.getDate(), startTime.getTime());","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.of(endDate.getDate(), endTime.getTime());","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        return startDateTime.isBefore(endDateTime);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof EventEndDateTimeValidPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 startDate.equals(((EventEndDateTimeValidPredicate) other).startDate) // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 startTime.equals(((EventEndDateTimeValidPredicate) other).startTime)); // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"ljhgab":40}},{"path":"src/main/java/seedu/address/model/event/EventFindSchedulePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":" * Tests that a {@code Event}\u0027s {@code start date} is before or on the by date given","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":" * and its {@code end date} is later or on the by date given.","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"public class EventFindSchedulePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"    private final Date byDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"    public EventFindSchedulePredicate(Date byDate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"        return isStartDateBeforeOrOnByDate(event) \u0026\u0026 isEndDateLaterOrOnByDate(event);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"    private boolean isStartDateBeforeOrOnByDate(Event event) {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"        Date eventStartDate \u003d event.getStartDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"        return eventStartDate.isBefore(byDate) || eventStartDate.isEqual(byDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"    private boolean isEndDateLaterOrOnByDate(Event event) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"        Date eventEndDate \u003d event.getEndDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"        return eventEndDate.isAfter(byDate) || eventEndDate.isEqual(byDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"        if (!(other instanceof EventFindSchedulePredicate)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"        EventFindSchedulePredicate e \u003d (EventFindSchedulePredicate) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"        return byDate.equals(e.byDate); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"litone01":49}},{"path":"src/main/java/seedu/address/model/event/EventNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":" * Tests that an {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"public class EventNameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    public EventNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().fullName, keyword));","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof EventNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 keywords.equals(((EventNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"ljhgab":30}},{"path":"src/main/java/seedu/address/model/event/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":" * Represents a Time in SOChedule.","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":" * Guarantees: immutable; time is valid as declared in {@link #isValidTime(String)}.","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"public class Time implements Comparable\u003cTime\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    public static final DateTimeFormatter TIME_FORMATTER_STRICT \u003d DateTimeFormatter.ISO_LOCAL_TIME;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"            \"Time should be represented in 24-hour notation, in the format of HH:mm.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"    public final LocalTime time;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     * Constructs an {@code Time}.","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"     * @param timeString A valid time.","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"    public Time(String timeString) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"        requireNonNull(timeString);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"        checkArgument(isValidTime(timeString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"        time \u003d LocalTime.parse(timeString, TIME_FORMATTER);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"        return time;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"            LocalTime.parse(test, TIME_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"            LocalTime.parse(test, TIME_FORMATTER_STRICT);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"        } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"                || (other instanceof Time // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 time.equals(((Time) other).time)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"        return time.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"     * Returns the time in a string.","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        return this.time !\u003d null ? this.time.format(TIME_FORMATTER) : \"\";","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    public int compareTo(Time other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"        return this.time.compareTo(other.time);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"YuFeng0930":11,"icelenaugust":18,"litone01":25,"SoulUseless":20,"ljhgab":2}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":" * Event uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a event uses Event#equals(Object) so","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":" *","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":" *","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd\");","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if the list contains an equivalent test as the given argument.","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"     * Returns true if the event list is empty.","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"     * Adds a event to the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"     * Returns number of events happening in the next 7 days.","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"icelenaugust"},"content":"    public int getNumIncomingEvents() {","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"icelenaugust"},"content":"        int numIncomingEvents \u003d 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"icelenaugust"},"content":"        int numTotalEvents \u003d internalList.size();","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"icelenaugust"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"icelenaugust"},"content":"        String nowStr \u003d now.format(DATE_FORMATTER);","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"icelenaugust"},"content":"        LocalDate inSevenDays \u003d now.plusDays(7);","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"icelenaugust"},"content":"        String inSevenDaysStr \u003d inSevenDays.format(DATE_FORMATTER);","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c numTotalEvents; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"icelenaugust"},"content":"            Event currentEvent \u003d internalList.get(i);","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"icelenaugust"},"content":"            if (currentEvent.getStartDate().compareTo(new Date(inSevenDaysStr)) \u003c\u003d 0","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"icelenaugust"},"content":"                    \u0026\u0026 currentEvent.getStartDate().compareTo(new Date(nowStr)) \u003e 0) {","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"icelenaugust"},"content":"                numIncomingEvents++;","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"icelenaugust"},"content":"        return numIncomingEvents;","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"     * Clears expired events (end date time past).","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"    public void clearExpired() {","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"        internalList.removeIf(event -\u003e !event.isEndDateTimeBeforeNow());","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"icelenaugust"},"content":"     * Returns status of time in a day, with 0 being free, 1 being busy.","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"icelenaugust"},"content":"    public int[] getTimeStatus(Date date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"icelenaugust"},"content":"        int [] timeStatus \u003d new int[1440];","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"icelenaugust"},"content":"        //initialise array to 0 (all minutes in the day are free)","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c 1440; i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"icelenaugust"},"content":"            timeStatus[i] \u003d 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"icelenaugust"},"content":"        int numTotalEvents \u003d internalList.size();","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c numTotalEvents; i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"icelenaugust"},"content":"            Event currEvent \u003d internalList.get(i);","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"icelenaugust"},"content":"            if ((date.compareTo(currEvent.getStartDate()) \u003e\u003d 0) \u0026\u0026 (date.compareTo(currEvent.getEndDate()) \u003c\u003d 0)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"icelenaugust"},"content":"                if ((date.equals(currEvent.getStartDate())) \u0026\u0026 (date.equals(currEvent.getEndDate()))) {","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"icelenaugust"},"content":"                    //event within the day","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"icelenaugust"},"content":"                    int startTimeCount \u003d getTimeMinuteCount(currEvent.getStartTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"icelenaugust"},"content":"                    int endTimeCount \u003d getTimeMinuteCount(currEvent.getEndTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"icelenaugust"},"content":"                    for (int j \u003d startTimeCount; j \u003c\u003d endTimeCount; j++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"icelenaugust"},"content":"                        timeStatus[j] \u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"icelenaugust"},"content":"                    }","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"icelenaugust"},"content":"                } else if ((date.compareTo(currEvent.getStartDate()) \u003e 0) \u0026\u0026 (date.equals(currEvent.getEndDate()))) {","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"icelenaugust"},"content":"                    //event started earlier and ends on the day","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"icelenaugust"},"content":"                    int endTimeCount \u003d getTimeMinuteCount(currEvent.getEndTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"icelenaugust"},"content":"                    for (int j \u003d 0; j \u003c\u003d endTimeCount; j++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"icelenaugust"},"content":"                        timeStatus[j] \u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"icelenaugust"},"content":"                    }","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"icelenaugust"},"content":"                } else if ((date.equals(currEvent.getStartDate())) \u0026\u0026 (date.compareTo(currEvent.getEndDate()) \u003c 0)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"icelenaugust"},"content":"                    //event starts on the day and ends in the future","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"icelenaugust"},"content":"                    int startTimeCount \u003d getTimeMinuteCount(currEvent.getStartTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"icelenaugust"},"content":"                    for (int j \u003d startTimeCount; j \u003c 1440; j++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"icelenaugust"},"content":"                        timeStatus[j] \u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"icelenaugust"},"content":"                    }","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"icelenaugust"},"content":"                } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"icelenaugust"},"content":"                    //event starts before the day and ends in the future","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"icelenaugust"},"content":"                    for (int j \u003d 0; j \u003c 1440; j++) {","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"icelenaugust"},"content":"                        timeStatus[j] \u003d 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"icelenaugust"},"content":"                    }","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"icelenaugust"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"icelenaugust"},"content":"        return timeStatus;","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"icelenaugust"},"content":"     * Returns minute count of time from 00:00.","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"icelenaugust"},"content":"    public int getTimeMinuteCount(Time time) {","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"icelenaugust"},"content":"        String timeStr \u003d time.toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"icelenaugust"},"content":"        String hourStr \u003d timeStr.split(\":\")[0];","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"icelenaugust"},"content":"        String minuteStr \u003d timeStr.split(\":\")[1];","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"icelenaugust"},"content":"        int hour \u003d Integer.valueOf(hourStr);","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"icelenaugust"},"content":"        int minute \u003d Integer.valueOf(minuteStr);","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"icelenaugust"},"content":"        int minuteCount \u003d hour * 60 + minute;","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"icelenaugust"},"content":"        return minuteCount;","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"icelenaugust"},"content":"     * Returns time from minute count.","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"icelenaugust"},"content":"    public Time getTimeFromCount(int minuteCount) {","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"icelenaugust"},"content":"        int minute \u003d minuteCount % 60;","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"icelenaugust"},"content":"        int hour \u003d (minuteCount - minute) / 60;","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"icelenaugust"},"content":"        String minuteStr \u003d String.valueOf(minute);","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"icelenaugust"},"content":"        String hourStr \u003d String.valueOf(hour);","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"icelenaugust"},"content":"        if (minute \u003c 10) {","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"icelenaugust"},"content":"            minuteStr \u003d \"0\" + minuteStr;","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"icelenaugust"},"content":"        if (hour \u003c 10) {","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"icelenaugust"},"content":"            hourStr \u003d \"0\" + hourStr;","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"icelenaugust"},"content":"        String timeStr \u003d hourStr + \":\" + minuteStr;","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"icelenaugust"},"content":"        Time time \u003d new Time(timeStr);","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"icelenaugust"},"content":"        return time;","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"icelenaugust"},"content":"     * Returns a list of index.","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"icelenaugust"},"content":"    public ArrayList\u003cInteger\u003e getFreeTimeIndex(int[] timeStatus) {","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cInteger\u003e timeIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cInteger\u003e timeStatusArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"icelenaugust"},"content":"        int len \u003d timeStatus.length;","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"icelenaugust"},"content":"            timeStatusArr.add(timeStatus[i]);","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"icelenaugust"},"content":"        int status \u003d timeStatusArr.get(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"icelenaugust"},"content":"        int index \u003d timeStatusArr.indexOf(toggle(status));","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"icelenaugust"},"content":"        while (index \u003e\u003d 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"icelenaugust"},"content":"            timeIndex.add(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"icelenaugust"},"content":"            for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"icelenaugust"},"content":"                timeStatusArr.set(i, toggle(status));","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"icelenaugust"},"content":"            status \u003d timeStatusArr.get(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"icelenaugust"},"content":"            index \u003d timeStatusArr.indexOf(toggle(status));","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"icelenaugust"},"content":"        return timeIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"icelenaugust"},"content":"     * Adds time slot string to ArrayList.","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"icelenaugust"},"content":"    public void addTimeSlot(int firstBound, int secondBound, ArrayList\u003cString\u003e freeTimeSlots) {","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"icelenaugust"},"content":"        Time firstTime \u003d getTimeFromCount(firstBound);","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"icelenaugust"},"content":"        Time secondTime \u003d getTimeFromCount(secondBound);","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"icelenaugust"},"content":"        String timeSlotStr;","lastModifiedDate":"2021-03-30"},{"lineNumber":247,"author":{"gitId":"icelenaugust"},"content":"        if (firstBound \u003d\u003d secondBound) {","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"icelenaugust"},"content":"            timeSlotStr \u003d firstTime.toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"icelenaugust"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"icelenaugust"},"content":"            timeSlotStr \u003d firstTime.toString() + \" to \" + secondTime.toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"icelenaugust"},"content":"        freeTimeSlots.add(timeSlotStr);","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"icelenaugust"},"content":"     * Adds a list of free time slots in for loop when start status is free.","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"icelenaugust"},"content":"    public void loopTimeSlotsFree(ArrayList\u003cInteger\u003e timeIndex, ArrayList\u003cString\u003e freeTimeSlots, int len) {","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"icelenaugust"},"content":"        int firstBound \u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"icelenaugust"},"content":"        int secondBound \u003d timeIndex.get(0) - 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"icelenaugust"},"content":"        addTimeSlot(firstBound, secondBound, freeTimeSlots);","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 1; i \u003c timeIndex.size() - 1; i \u003d i + 2) {","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"icelenaugust"},"content":"            firstBound \u003d timeIndex.get(i);","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"icelenaugust"},"content":"            secondBound \u003d timeIndex.get(i + 1) - 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"icelenaugust"},"content":"            addTimeSlot(firstBound, secondBound, freeTimeSlots);","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"icelenaugust"},"content":"        if (timeIndex.size() % 2 \u003d\u003d 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"icelenaugust"},"content":"            firstBound \u003d timeIndex.get(timeIndex.size() - 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":269,"author":{"gitId":"icelenaugust"},"content":"            secondBound \u003d len - 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"icelenaugust"},"content":"            addTimeSlot(firstBound, secondBound, freeTimeSlots);","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":274,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":275,"author":{"gitId":"icelenaugust"},"content":"     * Adds a list of free time slots in for loop when start status is busy.","lastModifiedDate":"2021-03-30"},{"lineNumber":276,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":277,"author":{"gitId":"icelenaugust"},"content":"    public void loopTimeSlotsBusy(ArrayList\u003cInteger\u003e timeIndex, ArrayList\u003cString\u003e freeTimeSlots, int len) {","lastModifiedDate":"2021-03-30"},{"lineNumber":278,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c timeIndex.size() - 1; i \u003d i + 2) {","lastModifiedDate":"2021-03-29"},{"lineNumber":279,"author":{"gitId":"icelenaugust"},"content":"            int firstBound \u003d timeIndex.get(i);","lastModifiedDate":"2021-03-29"},{"lineNumber":280,"author":{"gitId":"icelenaugust"},"content":"            int secondBound \u003d timeIndex.get(i + 1) - 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":281,"author":{"gitId":"icelenaugust"},"content":"            addTimeSlot(firstBound, secondBound, freeTimeSlots);","lastModifiedDate":"2021-03-30"},{"lineNumber":282,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":283,"author":{"gitId":"icelenaugust"},"content":"        if (timeIndex.size() % 2 \u003d\u003d 1) {","lastModifiedDate":"2021-03-29"},{"lineNumber":284,"author":{"gitId":"icelenaugust"},"content":"            int firstBound \u003d timeIndex.get(timeIndex.size() - 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":285,"author":{"gitId":"icelenaugust"},"content":"            int secondBound \u003d len - 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":286,"author":{"gitId":"icelenaugust"},"content":"            addTimeSlot(firstBound, secondBound, freeTimeSlots);","lastModifiedDate":"2021-03-30"},{"lineNumber":287,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":288,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":289,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":290,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":291,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":292,"author":{"gitId":"icelenaugust"},"content":"     * Returns a list of free time slots.","lastModifiedDate":"2021-03-30"},{"lineNumber":293,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"icelenaugust"},"content":"    public ArrayList\u003cString\u003e getFreeTimeSlots(Date date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"icelenaugust"},"content":"        int startStatus \u003d getTimeStatus(date)[0];","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"icelenaugust"},"content":"        int len \u003d getTimeStatus(date).length;","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cInteger\u003e timeIndex \u003d getFreeTimeIndex(getTimeStatus(date));","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cString\u003e freeTimeSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":299,"author":{"gitId":"icelenaugust"},"content":"        if (timeIndex.size() !\u003d 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":300,"author":{"gitId":"icelenaugust"},"content":"            if (startStatus \u003d\u003d 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":301,"author":{"gitId":"icelenaugust"},"content":"                loopTimeSlotsFree(timeIndex, freeTimeSlots, len);","lastModifiedDate":"2021-03-30"},{"lineNumber":302,"author":{"gitId":"icelenaugust"},"content":"            } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":303,"author":{"gitId":"icelenaugust"},"content":"                loopTimeSlotsBusy(timeIndex, freeTimeSlots, len);","lastModifiedDate":"2021-03-30"},{"lineNumber":304,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":305,"author":{"gitId":"icelenaugust"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":306,"author":{"gitId":"icelenaugust"},"content":"            if (startStatus \u003d\u003d 0) {","lastModifiedDate":"2021-03-30"},{"lineNumber":307,"author":{"gitId":"icelenaugust"},"content":"                String timeSlotStr \u003d \"The entire day is free!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":308,"author":{"gitId":"icelenaugust"},"content":"                freeTimeSlots.add(timeSlotStr);","lastModifiedDate":"2021-03-30"},{"lineNumber":309,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":310,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":311,"author":{"gitId":"icelenaugust"},"content":"        return freeTimeSlots;","lastModifiedDate":"2021-03-29"},{"lineNumber":312,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":313,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":314,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":315,"author":{"gitId":"icelenaugust"},"content":"     * Returns inverted bit.","lastModifiedDate":"2021-03-29"},{"lineNumber":316,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":317,"author":{"gitId":"icelenaugust"},"content":"    public int toggle(int bit) {","lastModifiedDate":"2021-03-29"},{"lineNumber":318,"author":{"gitId":"icelenaugust"},"content":"        if (bit \u003d\u003d 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":319,"author":{"gitId":"icelenaugust"},"content":"            return 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":320,"author":{"gitId":"icelenaugust"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":321,"author":{"gitId":"icelenaugust"},"content":"            return 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":322,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":323,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":324,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":325,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":326,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":327,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":328,"author":{"gitId":"SoulUseless"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-02"},{"lineNumber":329,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":330,"author":{"gitId":"SoulUseless"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":331,"author":{"gitId":"SoulUseless"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":332,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":333,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":334,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":335,"author":{"gitId":"SoulUseless"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-03-02"},{"lineNumber":336,"author":{"gitId":"SoulUseless"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-02"},{"lineNumber":337,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":338,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":339,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":340,"author":{"gitId":"SoulUseless"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":341,"author":{"gitId":"SoulUseless"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-02"},{"lineNumber":342,"author":{"gitId":"SoulUseless"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2021-03-02"},{"lineNumber":343,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2021-03-02"},{"lineNumber":344,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":345,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":346,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":347,"author":{"gitId":"SoulUseless"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-02"},{"lineNumber":348,"author":{"gitId":"SoulUseless"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-02"},{"lineNumber":349,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":350,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":351,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":352,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-03-02"},{"lineNumber":353,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":354,"author":{"gitId":"SoulUseless"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-03-02"},{"lineNumber":355,"author":{"gitId":"SoulUseless"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-03-02"},{"lineNumber":356,"author":{"gitId":"SoulUseless"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-03-02"},{"lineNumber":357,"author":{"gitId":"SoulUseless"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2021-03-02"},{"lineNumber":358,"author":{"gitId":"SoulUseless"},"content":"                    return false;","lastModifiedDate":"2021-03-02"},{"lineNumber":359,"author":{"gitId":"SoulUseless"},"content":"                }","lastModifiedDate":"2021-03-02"},{"lineNumber":360,"author":{"gitId":"SoulUseless"},"content":"            }","lastModifiedDate":"2021-03-02"},{"lineNumber":361,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":362,"author":{"gitId":"SoulUseless"},"content":"        return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":363,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":364,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"YuFeng0930":7,"icelenaugust":214,"SoulUseless":136,"ljhgab":7}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" * identity).","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"SoulUseless":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"SoulUseless":6}},{"path":"src/main/java/seedu/address/model/event/exceptions/InvalidEventComparatorVariableException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"public class InvalidEventComparatorVariableException extends RuntimeException {","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    public InvalidEventComparatorVariableException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"        super(\"Invalid Comparator Input detected\");","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"SoulUseless":7}},{"path":"src/main/java/seedu/address/model/task/CompletionStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":" * Represents the completion status of a task in SOChedule.","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":" * Guarantees: the status is either COMPLETE or INCOMPLETE.","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"public class CompletionStatus implements Comparable\u003cCompletionStatus\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    public static final String VALIDATION_REGEX \u003d \"COMPLETE|INCOMPLETE\";","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"            \"Completion Statuses should only either by \\\"COMPLETE\\\" or \\\"INCOMPLETE\\\"\";","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    private Status completionStatus;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    enum Status {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"        COMPLETE,","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"        INCOMPLETE","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"     * Constructs an {@code CompletionStatus}.","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    public CompletionStatus() {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"        completionStatus \u003d Status.INCOMPLETE;","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"     * Constructs an {@code CompletionStatus}.","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"     * @param cs A valid completion status (\"COMPLETE\" or \"INCOMPLETE\").","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    public CompletionStatus(String cs) {","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"        switch (cs) {","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        case \"COMPLETE\":","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"            completionStatus \u003d Status.COMPLETE;","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"            break;","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        case \"INCOMPLETE\":","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"            completionStatus \u003d Status.INCOMPLETE;","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"            break;","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        default:","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"            // should not reach here since validation is pre-done.","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"            break;","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        return completionStatus \u003d\u003d Status.COMPLETE;","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"     * Flips the completion status.","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"    public void flipCompletionStatus() {","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        if (completionStatus \u003d\u003d Status.COMPLETE) {","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"            completionStatus \u003d Status.INCOMPLETE;","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        } else {","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"            completionStatus \u003d Status.COMPLETE;","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"     * Updates the completion status of the task to COMPLETE;","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"litone01"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"        completionStatus \u003d Status.COMPLETE;","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"litone01"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"litone01"},"content":"     * Updates the completion status of the task to INCOMPLETE;","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"litone01"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"litone01"},"content":"    public void markAsUndone() {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"litone01"},"content":"        completionStatus \u003d Status.INCOMPLETE;","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if a given string is a valid completion status.","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"litone01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"litone01"},"content":"                || (other instanceof CompletionStatus // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 completionStatus.equals(((CompletionStatus) other).completionStatus)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"        return completionStatus.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"     * Returns a String representation of {@code CompletionStatus}.","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"        if (completionStatus \u003d\u003d Status.COMPLETE) {","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"            return \"COMPLETE\";","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"        } else {","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"            return \"INCOMPLETE\";","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"    public int compareTo(CompletionStatus other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"        if (isComplete() \u0026\u0026 !other.isComplete()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"            return 1;","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"        } else if (!isComplete() \u0026\u0026 other.isComplete()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"            return -1;","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"        } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"            return 0;","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"icelenaugust":5,"SoulUseless":81,"litone01":30}},{"path":"src/main/java/seedu/address/model/task/PinnedStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":" * Represents the pinned status of a task in SOChedule.","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":" * Guarantees: the status is either PINNED or UNPINNED.","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"public class PinnedStatus implements Comparable\u003cPinnedStatus\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    public static final String VALIDATION_REGEX \u003d \"PINNED|UNPINNED\";","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"            \"Pinned Statuses should only either by \\\"PINNED\\\" or \\\"UNPINNED\\\"\";","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    private Status pinnedStatus;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    enum Status {","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"        PINNED,","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"        UNPINNED","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"     * Constructs an {@code PinnedStatus}.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    public PinnedStatus() {","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"        pinnedStatus \u003d Status.UNPINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"     * Constructs an {@code PinnedStatus}.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"     * @param cs A valid pinned status (\"PINNED\" or \"UNPINNED\").","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    public PinnedStatus(String cs) {","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"        switch (cs) {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        case \"PINNED\":","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"            pinnedStatus \u003d Status.PINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"            break;","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        case \"UNPINNED\":","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"            pinnedStatus \u003d Status.UNPINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"            break;","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        default:","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"            // should not reach here since validation is pre-done.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"            break;","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    public boolean isPinned() {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        return pinnedStatus \u003d\u003d Status.PINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"     * Flips the pinned status.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"    public void flipPinnedStatus() {","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        if (pinnedStatus \u003d\u003d Status.PINNED) {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"            pinnedStatus \u003d Status.UNPINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"            pinnedStatus \u003d Status.PINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if a given string is a valid pinned status.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"     * Updates the pinned status of the task to PINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"     * Does nothing if already pinned","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    public void pin() {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"        pinnedStatus \u003d Status.PINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"     * Updates the pinned status of the task to UNPINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"     * Does nothing if already unpinned","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"    public void unpin() {","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"        pinnedStatus \u003d Status.UNPINNED;","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"                || (other instanceof PinnedStatus // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 pinnedStatus.equals(((PinnedStatus) other).pinnedStatus)); // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"        return pinnedStatus.hashCode();","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"     * Returns a String representation of {@code PinnedStatus}.","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"    public String toString() {","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"        if (pinnedStatus \u003d\u003d Status.PINNED) {","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"            return \"PINNED\";","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"            return \"UNPINNED\";","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"    public int compareTo(PinnedStatus other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"        if (isPinned() \u0026\u0026 !other.isPinned()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"            return 1;","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"        } else if (!isPinned() \u0026\u0026 other.isPinned()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"            return -1;","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"            return 0;","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"SoulUseless":118}},{"path":"src/main/java/seedu/address/model/task/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":" * Represents a Priority in SOChedule.","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":" * Guarantees: immutable; priority is valid as declared in {@link #isValidPriority(String)}.","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"public class Priority implements Comparable\u003cPriority\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"            \"Priority should be represented as an integer from 0 to 9.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-9]$\";","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    public static final int DEFAULT_PRIORITY \u003d 5;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"    public final int priority;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"     * Constructs an {@code Priority}.","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"     *","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"     * @param priorityString A valid priority.","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    public Priority(String priorityString) {","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"        if (priorityString \u003d\u003d null) {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"            priority \u003d DEFAULT_PRIORITY;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"        } else {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"            checkArgument(isValidPriority(priorityString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"            priority \u003d Integer.parseInt(priorityString);","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    public int getPriority() {","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"        return priority;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"     * Returns true if a given string is a valid priority.","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"    public static boolean isValidPriority(String test) {","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        return test \u003d\u003d null || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"                || (other instanceof Priority // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 priority \u003d\u003d ((Priority) other).priority); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"        return priority;","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"        return Integer.toString(this.priority);","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    public int compareTo(Priority other) {","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        return Integer.compare(other.getPriority(), this.priority);","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"icelenaugust":31,"litone01":20,"SoulUseless":13}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.util.Set;","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.DatePastPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":" * Represents a task in SOChedule.","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"public class Task {","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    // Fields","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    private final Name name;","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    private final Date deadline;","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    private final Priority priority;","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    private final CompletionStatus completionStatus \u003d new CompletionStatus();","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    private final PinnedStatus pinnedStatus \u003d new PinnedStatus();","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    private final Set\u003cCategory\u003e categories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     * Name field must be present and not null.","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    public Task(Name name, Date deadline, Priority priority, Set\u003cCategory\u003e categories, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        this.categories.addAll(categories);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"        return this.name;","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    public Date getDeadline() {","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"        return this.deadline;","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"    public Priority getPriority() {","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"        return this.priority;","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"    public CompletionStatus getCompletionStatus() {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"        return this.completionStatus;","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"    public PinnedStatus getPinnedStatus() {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"        return this.pinnedStatus;","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    public Set\u003cCategory\u003e getCategories() {","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        return this.categories;","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        return completionStatus.isComplete();","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    public boolean isPinned() {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"        return pinnedStatus.isPinned();","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"    public void pin() {","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"        pinnedStatus.pin();","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"    public void unpin() {","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"        pinnedStatus.unpin();","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"litone01"},"content":"        completionStatus.markAsDone();","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"    public void markTaskAsUndone() {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"        completionStatus.markAsUndone();","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"     * Returns true if the deadline of the task hasn\u0027t past.","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"    public boolean isDeadlineBeforeNow() {","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"        return new DatePastPredicate().test(this.deadline);","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"litone01"},"content":"     * Returns true if both tasks have the same name, deadline, priority, tags and categories.","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"icelenaugust"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"icelenaugust"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"            return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherTask.getName().equals(getName())","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline())","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherTask.getPriority().equals(getPriority())","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherTask.getCategories().equals(getCategories())","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"     * Returns a copy of the current instance of the task.","lastModifiedDate":"2021-04-06"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"    public Task getCopy() {","lastModifiedDate":"2021-04-06"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"        Task copiedTask \u003d new Task(name, deadline, priority, categories, tags);","lastModifiedDate":"2021-04-06"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"        if (this.isPinned()) {","lastModifiedDate":"2021-04-06"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"            copiedTask.pin();","lastModifiedDate":"2021-04-06"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"        if (this.isComplete()) {","lastModifiedDate":"2021-04-06"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"            copiedTask.markTaskAsDone();","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-04-06"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"        return copiedTask;","lastModifiedDate":"2021-04-06"},{"lineNumber":129,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":130,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":131,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"icelenaugust"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"icelenaugust"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"icelenaugust"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"icelenaugust"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"icelenaugust"},"content":"            return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"icelenaugust"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"icelenaugust"},"content":"            return false;","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":144,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":145,"author":{"gitId":"icelenaugust"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"icelenaugust"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"icelenaugust"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline())","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"icelenaugust"},"content":"                \u0026\u0026 otherTask.getPriority().equals(getPriority())","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"SoulUseless"},"content":"                \u0026\u0026 otherTask.getCategories().equals(getCategories())","lastModifiedDate":"2021-03-05"},{"lineNumber":150,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags())","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"litone01"},"content":"                \u0026\u0026 otherTask.getCompletionStatus().equals(getCompletionStatus());","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":154,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {","lastModifiedDate":"2021-03-02"},{"lineNumber":156,"author":{"gitId":"icelenaugust"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-02"},{"lineNumber":157,"author":{"gitId":"icelenaugust"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-02"},{"lineNumber":158,"author":{"gitId":"icelenaugust"},"content":"                .append(\"; Deadline: \")","lastModifiedDate":"2021-03-02"},{"lineNumber":159,"author":{"gitId":"icelenaugust"},"content":"                .append(getDeadline())","lastModifiedDate":"2021-03-02"},{"lineNumber":160,"author":{"gitId":"icelenaugust"},"content":"                .append(\"; Priority: \")","lastModifiedDate":"2021-03-02"},{"lineNumber":161,"author":{"gitId":"icelenaugust"},"content":"                .append(getPriority())","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"icelenaugust"},"content":"                .append(\"; Category: \")","lastModifiedDate":"2021-03-02"},{"lineNumber":163,"author":{"gitId":"SoulUseless"},"content":"                .append(getCategories())","lastModifiedDate":"2021-03-08"},{"lineNumber":164,"author":{"gitId":"SoulUseless"},"content":"                .append(\"; Completion Status: \")","lastModifiedDate":"2021-03-08"},{"lineNumber":165,"author":{"gitId":"SoulUseless"},"content":"                .append(completionStatus.toString())","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"SoulUseless"},"content":"                .append(\"; Pinned Status: \")","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"SoulUseless"},"content":"                .append(pinnedStatus.toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":169,"author":{"gitId":"icelenaugust"},"content":"        Set\u003cseedu.address.model.common.Tag\u003e tags \u003d getTags();","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"icelenaugust"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":171,"author":{"gitId":"icelenaugust"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-03-02"},{"lineNumber":172,"author":{"gitId":"icelenaugust"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-03-02"},{"lineNumber":173,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":174,"author":{"gitId":"icelenaugust"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-02"},{"lineNumber":175,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":176,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":177,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":178,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-02-28"},{"lineNumber":179,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":180,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"YuFeng0930":8,"icelenaugust":108,"SoulUseless":50,"litone01":14}},{"path":"src/main/java/seedu/address/model/task/TaskComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.exceptions.InvalidTaskComparatorVariableException;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"            \"Sort Variable must be: \\\"name\\\", \\\"deadline\\\", \\\"priority\\\", \\\"completion\\\".\";","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    public static final String VALIDATION_REGEX \u003d \"(name|deadline|priority|completion)\";","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    private static ArrayList\u003cString\u003e acceptedVar \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(\"name\", \"deadline\", \"priority\", \"completion\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    private String comparingVar;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"     * Initialises a {@code TaskComparator} object.","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    public TaskComparator() {","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"        // default is sort by name","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"        this.comparingVar \u003d \"name\";","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    private boolean checkVar(String var) {","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"        return TaskComparator.acceptedVar.contains(var);","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    public void setComparingVar(String comparingVar) {","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        assert comparingVar !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        if (!checkVar(comparingVar)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"            throw new InvalidTaskComparatorVariableException();","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        this.comparingVar \u003d comparingVar;","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"     * Returns true if a given string is a valid priority.","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    public static boolean isValidComparingVar(String test) {","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    public static ArrayList\u003cString\u003e getAcceptedVar() {","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        return acceptedVar;","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"     * Compares between two {@code Task} objects.","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"     * @param t1 First {@code Task} to compare.","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"     * @param t2 Second {@code Task} to compare.","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"        if (t1.isPinned() \u0026\u0026 !t2.isPinned()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"            return -1;","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        if (t2.isPinned() \u0026\u0026 !t1.isPinned()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"            return 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"        switch (comparingVar) {","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"        case \"name\":","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"            return t1.getName().compareTo(t2.getName());","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        case \"deadline\":","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"            return t1.getDeadline().compareTo(t2.getDeadline());","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"        case \"priority\":","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"            // makes more sense to sort in decreasing order of priority instead of increasing","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"            return t2.getPriority().compareTo(t1.getPriority());","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"        case \"completion\":","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"            return t1.getCompletionStatus().compareTo(t2.getCompletionStatus());","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"        default:","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"            return 0;","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"SoulUseless":84,"litone01":1}},{"path":"src/main/java/seedu/address/model/task/TaskDeadlineIsTodayPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":" * Tests that a {@code Task}\u0027s {@code Deadline} matches today\u0027s date.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"public class TaskDeadlineIsTodayPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    private final LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    public TaskDeadlineIsTodayPredicate() { }","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"        return todayDate.isEqual(task.getDeadline().getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof TaskDeadlineIsTodayPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 todayDate.equals(((TaskDeadlineIsTodayPredicate) other).todayDate)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"ljhgab":25}},{"path":"src/main/java/seedu/address/model/task/TaskFindSchedulePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"litone01"},"content":" * Tests that a {@code Task}\u0027s {@code deadline} is before or on the by date given and is uncompleted.","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"public class TaskFindSchedulePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"    private final Date byDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"    public TaskFindSchedulePredicate(Date byDate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"        return isBeforeOrOnByDate(task) \u0026\u0026 isUncompleted(task);","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"    private boolean isBeforeOrOnByDate(Task task) {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"        Date taskDeadline \u003d task.getDeadline();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"        return taskDeadline.isBefore(byDate) || taskDeadline.isEqual(byDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"    private boolean isUncompleted(Task task) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"        return !task.isComplete();","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"        if (!(other instanceof TaskFindSchedulePredicate)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"        TaskFindSchedulePredicate t \u003d (TaskFindSchedulePredicate) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"        return byDate.equals(t.byDate); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"litone01":45}},{"path":"src/main/java/seedu/address/model/task/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().fullName, keyword));","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"                || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"                \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"ljhgab":30}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":" * Tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":" *","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":" *","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd\");","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    private TaskComparator taskComparator \u003d new TaskComparator();","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"     * Returns true if the task list is currently empty.","lastModifiedDate":"2021-04-06"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"icelenaugust"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"icelenaugust"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"icelenaugust"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"icelenaugust"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"icelenaugust"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"icelenaugust"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"icelenaugust"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"icelenaugust"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"     * Sorts the contents of this list given {@code comparingVar}.","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"     * {@code comparingVar} must be a valid parameter.","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"     * @param comparingVar The value to be used for sorting.","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"    public void sort(String comparingVar) {","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"        taskComparator.setComparingVar(comparingVar);","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"        FXCollections.sort(internalList, taskComparator);","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"     * Sorts the contents of this list given using current {@code comparingVar}.","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"    public void sortDefault() {","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"        FXCollections.sort(internalList, taskComparator);","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of completed tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"icelenaugust"},"content":"    public int getNumCompletedTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"icelenaugust"},"content":"        int numCompletedTask \u003d 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"icelenaugust"},"content":"        int numTotalTask \u003d internalList.size();","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c numTotalTask; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"icelenaugust"},"content":"            Task currTask \u003d internalList.get(i);","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"icelenaugust"},"content":"            if (currTask.isComplete()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"icelenaugust"},"content":"                numCompletedTask++;","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"icelenaugust"},"content":"        return numCompletedTask;","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of overdue tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"icelenaugust"},"content":"    public int getNumOverdueTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"icelenaugust"},"content":"        int numOverdueTask \u003d 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"icelenaugust"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"icelenaugust"},"content":"        String nowStr \u003d now.format(DATE_FORMATTER);","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"icelenaugust"},"content":"        int numTotalTask \u003d internalList.size();","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c numTotalTask; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"icelenaugust"},"content":"            Task currTask \u003d internalList.get(i);","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"icelenaugust"},"content":"            if ((!currTask.isComplete())","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"icelenaugust"},"content":"                    \u0026\u0026 currTask.getDeadline().compareTo(new Date(nowStr)) \u003c 0) {","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"icelenaugust"},"content":"                numOverdueTask++;","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"icelenaugust"},"content":"        return numOverdueTask;","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"icelenaugust"},"content":"     * Returns the number of incompleted tasks before deadline.","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"icelenaugust"},"content":"    public int getNumIncompleteTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"icelenaugust"},"content":"        int numIncompleteTask \u003d 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"icelenaugust"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"icelenaugust"},"content":"        String nowStr \u003d now.format(DATE_FORMATTER);","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"icelenaugust"},"content":"        int numTotalTask \u003d internalList.size();","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c numTotalTask; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"icelenaugust"},"content":"            Task currTask \u003d internalList.get(i);","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"icelenaugust"},"content":"            if ((!currTask.isComplete())","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"icelenaugust"},"content":"                    \u0026\u0026 currTask.getDeadline().compareTo(new Date(nowStr)) \u003e\u003d 0) {","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"icelenaugust"},"content":"                numIncompleteTask++;","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"icelenaugust"},"content":"        return numIncompleteTask;","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"YuFeng0930"},"content":"     * Clears expired tasks (deadline past).","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"YuFeng0930"},"content":"    public void clearExpired() {","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"YuFeng0930"},"content":"        internalList.removeIf(task -\u003e !task.isDeadlineBeforeNow());","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"YuFeng0930"},"content":"     * Clears completed tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"YuFeng0930"},"content":"    public void clearCompleted() {","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"YuFeng0930"},"content":"        internalList.removeIf(Task::isComplete);","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":195,"author":{"gitId":"icelenaugust"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-02"},{"lineNumber":196,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":197,"author":{"gitId":"icelenaugust"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":198,"author":{"gitId":"icelenaugust"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":199,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":200,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":201,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":202,"author":{"gitId":"icelenaugust"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-03-02"},{"lineNumber":203,"author":{"gitId":"icelenaugust"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-02"},{"lineNumber":204,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":205,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":206,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":207,"author":{"gitId":"icelenaugust"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":208,"author":{"gitId":"icelenaugust"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-02"},{"lineNumber":209,"author":{"gitId":"icelenaugust"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-03-02"},{"lineNumber":210,"author":{"gitId":"icelenaugust"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-03-02"},{"lineNumber":211,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":212,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":213,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":214,"author":{"gitId":"icelenaugust"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-02"},{"lineNumber":215,"author":{"gitId":"icelenaugust"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-02"},{"lineNumber":216,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":217,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":218,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":219,"author":{"gitId":"icelenaugust"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":220,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":221,"author":{"gitId":"icelenaugust"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-02"},{"lineNumber":222,"author":{"gitId":"icelenaugust"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-03-02"},{"lineNumber":223,"author":{"gitId":"icelenaugust"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-03-02"},{"lineNumber":224,"author":{"gitId":"icelenaugust"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-03-02"},{"lineNumber":225,"author":{"gitId":"icelenaugust"},"content":"                    return false;","lastModifiedDate":"2021-03-02"},{"lineNumber":226,"author":{"gitId":"icelenaugust"},"content":"                }","lastModifiedDate":"2021-03-02"},{"lineNumber":227,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-02"},{"lineNumber":228,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":229,"author":{"gitId":"icelenaugust"},"content":"        return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":230,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":231,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"YuFeng0930":14,"icelenaugust":190,"SoulUseless":19,"ljhgab":8}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" * identity).","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"icelenaugust":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/InvalidTaskComparatorVariableException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"public class InvalidTaskComparatorVariableException extends RuntimeException {","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    public InvalidTaskComparatorVariableException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"        super(\"Invalid Comparator Input detected\");","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"SoulUseless":7}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"icelenaugust":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"//import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"//import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"//import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"//import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"    //    public static Task[] getSampleTasks() {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    //","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    //    }","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    //    public static ReadOnlySochedule getSampleSochedule() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    //","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"    //    }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"     * Returns a category set containing the list of strings given.","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"    public static Set\u003cCategory\u003e getCategorySet(String... strings) {","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"                .map(Category::new)","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"YuFeng0930":12,"-":23,"SoulUseless":10}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":" * Jackson-friendly version of {@link seedu.address.model.common.Category}.","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"class JsonAdaptedCategory {","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    private final String categoryName;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    public JsonAdaptedCategory(String categoryName) {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        this.categoryName \u003d categoryName;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"     * Converts a given {@code Category} into this class for Jackson use.","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    public JsonAdaptedCategory(Category source) {","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        categoryName \u003d source.getCategoryName();","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    @JsonValue","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    public String getCategoryName() {","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        return categoryName;","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Category} object.","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted category.","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    public Category toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        if (!Category.isValidCategoryName(categoryName)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"        return new Category(categoryName);","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"SoulUseless":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":" * Jackson-friendly version of {@link JsonAdaptedEvent}.","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    private final String name;","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    private final String startDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    private final String startTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    private final String endDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    private final String endTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    private final List\u003cJsonAdaptedCategory\u003e category \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given event details.","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"startDate\") String startDate,","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"                           @JsonProperty(\"startTime\") String startTime,","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"                           @JsonProperty(\"endDate\") String endDate, @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"                           @JsonProperty(\"category\") List\u003cJsonAdaptedCategory\u003e category,","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        if (category !\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"            this.category.addAll(category);","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        startDate \u003d source.getStartDate().toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"        startTime \u003d source.getStartTime().toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"        endDate \u003d source.getEndDate().toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"        endTime \u003d source.getEndTime().toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"        category.addAll(source.getCategories().stream()","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"                .map(JsonAdaptedCategory::new)","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"        final List\u003cCategory\u003e eventCategories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"        final List\u003cTag\u003e eventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"            eventTags.add(tag.toModelType());","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"        for (JsonAdaptedCategory cat : category) {","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"            eventCategories.add(cat.toModelType());","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"        if (!Date.isValidDate(startDate)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"        final Date modelStartDate \u003d new Date(startDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"        if (!Time.isValidTime(startTime)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"        final Time modelStartTime \u003d new Time(startTime);","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"        if (endDate \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"        if (!Date.isValidDate(endDate)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"        final Date modelEndDate \u003d new Date(endDate);","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"        if (!Time.isValidTime(endTime)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"        final Time modelEndTime \u003d new Time(endTime);","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(eventTags);","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"        final Set\u003cCategory\u003e modelCategories \u003d new HashSet\u003c\u003e(eventCategories);","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"SoulUseless"},"content":"        return new Event(modelName, modelStartDate, modelStartTime,","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"SoulUseless"},"content":"                modelEndDate, modelEndTime, modelCategories, modelTags);","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"SoulUseless":133}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":47,"SoulUseless":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.PinnedStatus;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    private final String name;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    private final String deadline;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    private final String priority;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    private final String completionStatus;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    private final String pinnedStatus;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    private final List\u003cJsonAdaptedCategory\u003e category \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"                             @JsonProperty(\"priority\") String priority,","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"                             @JsonProperty(\"completionStatus\") String completionStatus,","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"                             @JsonProperty(\"pinnedStatus\") String pinnedStatus,","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"                             @JsonProperty(\"category\") List\u003cJsonAdaptedCategory\u003e category,","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        this.completionStatus \u003d completionStatus;","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        this.pinnedStatus \u003d pinnedStatus;","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        if (category !\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"            this.category.addAll(category);","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"        deadline \u003d source.getDeadline().toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"        priority \u003d source.getPriority().toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"        completionStatus \u003d source.isComplete() ? \"COMPLETE\" : \"INCOMPLETE\";","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        pinnedStatus \u003d source.isPinned() ? \"PINNED\" : \"UNPINNED\";","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        category.addAll(source.getCategories().stream()","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"                .map(JsonAdaptedCategory::new)","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"        final List\u003cCategory\u003e taskCategories \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"        for (JsonAdaptedCategory cat : category) {","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"            taskCategories.add(cat.toModelType());","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"        if (!Date.isValidDate(deadline)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"        final Date modelDeadline \u003d new Date(deadline);","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"        if (!Priority.isValidPriority(priority)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"        final Priority modelPriority \u003d new Priority(priority);","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"        if (completionStatus \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"                    CompletionStatus.class.getSimpleName()));","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"        if (!CompletionStatus.isValidStatus(completionStatus)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(CompletionStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"        final CompletionStatus modelCompletionStatus \u003d new CompletionStatus(completionStatus);","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"        if (pinnedStatus \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"                    PinnedStatus.class.getSimpleName()));","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"        if (!PinnedStatus.isValidStatus(pinnedStatus)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"SoulUseless"},"content":"            throw new IllegalValueException(PinnedStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"SoulUseless"},"content":"        final PinnedStatus modelPinnedStatus \u003d new PinnedStatus(pinnedStatus);","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"SoulUseless"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"SoulUseless"},"content":"        final Set\u003cCategory\u003e modelCategories \u003d new HashSet\u003c\u003e(taskCategories);","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"SoulUseless"},"content":"        Task task \u003d new Task(modelName, modelDeadline, modelPriority, modelCategories, modelTags);","lastModifiedDate":"2021-03-09"},{"lineNumber":137,"author":{"gitId":"SoulUseless"},"content":"        if (modelCompletionStatus.isComplete()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":138,"author":{"gitId":"SoulUseless"},"content":"            task.markTaskAsDone();","lastModifiedDate":"2021-03-09"},{"lineNumber":139,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":140,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"SoulUseless"},"content":"        if (modelPinnedStatus.isPinned()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"SoulUseless"},"content":"            task.pin();","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"SoulUseless"},"content":"        return task;","lastModifiedDate":"2021-03-09"},{"lineNumber":145,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"SoulUseless":147}},{"path":"src/main/java/seedu/address/storage/JsonSerializableSochedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":" * An Immutable Sochedule that is serializable to JSON format.","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"@JsonRootName(value \u003d \"sochedule\")","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"class JsonSerializableSochedule {","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Task list contains duplicate event(s).\";","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"     * Constructs a {@code JsonSerializableSochedule} with the given persons.","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    public JsonSerializableSochedule(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks,","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"                                     @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"     * Converts a given {@code ReadOnlySochedule} into this class for Jackson use.","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSochedule}.","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"    public JsonSerializableSochedule(ReadOnlySochedule source) {","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"     * Converts this sochedule into the model\u0027s {@code Sochedule} object.","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"    public Sochedule toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        Sochedule sochedule \u003d new Sochedule();","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"            if (sochedule.hasTask(task)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"            sochedule.addTask(task);","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"            if (sochedule.hasEvent(event)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"            sochedule.addEvent(event);","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"        return sochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"SoulUseless":75}},{"path":"src/main/java/seedu/address/storage/JsonSocheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":" * A class to access Sochedule data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"public class JsonSocheduleStorage implements SocheduleStorage {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSocheduleStorage.class);","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    public JsonSocheduleStorage(Path filePath) {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    public Path getSocheduleFilePath() {","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    public Optional\u003cReadOnlySochedule\u003e readSochedule() throws DataConversionException {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        return readSochedule(filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"     * Similar to {@link #readSochedule()}.","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    public Optional\u003cReadOnlySochedule\u003e readSochedule(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        Optional\u003cJsonSerializableSochedule\u003e jsonSochedule \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"                filePath, JsonSerializableSochedule.class);","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        if (!jsonSochedule.isPresent()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"            return Optional.of(jsonSochedule.get().toModelType());","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"    public void saveSochedule(ReadOnlySochedule sochedule) throws IOException {","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"        saveSochedule(sochedule, filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"     * Similar to {@link #saveSochedule(ReadOnlySochedule)}.","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"    public void saveSochedule(ReadOnlySochedule sochedule, Path filePath) throws IOException {","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"        requireNonNull(sochedule);","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSochedule(sochedule), filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"-":60,"SoulUseless":20}},{"path":"src/main/java/seedu/address/storage/SocheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":" * Represents a storage for {@link seedu.address.model.Sochedule}.","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"public interface SocheduleStorage {","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    Path getSocheduleFilePath();","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"     * Returns Sochedule data as a {@link ReadOnlySochedule}.","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    Optional\u003cReadOnlySochedule\u003e readSochedule() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"     * @see #getSocheduleFilePath()","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    Optional\u003cReadOnlySochedule\u003e readSochedule(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"     * Saves the given {@link ReadOnlySochedule} to the storage.","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"     * @param sochedule cannot be null.","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    void saveSochedule(ReadOnlySochedule sochedule) throws IOException;","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"     * @see #saveSochedule(ReadOnlySochedule)","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    void saveSochedule(ReadOnlySochedule sochedule, Path filePath) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"SoulUseless":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"public interface Storage extends UserPrefsStorage, SocheduleStorage {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    Path getSocheduleFilePath();","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    Optional\u003cReadOnlySochedule\u003e readSochedule() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    void saveSochedule(ReadOnlySochedule sochedule) throws IOException;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":26,"SoulUseless":5}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":" * Manages storage of Sochedule data in local storage.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    private SocheduleStorage socheduleStorage;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"     * Creates a {@code SocheduleStorageManager} with the given {@code socheduleStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    public StorageManager(SocheduleStorage socheduleStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"        this.socheduleStorage \u003d socheduleStorage;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Sochedule methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"    public Path getSocheduleFilePath() {","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        return socheduleStorage.getSocheduleFilePath();","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"    public Optional\u003cReadOnlySochedule\u003e readSochedule() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        return readSochedule(socheduleStorage.getSocheduleFilePath());","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    public Optional\u003cReadOnlySochedule\u003e readSochedule(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        return socheduleStorage.readSochedule(filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    public void saveSochedule(ReadOnlySochedule sochedule) throws IOException {","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        saveSochedule(sochedule, getSocheduleFilePath());","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"    public void saveSochedule(ReadOnlySochedule sochedule, Path filePath) throws IOException {","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"        socheduleStorage.saveSochedule(sochedule, filePath);","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"-":59,"SoulUseless":17}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":" * An UI component that displays information of a {@code Event}.","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public final Event event;","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    private Label name;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    private Label id;","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    private Label startDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    private Label startTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    private Label endDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    private Label endTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"    private Label category;","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"        super(FXML);","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"        name.setText(event.getName().fullName);","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"        startDate.setText(\"Start Date: \" + event.getStartDate().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"        startTime.setText(\"Start Time: \" + event.getStartTime().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"        endDate.setText(\"End Date: \" + event.getEndDate().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        endTime.setText(\"End Time: \" + event.getEndTime().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"        event.getTags().stream()","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"        if (event.getCategories().isEmpty()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"            category.setVisible(false);","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"        } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"            category.setText(\"Category: \" + event.getCategories().toString());","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"            return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"            return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"        // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"icelenaugust":79}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":" * Panel containing the list of events.","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        super(FXML);","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"                setText(null);","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"            } else {","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"icelenaugust":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103-w16-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"litone01":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"icelenaugust"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"icelenaugust"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"icelenaugust"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"icelenaugust"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getSocheduleFilePath());","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"icelenaugust"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2021-03-08"},{"lineNumber":177,"author":{"gitId":"icelenaugust"},"content":"        return taskListPanel;","lastModifiedDate":"2021-03-08"},{"lineNumber":178,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":179,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":180,"author":{"gitId":"icelenaugust"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2021-03-08"},{"lineNumber":181,"author":{"gitId":"icelenaugust"},"content":"        return eventListPanel;","lastModifiedDate":"2021-03-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"icelenaugust":20,"-":190}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    public final Task task;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    private Label name;","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    private Label id;","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    private Label deadline;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    private Label priority;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    private Label category;","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    private ImageView tickImageView;","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"    private ImageView pinImageView;","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"        super(FXML);","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"        deadline.setText(\"Deadline: \" + task.getDeadline().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        priority.setText(\"Priority: \" + task.getPriority().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"        task.getTags().stream()","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"        if (task.getCategories().isEmpty()) {","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"            category.setVisible(false);","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"        } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"            category.setText(\"Category: \" + task.getCategories().toString());","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"        if (task.isComplete()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"            tickImageView.setVisible(true);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"            tickImageView.setVisible(false);","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"        if (task.isPinned()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"            pinImageView.setVisible(true);","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"            pinImageView.setVisible(false);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"            return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"            return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"        // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"icelenaugust"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"icelenaugust":90}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    @FXML","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        super(FXML);","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"                setText(null);","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"            } else {","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"icelenaugust":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/calendar.png\";","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/LightTheme.css\");","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"icelenaugust":2,"-":87}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"icelenaugust":1,"-":7}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"        \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"                    \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"                \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"                    \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"                \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"                \u003cLabel fx:id\u003d\"startDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startDate\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"                \u003cLabel fx:id\u003d\"startTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startTime\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"                \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endDate\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"                \u003cLabel fx:id\u003d\"endTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endTime\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"                \u003cLabel fx:id\u003d\"category\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$category\" /\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"icelenaugust":40}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"icelenaugust":8}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #F25D86 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"    -fx-background: white;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"icelenaugust":2,"-":18}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#FEE9EE, 20%);","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"    background-color: #FEE9EE; /* Used in the default.html file */","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    -fx-base: #D5C8DC;","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    -fx-control-inner-background: #D5C8DC;","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #D5C8DC;","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#FEE9EE, 20%);","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#FEE9EE, 20%);","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#FEE9EE, 20%);","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #E8F6FF;","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #C8DEF0;","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #EDE8F3;","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"    -fx-border-color: #C5B9D4;","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"icelenaugust"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"icelenaugust"},"content":"    -fx-border-color: #F7E8EE;","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"icelenaugust"},"content":".cell_bold_label {","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"icelenaugust"},"content":"    -fx-font-family: \"Helvetica Neue\";","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"icelenaugust"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":145,"author":{"gitId":"icelenaugust"},"content":"     -fx-background-color: derive(#F9D0DE, 20%);","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"icelenaugust"},"content":"     -fx-background-color: derive(#F7E8EE, 20%);","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"icelenaugust"},"content":"     -fx-border-color: derive(#F7E8EE, 10%);","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(white, 30%);","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #CFAEB9;","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#F7E8EE, 30%);","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"icelenaugust"},"content":"    -fx-border-color: derive(#F7E8EE, 25%);","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#F7E8EE, 30%);","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"icelenaugust"},"content":"    -fx-border-color: derive(#F7E8EE, 30%);","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":193,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#F7E8EE, 30%);","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#F7E8EE, 50%);","lastModifiedDate":"2021-03-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#F7E8EE, 20%);","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"icelenaugust"},"content":"    -fx-font-family: \"Helvetica Neue\";","lastModifiedDate":"2021-03-25"},{"lineNumber":211,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2021-03-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #F7E8EE;","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2021-03-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #463C3C;","lastModifiedDate":"2021-03-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #F47D9F;","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #FFC0D2;","lastModifiedDate":"2021-03-25"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #F7E8EE;","lastModifiedDate":"2021-03-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2021-03-25"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#A0A0A0, 50%);","lastModifiedDate":"2021-03-25"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: transparent #F7E8EE transparent #F7E8EE;","lastModifiedDate":"2021-03-25"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"icelenaugust"},"content":"    -fx-border-color: #CBB3B9 #CBB3B9 #ffffff #CBB3B9;","lastModifiedDate":"2021-03-25"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"icelenaugust"},"content":"    -fx-text-fill: #42393B;","lastModifiedDate":"2021-03-25"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"icelenaugust"},"content":"#filterField, #taskListPanel, #personWebpage {","lastModifiedDate":"2021-03-25"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: derive(#F9D0DE, 20%);","lastModifiedDate":"2021-03-25"},{"lineNumber":347,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-03-25"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-color: #70809C;","lastModifiedDate":"2021-03-25"},{"lineNumber":358,"author":{"gitId":"icelenaugust"},"content":"    -fx-padding: 3 5 3 5;","lastModifiedDate":"2021-03-25"},{"lineNumber":359,"author":{"gitId":"icelenaugust"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2021-03-25"},{"lineNumber":360,"author":{"gitId":"icelenaugust"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2021-03-25"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"icelenaugust":66,"-":297}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"         title\u003d\"SOChedule\" minWidth\u003d\"800\" maxWidth\u003d\"800\" minHeight\u003d\"450\" maxHeight\u003d\"680\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"        \u003cImage url\u003d\"@/images/calendar.png\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"                \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"                           minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"                \u003cHBox styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\" maxWidth\u003d\"Infinity\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"                    \u003c!-- Task list --\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"                    \u003cVBox alignment\u003d\"TOP_CENTER\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"                        \u003cLabel fx:id\u003d\"taskLabel\" styleClass\u003d\"cell_bold_label\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"                            Tasks","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"                        \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"                                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"                            \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"                    \u003c!-- Event list --\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"                    \u003cVBox alignment\u003d\"TOP_CENTER\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"                        \u003cLabel fx:id\u003d\"eventLabel\" styleClass\u003d\"cell_bold_label\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"                            Events","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"                        \u003cVBox fx:id\u003d\"eventList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"                                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"                            \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"icelenaugust":43,"-":43}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"    \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"icelenaugust":2,"-":7}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"        \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"                    \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"                \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"                    \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"                    \u003cImageView fx:id\u003d\"pinImageView\" fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"                        \u003cImage url\u003d\"@/images/pin.png\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"                    \u003c/ImageView\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"                \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"                \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"                \u003cLabel fx:id\u003d\"priority\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$priority\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"                \u003cLabel fx:id\u003d\"category\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$category\"/\u003e","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"                \u003cInsets right\u003d\"25\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"            \u003cStackPane\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"                \u003cImageView fx:id\u003d\"tickImageView\" fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"                    \u003cImage url\u003d\"@/images/tick.png\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"                \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\"\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"                    \u003cImage url\u003d\"@/images/emptyBox.png\" /\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"icelenaugust":57}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"icelenaugust":1,"-":7}},{"path":"src/test/data/JsonSerializableSocheduleTest/duplicateEventSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2103 Meeting\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"TeamProject\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2103 Meeting\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"TeamProject\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"  } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":20}},{"path":"src/test/data/JsonSerializableSocheduleTest/duplicateTaskSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Homework 1\",","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"8\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"INCOMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"pinnedStatus\" : \"UNPINNED\",","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"Homework\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"MA3110\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Homework 1\",","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"8\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"INCOMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    \"pinnedStatus\" : \"UNPINNED\",","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"Homework\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"MA3110\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"  } ],","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ ]","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":20}},{"path":"src/test/data/JsonSerializableSocheduleTest/invalidEventSchedulingSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2103 Meeting\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"11:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"TeamProject\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"  } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":12}},{"path":"src/test/data/JsonSerializableSocheduleTest/invalidEventSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2103 Meeting\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:01230\",","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"TeamProject\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"  } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":12}},{"path":"src/test/data/JsonSerializableSocheduleTest/invalidTaskSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Homework 1\",","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07123\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"8\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"INCOMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"pinnedStatus\" : \"UNPINNED\",","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"Homework\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"MA3110\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"  } ],","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ ]","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":12}},{"path":"src/test/data/JsonSerializableSocheduleTest/noEventTypicalSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Homework 1\",","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"8\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"INCOMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"Homework\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"MA3110\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Clean the House\",","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"9\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"COMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [],","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : []","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"  } ],","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ ]","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":18}},{"path":"src/test/data/JsonSerializableSocheduleTest/noTaskTypicalSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2103 Meeting\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"TeamProject\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2105 Lecture\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-28\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [  ]","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2106 Tutorial\",","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-28\",","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"18:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"AtHome\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"  } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":28}},{"path":"src/test/data/JsonSerializableSocheduleTest/typicalSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Homework 1\",","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"8\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"INCOMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"Homework\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"MA3110\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Clean the House\",","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"9\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"COMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [],","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : []","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"  } ],","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2103 Meeting\",","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"TeamProject\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2105 Lecture\",","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-28\",","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [  ]","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2106 Tutorial\",","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-28\",","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"18:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"AtHome\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"  } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":42}},{"path":"src/test/data/JsonSocheduleStorageTest/invalidAndValidEventSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2103 M@#@@@eeting\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"TeamProject\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2105 Lecture\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-28\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [  ]","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2106 Tutorial\",","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-28\",","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"17:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"18:00\",","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"AtHome\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"  } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":28}},{"path":"src/test/data/JsonSocheduleStorageTest/invalidAndValidTaskSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Invalid Task\",","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"20211231234-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"8\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"INCOMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"pinnedStatus\" : \"UNPINNED\",","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"Homework\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"MA3110\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Clean the House\",","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"9\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"COMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    \"pinnedStatus\" : \"UNPINNED\",","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [],","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : []","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"  } ],","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ ]","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":20}},{"path":"src/test/data/JsonSocheduleStorageTest/invalidEventSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ ],","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"CS2103 M@#@@@eeting\",","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"startDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"startTime\" : \"15:00\",","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"endDate\" : \"2021-02-27\",","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"endTime\" : \"17:00\",","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"School\" ],","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"TeamProject\" ]","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"SoulUseless":12}},{"path":"src/test/data/JsonSocheduleStorageTest/invalidTaskSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Invalid Task\",","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"20211231234-01-07\",","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"8\",","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"INCOMPLETE\",","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"pinnedStatus\" : \"UNPINNED\",","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"Homework\" ],","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"MA3110\" ]","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"  } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"  \"events\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"SoulUseless":12}},{"path":"src/test/data/JsonSocheduleStorageTest/missingFieldSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"{","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"  \"tasks\" : [ {","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Homework 1\",","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"8\",","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"INCOMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [ \"Homework\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : [ \"MA3110\" ]","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"  }, {","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    \"name\" : \"Clean the House\",","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    \"deadline\" : \"2021-01-07\",","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"    \"priority\" : \"9\",","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    \"completionStatus\" : \"COMPLETE\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    \"category\" : [],","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    \"tagged\" : []","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"  } ]","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":17}},{"path":"src/test/data/JsonSocheduleStorageTest/notJsonFormatSochedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"blah.","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"SoulUseless":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_TASKONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_TASKONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_TASKONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASKONE;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.storage.JsonSocheduleStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        JsonSocheduleStorage socheduleStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"                new JsonSocheduleStorage(temporaryFolder.resolve(\"sochedule.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"        StorageManager storage \u003d new StorageManager(socheduleStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        String deleteTaskCommand \u003d \"delete_task 9\";","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        assertCommandException(deleteTaskCommand, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"        String listTaskCommand \u003d ListTaskCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(listTaskCommand, ListTaskCommand.MESSAGE_EMPTY, model);","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"        JsonSocheduleStorage socheduleStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"                new JsonSocheduleIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"        StorageManager storage \u003d new StorageManager(socheduleStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"        // Execute add task command","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"        String addTaskCommand \u003d AddTaskCommand.COMMAND_WORD + NAME_DESC_TASKONE + DEADLINE_DESC_TASKONE","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"                + PRIORITY_DESC_TASKONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"litone01"},"content":"        Task expectedTask \u003d new TaskBuilder().withName(VALID_TASK_NAME_TASKONE).build();","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"        ModelManager expectedModel \u003d new ModelManager(new Sochedule(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"        expectedModel.addTask(expectedTask);","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"        assertCommandFailure(addTaskCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"SoulUseless"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"        Model expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"SoulUseless"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"SoulUseless"},"content":"    private static class JsonSocheduleIoExceptionThrowingStub extends JsonSocheduleStorage {","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"SoulUseless"},"content":"        private JsonSocheduleIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"SoulUseless"},"content":"        public void saveSochedule(ReadOnlySochedule sochedule, Path filePath) throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"-":124,"SoulUseless":30,"ljhgab":6,"litone01":2}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null));","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        AddEventCommandTest.ModelStubAcceptingEventAdded modelStub \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"                new AddEventCommandTest.ModelStubAcceptingEventAdded();","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        CommandResult commandResult \u003d new AddEventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_ADD_EVENT_SUCCESS, validEvent),","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"        private final Event event;","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"        public ReadOnlySochedule getSochedule() {","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"            return new Sochedule();","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"YuFeng0930":2,"ljhgab":69}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        AddTaskCommandTest.ModelStubAcceptingTaskAdded modelStub \u003d new AddTaskCommandTest.ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        private final Task task;","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        @Override","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        public ReadOnlySochedule getSochedule() {","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"            return new Sochedule();","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"ljhgab":66}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    public void execute_emptySochedule_success() {","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    public void execute_nonEmptySochedule_success() {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"        Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        expectedModel.setSochedule(new Sochedule());","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"icelenaugust":7,"-":24}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDTIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTTIME;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"    // Task","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_NAME_TASKONE \u003d \"Task One\";","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_NAME_TASKTWO \u003d \"Task Two\";","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_DEADLINE_TASKONE \u003d LocalDate.now().plusMonths(3).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_DEADLINE_TASKTWO \u003d LocalDate.now().plusMonths(4).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_PRIORITY_TASKONE \u003d \"5\";","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_PRIORITY_TASKTWO \u003d \"6\";","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_CATEGORY_HOMEWORK \u003d \"Homework\";","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_CATEGORY_PROJECT \u003d \"Project\";","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_TAG_IMPORTANT \u003d \"Important\";","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_TASK_TAG_DIFFICULT \u003d \"Difficult\";","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    public static final String INVALID_PAST_DEADLINE \u003d \"1999-01-01\"; // not allowed in date","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"    // Task to input to parser","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"    public static final String NAME_DESC_TASKONE \u003d \" \" + PREFIX_NAME + VALID_TASK_NAME_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"    public static final String NAME_DESC_TASKTWO \u003d \" \" + PREFIX_NAME + VALID_TASK_NAME_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"    public static final String DEADLINE_DESC_TASKONE \u003d \" \" + PREFIX_DEADLINE + VALID_TASK_DEADLINE_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"    public static final String DEADLINE_DESC_TASKTWO \u003d \" \" + PREFIX_DEADLINE + VALID_TASK_DEADLINE_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"    public static final String PRIORITY_DESC_TASKONE \u003d \" \" + PREFIX_PRIORITY + VALID_TASK_PRIORITY_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"    public static final String PRIORITY_DESC_TASKTWO \u003d \" \" + PREFIX_PRIORITY + VALID_TASK_PRIORITY_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"    public static final String CATEGORY_DESC_HOMEWORK \u003d \" \" + PREFIX_CATEGORY + VALID_TASK_CATEGORY_HOMEWORK;","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"    public static final String CATEGORY_DESC_PROJECT \u003d \" \" + PREFIX_CATEGORY + VALID_TASK_CATEGORY_PROJECT;","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"    public static final String TAG_DESC_IMPORTANT \u003d \" \" + PREFIX_TAG + VALID_TASK_TAG_IMPORTANT;","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"    public static final String TAG_DESC_DIFFICULT \u003d \" \" + PREFIX_TAG + VALID_TASK_TAG_DIFFICULT;","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"    // Event","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_NAME_EVENTONE \u003d \"Coding Interview\";","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_NAME_EVENTTWO \u003d \"SoC FOP\";","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_EVENT_STARTDATE_EVENTONE \u003d LocalDate.now().plusMonths(1).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_EVENT_STARTDATE_EVENTTWO \u003d LocalDate.now().plusMonths(2).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_STARTTIME_EVENTONE \u003d \"13:00\";","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_STARTTIME_EVENTTWO \u003d \"07:00\";","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_EVENT_ENDDATE_EVENTONE \u003d LocalDate.now().plusMonths(1).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"    public static final String VALID_EVENT_ENDDATE_EVENTTWO \u003d LocalDate.now().plusMonths(2).plusDays(2).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_ENDTIME_EVENTONE \u003d \"15:00\";","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_ENDTIME_EVENTTWO \u003d \"22:00\";","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_CATEGORY_WORK \u003d \"Work\";","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_CATEGORY_SCHOOL \u003d \"School\";","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_TAG_FINAL \u003d \"Final\";","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"    public static final String VALID_EVENT_TAG_FUN \u003d \"Fun\";","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"    public static final String INVALID_EVENT_ENDDATE \u003d \"2020-03-03\";","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"    // Event to input to parser","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    public static final String NAME_DESC_EVENTONE \u003d \" \" + PREFIX_NAME + VALID_EVENT_NAME_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"    public static final String NAME_DESC_EVENTTWO \u003d \" \" + PREFIX_NAME + VALID_EVENT_NAME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"    public static final String STARTDATE_DESC_EVENTONE \u003d \" \" + PREFIX_STARTDATE + VALID_EVENT_STARTDATE_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"    public static final String STARTDATE_DESC_EVENTTWO \u003d \" \" + PREFIX_STARTDATE + VALID_EVENT_STARTDATE_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"    public static final String STARTTIME_DESC_EVENTONE \u003d \" \" + PREFIX_STARTTIME + VALID_EVENT_STARTTIME_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"    public static final String STARTTIME_DESC_EVENTTWO \u003d \" \" + PREFIX_STARTTIME + VALID_EVENT_STARTTIME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"    public static final String ENDDATE_DESC_EVENTONE \u003d \" \" + PREFIX_ENDDATE + VALID_EVENT_ENDDATE_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"    public static final String ENDDATE_DESC_EVENTTWO \u003d \" \" + PREFIX_ENDDATE + VALID_EVENT_ENDDATE_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"    public static final String ENDTIME_DESC_EVENTONE \u003d \" \" + PREFIX_ENDTIME + VALID_EVENT_ENDTIME_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"    public static final String ENDTIME_DESC_EVENTTWO \u003d \" \" + PREFIX_ENDTIME + VALID_EVENT_ENDTIME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"    public static final String CATEGORY_DESC_WORK \u003d \" \" + PREFIX_CATEGORY + VALID_EVENT_CATEGORY_WORK;","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"    public static final String CATEGORY_DESC_SCHOOL \u003d \" \" + PREFIX_CATEGORY + VALID_EVENT_CATEGORY_SCHOOL;","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"    public static final String TAG_DESC_FINAL \u003d \" \" + PREFIX_TAG + VALID_EVENT_TAG_FINAL;","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"    public static final String TAG_DESC_FUN \u003d \" \" + PREFIX_TAG + VALID_EVENT_TAG_FUN;","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"ljhgab"},"content":"    // Invalid inputs","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"ljhgab"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"Invalid\u0026\"; // \u0027\u0026\u0027 is not allowed in names","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"    public static final String INVALID_DEADLINE_DESC \u003d \" \" + PREFIX_DEADLINE + \"2\u002620-01-02\"; // not allowed in date","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"    public static final String INVALID_DEADLINE_DESC_0229 \u003d \" \" + PREFIX_DEADLINE + \"2022-02-29\"; // not allowed in date","lastModifiedDate":"2021-04-06"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"    public static final String INVALID_DEADLINEPAST_DESC \u003d \" \" + PREFIX_DEADLINE + \"1998-01-02\"; // not allowed in date","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"    public static final String INVALID_PRIORITY_DESC \u003d \" \" + PREFIX_PRIORITY + \"15\"; // \u002715\u0027 is out of the bound","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"    public static final String INVALID_CATEGORY_DESC \u003d \" \" + PREFIX_CATEGORY + \"h@mework\"; // not allowed in category","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"imp@rtant\"; // not allowed in tag","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"    public static final String INVALID_STARTDATE_DESC \u003d \" \" + PREFIX_STARTDATE + \"2\u002620-01-02\"; // not allowed in date","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"    public static final String INVALID_STARTDATE_DESC_0229 \u003d \" \" + PREFIX_STARTDATE + \"2022-02-29\"; // not such date","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"    public static final String INVALID_STARTTIME_DESC \u003d \" \" + PREFIX_STARTTIME + \"10:\"; // not allowed in time","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"    public static final String INVALID_ENDDATE_DESC \u003d \" \" + PREFIX_ENDDATE + \"199*-01-02\"; // not allowed in date","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"    public static final String INVALID_ENDDATEPAST_DESC \u003d \" \" + PREFIX_ENDDATE + \"1998-01-02\"; // not allowed in date","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"    public static final String INVALID_ENDTIME_DESC \u003d \" \" + PREFIX_ENDTIME + \"1@:05\"; // not allowed in time","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"icelenaugust"},"content":"    // Dates","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"ljhgab"},"content":"    public static final String NO_FREE_TIME_DATE \u003d LocalDate.now().plusMonths(1).plusDays(15).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":107,"author":{"gitId":"ljhgab"},"content":"    public static final String FREE_DATE \u003d LocalDate.now().plusYears(3).plusMonths(2).plusDays(1).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":108,"author":{"gitId":"ljhgab"},"content":"    public static final String EXAMPLE_DATE \u003d LocalDate.now().plusYears(3).plusMonths(2).plusDays(2).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2021-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":114,"author":{"gitId":"ljhgab"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":115,"author":{"gitId":"ljhgab"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-04-05"},{"lineNumber":118,"author":{"gitId":"ljhgab"},"content":"        DESC_TASKONE \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":119,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKONE).withPriority(VALID_TASK_PRIORITY_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":120,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_HOMEWORK)","lastModifiedDate":"2021-04-05"},{"lineNumber":121,"author":{"gitId":"ljhgab"},"content":"                .withTags(VALID_TASK_TAG_DIFFICULT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":122,"author":{"gitId":"ljhgab"},"content":"        DESC_TASKTWO \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":123,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKTWO).withPriority(VALID_TASK_PRIORITY_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":124,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_PROJECT)","lastModifiedDate":"2021-04-05"},{"lineNumber":125,"author":{"gitId":"ljhgab"},"content":"                .withTags(VALID_TASK_TAG_IMPORTANT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"    public static final EditEventCommand.EditEventDescriptor DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"    public static final EditEventCommand.EditEventDescriptor DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"    static {","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"        DESC_EVENTONE \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTONE).withStartTime(VALID_EVENT_STARTTIME_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTONE).withEndTime(VALID_EVENT_ENDTIME_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"                .withCategories(VALID_EVENT_CATEGORY_WORK)","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FINAL).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":"        DESC_EVENTTWO \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTTWO)","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTTWO).withStartTime(VALID_EVENT_STARTTIME_EVENTTWO)","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTTWO).withEndTime(VALID_EVENT_ENDTIME_EVENTTWO)","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"                .withCategories(VALID_EVENT_CATEGORY_SCHOOL)","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FINAL).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-03-19"},{"lineNumber":175,"author":{"gitId":"ljhgab"},"content":"     * - the sochedule, filtered list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-03-19"},{"lineNumber":178,"author":{"gitId":"ljhgab"},"content":"        Sochedule expectedSochedule \u003d new Sochedule(actualModel.getSochedule());","lastModifiedDate":"2021-03-19"},{"lineNumber":179,"author":{"gitId":"ljhgab"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2021-03-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-03-19"},{"lineNumber":182,"author":{"gitId":"ljhgab"},"content":"        assertEquals(expectedSochedule, actualModel.getSochedule());","lastModifiedDate":"2021-03-19"},{"lineNumber":183,"author":{"gitId":"ljhgab"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2021-03-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":185,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":186,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":187,"author":{"gitId":"ljhgab"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-19"},{"lineNumber":188,"author":{"gitId":"ljhgab"},"content":"     * {@code model}\u0027s sochedule.","lastModifiedDate":"2021-03-19"},{"lineNumber":189,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":190,"author":{"gitId":"ljhgab"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-19"},{"lineNumber":191,"author":{"gitId":"ljhgab"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-19"},{"lineNumber":192,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":193,"author":{"gitId":"ljhgab"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-19"},{"lineNumber":194,"author":{"gitId":"ljhgab"},"content":"        final String[] splitName \u003d task.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-19"},{"lineNumber":195,"author":{"gitId":"ljhgab"},"content":"        model.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-19"},{"lineNumber":196,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":197,"author":{"gitId":"ljhgab"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-19"},{"lineNumber":198,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":201,"author":{"gitId":"ljhgab"},"content":"     * Updates {@code model}\u0027s filtered list to show only the event at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-19"},{"lineNumber":202,"author":{"gitId":"ljhgab"},"content":"     * {@code model}\u0027s sochedule.","lastModifiedDate":"2021-03-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":204,"author":{"gitId":"ljhgab"},"content":"    public static void showEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-19"},{"lineNumber":205,"author":{"gitId":"ljhgab"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEventList().size());","lastModifiedDate":"2021-03-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":207,"author":{"gitId":"ljhgab"},"content":"        Event event \u003d model.getFilteredEventList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-19"},{"lineNumber":208,"author":{"gitId":"ljhgab"},"content":"        final String[] splitName \u003d event.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-19"},{"lineNumber":209,"author":{"gitId":"ljhgab"},"content":"        model.updateFilteredEventList(new EventNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":211,"author":{"gitId":"ljhgab"},"content":"        assertEquals(1, model.getFilteredEventList().size());","lastModifiedDate":"2021-03-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"YuFeng0930":59,"icelenaugust":1,"-":72,"ljhgab":80,"litone01":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSochedule;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":" * {@code DeleteEventCommand}.","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"        assertCommandFailure(deleteEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"        Model expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        showNoEvent(expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"        // ensures that outOfBoundIndex is still in bounds of sochedule\u0027s event list","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSochedule().getEventList().size());","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"        assertCommandFailure(deleteEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"    public void equals() {","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"        DeleteEventCommand deleteFirstEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"        DeleteEventCommand deleteSecondEventCommand \u003d new DeleteEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"        assertTrue(deleteFirstEventCommand.equals(deleteFirstEventCommand));","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"ljhgab"},"content":"        DeleteEventCommand deleteFirstEventCommandCopy \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"ljhgab"},"content":"        assertTrue(deleteFirstEventCommand.equals(deleteFirstEventCommandCopy));","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"ljhgab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"ljhgab"},"content":"        assertFalse(deleteFirstEventCommand.equals(1));","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"ljhgab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"        assertFalse(deleteFirstEventCommand.equals(null));","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"        assertFalse(deleteFirstEventCommand.equals(deleteSecondEventCommand));","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"ljhgab"},"content":"     * Updates {@code model}\u0027s filtered list to show no event.","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"ljhgab"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"ljhgab"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"ljhgab"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"ljhgab":111}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"        Model expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"        // ensures that outOfBoundIndex is still in bounds of sochedule\u0027s task list","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSochedule().getTaskList().size());","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"        assertCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"    public void equals() {","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"        DeleteTaskCommand deleteFirstTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"        DeleteTaskCommand deleteSecondTaskCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstTaskCommand));","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"ljhgab"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"ljhgab"},"content":"        assertTrue(deleteFirstTaskCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"ljhgab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"ljhgab"},"content":"        assertFalse(deleteFirstTaskCommand.equals(1));","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"ljhgab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"        assertFalse(deleteFirstTaskCommand.equals(null));","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"icelenaugust"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"        assertFalse(deleteFirstTaskCommand.equals(deleteSecondTaskCommand));","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"ljhgab"},"content":"     * Updates {@code model}\u0027s filtered list to show no task.","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"ljhgab"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"ljhgab"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"ljhgab"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"icelenaugust":1,"ljhgab":110}},{"path":"src/test/java/seedu/address/logic/commands/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_ENDDATE;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSochedule;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditEventCommand.","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"public class EditEventCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"        Model expectedModel \u003d new ModelManager(new Sochedule(model.getSochedule()), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        Event lastEvent \u003d model.getFilteredEventList().get(indexLastEvent.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"        EventBuilder eventInList \u003d new EventBuilder(lastEvent);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"        Event editedEvent \u003d eventInList.withName(VALID_EVENT_NAME_EVENTTWO)","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTTWO).withStartTime(VALID_EVENT_STARTTIME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTTWO)","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTTWO).withStartTime(VALID_EVENT_STARTTIME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(indexLastEvent, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        Model expectedModel \u003d new ModelManager(new Sochedule(model.getSochedule()), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"        expectedModel.setEvent(lastEvent, editedEvent);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"        Event eventInFilteredList \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"        Event editedEvent \u003d new EventBuilder(eventInFilteredList).withName(VALID_EVENT_NAME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"                new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTTWO).build());","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"        Model expectedModel \u003d new ModelManager(new Sochedule(model.getSochedule()), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_duplicateEventUnfilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"        Event firstEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(firstEvent).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_SECOND_EVENT, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_duplicateEventFilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"        // edit event in filtered list into a duplicate in sochedule","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"        Event eventInList \u003d model.getSochedule().getEventList().get(INDEX_SECOND_EVENT.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"                new EditEventDescriptorBuilder(eventInList).build());","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_invalidEventIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"     * but smaller than size of sochedule","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_invalidEventIndexFilteredList_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"        // ensures that outOfBoundIndex is still in bounds of sochedule list","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSochedule().getEventList().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex,","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"                new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTTWO).build());","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_eventEndDateTimeBeforeThanStartDateTime_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTONE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(indexLastEvent, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_END_DATETIME_BEFORE_START_DATETIME);","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_editEventEndDateTimeToExpiredEndDateTime_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"YuFeng0930"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(INVALID_EVENT_ENDDATE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(indexLastEvent, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_PAST_EVENT_END_DATE_TIME);","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":161,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2021-04-06"},{"lineNumber":162,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, new EditEventDescriptor());","lastModifiedDate":"2021-04-06"},{"lineNumber":163,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":164,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-04-06"},{"lineNumber":165,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":166,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":167,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"YuFeng0930"},"content":"    public void equals() {","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"YuFeng0930"},"content":"        final EditEventCommand standardCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, DESC_EVENTONE);","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"YuFeng0930"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor copyDescriptor \u003d new EditEventDescriptor(DESC_EVENTONE);","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand commandWithSameValues \u003d new EditEventCommand(INDEX_FIRST_EVENT, copyDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"YuFeng0930"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"YuFeng0930"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"YuFeng0930"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"YuFeng0930"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(standardCommand.equals(new EditEventCommand(INDEX_SECOND_EVENT, DESC_EVENTONE)));","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"YuFeng0930"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(standardCommand.equals(new EditEventCommand(INDEX_FIRST_EVENT, DESC_EVENTTWO)));","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"YuFeng0930":192}},{"path":"src/test/java/seedu/address/logic/commands/EditEventDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_SCHOOL;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FUN;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"public class EditEventDescriptorTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    public void equals() {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptorWithSameValues \u003d new EditEventDescriptor(DESC_EVENTONE);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(DESC_EVENTONE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(DESC_EVENTONE.equals(DESC_EVENTONE));","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(5));","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(DESC_EVENTTWO));","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor editedEventOne \u003d new EditEventDescriptorBuilder(DESC_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"                .withName(VALID_EVENT_NAME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(editedEventOne));","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"        // different start date -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"        editedEventOne \u003d new EditEventDescriptorBuilder(DESC_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(editedEventOne));","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"        // different start time -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"        editedEventOne \u003d new EditEventDescriptorBuilder(DESC_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"                .withStartTime(VALID_EVENT_STARTTIME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(editedEventOne));","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"        // different end date -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        editedEventOne \u003d new EditEventDescriptorBuilder(DESC_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(editedEventOne));","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"        // different end time -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"        editedEventOne \u003d new EditEventDescriptorBuilder(DESC_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"                .withEndTime(VALID_EVENT_ENDTIME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(editedEventOne));","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"        // different categories -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"        editedEventOne \u003d new EditEventDescriptorBuilder(DESC_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"                .withCategories(VALID_EVENT_CATEGORY_SCHOOL).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(editedEventOne));","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"        editedEventOne \u003d new EditEventDescriptorBuilder(DESC_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FUN).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(DESC_EVENTONE.equals(editedEventOne));","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"YuFeng0930":75}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PAST_DEADLINE;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"        Model expectedModel \u003d new ModelManager(new Sochedule(model.getSochedule()), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        Task editedTask \u003d taskInList.withName(VALID_TASK_NAME_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"                .withPriority(VALID_TASK_PRIORITY_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"                .withName(VALID_TASK_NAME_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"                .withPriority(VALID_TASK_PRIORITY_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(indexLastTask, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"        Model expectedModel \u003d new ModelManager(new Sochedule(model.getSochedule()), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-04-05"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-04-05"},{"lineNumber":79,"author":{"gitId":"litone01"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList)","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"litone01"},"content":"                .withName(VALID_TASK_NAME_TASKTWO).build();","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_TASKTWO).build());","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-04-05"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"        Model expectedModel \u003d new ModelManager(new Sochedule(model.getSochedule()), new UserPrefs());","lastModifiedDate":"2021-04-05"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-04-05"},{"lineNumber":88,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":89,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":91,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":92,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2021-04-05"},{"lineNumber":94,"author":{"gitId":"ljhgab"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-04-05"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-04-05"},{"lineNumber":99,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":100,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":101,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":102,"author":{"gitId":"ljhgab"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2021-04-05"},{"lineNumber":103,"author":{"gitId":"ljhgab"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-04-05"},{"lineNumber":104,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":105,"author":{"gitId":"ljhgab"},"content":"        // edit task in filtered list into a duplicate in sochedule","lastModifiedDate":"2021-04-05"},{"lineNumber":106,"author":{"gitId":"ljhgab"},"content":"        Task taskInList \u003d model.getSochedule().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2021-04-05"},{"lineNumber":107,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-04-05"},{"lineNumber":108,"author":{"gitId":"ljhgab"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2021-04-05"},{"lineNumber":109,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":110,"author":{"gitId":"ljhgab"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-04-05"},{"lineNumber":111,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":112,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":113,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":114,"author":{"gitId":"ljhgab"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2021-04-05"},{"lineNumber":115,"author":{"gitId":"ljhgab"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-04-05"},{"lineNumber":116,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-05"},{"lineNumber":117,"author":{"gitId":"ljhgab"},"content":"                .withName(VALID_TASK_NAME_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":118,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-04-05"},{"lineNumber":119,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":120,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":121,"author":{"gitId":"ljhgab"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-05"},{"lineNumber":122,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":123,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":124,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":125,"author":{"gitId":"ljhgab"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-04-05"},{"lineNumber":126,"author":{"gitId":"ljhgab"},"content":"     * but smaller than size of sochedule","lastModifiedDate":"2021-04-05"},{"lineNumber":127,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":128,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":129,"author":{"gitId":"ljhgab"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2021-04-05"},{"lineNumber":130,"author":{"gitId":"ljhgab"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-04-05"},{"lineNumber":131,"author":{"gitId":"ljhgab"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":132,"author":{"gitId":"ljhgab"},"content":"        // ensures that outOfBoundIndex is still in bounds of sochedule list","lastModifiedDate":"2021-04-05"},{"lineNumber":133,"author":{"gitId":"ljhgab"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSochedule().getTaskList().size());","lastModifiedDate":"2021-04-05"},{"lineNumber":134,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":135,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex,","lastModifiedDate":"2021-04-05"},{"lineNumber":136,"author":{"gitId":"ljhgab"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_TASKTWO).build());","lastModifiedDate":"2021-04-05"},{"lineNumber":137,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":138,"author":{"gitId":"ljhgab"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-05"},{"lineNumber":139,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":140,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":141,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":142,"author":{"gitId":"ljhgab"},"content":"    public void execute_editTaskDeadlineToExpiredDeadline_failure() {","lastModifiedDate":"2021-04-05"},{"lineNumber":143,"author":{"gitId":"ljhgab"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-04-05"},{"lineNumber":144,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":145,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-05"},{"lineNumber":146,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(INVALID_PAST_DEADLINE).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":147,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(indexLastTask, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":148,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":149,"author":{"gitId":"ljhgab"},"content":"        assertCommandFailure(editTaskCommand, model, Messages.MESSAGE_PAST_DEADLINE);","lastModifiedDate":"2021-04-05"},{"lineNumber":150,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":151,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":152,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":153,"author":{"gitId":"YuFeng0930"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2021-04-06"},{"lineNumber":154,"author":{"gitId":"YuFeng0930"},"content":"        EditTaskCommand editTaskCommand \u003d","lastModifiedDate":"2021-04-06"},{"lineNumber":155,"author":{"gitId":"YuFeng0930"},"content":"                new EditTaskCommand(INDEX_FIRST_TASK, new EditTaskCommand.EditTaskDescriptor());","lastModifiedDate":"2021-04-06"},{"lineNumber":156,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":157,"author":{"gitId":"YuFeng0930"},"content":"        assertCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_NO_CHANGE);","lastModifiedDate":"2021-04-06"},{"lineNumber":158,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":159,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":160,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":161,"author":{"gitId":"ljhgab"},"content":"    public void equals() {","lastModifiedDate":"2021-04-05"},{"lineNumber":162,"author":{"gitId":"ljhgab"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, DESC_TASKONE);","lastModifiedDate":"2021-04-05"},{"lineNumber":163,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":164,"author":{"gitId":"ljhgab"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-05"},{"lineNumber":165,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor copyDescriptor \u003d new EditTaskCommand.EditTaskDescriptor(DESC_TASKONE);","lastModifiedDate":"2021-04-05"},{"lineNumber":166,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":167,"author":{"gitId":"ljhgab"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-04-05"},{"lineNumber":168,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":169,"author":{"gitId":"ljhgab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-05"},{"lineNumber":170,"author":{"gitId":"ljhgab"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-04-05"},{"lineNumber":171,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":172,"author":{"gitId":"ljhgab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":173,"author":{"gitId":"ljhgab"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-04-05"},{"lineNumber":174,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":175,"author":{"gitId":"ljhgab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":176,"author":{"gitId":"ljhgab"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-04-05"},{"lineNumber":177,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":178,"author":{"gitId":"ljhgab"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":179,"author":{"gitId":"ljhgab"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_SECOND_TASK, DESC_TASKONE)));","lastModifiedDate":"2021-04-05"},{"lineNumber":180,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":181,"author":{"gitId":"ljhgab"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":182,"author":{"gitId":"ljhgab"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST_TASK, DESC_TASKTWO)));","lastModifiedDate":"2021-04-05"},{"lineNumber":183,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":184,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":185,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"YuFeng0930":8,"ljhgab":175,"litone01":2}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_EVENTONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_PROJECT;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_IMPORTANT;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    public void equals() {","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"                new EditTaskCommand.EditTaskDescriptor(DESC_TASKONE);","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        assertTrue(DESC_TASKONE.equals(descriptorWithSameValues));","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        assertTrue(DESC_TASKONE.equals(DESC_TASKONE));","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        assertFalse(DESC_TASKONE.equals(null));","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"        assertFalse(DESC_TASKONE.equals(5));","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        assertFalse(DESC_TASKONE.equals(DESC_TASKTWO));","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor editedTaskOne \u003d new EditTaskDescriptorBuilder(DESC_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"                .withName(VALID_EVENT_NAME_EVENTTWO).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        assertFalse(DESC_TASKONE.equals(editedTaskOne));","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"        editedTaskOne \u003d new EditTaskDescriptorBuilder(DESC_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKTWO).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"        assertFalse(DESC_EVENTONE.equals(editedTaskOne));","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"        // different priority -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"        editedTaskOne \u003d new EditTaskDescriptorBuilder(DESC_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"                .withPriority(VALID_TASK_PRIORITY_TASKTWO).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"        assertFalse(DESC_TASKONE.equals(editedTaskOne));","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"        // different categories -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"        editedTaskOne \u003d new EditTaskDescriptorBuilder(DESC_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_PROJECT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"        assertFalse(DESC_TASKONE.equals(editedTaskOne));","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        editedTaskOne \u003d new EditTaskDescriptorBuilder(DESC_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"                .withTags(VALID_TASK_TAG_IMPORTANT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"        assertFalse(DESC_TASKONE.equals(editedTaskOne));","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"ljhgab":66}},{"path":"src/test/java/seedu/address/logic/commands/FindEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.CAMP;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.DATE;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSochedule;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":" * Contains integration tests (interaction with the Model) for {@code FindEventCommand}.","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"public class FindEventCommandTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    public void equals() {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        EventNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        EventNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        FindEventCommand findFirstCommand \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        FindEventCommand findSecondCommand \u003d new FindEventCommand(secondPredicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        FindEventCommand findFirstCommandCopy \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"    public void execute_zeroKeywords_noEventFound() {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEventList());","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"    public void execute_multipleKeywords_multipleEventsFound() {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"meeting anniversary camping\");","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Arrays.asList(MEETING, DATE, CAMP), model.getFilteredEventList());","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"     * Parses {@code userInput} into a {@code EventNameContainsKeywordsPredicate}.","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"    private EventNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"        return new EventNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"ljhgab":84}},{"path":"src/test/java/seedu/address/logic/commands/FindFreeTimeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EXAMPLE_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FREE_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NO_FREE_TIME_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSochedule;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"public class FindFreeTimeCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    public void execute_validDateNoFreeTime_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        Date exampleDate \u003d new Date(NO_FREE_TIME_DATE);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        FindFreeTimeCommand findFreeTimeCommand \u003d new FindFreeTimeCommand(exampleDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        String expectedMessage \u003d findFreeTimeCommand.MESSAGE_NO_FREE_TIME;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"            CommandResult result \u003d findFreeTimeCommand.execute(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"            assertEquals(result, new CommandResult(expectedMessage));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    public void execute_validDateAllDayFree_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"        Date exampleDate \u003d new Date(FREE_DATE);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cString\u003e actual \u003d model.getFreeTimeSlots(exampleDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"        ArrayList\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"        expected.add(\"The entire day is free!\");","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"    public void equals() {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"        Date exampleDateOne \u003d new Date(FREE_DATE);","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"        Date exampleDateTwo \u003d new Date(EXAMPLE_DATE);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"        FindFreeTimeCommand findFreeTimeCommandOne \u003d new FindFreeTimeCommand(exampleDateOne);","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"        FindFreeTimeCommand findFreeTimeCommandTwo \u003d new FindFreeTimeCommand(exampleDateTwo);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(findFreeTimeCommandOne.equals(findFreeTimeCommandOne));","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(findFreeTimeCommandOne.equals(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(findFreeTimeCommandOne.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(findFreeTimeCommandOne.equals(findFreeTimeCommandTwo));","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"icelenaugust":72}},{"path":"src/test/java/seedu/address/logic/commands/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.BREAKFAST;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.EXERCISE;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}.","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"public class FindTaskCommandTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    public void equals() {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        TaskNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        TaskNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        FindTaskCommand findFirstCommand \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        FindTaskCommand findSecondCommand \u003d new FindTaskCommand(secondPredicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        FindTaskCommand findFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"assignment bread run\");","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Arrays.asList(ASSIGNMENT, BREAKFAST, EXERCISE), model.getFilteredTaskList());","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"     * Parses {@code userInput} into a {@code TaskNameContainsKeywordsPredicate}.","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"    private TaskNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"        return new TaskNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"ljhgab":84}},{"path":"src/test/java/seedu/address/logic/commands/ListEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSochedule;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListEventCommand.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"public class ListEventCommandTest {","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    private Model model;","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(new ListEventCommand(), model, ListEventCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(new ListEventCommand(), model, ListEventCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"ljhgab":39}},{"path":"src/test/java/seedu/address/logic/commands/ListTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTaskCommand.","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"public class ListTaskCommandTest {","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-19"}],"authorContributionMap":{"-":29,"ljhgab":10}},{"path":"src/test/java/seedu/address/logic/commands/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"    public Path getSocheduleFilePath() {","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"    public void setSocheduleFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"    public void setSochedule(ReadOnlySochedule newData) {","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"    public void sortTasks(String comparingVar) {","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"    public void sortTasksDefault() {","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"    public int getNumCompletedTask() {","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"    public int getNumOverdueTask() {","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"    public int getNumIncompleteTask() {","lastModifiedDate":"2021-04-08"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"    public int getNumIncomingEvents() {","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"    public ArrayList\u003cString\u003e getFreeTimeSlots(Date date) {","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":89,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":90,"author":{"gitId":"ljhgab"},"content":"    public ReadOnlySochedule getSochedule() {","lastModifiedDate":"2021-04-08"},{"lineNumber":91,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":92,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":94,"author":{"gitId":"ljhgab"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-04-08"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-04-08"},{"lineNumber":99,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"ljhgab"},"content":"    public boolean isTaskListEmpty() {","lastModifiedDate":"2021-04-08"},{"lineNumber":103,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":104,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":105,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":106,"author":{"gitId":"ljhgab"},"content":"    public boolean isEventListEmpty() {","lastModifiedDate":"2021-04-08"},{"lineNumber":107,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":108,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":109,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":110,"author":{"gitId":"ljhgab"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-04-08"},{"lineNumber":111,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":112,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":113,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"ljhgab"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":116,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":117,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":118,"author":{"gitId":"ljhgab"},"content":"    public void doneTask(Task target) {","lastModifiedDate":"2021-04-08"},{"lineNumber":119,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":120,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":121,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":122,"author":{"gitId":"ljhgab"},"content":"    public void pinTask(Task target) {","lastModifiedDate":"2021-04-08"},{"lineNumber":123,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":124,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":125,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":126,"author":{"gitId":"ljhgab"},"content":"    public void unpinTask(Task target) {","lastModifiedDate":"2021-04-08"},{"lineNumber":127,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":128,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":129,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":130,"author":{"gitId":"ljhgab"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-04-08"},{"lineNumber":131,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":132,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":133,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":134,"author":{"gitId":"ljhgab"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-04-08"},{"lineNumber":135,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":136,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":137,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":138,"author":{"gitId":"ljhgab"},"content":"    public void clearExpiredTasks() {","lastModifiedDate":"2021-04-08"},{"lineNumber":139,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":140,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":141,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":142,"author":{"gitId":"ljhgab"},"content":"    public void clearCompletedTasks() {","lastModifiedDate":"2021-04-08"},{"lineNumber":143,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":144,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":145,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":146,"author":{"gitId":"ljhgab"},"content":"    public void clearExpiredEvents() {","lastModifiedDate":"2021-04-08"},{"lineNumber":147,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":148,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":149,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":150,"author":{"gitId":"ljhgab"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-04-08"},{"lineNumber":151,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":152,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":153,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":154,"author":{"gitId":"ljhgab"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-04-08"},{"lineNumber":155,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":156,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":157,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":158,"author":{"gitId":"ljhgab"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-04-08"},{"lineNumber":159,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":160,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":161,"author":{"gitId":"ljhgab"},"content":"    @Override","lastModifiedDate":"2021-04-08"},{"lineNumber":162,"author":{"gitId":"ljhgab"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-04-08"},{"lineNumber":163,"author":{"gitId":"ljhgab"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-04-08"},{"lineNumber":164,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":165,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"ljhgab":165}},{"path":"src/test/java/seedu/address/logic/commands/PinTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":" * {@code PinTaskCommand}.","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"public class PinTaskCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    public void execute_validIndexList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        Task taskToPin \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"        Task taskToPinCopy \u003d copyTask(taskToPin); //copy to preserve integrity","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        model.setTask(taskToPin, taskToPinCopy);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        PinTaskCommand pinTaskCommand \u003d new PinTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d PinTaskCommand.MESSAGE_PIN_TASK_SUCCESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"            CommandResult result \u003d pinTaskCommand.execute(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"            assertEquals(result, new CommandResult(expectedMessage));","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        Task copiedTask \u003d copyTask(taskToPin);","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        expectedModel.setTask(taskToPin, copiedTask);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"        expectedModel.pinTask(copiedTask);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(model.getFilteredTaskList(), expectedModel.getFilteredTaskList());","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"    public void execute_invalidIndexList_throwsCommandException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        PinTaskCommand pinTaskCommand \u003d new PinTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        assertCommandFailure(pinTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    public void equals() {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        PinTaskCommand pinFirstTaskCommand \u003d new PinTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        PinTaskCommand pinSecondTaskCommand \u003d new PinTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(pinFirstTaskCommand.equals(pinFirstTaskCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"        PinTaskCommand deleteFirstCommandCopy \u003d new PinTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(pinFirstTaskCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(pinFirstTaskCommand.equals(1));","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(pinFirstTaskCommand.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(pinFirstTaskCommand.equals(pinSecondTaskCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"     * Copies the task given and returns a new task with the same details as the given task.","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"     * @param taskToCopy task to be copied, here is the task to pin.","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"     * @return a copied task.","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"    private static Task copyTask(Task taskToCopy) {","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"        Name taskName \u003d taskToCopy.getName();","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"        Date deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"        Priority priority \u003d taskToCopy.getPriority();","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"        Set\u003cCategory\u003e categories \u003d taskToCopy.getCategories();","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"        Set\u003cTag\u003e tags \u003d taskToCopy.getTags();","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"        Task copiedTask \u003d new Task(taskName, deadline, priority, categories, tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"        if (taskToCopy.isComplete()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"            copiedTask.markTaskAsDone();","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"        return copiedTask;","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"SoulUseless":107}},{"path":"src/test/java/seedu/address/logic/commands/SortTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.TaskComparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"public class SortTaskCommandTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    public void execute_valid_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        for (String comparingVar : TaskComparator.getAcceptedVar()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"            SortTaskCommand sortTaskCommand \u003d new SortTaskCommand(comparingVar);","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"            String expectedMessage \u003d String.format(SortTaskCommand.MESSAGE_SORT_TASK_SUCCESS);","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"            ModelManager expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"            expectedModel.sortTasks(comparingVar);","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"            assertCommandSuccess(sortTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    // invalid inputs already handled on parsing sort_task command","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"SoulUseless":31}},{"path":"src/test/java/seedu/address/logic/commands/TodayEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_HAPPENING;","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.HAPPENING;","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSochedule;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSocheduleWithTodayEvent;","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.EventCoversTodayPredicate;","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":" * Contains integration tests (interaction with the Model) and unit tests for TodayEventCommand.","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"public class TodayEventCommandTest {","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    private Model model;","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    @BeforeEach","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    public void setUp() {","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"        expectedModel \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"    public void execute_noEventToday_noEventFound() {","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(TodayEventCommand.MESSAGE_TODAY_EVENT_SUCCESS","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"                + MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        EventCoversTodayPredicate predicate \u003d new EventCoversTodayPredicate();","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        TodayEventCommand command \u003d new TodayEventCommand();","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEventList());","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    public void execute_multipleEventsToday_multipleEventsFound() {","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(TodayEventCommand.MESSAGE_TODAY_EVENT_SUCCESS","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"                + MESSAGE_EVENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"        EventCoversTodayPredicate predicate \u003d new EventCoversTodayPredicate();","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"        TodayEventCommand command \u003d new TodayEventCommand();","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"        updateModelWithTodayEvent();","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Arrays.asList(HAPPENING, ANOTHER_HAPPENING), model.getFilteredEventList());","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"    private void updateModelWithTodayEvent() {","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        model \u003d new ModelManager(getTypicalSocheduleWithTodayEvent(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        expectedModel \u003d new ModelManager(getTypicalSocheduleWithTodayEvent(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"ljhgab":63}},{"path":"src/test/java/seedu/address/logic/commands/TodayTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-04-08"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.ANOTHER_DUE;","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.DUE;","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSocheduleWithTodayTask;","lastModifiedDate":"2021-04-08"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-08"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import java.util.Collections;","lastModifiedDate":"2021-04-08"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-08"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-04-08"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-04-08"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.TaskDeadlineIsTodayPredicate;","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-04-08"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":" * Contains integration tests (interaction with the Model) and unit tests for TodayTaskCommand.","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"public class TodayTaskCommandTest {","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    private Model model;","lastModifiedDate":"2021-04-08"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    @BeforeEach","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    public void setUp() {","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"        expectedModel \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"    public void execute_noDeadlineToday_noTaskFound() {","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(TodayTaskCommand.MESSAGE_TODAY_TASK_SUCCESS","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"                + MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"        TaskDeadlineIsTodayPredicate predicate \u003d new TaskDeadlineIsTodayPredicate();","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        TodayTaskCommand command \u003d new TodayTaskCommand();","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"    public void execute_multipleDeadlinesToday_multipleTasksFound() {","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(TodayTaskCommand.MESSAGE_TODAY_TASK_SUCCESS","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"                + MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-04-08"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"        TaskDeadlineIsTodayPredicate predicate \u003d new TaskDeadlineIsTodayPredicate();","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"        TodayTaskCommand command \u003d new TodayTaskCommand();","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"        updateModelWithTodayTask();","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"        assertEquals(Arrays.asList(DUE, ANOTHER_DUE), model.getFilteredTaskList());","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"    private void updateModelWithTodayTask() {","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        model \u003d new ModelManager(getTypicalSocheduleWithTodayTask(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        expectedModel \u003d new ModelManager(getTypicalSocheduleWithTodayTask(), new UserPrefs());","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-08"}],"authorContributionMap":{"ljhgab":63}},{"path":"src/test/java/seedu/address/logic/commands/UnpinTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":" * {@code UnpinTaskCommand}.","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"public class UnpinTaskCommandTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    private Model model \u003d new ModelManager(getTypicalSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    public void execute_validIndexList_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        Task taskToUnpin \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"        Task taskToUnpinCopy \u003d copyTask(taskToUnpin); //make a copy to preserve integrity","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        model.setTask(taskToUnpin, taskToUnpinCopy);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        taskToUnpinCopy.pin(); //have to initialize to pinned","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        UnpinTaskCommand unpinTaskCommand \u003d new UnpinTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d UnpinTaskCommand.MESSAGE_UNPIN_TASK_SUCCESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"            CommandResult result \u003d unpinTaskCommand.execute(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"            assertEquals(result, new CommandResult(expectedMessage));","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSochedule(), new UserPrefs());","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        Task copiedTask \u003d copyTask(taskToUnpin);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"        expectedModel.setTask(taskToUnpin, copiedTask);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        copiedTask.pin();","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        expectedModel.unpinTask(copiedTask);","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(model.getFilteredTaskList(), expectedModel.getFilteredTaskList());","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    public void execute_invalidIndexList_throwsCommandException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        UnpinTaskCommand unpinTaskCommand \u003d new UnpinTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"        assertCommandFailure(unpinTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"    public void equals() {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        UnpinTaskCommand unpinFirstTaskCommand \u003d new UnpinTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"        UnpinTaskCommand unpinSecondTaskCommand \u003d new UnpinTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(unpinFirstTaskCommand.equals(unpinFirstTaskCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"        UnpinTaskCommand unpinFirstTaskCommandCopy \u003d new UnpinTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(unpinFirstTaskCommand.equals(unpinFirstTaskCommandCopy));","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(unpinFirstTaskCommand.equals(1));","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(unpinFirstTaskCommand.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(unpinFirstTaskCommand.equals(unpinSecondTaskCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"     * Copies the task given and returns a new task with the same details as the given task.","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"     * @param taskToCopy task to be copied, here is the task to pin.","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"     * @return a copied task.","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"    private static Task copyTask(Task taskToCopy) {","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"        Name taskName \u003d taskToCopy.getName();","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"        Date deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"        Priority priority \u003d taskToCopy.getPriority();","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"        Set\u003cCategory\u003e categories \u003d taskToCopy.getCategories();","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"        Set\u003cTag\u003e tags \u003d taskToCopy.getTags();","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"        Task copiedTask \u003d new Task(taskName, deadline, priority, categories, tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"        if (taskToCopy.isComplete()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"            copiedTask.markTaskAsDone();","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"        if (taskToCopy.isPinned()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"            copiedTask.pin();","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"        return copiedTask;","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"SoulUseless":113}},{"path":"src/test/java/seedu/address/logic/parser/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PAST_EVENT_END_DATE_TIME;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_SCHOOL;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_WORK;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDDATE_DESC_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDDATE_DESC_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDTIME_DESC_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDTIME_DESC_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CATEGORY_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ENDDATEPAST_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ENDDATE_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ENDTIME_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STARTDATE_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STARTDATE_DESC_0229;","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STARTTIME_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTDATE_DESC_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTDATE_DESC_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTTIME_DESC_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTTIME_DESC_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FINAL;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FUN;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_SCHOOL;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_WORK;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FINAL;","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FUN;","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalEvents.EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalEvents.EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"    private AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"        Event expectedEvent \u003d new EventBuilder(EVENTTWO).withTags(VALID_EVENT_TAG_FUN).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL + TAG_DESC_FUN, new AddEventCommand(expectedEvent));","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, NAME_DESC_EVENTONE + NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL + TAG_DESC_FUN, new AddEventCommand(expectedEvent));","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"        // multiple start dates - last start date accepted","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTONE + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL + TAG_DESC_FUN, new AddEventCommand(expectedEvent));","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"        // multiple start times - last start time accepted","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL + TAG_DESC_FUN, new AddEventCommand(expectedEvent));","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"        // multiple end dates - last end date accepted","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTONE + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL + TAG_DESC_FUN, new AddEventCommand(expectedEvent));","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"        // multiple end times - last end time accepted","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTONE + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL + TAG_DESC_FUN, new AddEventCommand(expectedEvent));","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"        // multiple categories - all accepted","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"        Event expectedEventMultipleCategories \u003d new EventBuilder(EVENTTWO)","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"                .withCategories(VALID_EVENT_CATEGORY_WORK, VALID_EVENT_CATEGORY_SCHOOL)","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"                .build();","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"                        + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"                        + CATEGORY_DESC_SCHOOL + CATEGORY_DESC_WORK + TAG_DESC_FUN,","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"                new AddEventCommand(expectedEventMultipleCategories));","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"        Event expectedEventMultipleTags \u003d new EventBuilder(EVENTTWO)","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FINAL, VALID_EVENT_TAG_FUN).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"                        + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"                        + CATEGORY_DESC_SCHOOL + TAG_DESC_FINAL + TAG_DESC_FUN,","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"                new AddEventCommand(expectedEventMultipleTags));","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"        // zero tags","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"        Event expectedEvent \u003d new EventBuilder(EVENTONE).withTags().build();","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, NAME_DESC_EVENTONE + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK, new AddEventCommand(expectedEvent));","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_pastDateTime_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"        // zero tags","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTONE + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + INVALID_ENDDATEPAST_DESC + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK, MESSAGE_PAST_EVENT_END_DATE_TIME);","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":"        // missing start date prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTTWO + VALID_EVENT_STARTDATE_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":"        // missing start time prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"YuFeng0930"},"content":"                + VALID_EVENT_STARTTIME_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"YuFeng0930"},"content":"        // missing end date prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + VALID_EVENT_ENDDATE_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"YuFeng0930"},"content":"        // missing end time prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + VALID_EVENT_ENDTIME_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"YuFeng0930"},"content":"        // missing category prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTTWO + STARTDATE_DESC_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + VALID_EVENT_ENDTIME_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"YuFeng0930"},"content":"                + VALID_EVENT_CATEGORY_SCHOOL, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"YuFeng0930"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_EVENTTWO + VALID_EVENT_STARTDATE_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"YuFeng0930"},"content":"                + VALID_EVENT_STARTTIME_EVENTTWO + VALID_EVENT_ENDDATE_EVENTTWO + VALID_EVENT_ENDTIME_EVENTTWO","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"YuFeng0930"},"content":"                + VALID_EVENT_CATEGORY_SCHOOL, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"YuFeng0930"},"content":"        // invalid name","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK + TAG_DESC_FINAL, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"YuFeng0930"},"content":"        // invalid start date","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTONE + INVALID_STARTDATE_DESC","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-04-06"},{"lineNumber":178,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK + TAG_DESC_FINAL, Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":179,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":180,"author":{"gitId":"YuFeng0930"},"content":"        // invalid start date 0229","lastModifiedDate":"2021-04-06"},{"lineNumber":181,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTONE + INVALID_STARTDATE_DESC_0229","lastModifiedDate":"2021-04-06"},{"lineNumber":182,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK + TAG_DESC_FINAL, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":185,"author":{"gitId":"YuFeng0930"},"content":"        // invalid start time","lastModifiedDate":"2021-03-23"},{"lineNumber":186,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTONE + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":187,"author":{"gitId":"YuFeng0930"},"content":"                + INVALID_STARTTIME_DESC + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":188,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK + TAG_DESC_FINAL, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":189,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":190,"author":{"gitId":"YuFeng0930"},"content":"        // invalid end date","lastModifiedDate":"2021-03-23"},{"lineNumber":191,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTONE + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":192,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + INVALID_ENDDATE_DESC + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK + TAG_DESC_FINAL, Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":194,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"YuFeng0930"},"content":"        // invalid end time","lastModifiedDate":"2021-03-23"},{"lineNumber":196,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTONE + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":197,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + INVALID_ENDTIME_DESC","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK + TAG_DESC_FINAL, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"YuFeng0930"},"content":"        // invalid category","lastModifiedDate":"2021-03-23"},{"lineNumber":201,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTONE + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":202,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":203,"author":{"gitId":"YuFeng0930"},"content":"                + INVALID_CATEGORY_DESC + TAG_DESC_FINAL, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":204,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":205,"author":{"gitId":"YuFeng0930"},"content":"        // invalid tag","lastModifiedDate":"2021-03-23"},{"lineNumber":206,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTONE + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"YuFeng0930"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_STARTDATE_DESC","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"YuFeng0930"},"content":"                + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"YuFeng0930"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"YuFeng0930"},"content":"                        + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"YuFeng0930"},"content":"                        + CATEGORY_DESC_WORK + TAG_DESC_FINAL,","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"YuFeng0930"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"YuFeng0930":222}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PAST_DEADLINE;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_HOMEWORK;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_PROJECT;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_TASKONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_TASKTWO;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CATEGORY_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINEPAST_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC_0229;","lastModifiedDate":"2021-04-06"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_TASKONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_TASKTWO;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_TASKONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_TASKTWO;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DIFFICULT;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_IMPORTANT;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_HOMEWORK;","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_PROJECT;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_DIFFICULT;","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_IMPORTANT;","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.TASKONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalTasks.TASKTWO;","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"        Task expectedTask \u003d new TaskBuilder(TASKTWO).withTags(VALID_TASK_TAG_DIFFICULT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"                + PRIORITY_DESC_TASKTWO + CATEGORY_DESC_PROJECT + TAG_DESC_DIFFICULT, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, NAME_DESC_TASKONE + NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"                + PRIORITY_DESC_TASKTWO + CATEGORY_DESC_PROJECT + TAG_DESC_DIFFICULT, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"        // multiple deadlines - last deadline accepted","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, NAME_DESC_TASKTWO + DEADLINE_DESC_TASKONE + DEADLINE_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"                + PRIORITY_DESC_TASKTWO + CATEGORY_DESC_PROJECT + TAG_DESC_DIFFICULT, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"        // multiple priorities - last priority accepted","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO + PRIORITY_DESC_TASKONE","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"                + PRIORITY_DESC_TASKTWO + CATEGORY_DESC_PROJECT + TAG_DESC_DIFFICULT, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"        // multiple categories - all accepted","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"        Task expectedTaskMultipleCategories \u003d new TaskBuilder(TASKTWO)","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_HOMEWORK, VALID_TASK_CATEGORY_PROJECT)","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"                        + CATEGORY_DESC_PROJECT + CATEGORY_DESC_HOMEWORK + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT,","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"                new AddTaskCommand(expectedTaskMultipleCategories));","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"        Task expectedTaskMultipleTags \u003d new TaskBuilder(TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"                .withTags(VALID_TASK_TAG_IMPORTANT, VALID_TASK_TAG_DIFFICULT)","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"                        + CATEGORY_DESC_PROJECT + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT,","lastModifiedDate":"2021-03-20"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"                new AddTaskCommand(expectedTaskMultipleTags));","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":89,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":90,"author":{"gitId":"ljhgab"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-03-20"},{"lineNumber":91,"author":{"gitId":"ljhgab"},"content":"        // zero tags","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"ljhgab"},"content":"        Task expectedTask \u003d new TaskBuilder(TASKONE).withTags().build();","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, NAME_DESC_TASKONE + DEADLINE_DESC_TASKONE + PRIORITY_DESC_TASKONE","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_HOMEWORK, new AddTaskCommand(expectedTask));","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_pastDeadline_failure() {","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"        // zero tags","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_EVENTONE + INVALID_DEADLINEPAST_DESC + PRIORITY_DESC_TASKONE","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_HOMEWORK, MESSAGE_PAST_DEADLINE);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"ljhgab"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-20"},{"lineNumber":106,"author":{"gitId":"ljhgab"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-20"},{"lineNumber":107,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"ljhgab"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-20"},{"lineNumber":109,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, VALID_TASK_NAME_TASKTWO + DEADLINE_DESC_TASKTWO + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-04-05"},{"lineNumber":110,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_HOMEWORK, expectedMessage);","lastModifiedDate":"2021-03-20"},{"lineNumber":111,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"ljhgab"},"content":"        // missing deadline prefix","lastModifiedDate":"2021-03-20"},{"lineNumber":113,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, NAME_DESC_TASKTWO + VALID_TASK_DEADLINE_TASKTWO + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-04-05"},{"lineNumber":114,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_HOMEWORK, expectedMessage);","lastModifiedDate":"2021-03-20"},{"lineNumber":115,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":116,"author":{"gitId":"ljhgab"},"content":"        // missing priority prefix","lastModifiedDate":"2021-03-20"},{"lineNumber":117,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO + VALID_TASK_PRIORITY_TASKTWO","lastModifiedDate":"2021-04-05"},{"lineNumber":118,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_HOMEWORK, expectedMessage);","lastModifiedDate":"2021-03-20"},{"lineNumber":119,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":120,"author":{"gitId":"ljhgab"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-20"},{"lineNumber":121,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, VALID_TASK_NAME_TASKTWO + VALID_TASK_DEADLINE_TASKTWO","lastModifiedDate":"2021-04-05"},{"lineNumber":122,"author":{"gitId":"ljhgab"},"content":"                + VALID_TASK_PRIORITY_TASKTWO + VALID_TASK_CATEGORY_HOMEWORK, expectedMessage);","lastModifiedDate":"2021-04-05"},{"lineNumber":123,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":124,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":125,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":126,"author":{"gitId":"ljhgab"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-20"},{"lineNumber":127,"author":{"gitId":"ljhgab"},"content":"        // invalid name","lastModifiedDate":"2021-03-20"},{"lineNumber":128,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DEADLINE_DESC_TASKTWO + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":129,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_HOMEWORK + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-20"},{"lineNumber":130,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":131,"author":{"gitId":"ljhgab"},"content":"        // invalid deadline","lastModifiedDate":"2021-03-20"},{"lineNumber":132,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, NAME_DESC_TASKTWO + INVALID_DEADLINE_DESC + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_HOMEWORK + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT, Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"        // invalid deadline 0229","lastModifiedDate":"2021-04-06"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, NAME_DESC_TASKTWO + INVALID_DEADLINE_DESC_0229 + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-04-06"},{"lineNumber":137,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_HOMEWORK + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-20"},{"lineNumber":138,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":139,"author":{"gitId":"ljhgab"},"content":"        // invalid priority","lastModifiedDate":"2021-03-20"},{"lineNumber":140,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO + INVALID_PRIORITY_DESC","lastModifiedDate":"2021-03-20"},{"lineNumber":141,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_HOMEWORK + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-20"},{"lineNumber":142,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":143,"author":{"gitId":"ljhgab"},"content":"        // invalid category","lastModifiedDate":"2021-03-20"},{"lineNumber":144,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":145,"author":{"gitId":"ljhgab"},"content":"                + INVALID_CATEGORY_DESC + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-20"},{"lineNumber":146,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":147,"author":{"gitId":"ljhgab"},"content":"        // invalid tag","lastModifiedDate":"2021-03-20"},{"lineNumber":148,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":149,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_HOMEWORK + INVALID_TAG_DESC + VALID_TASK_TAG_IMPORTANT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":150,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":151,"author":{"gitId":"ljhgab"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-20"},{"lineNumber":152,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DEADLINE_DESC_TASKTWO + INVALID_PRIORITY_DESC","lastModifiedDate":"2021-03-20"},{"lineNumber":153,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_HOMEWORK, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-20"},{"lineNumber":154,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":155,"author":{"gitId":"ljhgab"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-20"},{"lineNumber":156,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_TASKTWO + DEADLINE_DESC_TASKTWO","lastModifiedDate":"2021-03-20"},{"lineNumber":157,"author":{"gitId":"ljhgab"},"content":"                        + PRIORITY_DESC_TASKTWO + CATEGORY_DESC_HOMEWORK + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT,","lastModifiedDate":"2021-03-20"},{"lineNumber":158,"author":{"gitId":"ljhgab"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-20"},{"lineNumber":159,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":160,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":161,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"YuFeng0930":15,"ljhgab":146}},{"path":"src/test/java/seedu/address/logic/parser/DeleteEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":" * outside of the DeleteEventCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":" * same path through the DeleteEventCommand, and therefore we test only one of them.","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"public class DeleteEventCommandParserTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    private DeleteEventCommandParser parser \u003d new DeleteEventCommandParser();","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    public void parse_validArgs_returnsDeleteEventCommand() {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, \"1\", new DeleteEventCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"ljhgab":33}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":" * outside of the DeleteTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":" * same path through the DeleteTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    public void parse_validArgs_returnsDeleteTaskCommand() {","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"-":21,"ljhgab":10,"SoulUseless":1}},{"path":"src/test/java/seedu/address/logic/parser/EditEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_SCHOOL;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_WORK;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDDATE_DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDDATE_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDTIME_DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ENDTIME_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CATEGORY_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ENDDATE_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ENDTIME_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STARTDATE_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STARTDATE_DESC_0229;","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STARTTIME_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTDATE_DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTDATE_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTTIME_DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STARTTIME_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FINAL;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FUN;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_SCHOOL;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_WORK;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FINAL;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FUN;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"public class EditEventCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"    private EditEventCommandParser parser \u003d new EditEventCommandParser();","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"        // no index specified","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_EVENTTWO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"        // no field specified","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\", EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"        // no index and no field specified","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"        // negative index","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"-5\" + VALID_EVENT_NAME_EVENTTWO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"        // zero index","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"0\" + VALID_EVENT_NAME_EVENTTWO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"        // invalid name","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"        // invalid start date","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STARTDATE_DESC, Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"        // invalid start date 0229","lastModifiedDate":"2021-04-06"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STARTDATE_DESC_0229, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-06"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"        // invalid start time","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STARTTIME_DESC, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"        // invalid end date","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ENDDATE_DESC, Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"        // invalid end time","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ENDTIME_DESC, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"        // invalid category","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CATEGORY_DESC, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"        // invalid tag","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"        // invalid start date followed by valid end date.","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STARTDATE_DESC + ENDDATE_DESC_EVENTONE,","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"                Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"ljhgab"},"content":"        // valid start date followed by invalid start date.","lastModifiedDate":"2021-04-05"},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + STARTDATE_DESC_EVENTONE + INVALID_STARTDATE_DESC,","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"                Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Event} being edited,","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FINAL + TAG_DESC_FUN + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FINAL + TAG_EMPTY + TAG_DESC_FUN, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FINAL + TAG_DESC_FUN, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_STARTDATE_DESC","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"                + VALID_EVENT_STARTTIME_EVENTTWO, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_EVENTTWO","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"                + STARTDATE_DESC_EVENTTWO + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL + CATEGORY_DESC_WORK + TAG_DESC_FINAL + TAG_DESC_FUN;","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTTWO)","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTTWO).withStartTime(VALID_EVENT_STARTTIME_EVENTTWO)","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTTWO).withEndTime(VALID_EVENT_ENDTIME_EVENTTWO)","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"                .withCategories(VALID_EVENT_CATEGORY_SCHOOL, VALID_EVENT_CATEGORY_WORK)","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FINAL, VALID_EVENT_TAG_FUN).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"YuFeng0930"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"YuFeng0930"},"content":"        String userInput \u003d targetIndex.getOneBased() + STARTDATE_DESC_EVENTONE + ENDDATE_DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTONE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"YuFeng0930"},"content":"        // name","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"YuFeng0930"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"YuFeng0930"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"YuFeng0930"},"content":"        // start date","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"YuFeng0930"},"content":"        userInput \u003d targetIndex.getOneBased() + STARTDATE_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"YuFeng0930"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withStartDate(VALID_EVENT_STARTDATE_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"YuFeng0930"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"YuFeng0930"},"content":"        // start time","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"YuFeng0930"},"content":"        userInput \u003d targetIndex.getOneBased() + STARTTIME_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"YuFeng0930"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withStartTime(VALID_EVENT_STARTTIME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"YuFeng0930"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"YuFeng0930"},"content":"        // end date","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"YuFeng0930"},"content":"        userInput \u003d targetIndex.getOneBased() + ENDDATE_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"YuFeng0930"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withEndDate(VALID_EVENT_ENDDATE_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"YuFeng0930"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"YuFeng0930"},"content":"        // end time","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"YuFeng0930"},"content":"        userInput \u003d targetIndex.getOneBased() + ENDTIME_DESC_EVENTTWO;","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"YuFeng0930"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withEndTime(VALID_EVENT_ENDTIME_EVENTTWO).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"YuFeng0930"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"YuFeng0930"},"content":"        // categories","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"YuFeng0930"},"content":"        userInput \u003d targetIndex.getOneBased() + CATEGORY_DESC_SCHOOL;","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"YuFeng0930"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withCategories(VALID_EVENT_CATEGORY_SCHOOL).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"YuFeng0930"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"YuFeng0930"},"content":"        // tags","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"YuFeng0930"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FUN;","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"YuFeng0930"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withTags(VALID_EVENT_TAG_FUN).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"YuFeng0930"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"YuFeng0930"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"YuFeng0930"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_EVENTTWO","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"YuFeng0930"},"content":"                + STARTDATE_DESC_EVENTTWO + STARTTIME_DESC_EVENTTWO + ENDDATE_DESC_EVENTTWO + ENDTIME_DESC_EVENTTWO","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_WORK + TAG_DESC_FINAL + NAME_DESC_EVENTONE","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"YuFeng0930"},"content":"                + STARTDATE_DESC_EVENTONE + STARTTIME_DESC_EVENTONE + ENDDATE_DESC_EVENTONE + ENDTIME_DESC_EVENTONE","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"YuFeng0930"},"content":"                + CATEGORY_DESC_SCHOOL + CATEGORY_DESC_WORK + TAG_DESC_FINAL + TAG_DESC_FUN;","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTONE).withStartTime(VALID_EVENT_STARTTIME_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTONE).withEndTime(VALID_EVENT_ENDTIME_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"YuFeng0930"},"content":"                .withCategories(VALID_EVENT_CATEGORY_SCHOOL, VALID_EVENT_CATEGORY_WORK)","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FINAL, VALID_EVENT_TAG_FUN).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"YuFeng0930"},"content":"        // no other valid values specified","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"YuFeng0930"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"YuFeng0930"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_STARTDATE_DESC + STARTDATE_DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTONE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"YuFeng0930"},"content":"        // other valid values specified","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"YuFeng0930"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_EVENTONE + INVALID_ENDDATE_DESC + STARTDATE_DESC_EVENTONE","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"YuFeng0930"},"content":"                + ENDDATE_DESC_EVENTONE;","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"YuFeng0930"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_EVENT_NAME_EVENTONE)","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTONE).withEndDate(VALID_EVENT_ENDDATE_EVENTONE).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"YuFeng0930"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"YuFeng0930"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"YuFeng0930"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"YuFeng0930"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"YuFeng0930"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"YuFeng0930"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"YuFeng0930"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"YuFeng0930":262,"ljhgab":1}},{"path":"src/test/java/seedu/address/logic/parser/EditTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_HOMEWORK;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_PROJECT;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_DESC_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CATEGORY_DESC;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_DESC_0229;","lastModifiedDate":"2021-04-06"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_DIFFICULT;","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_IMPORTANT;","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_HOMEWORK;","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_PROJECT;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_DIFFICULT;","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_IMPORTANT;","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"public class EditTaskCommandParserTest {","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"    private EditTaskCommandParser parser \u003d new EditTaskCommandParser();","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"        // no index specified","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, VALID_TASK_NAME_TASKTWO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"        // no field specified","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1\", EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"        // no index and no field specified","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"        // negative index","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"-5\" + VALID_TASK_NAME_TASKTWO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"        // zero index","lastModifiedDate":"2021-04-05"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"0\" + VALID_TASK_NAME_TASKTWO, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-04-05"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-05"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-04-05"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-04-05"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-04-05"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"        // invalid name","lastModifiedDate":"2021-04-05"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":88,"author":{"gitId":"ljhgab"},"content":"        // invalid deadline","lastModifiedDate":"2021-04-05"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_DESC, Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"        // invalid deadline","lastModifiedDate":"2021-04-06"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_DESC_0229, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-06"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":94,"author":{"gitId":"ljhgab"},"content":"        // invalid priority","lastModifiedDate":"2021-04-05"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PRIORITY_DESC, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"        // invalid category","lastModifiedDate":"2021-04-05"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CATEGORY_DESC, Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":99,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":100,"author":{"gitId":"ljhgab"},"content":"        // invalid tag","lastModifiedDate":"2021-04-05"},{"lineNumber":101,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":102,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":103,"author":{"gitId":"ljhgab"},"content":"        // invalid deadline followed by valid priority.","lastModifiedDate":"2021-04-05"},{"lineNumber":104,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEADLINE_DESC + PRIORITY_DESC_TASKONE,","lastModifiedDate":"2021-04-05"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"                Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":106,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":107,"author":{"gitId":"ljhgab"},"content":"        // valid deadline followed by invalid deadline.","lastModifiedDate":"2021-04-05"},{"lineNumber":108,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1\" + DEADLINE_DESC_TASKONE + INVALID_DEADLINE_DESC,","lastModifiedDate":"2021-04-05"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"                Date.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2021-04-06"},{"lineNumber":110,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":111,"author":{"gitId":"ljhgab"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Task} being edited,","lastModifiedDate":"2021-04-05"},{"lineNumber":112,"author":{"gitId":"ljhgab"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-04-05"},{"lineNumber":113,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-04-05"},{"lineNumber":114,"author":{"gitId":"ljhgab"},"content":"                \"1\" + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":115,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-04-05"},{"lineNumber":116,"author":{"gitId":"ljhgab"},"content":"                \"1\" + TAG_DESC_IMPORTANT + TAG_EMPTY + TAG_DESC_DIFFICULT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":117,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-04-05"},{"lineNumber":118,"author":{"gitId":"ljhgab"},"content":"                \"1\" + TAG_EMPTY + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":119,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":120,"author":{"gitId":"ljhgab"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-04-05"},{"lineNumber":121,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_DEADLINE_DESC","lastModifiedDate":"2021-04-05"},{"lineNumber":122,"author":{"gitId":"ljhgab"},"content":"                + VALID_TASK_PRIORITY_TASKTWO, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":123,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":124,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":125,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":126,"author":{"gitId":"ljhgab"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-04-05"},{"lineNumber":127,"author":{"gitId":"ljhgab"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":128,"author":{"gitId":"ljhgab"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_TASKTWO","lastModifiedDate":"2021-04-05"},{"lineNumber":129,"author":{"gitId":"ljhgab"},"content":"                + DEADLINE_DESC_TASKTWO + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-04-05"},{"lineNumber":130,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_PROJECT + CATEGORY_DESC_HOMEWORK","lastModifiedDate":"2021-04-05"},{"lineNumber":131,"author":{"gitId":"ljhgab"},"content":"                + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT;","lastModifiedDate":"2021-04-05"},{"lineNumber":132,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":133,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-05"},{"lineNumber":134,"author":{"gitId":"ljhgab"},"content":"                .withName(VALID_TASK_NAME_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":135,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":136,"author":{"gitId":"ljhgab"},"content":"                .withPriority(VALID_TASK_PRIORITY_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":137,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_PROJECT, VALID_TASK_CATEGORY_HOMEWORK)","lastModifiedDate":"2021-04-05"},{"lineNumber":138,"author":{"gitId":"ljhgab"},"content":"                .withTags(VALID_TASK_TAG_IMPORTANT, VALID_TASK_TAG_DIFFICULT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":139,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":140,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":141,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":142,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":143,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":144,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":145,"author":{"gitId":"ljhgab"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-04-05"},{"lineNumber":146,"author":{"gitId":"ljhgab"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":147,"author":{"gitId":"ljhgab"},"content":"        String userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_TASKONE + PRIORITY_DESC_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":148,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":149,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-05"},{"lineNumber":150,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":151,"author":{"gitId":"ljhgab"},"content":"                .withPriority(VALID_TASK_PRIORITY_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":152,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-04-05"},{"lineNumber":153,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":154,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":155,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":156,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":157,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":158,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":159,"author":{"gitId":"ljhgab"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-04-05"},{"lineNumber":160,"author":{"gitId":"ljhgab"},"content":"        // name","lastModifiedDate":"2021-04-05"},{"lineNumber":161,"author":{"gitId":"ljhgab"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":162,"author":{"gitId":"ljhgab"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":163,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-05"},{"lineNumber":164,"author":{"gitId":"ljhgab"},"content":"                .withName(VALID_TASK_NAME_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":165,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-04-05"},{"lineNumber":166,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":167,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":168,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":169,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":170,"author":{"gitId":"ljhgab"},"content":"        // deadline","lastModifiedDate":"2021-04-05"},{"lineNumber":171,"author":{"gitId":"ljhgab"},"content":"        userInput \u003d targetIndex.getOneBased() + DEADLINE_DESC_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":172,"author":{"gitId":"ljhgab"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDeadline(VALID_TASK_DEADLINE_TASKTWO).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":173,"author":{"gitId":"ljhgab"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":174,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":175,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":176,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":177,"author":{"gitId":"ljhgab"},"content":"        // priority","lastModifiedDate":"2021-04-05"},{"lineNumber":178,"author":{"gitId":"ljhgab"},"content":"        userInput \u003d targetIndex.getOneBased() + PRIORITY_DESC_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":179,"author":{"gitId":"ljhgab"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withPriority(VALID_TASK_PRIORITY_TASKTWO).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":180,"author":{"gitId":"ljhgab"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":181,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":182,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":183,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":184,"author":{"gitId":"ljhgab"},"content":"        // categories","lastModifiedDate":"2021-04-05"},{"lineNumber":185,"author":{"gitId":"ljhgab"},"content":"        userInput \u003d targetIndex.getOneBased() + CATEGORY_DESC_HOMEWORK;","lastModifiedDate":"2021-04-05"},{"lineNumber":186,"author":{"gitId":"ljhgab"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withCategories(VALID_TASK_CATEGORY_HOMEWORK).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":187,"author":{"gitId":"ljhgab"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":188,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":189,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":190,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":191,"author":{"gitId":"ljhgab"},"content":"        // tags","lastModifiedDate":"2021-04-05"},{"lineNumber":192,"author":{"gitId":"ljhgab"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_DIFFICULT;","lastModifiedDate":"2021-04-05"},{"lineNumber":193,"author":{"gitId":"ljhgab"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withTags(VALID_TASK_TAG_DIFFICULT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":194,"author":{"gitId":"ljhgab"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":195,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":196,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":197,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":198,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":199,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":200,"author":{"gitId":"ljhgab"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-04-05"},{"lineNumber":201,"author":{"gitId":"ljhgab"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":202,"author":{"gitId":"ljhgab"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_TASKTWO","lastModifiedDate":"2021-04-05"},{"lineNumber":203,"author":{"gitId":"ljhgab"},"content":"                + DEADLINE_DESC_TASKTWO + PRIORITY_DESC_TASKTWO","lastModifiedDate":"2021-04-05"},{"lineNumber":204,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_PROJECT + TAG_DESC_IMPORTANT + NAME_DESC_TASKONE","lastModifiedDate":"2021-04-05"},{"lineNumber":205,"author":{"gitId":"ljhgab"},"content":"                + DEADLINE_DESC_TASKONE + PRIORITY_DESC_TASKONE","lastModifiedDate":"2021-04-05"},{"lineNumber":206,"author":{"gitId":"ljhgab"},"content":"                + CATEGORY_DESC_PROJECT + CATEGORY_DESC_HOMEWORK + TAG_DESC_IMPORTANT + TAG_DESC_DIFFICULT;","lastModifiedDate":"2021-04-05"},{"lineNumber":207,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":208,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-05"},{"lineNumber":209,"author":{"gitId":"ljhgab"},"content":"                .withName(VALID_TASK_NAME_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":210,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKONE).withPriority(VALID_TASK_PRIORITY_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":211,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_PROJECT, VALID_TASK_CATEGORY_HOMEWORK)","lastModifiedDate":"2021-04-05"},{"lineNumber":212,"author":{"gitId":"ljhgab"},"content":"                .withTags(VALID_TASK_TAG_IMPORTANT, VALID_TASK_TAG_DIFFICULT)","lastModifiedDate":"2021-04-05"},{"lineNumber":213,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-04-05"},{"lineNumber":214,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":215,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":216,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":217,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":218,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":219,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":220,"author":{"gitId":"ljhgab"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-04-05"},{"lineNumber":221,"author":{"gitId":"ljhgab"},"content":"        // no other valid values specified","lastModifiedDate":"2021-04-05"},{"lineNumber":222,"author":{"gitId":"ljhgab"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":223,"author":{"gitId":"ljhgab"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DEADLINE_DESC + DEADLINE_DESC_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":224,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-04-05"},{"lineNumber":225,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":226,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-04-05"},{"lineNumber":227,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":228,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":229,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":230,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":231,"author":{"gitId":"ljhgab"},"content":"        // other valid values specified","lastModifiedDate":"2021-04-05"},{"lineNumber":232,"author":{"gitId":"ljhgab"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_TASKONE + INVALID_PRIORITY_DESC + DEADLINE_DESC_TASKONE","lastModifiedDate":"2021-04-05"},{"lineNumber":233,"author":{"gitId":"ljhgab"},"content":"                + PRIORITY_DESC_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":234,"author":{"gitId":"ljhgab"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_TASK_NAME_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":235,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":236,"author":{"gitId":"ljhgab"},"content":"                .withPriority(VALID_TASK_PRIORITY_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":237,"author":{"gitId":"ljhgab"},"content":"                .build();","lastModifiedDate":"2021-04-05"},{"lineNumber":238,"author":{"gitId":"ljhgab"},"content":"        expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":239,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":240,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":241,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":242,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":243,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-05"},{"lineNumber":244,"author":{"gitId":"ljhgab"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-04-05"},{"lineNumber":245,"author":{"gitId":"ljhgab"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-04-05"},{"lineNumber":246,"author":{"gitId":"ljhgab"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-04-05"},{"lineNumber":247,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":248,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand.EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-04-05"},{"lineNumber":249,"author":{"gitId":"ljhgab"},"content":"        EditTaskCommand expectedCommand \u003d new EditTaskCommand(targetIndex, descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":250,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":251,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-04-05"},{"lineNumber":252,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":253,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":254,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"YuFeng0930":7,"ljhgab":247}},{"path":"src/test/java/seedu/address/logic/parser/FindEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"public class FindEventCommandParserTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    private FindEventCommandParser parser \u003d new FindEventCommandParser();","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        FindEventCommand expectedFindCommand \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"                new FindEventCommand(new EventNameContainsKeywordsPredicate(Arrays.asList(\"eventone\", \"eventtwo\")));","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, \"eventone eventtwo\", expectedFindCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, \" \\n eventone \\n \\t eventtwo  \\t\", expectedFindCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"ljhgab":33}},{"path":"src/test/java/seedu/address/logic/parser/FindTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.FindTaskCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"public class FindTaskCommandParserTest {","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    private FindTaskCommandParser parser \u003d new FindTaskCommandParser();","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"        FindTaskCommand expectedFindCommand \u003d","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"                new FindTaskCommand(new TaskNameContainsKeywordsPredicate(Arrays.asList(\"taskone\", \"tasktwo\")));","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, \"taskone tasktwo\", expectedFindCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        assertParseSuccess(parser, \" \\n taskone \\n \\t tasktwo  \\t\", expectedFindCommand);","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"ljhgab":33}},{"path":"src/test/java/seedu/address/logic/parser/SocheduleParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":"import static seedu.address.logic.parser.SocheduleParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"litone01"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"litone01"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"import java.util.List;","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"public class SocheduleParserUtilTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"    private static final String INVALID_NAME \u003d \"T@ask\";","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":"    private static final String INVALID_TAG \u003d \"#busy\";","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"2020/01/01\";","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"    private static final String INVALID_DATE_VALUE \u003d \"2020-13-01\";","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"    private static final String INVALID_TIME_FORMAT \u003d \"1200\";","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"    private static final String INVALID_TIME_VALUE \u003d \"25:00\";","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"    private static final String INVALID_PRIORITY \u003d \"test\";","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"    private static final String INVALID_CATEGORY \u003d \"#school\";","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"litone01"},"content":"    private static final String INVALID_INDEX \u003d \"10 a\";","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"    private static final String VALID_DATE \u003d \"2020-01-01\";","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":"    private static final String VALID_TIME \u003d \"12:00\";","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"    private static final String VALID_PRIORITY \u003d \"6\";","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"    private static final String VALID_CATEGORY_1 \u003d \"school\";","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"    private static final String VALID_CATEGORY_2 \u003d \"math\";","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":"    private static final String VALID_INDEX_1 \u003d \"1\";","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"    private static final String VALID_INDEX_2 \u003d \"2\";","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"litone01"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, () -\u003e SocheduleParserUtil.parseIndex(INVALID_INDEX));","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"litone01"},"content":"            -\u003e SocheduleParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"litone01"},"content":"        // No whitespaces","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"        assertEquals(INDEX_FIRST_TASK, SocheduleParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"litone01"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"        assertEquals(INDEX_FIRST_TASK, SocheduleParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"        // No whitespaces","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"        assertEquals(INDEX_FIRST_EVENT, SocheduleParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"        assertEquals(INDEX_FIRST_EVENT, SocheduleParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":78,"author":{"gitId":"litone01"},"content":"    public void parseIndexes_null_throwsNullPointerException() {","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"litone01"},"content":"        assertThrows(NullPointerException.class, () -\u003e SocheduleParserUtil.parseIndexes(null));","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":83,"author":{"gitId":"litone01"},"content":"    public void parseIndexes_collectionWithInvalidIndexes_throwsParseException() {","lastModifiedDate":"2021-04-07"},{"lineNumber":84,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-07"},{"lineNumber":85,"author":{"gitId":"litone01"},"content":"            -\u003e SocheduleParserUtil.parseIndexes(Arrays.asList(INVALID_INDEX, VALID_INDEX_2)));","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"    public void parseIndexes_emptyCollection_returnsEmptyList() throws Exception {","lastModifiedDate":"2021-04-07"},{"lineNumber":90,"author":{"gitId":"litone01"},"content":"        assertTrue(SocheduleParserUtil.parseIndexes(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-04-07"},{"lineNumber":91,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":92,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":93,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":94,"author":{"gitId":"litone01"},"content":"    public void parseIndexes_collectionWithValidIndexes_returnsIndexList() throws Exception {","lastModifiedDate":"2021-04-07"},{"lineNumber":95,"author":{"gitId":"litone01"},"content":"        List\u003cIndex\u003e actualIndexList \u003d SocheduleParserUtil.parseIndexes(Arrays.asList(VALID_INDEX_1, VALID_INDEX_2));","lastModifiedDate":"2021-04-07"},{"lineNumber":96,"author":{"gitId":"litone01"},"content":"        List\u003cIndex\u003e expectedIndexList \u003d Arrays.asList(Index.fromOneBased(1), Index.fromOneBased(2));","lastModifiedDate":"2021-04-07"},{"lineNumber":97,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":98,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedIndexList, actualIndexList);","lastModifiedDate":"2021-04-07"},{"lineNumber":99,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":100,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":101,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-04-07"},{"lineNumber":102,"author":{"gitId":"litone01"},"content":"    public void parseIndexes_collectionWithDuplicateIndexes_throwsParseException() throws Exception {","lastModifiedDate":"2021-04-07"},{"lineNumber":103,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"litone01"},"content":"            -\u003e SocheduleParserUtil.parseIndexes(Arrays.asList(VALID_INDEX_2, VALID_INDEX_2)));","lastModifiedDate":"2021-04-07"},{"lineNumber":105,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-04-07"},{"lineNumber":106,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":107,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"litone01"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"litone01"},"content":"        assertThrows(NullPointerException.class, () -\u003e SocheduleParserUtil.parseName(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"litone01"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, () -\u003e SocheduleParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"litone01"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"litone01"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedName, SocheduleParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"litone01"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"litone01"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"litone01"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedName, SocheduleParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"litone01"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"litone01"},"content":"        assertThrows(NullPointerException.class, () -\u003e SocheduleParserUtil.parseTag(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"litone01"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, () -\u003e SocheduleParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"litone01"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"litone01"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedTag, SocheduleParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"litone01"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"litone01"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"litone01"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedTag, SocheduleParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"litone01"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"litone01"},"content":"        assertThrows(NullPointerException.class, () -\u003e SocheduleParserUtil.parseTags(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"litone01"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"litone01"},"content":"            -\u003e SocheduleParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"litone01"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"litone01"},"content":"        assertTrue(SocheduleParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"litone01"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"litone01"},"content":"        Set\u003cTag\u003e actualTagSet \u003d SocheduleParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"litone01"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"litone01"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"litone01"},"content":"        assertThrows(NullPointerException.class, () -\u003e SocheduleParserUtil.parseDate(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"litone01"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, () -\u003e SocheduleParserUtil.parseDate(INVALID_DATE_VALUE));","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":188,"author":{"gitId":"litone01"},"content":"    public void parseDate_invalidFormat_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, () -\u003e SocheduleParserUtil.parseDate(INVALID_DATE_FORMAT));","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":192,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"litone01"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"litone01"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":195,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedDate, SocheduleParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"litone01"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"litone01"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"litone01"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedDate, SocheduleParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"litone01"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"litone01"},"content":"        assertThrows(NullPointerException.class, () -\u003e SocheduleParserUtil.parseTime(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"litone01"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, () -\u003e SocheduleParserUtil.parseTime(INVALID_TIME_VALUE));","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":215,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":216,"author":{"gitId":"litone01"},"content":"    public void parseTime_invalidFormat_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":217,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, () -\u003e SocheduleParserUtil.parseTime(INVALID_TIME_FORMAT));","lastModifiedDate":"2021-03-16"},{"lineNumber":218,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":219,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":220,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":221,"author":{"gitId":"litone01"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":222,"author":{"gitId":"litone01"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2021-03-16"},{"lineNumber":223,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedTime, SocheduleParserUtil.parseTime(VALID_TIME));","lastModifiedDate":"2021-03-16"},{"lineNumber":224,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":226,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"litone01"},"content":"    public void parseTime_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"litone01"},"content":"        String timeWithWhitespace \u003d WHITESPACE + VALID_TIME + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":229,"author":{"gitId":"litone01"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2021-03-16"},{"lineNumber":230,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedTime, SocheduleParserUtil.parseTime(timeWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":231,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":232,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":233,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":234,"author":{"gitId":"litone01"},"content":"    public void parsePriority_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":235,"author":{"gitId":"litone01"},"content":"        assertThrows(NullPointerException.class, () -\u003e SocheduleParserUtil.parsePriority(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"litone01"},"content":"    public void parsePriority_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, () -\u003e SocheduleParserUtil.parsePriority(INVALID_PRIORITY));","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":242,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":243,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":244,"author":{"gitId":"litone01"},"content":"    public void parsePriority_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":245,"author":{"gitId":"litone01"},"content":"        Priority expectedPriority \u003d new Priority(VALID_PRIORITY);","lastModifiedDate":"2021-03-16"},{"lineNumber":246,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedPriority, SocheduleParserUtil.parsePriority(VALID_PRIORITY));","lastModifiedDate":"2021-03-16"},{"lineNumber":247,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":248,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":249,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":250,"author":{"gitId":"litone01"},"content":"    public void parsePriority_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":251,"author":{"gitId":"litone01"},"content":"        String priorityWithWhitespace \u003d WHITESPACE + VALID_PRIORITY + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":252,"author":{"gitId":"litone01"},"content":"        Priority expectedPriority \u003d new Priority(VALID_PRIORITY);","lastModifiedDate":"2021-03-16"},{"lineNumber":253,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedPriority, SocheduleParserUtil.parsePriority(priorityWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":254,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":255,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":256,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":257,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":258,"author":{"gitId":"litone01"},"content":"    public void parseCategory_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":259,"author":{"gitId":"litone01"},"content":"        assertThrows(NullPointerException.class, () -\u003e SocheduleParserUtil.parseCategory(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":260,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":261,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":262,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":263,"author":{"gitId":"litone01"},"content":"    public void parseCategory_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":264,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, () -\u003e SocheduleParserUtil.parseCategory(INVALID_CATEGORY));","lastModifiedDate":"2021-03-16"},{"lineNumber":265,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":266,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":267,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":268,"author":{"gitId":"litone01"},"content":"    public void parseCategory_validValueWithoutWhitespace_returnsCategory() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":269,"author":{"gitId":"litone01"},"content":"        Category expectedCategory \u003d new Category(VALID_CATEGORY_1);","lastModifiedDate":"2021-03-16"},{"lineNumber":270,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedCategory, SocheduleParserUtil.parseCategory(VALID_CATEGORY_1));","lastModifiedDate":"2021-03-16"},{"lineNumber":271,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":272,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":273,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":274,"author":{"gitId":"litone01"},"content":"    public void parseCategory_validValueWithWhitespace_returnsTrimmedCategory() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":275,"author":{"gitId":"litone01"},"content":"        String categoryWithWhitespace \u003d WHITESPACE + VALID_CATEGORY_1 + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":276,"author":{"gitId":"litone01"},"content":"        Category expectedCategory \u003d new Category(VALID_CATEGORY_1);","lastModifiedDate":"2021-03-16"},{"lineNumber":277,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedCategory, SocheduleParserUtil.parseCategory(categoryWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":278,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":279,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":280,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":281,"author":{"gitId":"litone01"},"content":"    public void parseCategories_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":282,"author":{"gitId":"litone01"},"content":"        assertThrows(NullPointerException.class, () -\u003e SocheduleParserUtil.parseCategories(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":283,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":284,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":285,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":286,"author":{"gitId":"litone01"},"content":"    public void parseCategories_collectionWithInvalidCategories_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":287,"author":{"gitId":"litone01"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-03-16"},{"lineNumber":288,"author":{"gitId":"litone01"},"content":"            -\u003e SocheduleParserUtil.parseCategories(Arrays.asList(VALID_CATEGORY_1, INVALID_CATEGORY)));","lastModifiedDate":"2021-03-16"},{"lineNumber":289,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":290,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":291,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":292,"author":{"gitId":"litone01"},"content":"    public void parseCategories_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":293,"author":{"gitId":"litone01"},"content":"        assertTrue(SocheduleParserUtil.parseCategories(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-03-16"},{"lineNumber":294,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":295,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":296,"author":{"gitId":"litone01"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":297,"author":{"gitId":"litone01"},"content":"    public void parseCategories_collectionWithValidCategories_returnsCategorySet() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":298,"author":{"gitId":"litone01"},"content":"        Set\u003cCategory\u003e actualCategorySet \u003d SocheduleParserUtil.parseCategories(Arrays.asList(VALID_CATEGORY_1,","lastModifiedDate":"2021-03-16"},{"lineNumber":299,"author":{"gitId":"litone01"},"content":"                VALID_CATEGORY_2));","lastModifiedDate":"2021-03-16"},{"lineNumber":300,"author":{"gitId":"litone01"},"content":"        Set\u003cCategory\u003e expectedCategorySet \u003d new HashSet\u003c\u003e(Arrays.asList(new Category(VALID_CATEGORY_1),","lastModifiedDate":"2021-03-16"},{"lineNumber":301,"author":{"gitId":"litone01"},"content":"                new Category(VALID_CATEGORY_2)));","lastModifiedDate":"2021-03-16"},{"lineNumber":302,"author":{"gitId":"litone01"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":303,"author":{"gitId":"litone01"},"content":"        assertEquals(expectedCategorySet, actualCategorySet);","lastModifiedDate":"2021-03-16"},{"lineNumber":304,"author":{"gitId":"litone01"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":305,"author":{"gitId":"litone01"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"litone01":295,"ljhgab":10}},{"path":"src/test/java/seedu/address/logic/parser/SortTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.logic.commands.SortTaskCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.TaskComparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"public class SortTaskCommandParserTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    private SortTaskCommandParser parser \u003d new SortTaskCommandParser();","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"        for (String comparingVar : TaskComparator.getAcceptedVar()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"            assertParseSuccess(parser, comparingVar, new SortTaskCommand(comparingVar));","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"        assertParseFailure(parser, \")($*!()\",","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"SoulUseless":27}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.TaskComparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.testutil.SocheduleBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(new Sochedule(), new Sochedule(modelManager.getSochedule()));","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"        userPrefs.setSocheduleFilePath(Paths.get(\"sochedule/file/path\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"        userPrefs.setSocheduleFilePath(Paths.get(\"new/sochedule/file/path\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"    public void setSocheduleFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSocheduleFilePath(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"    public void setSocheduleFilePath_validPath_setsSocheduleFilePath() {","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"        Path path \u003d Paths.get(\"sochedule/file/path\");","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"        modelManager.setSocheduleFilePath(path);","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(path, modelManager.getSocheduleFilePath());","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"    // ----- Task ------","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"icelenaugust"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"icelenaugust"},"content":"    public void hasTask_taskNotInSochedule_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(modelManager.hasTask(ASSIGNMENT));","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"icelenaugust"},"content":"    public void hasTask_taskInSochedule_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"icelenaugust"},"content":"        modelManager.addTask(ASSIGNMENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(modelManager.hasTask(ASSIGNMENT));","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"    // ----- Event ------","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"icelenaugust"},"content":"    public void hasEvent_eventNotInSochedule_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(modelManager.hasEvent(MEETING));","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"icelenaugust"},"content":"    public void hasEvent_eventInSochedule_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"icelenaugust"},"content":"        modelManager.addEvent(MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(modelManager.hasEvent(MEETING));","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"icelenaugust"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"SoulUseless"},"content":"    public void pinTask_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"SoulUseless"},"content":"        Task t \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"        modelManager.addTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"SoulUseless"},"content":"        modelManager.pinTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(t.isPinned());","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"SoulUseless"},"content":"    public void unpinTask_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"SoulUseless"},"content":"        Task t \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"SoulUseless"},"content":"        modelManager.addTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"SoulUseless"},"content":"        modelManager.pinTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(t.isPinned());","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"SoulUseless"},"content":"        modelManager.unpinTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(t.isPinned());","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"SoulUseless"},"content":"    public void pinTask_alreadyPinned_nothingHappen() {","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"SoulUseless"},"content":"        Task t \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"SoulUseless"},"content":"        modelManager.addTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"SoulUseless"},"content":"        modelManager.pinTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"SoulUseless"},"content":"        assertDoesNotThrow(() -\u003e modelManager.pinTask(t));","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"SoulUseless"},"content":"    public void unpinTask_alreadyUnpinned_nothingHappen() {","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"SoulUseless"},"content":"        Task t \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"SoulUseless"},"content":"        modelManager.addTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"SoulUseless"},"content":"        assertDoesNotThrow(() -\u003e modelManager.unpinTask(t));","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasks_nullList_nothingThrown() {","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"SoulUseless"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"SoulUseless"},"content":"                modelManager.sortTasks(TaskComparator.getAcceptedVar().get(0)));","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasks_populatedList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"SoulUseless"},"content":"        for (String comparingVar : TaskComparator.getAcceptedVar()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"SoulUseless"},"content":"            TaskComparator tc \u003d new TaskComparator();","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"SoulUseless"},"content":"            tc.setComparingVar(comparingVar);","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"SoulUseless"},"content":"            //build expected ModelManager","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"SoulUseless"},"content":"            List\u003cTask\u003e originalTasks \u003d TypicalTasks.getTypicalTasks();","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"SoulUseless"},"content":"            Collections.sort(originalTasks, tc);","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"SoulUseless"},"content":"            Sochedule sochedule \u003d new Sochedule();","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"SoulUseless"},"content":"            sochedule.setTasks(originalTasks);","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"SoulUseless"},"content":"            ModelManager expected \u003d new ModelManager();","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"SoulUseless"},"content":"            expected.setSochedule(sochedule);","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"SoulUseless"},"content":"            //build actual ModelManager","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"SoulUseless"},"content":"            ModelManager actual \u003d new ModelManager();","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"SoulUseless"},"content":"            actual.setSochedule(TypicalTasks.getTypicalSochedule());","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"SoulUseless"},"content":"            actual.sortTasks(comparingVar);","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"SoulUseless"},"content":"            assertEquals(actual, expected);","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":194,"author":{"gitId":"icelenaugust"},"content":"        Sochedule sochedule \u003d new SocheduleBuilder().withTask(ASSIGNMENT).withEvent(MEETING).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":195,"author":{"gitId":"icelenaugust"},"content":"        Sochedule differentSochedule \u003d new Sochedule();","lastModifiedDate":"2021-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"icelenaugust"},"content":"        modelManager \u003d new ModelManager(sochedule, userPrefs);","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"icelenaugust"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(sochedule, userPrefs);","lastModifiedDate":"2021-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2021-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2021-03-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"icelenaugust"},"content":"        // different sochedule -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentSochedule, userPrefs)));","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"icelenaugust"},"content":"        String[] keywords \u003d ASSIGNMENT.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"icelenaugust"},"content":"        modelManager.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-23"},{"lineNumber":218,"author":{"gitId":"icelenaugust"},"content":"        modelManager.updateFilteredEventList(new EventNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(modelManager.equals(new ModelManager(sochedule, userPrefs)));","lastModifiedDate":"2021-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2021-03-23"},{"lineNumber":222,"author":{"gitId":"icelenaugust"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-23"},{"lineNumber":223,"author":{"gitId":"icelenaugust"},"content":"        modelManager.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"icelenaugust"},"content":"        differentUserPrefs.setSocheduleFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(modelManager.equals(new ModelManager(sochedule, differentUserPrefs)));","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"icelenaugust":68,"-":96,"SoulUseless":67}},{"path":"src/test/java/seedu/address/model/SocheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_WORK;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FINAL;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_HOMEWORK;","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_IMPORTANT;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalEvents.DATE;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalEvents.EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalTasks.LAB;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"import static seedu.address.testutil.TypicalTasks.TASKONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalSochedule;","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.TaskComparator;","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"public class SocheduleTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"    private final Sochedule sochedule \u003d new Sochedule();","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(Collections.emptyList(), sochedule.getEventList());","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(Collections.emptyList(), sochedule.getTaskList());","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e sochedule.resetData(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e sochedule.resetTaskData(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e sochedule.resetEventData(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"    public void resetData_withValidReadOnlySochedule_replacesData() {","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"        Sochedule newData \u003d getTypicalSochedule();","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"        sochedule.resetData(newData);","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(newData, sochedule);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"litone01"},"content":"        Task taskWithSameIdentity \u003d new TaskBuilder(TASKONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKONE).withPriority(VALID_TASK_PRIORITY_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_HOMEWORK).withTags(VALID_TASK_TAG_IMPORTANT)","lastModifiedDate":"2021-04-05"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"                .build();","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"litone01"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(TASKONE, taskWithSameIdentity);","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"        // Two different events","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"        List\u003cEvent\u003e newEvents \u003d Arrays.asList(MEETING, DATE);","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"        SocheduleStub newData \u003d new SocheduleStub(newTasks, newEvents);","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e sochedule.resetData(newData));","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"    public void resetData_withDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"        // Two different events","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(ASSIGNMENT, LAB);","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"icelenaugust"},"content":"        // Two events with the same identity fields","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"        Event eventWithSameIdentity \u003d new EventBuilder().withName(VALID_EVENT_NAME_EVENTONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTONE).withStartTime(VALID_EVENT_STARTTIME_EVENTONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTONE).withEndTime(VALID_EVENT_ENDTIME_EVENTONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FINAL).withCategories(VALID_EVENT_CATEGORY_WORK)","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"icelenaugust"},"content":"                .build();","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"        List\u003cEvent\u003e newEvents \u003d Arrays.asList(EVENTONE, eventWithSameIdentity);","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"icelenaugust"},"content":"        SocheduleStub newData \u003d new SocheduleStub(newTasks, newEvents);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e sochedule.resetData(newData));","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e sochedule.hasTask(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e sochedule.hasEvent(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"    public void hasTask_taskNotInSochedule_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(sochedule.hasTask(ASSIGNMENT));","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"icelenaugust"},"content":"    public void hasEvent_eventNotInSochedule_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(sochedule.hasEvent(MEETING));","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"icelenaugust"},"content":"    public void hasTask_taskInSochedule_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"icelenaugust"},"content":"        sochedule.addTask(ASSIGNMENT);","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(sochedule.hasTask(ASSIGNMENT));","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"icelenaugust"},"content":"    public void hasEvent_eventInSochedule_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"        sochedule.addEvent(MEETING);","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(sochedule.hasEvent(MEETING));","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"icelenaugust"},"content":"    public void hasTask_taskWithSameIdentityFieldsInSochedule_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"litone01"},"content":"        sochedule.addTask(TASKONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"litone01"},"content":"        Task taskWithSameIdentity \u003d new TaskBuilder(TASKONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKONE).withPriority(VALID_TASK_PRIORITY_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":138,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_HOMEWORK).withTags(VALID_TASK_TAG_IMPORTANT)","lastModifiedDate":"2021-04-05"},{"lineNumber":139,"author":{"gitId":"icelenaugust"},"content":"                .build();","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"litone01"},"content":"        assertTrue(sochedule.hasTask(taskWithSameIdentity));","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"icelenaugust"},"content":"    public void hasEvent_eventWithSameIdentityFieldsInSochedule_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"YuFeng0930"},"content":"        sochedule.addEvent(EVENTONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"YuFeng0930"},"content":"        Event eventWithSameIdentity \u003d new EventBuilder().withName(VALID_EVENT_NAME_EVENTONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTONE).withStartTime(VALID_EVENT_STARTTIME_EVENTONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTONE).withEndTime(VALID_EVENT_ENDTIME_EVENTONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FINAL).withCategories(VALID_EVENT_CATEGORY_WORK)","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"icelenaugust"},"content":"                .build();","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"litone01"},"content":"        assertTrue(sochedule.hasEvent(eventWithSameIdentity));","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"icelenaugust"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e sochedule.getTaskList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"icelenaugust"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e sochedule.getEventList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"SoulUseless"},"content":"    public void pinTask_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"SoulUseless"},"content":"        Task t \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"SoulUseless"},"content":"        sochedule.addTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"SoulUseless"},"content":"        sochedule.pinTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(t.isPinned());","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"SoulUseless"},"content":"    public void unpinTask_returnsTrue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"SoulUseless"},"content":"        Task t \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"SoulUseless"},"content":"        sochedule.addTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"SoulUseless"},"content":"        sochedule.pinTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(t.isPinned());","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"SoulUseless"},"content":"        sochedule.unpinTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(t.isPinned());","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"SoulUseless"},"content":"    public void pinTask_alreadyPinned_nothingHappen() {","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"SoulUseless"},"content":"        Task t \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"SoulUseless"},"content":"        sochedule.addTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"SoulUseless"},"content":"        sochedule.pinTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"SoulUseless"},"content":"        assertDoesNotThrow(() -\u003e sochedule.pinTask(t));","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"SoulUseless"},"content":"    public void unpinTask_alreadyUnpinned_nothingHappen() {","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"SoulUseless"},"content":"        Task t \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"SoulUseless"},"content":"        sochedule.addTask(t);","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"SoulUseless"},"content":"        assertDoesNotThrow(() -\u003e sochedule.unpinTask(t));","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":199,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasks_nullList_nothingThrown() {","lastModifiedDate":"2021-03-25"},{"lineNumber":200,"author":{"gitId":"SoulUseless"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":201,"author":{"gitId":"SoulUseless"},"content":"                sochedule.sortTasks(TaskComparator.getAcceptedVar().get(0)));","lastModifiedDate":"2021-03-25"},{"lineNumber":202,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":204,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":205,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasks_populatedList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":206,"author":{"gitId":"SoulUseless"},"content":"        for (String comparingVar : TaskComparator.getAcceptedVar()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":207,"author":{"gitId":"SoulUseless"},"content":"            TaskComparator tc \u003d new TaskComparator();","lastModifiedDate":"2021-03-25"},{"lineNumber":208,"author":{"gitId":"SoulUseless"},"content":"            tc.setComparingVar(comparingVar);","lastModifiedDate":"2021-03-25"},{"lineNumber":209,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":210,"author":{"gitId":"SoulUseless"},"content":"            //build expected Sochedule","lastModifiedDate":"2021-03-25"},{"lineNumber":211,"author":{"gitId":"SoulUseless"},"content":"            List\u003cTask\u003e originalTasks \u003d TypicalTasks.getTypicalTasks();","lastModifiedDate":"2021-03-25"},{"lineNumber":212,"author":{"gitId":"SoulUseless"},"content":"            Collections.sort(originalTasks, tc);","lastModifiedDate":"2021-03-25"},{"lineNumber":213,"author":{"gitId":"SoulUseless"},"content":"            Sochedule expected \u003d new Sochedule();","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"SoulUseless"},"content":"            expected.setTasks(originalTasks);","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":216,"author":{"gitId":"SoulUseless"},"content":"            //build actual Sochedule","lastModifiedDate":"2021-03-25"},{"lineNumber":217,"author":{"gitId":"SoulUseless"},"content":"            Sochedule actual \u003d TypicalTasks.getTypicalSochedule();","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"SoulUseless"},"content":"            actual.sortTasks(comparingVar);","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"SoulUseless"},"content":"            assertEquals(actual, expected);","lastModifiedDate":"2021-03-25"},{"lineNumber":221,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":222,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":223,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":224,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"icelenaugust"},"content":"     * A stub ReadOnlySochedule whose tasks list and event list can violate interface constraints.","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":227,"author":{"gitId":"icelenaugust"},"content":"    private static class SocheduleStub implements ReadOnlySochedule {","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"icelenaugust"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"icelenaugust"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"icelenaugust"},"content":"        SocheduleStub(Collection\u003cTask\u003e tasks, Collection\u003cEvent\u003e events) {","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"icelenaugust"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"icelenaugust"},"content":"            this.events.setAll(events);","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"icelenaugust"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"icelenaugust"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":238,"author":{"gitId":"icelenaugust"},"content":"            return tasks;","lastModifiedDate":"2021-03-23"},{"lineNumber":239,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":240,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"icelenaugust"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":242,"author":{"gitId":"icelenaugust"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"icelenaugust"},"content":"            return events;","lastModifiedDate":"2021-03-23"},{"lineNumber":244,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":246,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"YuFeng0930":19,"icelenaugust":149,"SoulUseless":63,"ljhgab":8,"litone01":7}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    public void setSocheduleFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setSocheduleFilePath(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"-":19,"SoulUseless":2}},{"path":"src/test/java/seedu/address/model/common/CategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"public class CategoryTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"    /* TO REACTIVATE when requireNotNull is added","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Category(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        String invalidCategoryName \u003d \"\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidCategoryName));","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    /* TO REACTIVATE when validity check is merged from PR.","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    public void isValidCategoryName() {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"        // null tag name","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e Category.isValidCategoryName(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"SoulUseless":29}},{"path":"src/test/java/seedu/address/model/common/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.EXERCISE;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"public class DateTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        // null date","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"        // invalid date","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Date.isValidDate(\"2023-02-29\")); // invalid date","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Date.isValidDate(\"2021-03-32\")); // invalid date","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Date.isValidDate(\"abcde\")); // invalid date","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        // valid dates","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(Date.isValidDate(\"2022-02-13\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(Date.isValidDate(\"2022-10-10\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(Date.isValidDate(\"2022-04-30\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    public void compareTest() {","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT.getDeadline().compareTo(EXERCISE.getDeadline()),","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"                ASSIGNMENT.getDeadline().date.compareTo(EXERCISE.getDeadline().date));","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"YuFeng0930":6,"icelenaugust":32,"SoulUseless":9}},{"path":"src/test/java/seedu/address/model/common/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        TaskNameContainsKeywordsPredicate firstTaskPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"                new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"        TaskNameContainsKeywordsPredicate secondTaskPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"                new TaskNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        EventNameContainsKeywordsPredicate firstEventPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"                new EventNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"        EventNameContainsKeywordsPredicate secondEventPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"                new EventNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        // ------Task--------","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(firstTaskPredicate.equals(firstTaskPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        TaskNameContainsKeywordsPredicate firstTaskPredicateCopy \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"                new TaskNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(firstTaskPredicate.equals(firstTaskPredicateCopy));","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(firstTaskPredicate.equals(1));","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(firstTaskPredicate.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"        // different tasks -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(firstTaskPredicate.equals(secondTaskPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"        // ------Event--------","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(firstEventPredicate.equals(firstEventPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"        EventNameContainsKeywordsPredicate firstEventPredicateCopy \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"                new EventNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(firstEventPredicate.equals(firstEventPredicateCopy));","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(firstEventPredicate.equals(1));","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(firstEventPredicate.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"        // different events -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(firstEventPredicate.equals(secondEventPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"    public void test_taskNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"        // One keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"        TaskNameContainsKeywordsPredicate taskPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"Assignment\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(taskPredicate.test(new TaskBuilder().withName(\"CS2105 Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"        taskPredicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"CS2105\", \"Assignment\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(taskPredicate.test(new TaskBuilder().withName(\"CS2105 Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"        taskPredicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"CS2105\", \"Assignment\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(taskPredicate.test(new TaskBuilder().withName(\"CS2105 Lab\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"        taskPredicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"cs2105\", \"AsSiGnmEnt\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(taskPredicate.test(new TaskBuilder().withName(\"CS2105 Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"icelenaugust"},"content":"    public void test_eventNameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"icelenaugust"},"content":"        // One keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"icelenaugust"},"content":"        EventNameContainsKeywordsPredicate eventPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"icelenaugust"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"Assignment\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(eventPredicate.test(new EventBuilder().withName(\"CS2105 Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"icelenaugust"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"icelenaugust"},"content":"        eventPredicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"CS2105\", \"Assignment\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(eventPredicate.test(new EventBuilder().withName(\"CS2105 Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"icelenaugust"},"content":"        eventPredicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"CS2105\", \"Assignment\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(eventPredicate.test(new EventBuilder().withName(\"CS2105 Lab\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"        eventPredicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"cs2105\", \"AsSiGnmEnt\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(eventPredicate.test(new EventBuilder().withName(\"CS2105 Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"icelenaugust"},"content":"    public void test_taskNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"icelenaugust"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"icelenaugust"},"content":"        TaskNameContainsKeywordsPredicate taskPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"icelenaugust"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(taskPredicate.test(new TaskBuilder().withName(\"Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"icelenaugust"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"icelenaugust"},"content":"        taskPredicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"Lab\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(taskPredicate.test(new TaskBuilder().withName(\"CS2105 Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"icelenaugust"},"content":"        // Keywords match deadline, category and priority, but does not match name","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"icelenaugust"},"content":"        taskPredicate \u003d new TaskNameContainsKeywordsPredicate(Arrays.asList(\"2020-01-01\", \"schoolwork\", \"6\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(taskPredicate.test(new TaskBuilder().withName(\"CS2105 Assignment\")","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"icelenaugust"},"content":"                .withDeadline(\"2020-01-01\")","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"icelenaugust"},"content":"                .withCategories(\"schoolwork\").withPriority(\"6\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"icelenaugust"},"content":"    public void test_eventNameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"icelenaugust"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"icelenaugust"},"content":"        EventNameContainsKeywordsPredicate eventPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"icelenaugust"},"content":"                new EventNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(eventPredicate.test(new EventBuilder().withName(\"Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"icelenaugust"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"icelenaugust"},"content":"        eventPredicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"Lab\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(eventPredicate.test(new EventBuilder().withName(\"CS2105 Assignment\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"icelenaugust"},"content":"        // Keywords match startdate, category and priority, but does not match name","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"icelenaugust"},"content":"        eventPredicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"2020-01-01\", \"schoolwork\", \"difficult\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(eventPredicate.test(new EventBuilder().withName(\"CS2105 Assignment\")","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"icelenaugust"},"content":"                .withStartDate(\"2020-01-01\")","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"icelenaugust"},"content":"                .withCategories(\"schoolwork\").withTags(\"difficult\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"icelenaugust":147}},{"path":"src/test/java/seedu/address/model/common/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.EXERCISE;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(Name.isValidName(\"do * at #\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(Name.isValidName(\"lecture\")); // alphabets only","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(Name.isValidName(\"1337\")); // numbers only","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(Name.isValidName(\"cs2103 lecture\")); // alphanumeric characters","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(Name.isValidName(\"Official Meeting\")); // with capital letters","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(Name.isValidName(\"CS2103 Software Programming Lecture 2\")); // long names","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    public void compareTest() {","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT.getName().compareTo(EXERCISE.getName()),","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"                ASSIGNMENT.getName().fullName.compareTo(EXERCISE.getName().fullName));","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"-":33,"SoulUseless":16}},{"path":"src/test/java/seedu/address/model/common/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.common;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"-":25,"SoulUseless":1}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_WORK;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FINAL;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalEvents.EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalEvents.EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"public class EventTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e event.getTags().remove(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"    public void isSameEvent() {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(EVENTONE.isSameEvent(EVENTONE));","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(EVENTONE.isSameEvent(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"        Event editedInterview \u003d new EventBuilder(EVENTONE)","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTONE).withStartTime(VALID_EVENT_STARTTIME_EVENTONE)","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTONE).withEndTime(VALID_EVENT_ENDTIME_EVENTONE)","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FINAL).withCategories(VALID_EVENT_CATEGORY_WORK)","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"                .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(EVENTONE.isSameEvent(editedInterview));","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"        editedInterview \u003d new EventBuilder(EVENTONE).withName(VALID_EVENT_NAME_EVENTTWO).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(EVENTONE.isSameEvent(editedInterview));","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"        Event editedOrientation \u003d new EventBuilder(EVENTTWO)","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"                .withName(VALID_EVENT_NAME_EVENTTWO.toLowerCase()).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(EVENTTWO.isSameEvent(editedOrientation));","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"        String nameWithTrailingSpaces \u003d VALID_EVENT_NAME_EVENTTWO + \" \";","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"        editedOrientation \u003d new EventBuilder(EVENTTWO).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(EVENTTWO.isSameEvent(editedOrientation));","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"YuFeng0930":55,"SoulUseless":4}},{"path":"src/test/java/seedu/address/model/event/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalEvents.CAMP;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalEvents.EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"public class TimeTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime));","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        // null email","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"        // invalid time","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Time.isValidTime(\"\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Time.isValidTime(\":00\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Time.isValidTime(\"23:\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Time.isValidTime(\"1:1\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Time.isValidTime(\"0:0\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Time.isValidTime(\"9:9\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Time.isValidTime(\"24:00\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(Time.isValidTime(\"23:60\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        // valid times","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(Time.isValidTime(\"23:59\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(Time.isValidTime(\"12:34\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(Time.isValidTime(\"00:00\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    public void compareTest() {","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"        assertEquals(CAMP.getStartTime().compareTo(EVENTONE.getStartTime()),","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"                CAMP.getStartTime().time.compareTo(EVENTONE.getStartTime().time));","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"YuFeng0930":22,"SoulUseless":31}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_WORK;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FINAL;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FUN;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalEvents.EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.testutil.TypicalEvents.EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    private UniqueEventList repopulatedEventList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        UniqueEventList populatedEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        populatedEventList.setEvents(TypicalEvents.getTypicalEvents());","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        return populatedEventList;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"        assertFalse(uniqueEventList.contains(EVENTTWO));","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(uniqueEventList.contains(EVENTONE));","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"        Event editedInterview \u003d new EventBuilder().withName(VALID_EVENT_NAME_EVENTONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"                .withStartDate(VALID_EVENT_STARTDATE_EVENTONE).withStartTime(VALID_EVENT_STARTTIME_EVENTONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"                .withEndDate(VALID_EVENT_ENDDATE_EVENTONE).withEndTime(VALID_EVENT_ENDTIME_EVENTONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FINAL).withCategories(VALID_EVENT_CATEGORY_WORK)","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"litone01"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"        assertTrue(uniqueEventList.contains(editedInterview));","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(EVENTONE));","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, EVENTONE));","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(EVENTONE, null));","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(EVENTONE, EVENTONE));","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.setEvent(EVENTONE, EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"        expectedUniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"        Event editedInterview \u003d new EventBuilder(EVENTONE).withEndTime(VALID_EVENT_ENDTIME_EVENTTWO)","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"                .withTags(VALID_EVENT_TAG_FUN).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.setEvent(EVENTONE, editedInterview);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"        expectedUniqueEventList.add(editedInterview);","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.setEvent(EVENTONE, EVENTTWO);","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"        expectedUniqueEventList.add(EVENTTWO);","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTTWO);","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(EVENTONE, EVENTTWO));","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":135,"author":{"gitId":"YuFeng0930"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":136,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(EVENTONE));","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"YuFeng0930"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.remove(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"YuFeng0930"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"YuFeng0930"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":146,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":147,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":151,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":153,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":154,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"YuFeng0930"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-03-18"},{"lineNumber":156,"author":{"gitId":"YuFeng0930"},"content":"        expectedUniqueEventList.add(EVENTTWO);","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"YuFeng0930"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":167,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.add(EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"YuFeng0930"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(EVENTTWO);","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"YuFeng0930"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"YuFeng0930"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"YuFeng0930"},"content":"        expectedUniqueEventList.add(EVENTTWO);","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"YuFeng0930"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":176,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"YuFeng0930"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":178,"author":{"gitId":"YuFeng0930"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(EVENTONE, EVENTONE);","lastModifiedDate":"2021-03-23"},{"lineNumber":179,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":182,"author":{"gitId":"YuFeng0930"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":183,"author":{"gitId":"YuFeng0930"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":184,"author":{"gitId":"YuFeng0930"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e uniqueEventList.asUnmodifiableObservableList()","lastModifiedDate":"2021-03-18"},{"lineNumber":185,"author":{"gitId":"YuFeng0930"},"content":"                .remove(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":186,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":187,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"YuFeng0930":175,"SoulUseless":11,"litone01":1}},{"path":"src/test/java/seedu/address/model/task/CompletionStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.EXERCISE;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"public class CompletionStatusTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    public void isValidCompletionStatus() {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"        // invalid completionStatus","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(CompletionStatus.isValidStatus(\"\")); // empty string","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"        // valid completionStatus","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(CompletionStatus.isValidStatus(\"INCOMPLETE\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(CompletionStatus.isValidStatus(\"COMPLETE\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    public void compareTest() {","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT.getCompletionStatus().compareTo(EXERCISE.getCompletionStatus()), 0);","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"        Task assignment \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"        assignment.markTaskAsDone();","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(assignment.getCompletionStatus().compareTo(EXERCISE.getCompletionStatus()), 1);","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(EXERCISE.getCompletionStatus().compareTo(assignment.getCompletionStatus()), -1);","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"icelenaugust":20,"SoulUseless":15}},{"path":"src/test/java/seedu/address/model/task/PinnedStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.EXERCISE;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"public class PinnedStatusTest {","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    public void isValidPinnedStatus() {","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"        // invalid pinnedStatus","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(PinnedStatus.isValidStatus(\"\")); // empty string","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"        // valid pinnedStatus","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(PinnedStatus.isValidStatus(\"PINNED\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(PinnedStatus.isValidStatus(\"UNPINNED\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    public void compareTest() {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT.getPinnedStatus().compareTo(EXERCISE.getPinnedStatus()), 0);","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"        Task assignment \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"        assignment.pin();","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(assignment.getPinnedStatus().compareTo(EXERCISE.getPinnedStatus()), 1);","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(EXERCISE.getPinnedStatus().compareTo(assignment.getPinnedStatus()), -1);","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        assignment.unpin();","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT.getPinnedStatus().compareTo(EXERCISE.getPinnedStatus()), 0);","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"SoulUseless":39}},{"path":"src/test/java/seedu/address/model/task/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.EXERCISE;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"public class PriorityTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    public void constructor_invalidPriority_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"        String invalidPriority \u003d \"\";","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(invalidPriority));","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    public void isValidPriority() {","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"        // invalid priority","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(Priority.isValidPriority(\"\")); // empty string","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"        // valid priority","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(Priority.isValidPriority(\"0\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(Priority.isValidPriority(\"1\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(Priority.isValidPriority(\"3\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"        assertTrue(Priority.isValidPriority(null)); //null is valid","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    public void compareTest() {","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT.getPriority().compareTo(EXERCISE.getPriority()),","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"                Integer.compare(EXERCISE.getPriority().getPriority(), ASSIGNMENT.getPriority().getPriority()));","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"icelenaugust":28,"SoulUseless":10}},{"path":"src/test/java/seedu/address/model/task/TaskComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.EXERCISE;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.LAB;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.exceptions.InvalidTaskComparatorVariableException;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"public class TaskComparatorTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_INPUT \u003d \"*%\u0026!#*)\";","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    private static final ArrayList\u003cString\u003e CORRECT_INPUT \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"            new ArrayList\u003c\u003e(Arrays.asList(\"name\", \"deadline\", \"priority\", \"completion\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    private final TaskComparator taskComparator \u003d new TaskComparator();","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    public void isValidComparingVar() {","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        // null comparingVar","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskComparator.isValidComparingVar(null));","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"        // invalid comparingVar","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(TaskComparator.isValidComparingVar(\"\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(TaskComparator.isValidComparingVar(INVALID_INPUT));","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        // valid comparingVar","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        for (String input : CORRECT_INPUT) {","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"            assertTrue(TaskComparator.isValidComparingVar(input));","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"    public void setComparingVar_invalidInput_throwsInvalidTaskComparatorVariableException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(InvalidTaskComparatorVariableException.class, () -\u003e taskComparator.setComparingVar(INVALID_INPUT));","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    public void compare_twoInvalidInput_throwsNullPointerException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskComparator.compare(null, null));","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"    public void compare_oneInvalidInput_throwsNullPointerException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskComparator.compare(ASSIGNMENT, null));","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskComparator.compare(null, EXERCISE));","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    public void compare_twoValidInputUsingName() {","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        taskComparator.setComparingVar(\"name\");","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT.getName().compareTo(EXERCISE.getName()),","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(ASSIGNMENT, EXERCISE));","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(EXERCISE.getName().compareTo(LAB.getName()),","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(EXERCISE, LAB));","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    public void compare_twoValidInputUsingPriority() {","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        taskComparator.setComparingVar(\"priority\");","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(EXERCISE.getPriority().compareTo(ASSIGNMENT.getPriority()),","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(ASSIGNMENT, EXERCISE));","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(EXERCISE.getPriority().compareTo(LAB.getPriority()),","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(LAB, EXERCISE));","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"    public void compare_twoValidInputUsingCompletionStatus() {","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"        taskComparator.setComparingVar(\"completion\");","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT.getCompletionStatus().compareTo(EXERCISE.getCompletionStatus()),","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(ASSIGNMENT, EXERCISE));","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(EXERCISE.getCompletionStatus().compareTo(LAB.getCompletionStatus()),","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(EXERCISE, LAB));","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"    public void compare_twoValidInputUsingDeadline() {","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"        taskComparator.setComparingVar(\"deadline\");","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT.getDeadline().compareTo(EXERCISE.getDeadline()),","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(ASSIGNMENT, EXERCISE));","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(EXERCISE.getDeadline().compareTo(LAB.getDeadline()),","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(EXERCISE, LAB));","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"    //none pinned tested in above test cases","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"    public void compare_twoValidInput_withOnePinned() {","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"        Task assignment \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"        assignment.pin();","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"        //take reverse ordering of compare as pinned tasks come before unpinned tasks in list","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(assignment.getPinnedStatus().compareTo(EXERCISE.getPinnedStatus()),","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(EXERCISE, assignment));","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"    public void compare_twoValidInput_withTwoPinned() {","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"        Task assignment \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"        assignment.pin();","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"        Task exercise \u003d new TaskBuilder(EXERCISE).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"        exercise.pin();","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"        //since both are pinned, should default to comparingVar (\u003dname)","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(assignment.getName().compareTo(exercise.getName()),","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"                taskComparator.compare(assignment, exercise));","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"SoulUseless":114}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-04-06"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_HOMEWORK;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_IMPORTANT;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalTasks.TASKONE;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"public class TaskTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    public void copyTaskTest() {","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT, ASSIGNMENT.getCopy());","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"    public void isSameTask() {","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(ASSIGNMENT.isSameTask(ASSIGNMENT));","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(ASSIGNMENT.isSameTask(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"        Task editedAssignment \u003d new TaskBuilder(ASSIGNMENT).withDeadline(VALID_TASK_DEADLINE_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"                .withPriority(VALID_TASK_PRIORITY_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_HOMEWORK)","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"                .withTags(VALID_TASK_TAG_IMPORTANT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"        assertFalse(ASSIGNMENT.isSameTask(editedAssignment));","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"        editedAssignment \u003d new TaskBuilder(ASSIGNMENT).withName(VALID_TASK_NAME_TASKONE).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(ASSIGNMENT.isSameTask(editedAssignment));","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"        Task editedTaskOne \u003d new TaskBuilder(TASKONE)","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"                .withName(VALID_TASK_NAME_TASKONE.toLowerCase()).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(TASKONE.isSameTask(editedTaskOne));","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"        String nameWithTrailingSpaces \u003d VALID_TASK_NAME_TASKONE + \" \";","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"        editedTaskOne \u003d new TaskBuilder(TASKONE).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(TASKONE.isSameTask(editedTaskOne));","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"icelenaugust":41,"SoulUseless":6,"ljhgab":12,"litone01":2}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_HOMEWORK;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_PROJECT;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_IMPORTANT;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.testutil.TypicalTasks.LAB;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"import static seedu.address.testutil.TypicalTasks.TASKONE;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    private UniqueTaskList repopulatedTaskList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"        UniqueTaskList populatedTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        populatedTaskList.setTasks(TypicalTasks.getTypicalTasks());","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        return populatedTaskList;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"        assertFalse(uniqueTaskList.contains(ASSIGNMENT));","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        assertTrue(uniqueTaskList.contains(ASSIGNMENT));","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"litone01"},"content":"        uniqueTaskList.add(TASKONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"litone01"},"content":"        Task taskWithSameIdentity \u003d new TaskBuilder(TASKONE)","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"                .withDeadline(VALID_TASK_DEADLINE_TASKONE).withPriority(VALID_TASK_PRIORITY_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_HOMEWORK).withTags(VALID_TASK_TAG_IMPORTANT)","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"litone01"},"content":"                .build();","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"litone01"},"content":"        assertTrue(uniqueTaskList.contains(taskWithSameIdentity));","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(ASSIGNMENT));","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"icelenaugust"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, ASSIGNMENT));","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(ASSIGNMENT, null));","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"icelenaugust"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(ASSIGNMENT, ASSIGNMENT));","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"icelenaugust"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.setTask(ASSIGNMENT, ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"icelenaugust"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"icelenaugust"},"content":"        expectedUniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"ljhgab"},"content":"        Task editedAssignment \u003d new TaskBuilder(ASSIGNMENT).withDeadline(VALID_TASK_DEADLINE_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":105,"author":{"gitId":"ljhgab"},"content":"                .withCategories(VALID_TASK_CATEGORY_PROJECT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.setTask(ASSIGNMENT, editedAssignment);","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"        expectedUniqueTaskList.add(editedAssignment);","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"icelenaugust"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.setTask(ASSIGNMENT, LAB);","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"icelenaugust"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"icelenaugust"},"content":"        expectedUniqueTaskList.add(LAB);","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"icelenaugust"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(LAB);","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(ASSIGNMENT, LAB));","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"icelenaugust"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"icelenaugust"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(ASSIGNMENT));","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"icelenaugust"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.remove(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"icelenaugust"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"icelenaugust"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":149,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"icelenaugust"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"icelenaugust"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"icelenaugust"},"content":"        expectedUniqueTaskList.add(LAB);","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"icelenaugust"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"icelenaugust"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.add(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"icelenaugust"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(LAB);","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"icelenaugust"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"icelenaugust"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"icelenaugust"},"content":"        expectedUniqueTaskList.add(LAB);","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"icelenaugust"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"icelenaugust"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"icelenaugust"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(ASSIGNMENT, ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"icelenaugust"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"icelenaugust"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"icelenaugust"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e uniqueTaskList.asUnmodifiableObservableList()","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"icelenaugust"},"content":"                .remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasks_nullList_nothingThrown() {","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"SoulUseless"},"content":"        assertDoesNotThrow(() -\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"SoulUseless"},"content":"                uniqueTaskList.sort(TaskComparator.getAcceptedVar().get(0)));","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"SoulUseless"},"content":"    public void sortTasks_populatedList_allVariables() {","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"SoulUseless"},"content":"        for (String comparingVar : TaskComparator.getAcceptedVar()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"SoulUseless"},"content":"            TaskComparator tc \u003d new TaskComparator();","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"SoulUseless"},"content":"            tc.setComparingVar(comparingVar);","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"SoulUseless"},"content":"            //build expected UniqueTaskList","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"SoulUseless"},"content":"            List\u003cTask\u003e originalTasks \u003d TypicalTasks.getTypicalTasks();","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"SoulUseless"},"content":"            Collections.sort(originalTasks, tc);","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"SoulUseless"},"content":"            UniqueTaskList expected \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"SoulUseless"},"content":"            expected.setTasks(originalTasks);","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"SoulUseless"},"content":"            //build actual UniqueTaskList","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"SoulUseless"},"content":"            UniqueTaskList actual \u003d repopulatedTaskList();","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"SoulUseless"},"content":"            actual.sort(comparingVar);","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"SoulUseless"},"content":"            assertEquals(actual, expected);","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"icelenaugust":165,"SoulUseless":34,"ljhgab":9,"litone01":5}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_NAME \u003d \")($\u0026890\";","lastModifiedDate":"2021-03-19"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_START_DATE \u003d \")($\u0026890\";","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_START_TIME \u003d \")($\u0026890\";","lastModifiedDate":"2021-03-19"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_END_DATE \u003d \")($\u0026890\";","lastModifiedDate":"2021-03-19"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_END_TIME \u003d \")($\u0026890\";","lastModifiedDate":"2021-03-19"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_TAGS \u003d \")($\u0026890\";","lastModifiedDate":"2021-03-19"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_CATEGORIES \u003d \")($\u0026890\";","lastModifiedDate":"2021-03-19"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_NAME \u003d MEETING.getName().toString();","lastModifiedDate":"2021-03-19"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_START_DATE \u003d MEETING.getStartDate().toString();","lastModifiedDate":"2021-03-19"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_START_TIME \u003d MEETING.getStartTime().toString();","lastModifiedDate":"2021-03-19"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_END_DATE \u003d MEETING.getEndDate().toString();","lastModifiedDate":"2021-03-19"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_END_TIME \u003d MEETING.getEndTime().toString();","lastModifiedDate":"2021-03-19"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d MEETING.getTags().stream()","lastModifiedDate":"2021-03-19"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-19"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-19"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    private static final List\u003cJsonAdaptedCategory\u003e VALID_CATEGORIES \u003d MEETING.getCategories().stream()","lastModifiedDate":"2021-03-19"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"            .map(JsonAdaptedCategory::new)","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-19"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_validEventDetails_returnsTask() throws Exception {","lastModifiedDate":"2021-03-19"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(MEETING);","lastModifiedDate":"2021-03-19"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(MEETING, event.toModelType());","lastModifiedDate":"2021-03-19"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(INVALID_NAME, VALID_START_DATE, VALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"                        VALID_END_DATE, VALID_END_TIME, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-19"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(null, VALID_START_DATE, VALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"                        VALID_END_DATE, VALID_END_TIME, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidStartDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(VALID_NAME, INVALID_START_DATE, VALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"                        VALID_END_DATE, VALID_END_TIME, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-19"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_nullStartDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(VALID_NAME, null, VALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"                        VALID_END_DATE, VALID_END_TIME, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_START_DATE, INVALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"                        VALID_END_DATE, VALID_END_TIME, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-19"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidEndDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_START_DATE, VALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"                        INVALID_END_DATE, VALID_END_TIME, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-19"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_nullEndDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_START_DATE, VALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"                        null, VALID_END_TIME, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2021-03-19"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_START_DATE, VALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"                        VALID_END_DATE, INVALID_END_TIME, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-19"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAGS));","lastModifiedDate":"2021-03-19"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent task \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_START_DATE, VALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"                        VALID_END_DATE, INVALID_END_TIME, VALID_CATEGORIES, invalidTags);","lastModifiedDate":"2021-03-19"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-19"},{"lineNumber":129,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidCategories_throwsIllegalValueException() {","lastModifiedDate":"2021-03-19"},{"lineNumber":130,"author":{"gitId":"SoulUseless"},"content":"        List\u003cJsonAdaptedCategory\u003e invalidCategories \u003d new ArrayList\u003c\u003e(VALID_CATEGORIES);","lastModifiedDate":"2021-03-19"},{"lineNumber":131,"author":{"gitId":"SoulUseless"},"content":"        invalidCategories.add(new JsonAdaptedCategory(INVALID_CATEGORIES));","lastModifiedDate":"2021-03-19"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedEvent task \u003d","lastModifiedDate":"2021-03-19"},{"lineNumber":133,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_START_DATE, VALID_START_TIME,","lastModifiedDate":"2021-03-19"},{"lineNumber":134,"author":{"gitId":"SoulUseless"},"content":"                        VALID_END_DATE, INVALID_END_TIME, invalidCategories, VALID_TAGS);","lastModifiedDate":"2021-03-19"},{"lineNumber":135,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2021-03-19"},{"lineNumber":136,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-19"},{"lineNumber":137,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"SoulUseless":137}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.CompletionStatus;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.PinnedStatus;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_NAME \u003d \",!@#%$\";","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_DEADLINE \u003d \",!@#%$\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_PRIORITY \u003d \",!@#%$\";","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_COMPLETION \u003d \",!@#%$\";","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_PINNED \u003d \",!@#%$\";","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_TAGS \u003d \",!@#%$\";","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    private static final String INVALID_CATEGORIES \u003d \",!@#%$\";","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_NAME \u003d ASSIGNMENT.getName().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_DEADLINE \u003d ASSIGNMENT.getDeadline().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_PRIORITY \u003d ASSIGNMENT.getPriority().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_COMPLETION \u003d ASSIGNMENT.getCompletionStatus().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    private static final String VALID_PINNED \u003d ASSIGNMENT.getPinnedStatus().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d ASSIGNMENT.getTags().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    private static final List\u003cJsonAdaptedCategory\u003e VALID_CATEGORIES \u003d ASSIGNMENT.getCategories().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"            .map(JsonAdaptedCategory::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(ASSIGNMENT);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(ASSIGNMENT, task.toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask person \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(INVALID_NAME, VALID_DEADLINE, VALID_PRIORITY,","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"                        VALID_COMPLETION, VALID_PINNED, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask person \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(null, VALID_DEADLINE, VALID_PRIORITY,","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"                        VALID_COMPLETION, VALID_PINNED, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask person \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(VALID_NAME, INVALID_DEADLINE, VALID_PRIORITY,","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"                        VALID_COMPLETION, VALID_PINNED, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask person \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(VALID_NAME, null, VALID_PRIORITY,","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"                        VALID_COMPLETION, VALID_PINNED, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask person \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DEADLINE, INVALID_PRIORITY,","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"                        VALID_COMPLETION, VALID_PINNED, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidCompletion_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask person \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DEADLINE, VALID_PRIORITY,","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"                        INVALID_COMPLETION, VALID_PINNED, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d CompletionStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_nullCompletion_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask person \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DEADLINE, VALID_PRIORITY,","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"                        null, VALID_PINNED, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CompletionStatus.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidPinned_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask person \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DEADLINE, VALID_PRIORITY,","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"                        VALID_COMPLETION, INVALID_PINNED, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d PinnedStatus.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_nullPinned_throwsIllegalValueException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask person \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DEADLINE, VALID_PRIORITY,","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"SoulUseless"},"content":"                        VALID_COMPLETION, null, VALID_CATEGORIES, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"SoulUseless"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, PinnedStatus.class.getSimpleName());","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"SoulUseless"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAGS));","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DEADLINE, VALID_PRIORITY,","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"SoulUseless"},"content":"                        VALID_COMPLETION, VALID_PINNED, VALID_CATEGORIES, invalidTags);","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidCategories_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"SoulUseless"},"content":"        List\u003cJsonAdaptedCategory\u003e invalidCategories \u003d new ArrayList\u003c\u003e(VALID_CATEGORIES);","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"SoulUseless"},"content":"        invalidCategories.add(new JsonAdaptedCategory(INVALID_CATEGORIES));","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"SoulUseless"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"SoulUseless"},"content":"                new JsonAdaptedTask(VALID_NAME, VALID_DEADLINE, VALID_PRIORITY,","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"SoulUseless"},"content":"                        VALID_COMPLETION, VALID_PINNED, invalidCategories, VALID_TAGS);","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":147,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":148,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"SoulUseless":148}},{"path":"src/test/java/seedu/address/storage/JsonSerializableSocheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Disabled;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"public class JsonSerializableSocheduleTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableSocheduleTest\");","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"    private static final Path TYPICAL_SOCHEDULE \u003d TEST_DATA_FOLDER.resolve(\"typicalSochedule.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    private static final Path ONLY_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"noEventTypicalSochedule.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskSochedule.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskSochedule.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    private static final Path ONLY_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"noTaskTypicalSochedule.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    private static final Path INVALID_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventSochedule.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    private static final Path DUPLICATE_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventSochedule.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    private static final Path INVALID_EVENT_SCHEDULING_FILE \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"            TEST_DATA_FOLDER.resolve(\"invalidEventSchedulingSochedule.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    /* PENDING CREATION OF TypicalSochedule, TypicalEvents","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_typicalSocheduleFile_success() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"        JsonSerializableSochedule dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_SOCHEDULE,","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"                JsonSerializableSochedule.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"        Sochedule socheduleFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        Sochedule typicalSochedule \u003d TypicalSochedule.getTypicalSochedule();","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(socheduleFromFile, typicalSochedule);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"    MISSING:","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"    toModelType_typicalTaskSocheduleFile_success()","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    toModelType_typicalEventSocheduleFile_success()","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"    -- add get TaskOnlySochedule, EventOnlySochedule under TypicalSochedule","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    */","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"        JsonSerializableSochedule dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"                JsonSerializableSochedule.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_invalidEventFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        JsonSerializableSochedule dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENT_FILE,","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"                JsonSerializableSochedule.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        JsonSerializableSochedule dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"                JsonSerializableSochedule.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSochedule.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"        JsonSerializableSochedule dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENT_FILE,","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"                JsonSerializableSochedule.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSochedule.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"    @Disabled","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"    // PENDING BUG SQUASH","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"    public void toModelType_improperSchedulingEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"        JsonSerializableSochedule dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENT_SCHEDULING_FILE,","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"                JsonSerializableSochedule.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSochedule.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"SoulUseless":84}},{"path":"src/test/java/seedu/address/storage/JsonSocheduleStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.ReadOnlySochedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"public class JsonSocheduleStorageTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSocheduleStorageTest\");","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    @TempDir","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"    private java.util.Optional\u003cReadOnlySochedule\u003e readSochedule(String filePath) throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"        return new JsonSocheduleStorage(Paths.get(filePath)).readSochedule(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"                : null;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"    public void readSochedule_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSochedule(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        assertFalse(readSochedule(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSochedule(\"notJsonFormatSochedule.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"    public void readAddressBook_invalidEventSochedule_throwDataConversionException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSochedule(\"invalidEventSochedule.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"    public void readAddressBook_invalidTaskSochedule_throwDataConversionException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSochedule(\"invalidTaskSochedule.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"    public void readAddressBook_invalidAndValidEventSochedule_throwDataConversionException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSochedule(\"invalidAndValidEventSochedule.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"    public void readAddressBook_invalidAndValidTaskSochedule_throwDataConversionException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSochedule(\"invalidAndValidTaskSochedule.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"     * Saves {@code Sochedule} at the specified {@code filePath}.","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"    private void saveSochedule(ReadOnlySochedule addressBook, String filePath) {","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"            new JsonSocheduleStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"                    .saveSochedule(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSochedule(new Sochedule(), null));","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"    public void saveSochedule_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSochedule(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"    /*","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"    // PENDING TypicalSochedule","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"    public void readAndSaveSochedule_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"        Path filePath \u003d testFolder.resolve(\"TempSochedule.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"        Sochedule original \u003d getTypicalSochedule();","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"        JsonSocheduleStorage jsonSocheduleStorage \u003d new JsonSocheduleStorage(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"SoulUseless"},"content":"        jsonSocheduleStorage.saveSochedule(original, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"        ReadOnlySochedule readBack \u003d jsonSocheduleStorage.readSochedule(filePath).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(original, new Sochedule(readBack));","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"        // NEED RELOOK TO GET VAR NAMES","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"        original.addEvent(HOON);","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"        original.addTask(HOON);","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"SoulUseless"},"content":"        original.removeEvent(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"        original.removeTask(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"        jsonSocheduleStorage.saveSochedule(original, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"        readBack \u003d jsonSocheduleStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(original, new Sochedule(readBack));","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"        original.addTask(HOON);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"        original.addEvent(HOON);","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"        jsonSocheduleStorage.saveSochedule(original); // file path not specified","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"        readBack \u003d jsonSocheduleStorage.readSochedule().get(); // file path not specified","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"SoulUseless"},"content":"        assertEquals(original, new Sochedule(readBack));","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"SoulUseless"},"content":"    */","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"SoulUseless":121}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"icelenaugust"},"content":"        userPrefs.setSocheduleFilePath(Paths.get(\"data\", \"sochedule.json\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"icelenaugust":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook; //TO UNCOMMENT ONCE IMPLEMENTED","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"        JsonSocheduleStorage socheduleStorage \u003d new JsonSocheduleStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"        storageManager \u003d new StorageManager(socheduleStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"    //    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"    //    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    //        /*","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"    //         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"    //         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"    //         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"    //         */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"    //        Sochedule original \u003d getTypicalSochedule(); - To uncomment once implemented","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"    //        storageManager.saveSochedule(original);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"    //        Sochedule retrieved \u003d storageManager.readSochedule().get();","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    //        assertEquals(original, new Sochedule(retrieved));","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"    //    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        assertNotNull(storageManager.getSocheduleFilePath());","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"YuFeng0930":8,"-":50,"SoulUseless":8}},{"path":"src/test/java/seedu/address/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":" * A utility class to help with building EditEventDescriptor objects.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"    private EditEventDescriptor descriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder(EditEventDescriptor descriptor) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":"        this.descriptor \u003d new EditEventDescriptor(descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"YuFeng0930"},"content":"     * Returns an {@code EditEventDescriptor} with fields containing {@code event}\u0027s details","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"YuFeng0930"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setName(event.getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setStartDate(event.getStartDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setStartTime(event.getStartTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setEndDate(event.getEndDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setEndTime(event.getEndTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setCategories(event.getCategories());","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setTags(event.getTags());","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"YuFeng0930"},"content":"     * Sets the {@code Name} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"YuFeng0930"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"     * Sets the {@code startDate} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder withStartDate(String startDate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setStartDate(new Date(startDate));","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"YuFeng0930"},"content":"     * Sets the {@code startTime} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder withStartTime(String startTime) {","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setStartTime(new Time(startTime));","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"     * Sets the {@code endDate} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder withEndDate(String endDate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setEndDate(new Date(endDate));","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"YuFeng0930"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"     * Sets the {@code endTime} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder withEndTime(String endTime) {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setEndTime(new Time(endTime));","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"     * Sets the {@code Categories} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder withCategories(String... categories) {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"        Set\u003cCategory\u003e categorySet \u003d Stream.of(categories).map(Category::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setCategories(categorySet);","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditEventDescriptor}","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"YuFeng0930"},"content":"     * that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"YuFeng0930"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"YuFeng0930"},"content":"    public EditEventDescriptor build() {","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"YuFeng0930"},"content":"        return descriptor;","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"YuFeng0930":106}},{"path":"src/test/java/seedu/address/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ljhgab"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-04-05"},{"lineNumber":2,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import java.util.Set;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import seedu.address.logic.commands.EditTaskCommand;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    private EditTaskCommand.EditTaskDescriptor descriptor;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"ljhgab"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"ljhgab"},"content":"        descriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    public EditTaskDescriptorBuilder(EditTaskCommand.EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"        this.descriptor \u003d new EditTaskCommand.EditTaskDescriptor(descriptor);","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"        descriptor \u003d new EditTaskCommand.EditTaskDescriptor();","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"        descriptor.setName(task.getName());","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"        descriptor.setDeadline(task.getDeadline());","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"        descriptor.setPriority(task.getPriority());","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"        descriptor.setCategories(task.getCategories());","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"        descriptor.setTags(task.getTags());","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"        return this;","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"     * Sets the {@code Deadline} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-04-05"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"ljhgab"},"content":"    public EditTaskDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"        descriptor.setDeadline(new Date(deadline));","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"        return this;","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"ljhgab"},"content":"     * Sets the {@code Priority} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"    public EditTaskDescriptorBuilder withPriority(String priority) {","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"        descriptor.setPriority(new Priority(priority));","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"        return this;","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"     * Sets the {@code Categories} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"    public EditTaskDescriptorBuilder withCategories(String... categories) {","lastModifiedDate":"2021-04-05"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"        Set\u003cCategory\u003e categorySet \u003d Stream.of(categories).map(Category::new).collect(Collectors.toSet());","lastModifiedDate":"2021-04-05"},{"lineNumber":68,"author":{"gitId":"ljhgab"},"content":"        descriptor.setCategories(categorySet);","lastModifiedDate":"2021-04-05"},{"lineNumber":69,"author":{"gitId":"ljhgab"},"content":"        return this;","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":71,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2021-04-05"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"     * that we are building.","lastModifiedDate":"2021-04-05"},{"lineNumber":75,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"    public EditTaskDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-04-05"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-04-05"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-04-05"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"        return this;","lastModifiedDate":"2021-04-05"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"ljhgab"},"content":"    public EditTaskCommand.EditTaskDescriptor build() {","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"ljhgab"},"content":"        return descriptor;","lastModifiedDate":"2021-04-05"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-05"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"}","lastModifiedDate":"2021-04-05"}],"authorContributionMap":{"ljhgab":85}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"SoulUseless"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"SoulUseless"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.Time;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"public class EventBuilder {","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"SoulUseless"},"content":"    public static final String DEFAULT_NAME \u003d \"CS2103 Lecture\";","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"    public static final String DEFAULT_START_DATE \u003d \"2021-01-01\";","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":"    public static final String DEFAULT_START_TIME \u003d \"00:00\";","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"    public static final String DEFAULT_END_DATE \u003d \"2022-01-10\";","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"    public static final String DEFAULT_END_TIME \u003d \"23:59\";","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"SoulUseless"},"content":"    private Name name;","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"    private Date startDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"    private Time startTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    private Date endDate;","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    private Time endTime;","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    private Set\u003cCategory\u003e categories;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"    public EventBuilder() {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        startDate \u003d new Date(DEFAULT_START_DATE);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"        startTime \u003d new Time(DEFAULT_START_TIME);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        endDate \u003d new Date(DEFAULT_END_DATE);","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        endTime \u003d new Time(DEFAULT_END_TIME);","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"        categories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"YuFeng0930"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"        name \u003d eventToCopy.getName();","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        startDate \u003d eventToCopy.getStartDate();","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        startTime \u003d eventToCopy.getStartTime();","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        endDate \u003d eventToCopy.getEndDate();","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"        endTime \u003d eventToCopy.getEndTime();","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        tags \u003d eventToCopy.getTags();","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"        categories \u003d eventToCopy.getCategories();","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    public EventBuilder withName(String name) {","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"     * Sets the {@code StartDate} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"    public EventBuilder withStartDate(String date) {","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"        this.startDate \u003d new Date(date);","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"     * Sets the {@code StartTime} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"    public EventBuilder withStartTime(String time) {","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"        this.startTime \u003d new Time(time);","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"     * Sets the {@code EndDate} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"    public EventBuilder withEndDate(String date) {","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"        this.endDate \u003d new Date(date);","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"     * Sets the {@code EndTime} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"    public EventBuilder withEndTime(String time) {","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"        this.endTime \u003d new Time(time);","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"YuFeng0930"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Event} that we are building.","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"SoulUseless"},"content":"    public EventBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"SoulUseless"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"     * Parses the {@code categories} into a {@code Set\u003cCategory\u003e} and set it to the {@code Event} that we are building.","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"SoulUseless"},"content":"    public EventBuilder withCategories(String ... tags) {","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"SoulUseless"},"content":"        this.categories \u003d SampleDataUtil.getCategorySet(tags);","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"SoulUseless"},"content":"    public Event build() {","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"SoulUseless"},"content":"        return new Event(name, startDate, startTime, endDate, endTime, categories, tags);","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"YuFeng0930":5,"SoulUseless":112}},{"path":"src/test/java/seedu/address/testutil/SocheduleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" * A utility class to help with building Sochedule objects.","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":" *     {@code Sochdule sochedule \u003d new SocheduleBuilder().withTask(\"Assignment\", \"Lab\").build();}","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"public class SocheduleBuilder {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"    private Sochedule sochedule;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"    public SocheduleBuilder() {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"        sochedule \u003d new Sochedule();","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    public SocheduleBuilder(Sochedule sochedule) {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"        this.sochedule \u003d sochedule;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     * Adds a new {@code Task} to the {@code Sochedule} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    public SocheduleBuilder withTask(Task task) {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"        sochedule.addTask(task);","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"     * Adds a new {@code Event} to the {@code Sochedule} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    public SocheduleBuilder withEvent(Event event) {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        sochedule.addEvent(event);","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"    public Sochedule build() {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"        return sochedule;","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"icelenaugust":43}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SoulUseless"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKONE;","lastModifiedDate":"2021-04-08"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASKONE;","lastModifiedDate":"2021-04-08"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKONE;","lastModifiedDate":"2021-04-08"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"SoulUseless"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"SoulUseless"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Category;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Date;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Name;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.common.Tag;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"SoulUseless"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"SoulUseless"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"SoulUseless"},"content":"public class TaskBuilder {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"ljhgab"},"content":"    public static final String DEFAULT_NAME \u003d VALID_TASK_NAME_TASKONE;","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"ljhgab"},"content":"    public static final String DEFAULT_DATE \u003d VALID_TASK_DEADLINE_TASKONE;","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"ljhgab"},"content":"    public static final String DEFAULT_PRIORITY \u003d VALID_TASK_PRIORITY_TASKONE;","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"    private Name name;","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"SoulUseless"},"content":"    private Date deadline;","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"SoulUseless"},"content":"    private Priority priority;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"SoulUseless"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"    private Set\u003cCategory\u003e categories;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"SoulUseless"},"content":"    public TaskBuilder() {","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"SoulUseless"},"content":"        deadline \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"        priority \u003d new Priority(DEFAULT_PRIORITY);","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"        categories \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"        deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"        priority \u003d taskToCopy.getPriority();","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"        tags \u003d taskToCopy.getTags();","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"        categories \u003d taskToCopy.getCategories();","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"SoulUseless"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"SoulUseless"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"     * Sets the {@code Deadline} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"    public TaskBuilder withDeadline(String date) {","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"        this.deadline \u003d new Date(date);","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"     * Sets the {@code Priority} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"    public TaskBuilder withPriority(String priority) {","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"        this.priority \u003d new Priority(priority);","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"SoulUseless"},"content":"    public TaskBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"SoulUseless"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"     * Parses the {@code categories} into a {@code Set\u003cCategory\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"    public TaskBuilder withCategories(String ... tags) {","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"        this.categories \u003d SampleDataUtil.getCategorySet(tags);","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"        return this;","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"    public Task build() {","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"SoulUseless"},"content":"        return new Task(name, deadline, priority, categories, tags);","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"SoulUseless":89,"ljhgab":8,"litone01":1}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"     * Returns the middle index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"    public static Index getTaskMidIndex(Model model) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"SoulUseless"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"SoulUseless"},"content":"     * Returns the middle index of the event in the {@code model}\u0027s event list.","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"SoulUseless"},"content":"    public static Index getEventMidIndex(Model model) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"        return Index.fromOneBased(model.getFilteredEventList().size() / 2);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"SoulUseless"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"    public static Index getTaskLastIndex(Model model) {","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"    public static Index getEventLastIndex(Model model) {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"        return Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"SoulUseless"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"SoulUseless"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"SoulUseless"},"content":"    public static Task getTask(Model model, Index index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"SoulUseless"},"content":"        return model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"SoulUseless"},"content":"    public static Event getEvent(Model model, Index index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"SoulUseless"},"content":"        return model.getFilteredEventList().get(index.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"-":47,"SoulUseless":30}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_SCHOOL;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_CATEGORY_WORK;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDDATE_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_ENDTIME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTDATE_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTONE;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_STARTTIME_EVENTTWO;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FINAL;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TAG_FUN;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-08"},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"import java.util.List;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"YuFeng0930"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"YuFeng0930"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"YuFeng0930"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"YuFeng0930"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"YuFeng0930"},"content":"public class TypicalEvents {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"    public static final String TODAY_DATE \u003d LocalDate.now().toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"    public static final String MEETING_DATE \u003d LocalDate.now().plusDays(6).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"    public static final String DATING_DATE \u003d LocalDate.now().plusDays(7).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"    public static final String CAMPTING_DATE \u003d LocalDate.now().plusMonths(1).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"    public static final String HACKATHON_START_DATE \u003d LocalDate.now().plusMonths(1).plusDays(1).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"    public static final String HACKATHON_END_DATE \u003d LocalDate.now().plusMonths(2).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"    public static final String WORKSHOP_DATE \u003d LocalDate.now().plusMonths(1).plusDays(3).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"    public static final String COMPETITION_DATE \u003d LocalDate.now().plusMonths(2).plusDays(10).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":47,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event MEETING \u003d new EventBuilder().withName(\"CS2103 Meeting\")","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"ljhgab"},"content":"            .withStartDate(MEETING_DATE).withStartTime(\"21:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"            .withEndDate(MEETING_DATE).withEndTime(\"23:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"YuFeng0930"},"content":"            .withTags(\"SocheduleBest\").withCategories(\"SchoolWork\")","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":53,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event DATE \u003d new EventBuilder().withName(\"1 Year Anniversary\")","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"ljhgab"},"content":"            .withStartDate(DATING_DATE).withStartTime(\"08:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"            .withEndDate(DATING_DATE).withEndTime(\"21:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"YuFeng0930"},"content":"            .withTags(\"LoveYou\").withCategories(\"Love\")","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event CAMP \u003d new EventBuilder().withName(\"RVRC Camping\")","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"ljhgab"},"content":"            .withStartDate(CAMPTING_DATE).withStartTime(\"08:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"            .withEndDate(CAMPTING_DATE).withEndTime(\"22:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"YuFeng0930"},"content":"            .withTags(\"Boring\").withCategories(\"Leisure\")","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event HACKATHON \u003d new EventBuilder().withName(\"Google Hash Code\") // No tags","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"ljhgab"},"content":"            .withStartDate(HACKATHON_START_DATE).withStartTime(\"21:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"            .withEndDate(HACKATHON_END_DATE).withEndTime(\"23:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"YuFeng0930"},"content":"            .withCategories(\"Competition\")","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":71,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event WORKSHOP \u003d new EventBuilder().withName(\"Shopee Code League Workshop\") // No category","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"            .withStartDate(WORKSHOP_DATE).withStartTime(\"21:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"ljhgab"},"content":"            .withEndDate(WORKSHOP_DATE).withEndTime(\"23:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":74,"author":{"gitId":"YuFeng0930"},"content":"            .withTags(\"Learning\")","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event COMPETITION \u003d new EventBuilder().withName(\"Inter College Game Basketball\")","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"            .withStartDate(COMPETITION_DATE).withStartTime(\"21:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"            .withEndDate(COMPETITION_DATE).withEndTime(\"23:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"YuFeng0930"},"content":"            .withTags(\"Semifinal\").withCategories(\"Exercise\")","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"YuFeng0930"},"content":"    // Manually added","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event CONCERT \u003d new EventBuilder().withName(\"JJ Lin Concert\")","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"YuFeng0930"},"content":"            .withStartDate(\"2021-03-17\").withStartTime(\"21:00\")","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"YuFeng0930"},"content":"            .withEndDate(\"2022-03-17\").withEndTime(\"23:00\")","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"YuFeng0930"},"content":"            .withTags(\"FirstConcert\").withCategories(\"Leisure\")","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event PICNIC \u003d new EventBuilder().withName(\"Sentosa Picnic\")","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"YuFeng0930"},"content":"            .withStartDate(\"2021-03-17\").withStartTime(\"21:00\")","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"YuFeng0930"},"content":"            .withEndDate(\"2022-03-17\").withEndTime(\"23:00\")","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"YuFeng0930"},"content":"            .withTags(\"Chill\").withCategories(\"Leisure\")","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"    // With duration on today","lastModifiedDate":"2021-04-08"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"    public static final Event HAPPENING \u003d new EventBuilder().withName(\"Today Event\")","lastModifiedDate":"2021-04-08"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"            .withStartDate(TODAY_DATE).withStartTime(\"09:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"ljhgab"},"content":"            .withEndDate(TODAY_DATE).withEndTime(\"14:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":99,"author":{"gitId":"ljhgab"},"content":"            .withTags(\"Today\").withCategories(\"Cool\")","lastModifiedDate":"2021-04-08"},{"lineNumber":100,"author":{"gitId":"ljhgab"},"content":"            .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":101,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":102,"author":{"gitId":"ljhgab"},"content":"    public static final Event ANOTHER_HAPPENING \u003d new EventBuilder().withName(\"Another Today Event\")","lastModifiedDate":"2021-04-08"},{"lineNumber":103,"author":{"gitId":"ljhgab"},"content":"            .withStartDate(TODAY_DATE).withStartTime(\"15:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":104,"author":{"gitId":"ljhgab"},"content":"            .withEndDate(TODAY_DATE).withEndTime(\"17:00\")","lastModifiedDate":"2021-04-08"},{"lineNumber":105,"author":{"gitId":"ljhgab"},"content":"            .withTags(\"Today\").withCategories(\"VeryCool\")","lastModifiedDate":"2021-04-08"},{"lineNumber":106,"author":{"gitId":"ljhgab"},"content":"            .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":107,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":108,"author":{"gitId":"YuFeng0930"},"content":"    // Manually added - Event\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event EVENTONE \u003d new EventBuilder().withName(VALID_EVENT_NAME_EVENTONE)","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"YuFeng0930"},"content":"            .withStartDate(VALID_EVENT_STARTDATE_EVENTONE).withStartTime(VALID_EVENT_STARTTIME_EVENTONE)","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"YuFeng0930"},"content":"            .withEndDate(VALID_EVENT_ENDDATE_EVENTONE).withEndTime(VALID_EVENT_ENDTIME_EVENTONE)","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"YuFeng0930"},"content":"            .withCategories(VALID_EVENT_CATEGORY_WORK).withTags(VALID_EVENT_TAG_FINAL)","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"YuFeng0930"},"content":"    public static final Event EVENTTWO \u003d new EventBuilder().withName(VALID_EVENT_NAME_EVENTTWO)","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"YuFeng0930"},"content":"            .withStartDate(VALID_EVENT_STARTDATE_EVENTTWO).withStartTime(VALID_EVENT_STARTTIME_EVENTTWO)","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"YuFeng0930"},"content":"            .withEndDate(VALID_EVENT_ENDDATE_EVENTTWO).withEndTime(VALID_EVENT_ENDTIME_EVENTTWO)","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"YuFeng0930"},"content":"            .withCategories(VALID_EVENT_CATEGORY_SCHOOL).withTags(VALID_EVENT_TAG_FUN)","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"YuFeng0930"},"content":"            .build();","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"YuFeng0930"},"content":"    public static final String KEYWORD_MATCHING_CODE \u003d \"Code\"; // A keyword that matches MEIER","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"YuFeng0930"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"YuFeng0930"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"YuFeng0930"},"content":"     * Returns an {@code Sochedule} with all the typical events.","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"YuFeng0930"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"YuFeng0930"},"content":"    public static Sochedule getTypicalSochedule() {","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"YuFeng0930"},"content":"        Sochedule sochedule \u003d new Sochedule();","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"YuFeng0930"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"YuFeng0930"},"content":"            sochedule.addEvent(event);","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"YuFeng0930"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"YuFeng0930"},"content":"        return sochedule;","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"YuFeng0930"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":135,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":136,"author":{"gitId":"ljhgab"},"content":"     * Returns an {@Code Sochedule} with two additional events on today added.","lastModifiedDate":"2021-04-08"},{"lineNumber":137,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":138,"author":{"gitId":"ljhgab"},"content":"    public static Sochedule getTypicalSocheduleWithTodayEvent() {","lastModifiedDate":"2021-04-08"},{"lineNumber":139,"author":{"gitId":"ljhgab"},"content":"        Sochedule sochedule \u003d new Sochedule();","lastModifiedDate":"2021-04-08"},{"lineNumber":140,"author":{"gitId":"ljhgab"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-04-08"},{"lineNumber":141,"author":{"gitId":"ljhgab"},"content":"            sochedule.addEvent(event);","lastModifiedDate":"2021-04-08"},{"lineNumber":142,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":143,"author":{"gitId":"ljhgab"},"content":"        sochedule.addEvent(HAPPENING);","lastModifiedDate":"2021-04-08"},{"lineNumber":144,"author":{"gitId":"ljhgab"},"content":"        sochedule.addEvent(ANOTHER_HAPPENING);","lastModifiedDate":"2021-04-08"},{"lineNumber":145,"author":{"gitId":"ljhgab"},"content":"        return sochedule;","lastModifiedDate":"2021-04-08"},{"lineNumber":146,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":147,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":148,"author":{"gitId":"YuFeng0930"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"YuFeng0930"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING, DATE, CAMP, HACKATHON, WORKSHOP, COMPETITION));","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"YuFeng0930"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":151,"author":{"gitId":"YuFeng0930"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"YuFeng0930":91,"ljhgab":60}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"    // Indexes for Task","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-19"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-19"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-19"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"    // Indexes for Event","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"ljhgab"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-19"},{"lineNumber":16,"author":{"gitId":"ljhgab"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-19"},{"lineNumber":17,"author":{"gitId":"ljhgab"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"-":9,"ljhgab":9}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_HOMEWORK;","lastModifiedDate":"2021-04-05"},{"lineNumber":4,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_CATEGORY_PROJECT;","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_DEADLINE_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_NAME_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKONE;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_PRIORITY_TASKTWO;","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_DIFFICULT;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"ljhgab"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_TAG_IMPORTANT;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"ljhgab"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-08"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.Sochedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"public class TypicalTasks {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"ljhgab"},"content":"    public static final String TODAY_DATE \u003d LocalDate.now().toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":30,"author":{"gitId":"ljhgab"},"content":"    public static final String ASSIGNMENT_DATE \u003d LocalDate.now().plusMonths(1).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":31,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":32,"author":{"gitId":"ljhgab"},"content":"    public static final String LAB_DATE \u003d LocalDate.now().plusMonths(1).plusDays(2).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"    public static final String BREAKFAST_DATE \u003d LocalDate.now().plusMonths(2).plusDays(2).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":35,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":36,"author":{"gitId":"ljhgab"},"content":"    public static final String SHOPPING_DATE \u003d LocalDate.now().plusMonths(3).plusDays(1).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":37,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":38,"author":{"gitId":"ljhgab"},"content":"    public static final String REVISION_DATE \u003d LocalDate.now().plusMonths(3).plusDays(2).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":39,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":40,"author":{"gitId":"ljhgab"},"content":"    public static final String EXERCISE_DATE \u003d LocalDate.now().plusMonths(2).plusDays(1).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":41,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":42,"author":{"gitId":"ljhgab"},"content":"    public static final String GAME_DATE \u003d LocalDate.now().plusMonths(5).plusDays(2).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":43,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":44,"author":{"gitId":"ljhgab"},"content":"    public static final String LECTURE_DATE \u003d LocalDate.now().plusMonths(4).plusDays(1).toString();","lastModifiedDate":"2021-04-08"},{"lineNumber":45,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":"    public static final Task ASSIGNMENT \u003d new TaskBuilder().withName(\"CS2105 Assignment\")","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(ASSIGNMENT_DATE).withCategories(\"SchoolWork\").withPriority(\"1\")","lastModifiedDate":"2021-04-08"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    public static final Task LAB \u003d new TaskBuilder().withName(\"CS2106 Lab\")","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(LAB_DATE).withCategories(\"SchoolWork\").withPriority(\"3\")","lastModifiedDate":"2021-04-08"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"    public static final Task BREAKFAST \u003d new TaskBuilder().withName(\"Toast Bread\")","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(BREAKFAST_DATE).withCategories(\"Life\").withPriority(\"7\")","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":"    public static final Task SHOPPING \u003d new TaskBuilder().withName(\"Buy Clothes\")","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(SHOPPING_DATE).withCategories(\"Life\").withPriority(\"8\")","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"icelenaugust"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"icelenaugust"},"content":"    public static final Task REVISION \u003d new TaskBuilder().withName(\"Revise CS2103\")","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(REVISION_DATE).withCategories(\"Exam\").withPriority(\"2\")","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"icelenaugust"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"icelenaugust"},"content":"    public static final Task EXERCISE \u003d new TaskBuilder().withName(\"Run 10km\")","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(EXERCISE_DATE).withCategories(\"Exercise\").withPriority(\"5\")","lastModifiedDate":"2021-04-08"},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"icelenaugust"},"content":"    // Manually added","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"icelenaugust"},"content":"    public static final Task GAME \u003d new TaskBuilder().withName(\"Play Mario Kart\")","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(GAME_DATE).withCategories(\"Leisure\").withPriority(\"8\")","lastModifiedDate":"2021-04-08"},{"lineNumber":73,"author":{"gitId":"icelenaugust"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"    public static final Task LECTURE \u003d new TaskBuilder().withName(\"Watch CS2103 Lecture\")","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(LECTURE_DATE).withCategories(\"SchoolWork\").withPriority(\"2\")","lastModifiedDate":"2021-04-08"},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"            .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":79,"author":{"gitId":"ljhgab"},"content":"    // With deadline on today","lastModifiedDate":"2021-04-08"},{"lineNumber":80,"author":{"gitId":"ljhgab"},"content":"    public static final Task DUE \u003d new TaskBuilder().withName(\"Due Today\")","lastModifiedDate":"2021-04-08"},{"lineNumber":81,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(TODAY_DATE).withCategories(\"Urgent\").withPriority(\"9\")","lastModifiedDate":"2021-04-08"},{"lineNumber":82,"author":{"gitId":"icelenaugust"},"content":"            .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"    public static final Task ANOTHER_DUE \u003d new TaskBuilder().withName(\"Also Due Today\")","lastModifiedDate":"2021-04-08"},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(TODAY_DATE).withCategories(\"Urgent\").withPriority(\"8\")","lastModifiedDate":"2021-04-08"},{"lineNumber":86,"author":{"gitId":"ljhgab"},"content":"            .build();","lastModifiedDate":"2021-04-08"},{"lineNumber":87,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":88,"author":{"gitId":"icelenaugust"},"content":"    // Manually added - Task\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"ljhgab"},"content":"    public static final Task TASKONE \u003d new TaskBuilder().withName(VALID_TASK_NAME_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":90,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(VALID_TASK_DEADLINE_TASKONE).withPriority(VALID_TASK_PRIORITY_TASKONE)","lastModifiedDate":"2021-04-05"},{"lineNumber":91,"author":{"gitId":"ljhgab"},"content":"            .withCategories(VALID_TASK_CATEGORY_HOMEWORK).withTags(VALID_TASK_TAG_IMPORTANT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":92,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":93,"author":{"gitId":"ljhgab"},"content":"    public static final Task TASKTWO \u003d new TaskBuilder().withName(VALID_TASK_NAME_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":94,"author":{"gitId":"ljhgab"},"content":"            .withDeadline(VALID_TASK_DEADLINE_TASKTWO).withPriority(VALID_TASK_PRIORITY_TASKTWO)","lastModifiedDate":"2021-04-05"},{"lineNumber":95,"author":{"gitId":"ljhgab"},"content":"            .withCategories(VALID_TASK_CATEGORY_PROJECT)","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"ljhgab"},"content":"            .withTags(VALID_TASK_TAG_IMPORTANT, VALID_TASK_TAG_DIFFICULT).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":97,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":98,"author":{"gitId":"icelenaugust"},"content":"    public static final String KEYWORD_MATCHING_ASSIGNMENT \u003d \"Assignment\"; // A keyword that matches MEIER","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"icelenaugust"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"icelenaugust"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"icelenaugust"},"content":"     * Returns an {@code Sochedule} with all the typical tasks.","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"icelenaugust"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"icelenaugust"},"content":"    public static Sochedule getTypicalSochedule() {","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"icelenaugust"},"content":"        Sochedule sochedule \u003d new Sochedule();","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"icelenaugust"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"icelenaugust"},"content":"            sochedule.addTask(task);","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"icelenaugust"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"icelenaugust"},"content":"        return sochedule;","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"icelenaugust"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"ljhgab"},"content":"    /**","lastModifiedDate":"2021-04-08"},{"lineNumber":114,"author":{"gitId":"ljhgab"},"content":"     * Returns an {@Code Sochedule} with two additional typical tasks on today added.","lastModifiedDate":"2021-04-08"},{"lineNumber":115,"author":{"gitId":"ljhgab"},"content":"     */","lastModifiedDate":"2021-04-08"},{"lineNumber":116,"author":{"gitId":"ljhgab"},"content":"    public static Sochedule getTypicalSocheduleWithTodayTask() {","lastModifiedDate":"2021-04-08"},{"lineNumber":117,"author":{"gitId":"ljhgab"},"content":"        Sochedule sochedule \u003d new Sochedule();","lastModifiedDate":"2021-04-08"},{"lineNumber":118,"author":{"gitId":"ljhgab"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-04-08"},{"lineNumber":119,"author":{"gitId":"ljhgab"},"content":"            sochedule.addTask(task);","lastModifiedDate":"2021-04-08"},{"lineNumber":120,"author":{"gitId":"ljhgab"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":121,"author":{"gitId":"ljhgab"},"content":"        sochedule.addTask(DUE);","lastModifiedDate":"2021-04-08"},{"lineNumber":122,"author":{"gitId":"ljhgab"},"content":"        sochedule.addTask(ANOTHER_DUE);","lastModifiedDate":"2021-04-08"},{"lineNumber":123,"author":{"gitId":"ljhgab"},"content":"        return sochedule;","lastModifiedDate":"2021-04-08"},{"lineNumber":124,"author":{"gitId":"ljhgab"},"content":"    }","lastModifiedDate":"2021-04-08"},{"lineNumber":125,"author":{"gitId":"ljhgab"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":126,"author":{"gitId":"icelenaugust"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"icelenaugust"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ASSIGNMENT, LAB, BREAKFAST, SHOPPING, REVISION, EXERCISE));","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"icelenaugust"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"icelenaugust"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"icelenaugust":53,"ljhgab":76}}]
