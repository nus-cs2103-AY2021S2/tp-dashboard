[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-W16-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-W16-1/tp/actions)"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"YuFeng0930"},"content":"Are you always overwhelmed by a lot of commitments and struggling to keep track of them?"},{"lineNumber":6,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":7,"author":{"gitId":"YuFeng0930"},"content":"Introducing **SOChedule**, **a desktop task managing app** that will make your life much easier: "},{"lineNumber":8,"author":{"gitId":"YuFeng0930"},"content":"* SOChedule is a one-stop solution for managing tasks and events, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)."},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"* This app is meant for users who can type fast, and prefer typing over mouse/voice commands."},{"lineNumber":10,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"## About Us"},{"lineNumber":12,"author":{"gitId":"YuFeng0930"},"content":"For more details on our project team members, do check out the [AboutUs](https://github.com/AY2021S2-CS2103-W16-1/tp/blob/master/docs/AboutUs.md) page."},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":14,"author":{"gitId":"YuFeng0930"},"content":"## User Guide"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"For more information on how to use SOChedule, you may refer to the [User Guide](https://github.com/AY2021S2-CS2103-W16-1/tp/blob/master/docs/UserGuide.md)."},{"lineNumber":16,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":17,"author":{"gitId":"YuFeng0930"},"content":"## Developer Guide"},{"lineNumber":18,"author":{"gitId":"YuFeng0930"},"content":"For more information on how we develop SOChedule, you may refer to the [Developer Guide](https://github.com/AY2021S2-CS2103-W16-1/tp/blob/master/docs/DeveloperGuide.md)."},{"lineNumber":19,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":20,"author":{"gitId":"YuFeng0930"},"content":"## Acknowledgments"},{"lineNumber":21,"author":{"gitId":"YuFeng0930"},"content":"This project is based on the AddressBook-Level3 project, created by the [SE-EDU initiative](https://se-education.org)."}],"authorContributionMap":{"YuFeng0930":17,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuFeng0930"},"content":"# About Us"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Project team"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"YuFeng0930"},"content":"### Cheng Yu Feng"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"SoulUseless"},"content":"\u003cimg src\u003d\"images/yufeng0930.png\" width\u003d\"200px\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"YuFeng0930"},"content":"[[github](https://github.com/YuFeng0930)]"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"SoulUseless"},"content":"* Role: Developer"},{"lineNumber":17,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Events Team"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"### Ding You Jia, Danelynn"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"SoulUseless"},"content":"\u003cimg src\u003d\"images/icelenaugust.png\" width\u003d\"200px\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"[[github](http://github.com/icelenaugust)]"},{"lineNumber":24,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"SoulUseless"},"content":"* Role: Developer"},{"lineNumber":27,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Tasks Team"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"ljhgab"},"content":"### Li Jiahe"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"SoulUseless"},"content":"\u003cimg src\u003d\"images/ljhgab.png\" width\u003d\"200px\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"ljhgab"},"content":"[[github](https://github.com/ljhgab)]"},{"lineNumber":34,"author":{"gitId":"ljhgab"},"content":"[[portfolio](team/johndoe.md)]"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Tasks Team"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"### Yap Jing Kang"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"SoulUseless"},"content":"\u003cimg src\u003d\"images/souluseless.png\" width\u003d\"200px\"\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"SoulUseless"},"content":"[[github](http://github.com/souluseless)]"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":47,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Tasks Team"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"litone01"},"content":"### Yu Jiaxiang"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"litone01"},"content":"\u003cimg src\u003d\"images/litone01.png\" width\u003d\"200px\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"litone01"},"content":"[[github](http://github.com/litone01)]"},{"lineNumber":54,"author":{"gitId":"litone01"},"content":"[[portfolio](team/litone01.md)]"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer"},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"* Responsibilities: Events Team"}],"authorContributionMap":{"YuFeng0930":3,"icelenaugust":2,"-":32,"SoulUseless":13,"ljhgab":3,"litone01":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App."},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor."},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory."},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component."},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command."},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person)."},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences."},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data."},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history."},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo."},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book."},{"lineNumber":206,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement."},{"lineNumber":207,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage."},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself."},{"lineNumber":211,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct."},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Product scope"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Target user profile**:"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"SoulUseless"},"content":"* NUS SOC Student"},{"lineNumber":240,"author":{"gitId":"SoulUseless"},"content":"* Prefer using CLI rather than GUI"},{"lineNumber":241,"author":{"gitId":"SoulUseless"},"content":"* Struggle to manage their schedule"},{"lineNumber":242,"author":{"gitId":"SoulUseless"},"content":"* Have a lot commitments (6 modules, TA and RA roles while balancing a part time internship)"},{"lineNumber":243,"author":{"gitId":"SoulUseless"},"content":"* Can type fast, hate mouse"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"SoulUseless"},"content":"**Value proposition**:"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"SoulUseless"},"content":"* Provide a simple platform for target users to manage their schedule"},{"lineNumber":248,"author":{"gitId":"SoulUseless"},"content":"* CLI commands to manage meetings or schedule with some contacts"},{"lineNumber":249,"author":{"gitId":"SoulUseless"},"content":"* CLI commands to add tasks and reminders"},{"lineNumber":250,"author":{"gitId":"SoulUseless"},"content":"* GUI to display the schedule of user"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"### User stories"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"icelenaugust"},"content":"| Priority | As a …​                            | I want to …​                                                        | So that …​                                                                |"},{"lineNumber":257,"author":{"gitId":"icelenaugust"},"content":"| -------- | ------------------------------------- | ---------------------------------------------------------------------- | ---------------------------------------------------------------------------- |"},{"lineNumber":258,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | Add a task to my schedule                                              | I can track my task better                                                   |"},{"lineNumber":259,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | Allocate a priority score to a task                                    | I can prioritise my time better                                              |"},{"lineNumber":260,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | Edit a task in my schedule                                             | I can have flexibility in my schedule                                        |"},{"lineNumber":261,"author":{"gitId":"SoulUseless"},"content":"| `* * *`  | SOC Student                           | Mark a task complete in my schedule                                    | I can track which tasks I have completed                                     |"},{"lineNumber":262,"author":{"gitId":"SoulUseless"},"content":"| `* * *`  | SOC Student                           | Delete a task from my schedule from my schedule                        | I can have flexibility in my schedule                                        |"},{"lineNumber":263,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | View tasks in my schedule                                              | I can have a better sense of what will happen in the following days or weeks |"},{"lineNumber":264,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | Sort my tasks in my schedule in various orderings                      | I can prioritise my time better                                              |"},{"lineNumber":265,"author":{"gitId":"SoulUseless"},"content":"| `*`      | Forgetful SOC Student                 | Get reminders from SOChedule regarding task deadlines                  | I will not lose track of my tasks                                            |"},{"lineNumber":266,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC student under huge workload       | View my schedule to see my free time slots                             | I can allocate my time better and fill it up with more tasks                 |"},{"lineNumber":267,"author":{"gitId":"SoulUseless"},"content":"| `*`      | SOC Student                           | View the people that I need to work with for a specific event          | I can keep in touch with the person better                                   |"},{"lineNumber":268,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | Add an event (with the required information) to my schedule            | I can track my time better                                                   |"},{"lineNumber":269,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Add recurring events (with the required information) to my schedule    | I can plan ahead for my schedule                                             |"},{"lineNumber":270,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Add a person that I have to work with to an event in my schedule       | I can track who I need to work with for an even                              |"},{"lineNumber":271,"author":{"gitId":"SoulUseless"},"content":"| `*`      | SOC Student                           | Add a meeting link to an event in my schedule                          | I can quickly join a online meeting                                          |"},{"lineNumber":272,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | Edit event description in my schedule                                  | I can have flexibility in my schedule                                        |"},{"lineNumber":273,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | Edit the event time in my schedule                                     | I can have flexibility in my schedule                                        |"},{"lineNumber":274,"author":{"gitId":"icelenaugust"},"content":"| `* * *`  | SOC Student                           | Delete an event from my schedule from my schedule                      | I can have flexibility in my schedule                                        |"},{"lineNumber":275,"author":{"gitId":"SoulUseless"},"content":"| `*`      | SOC Student                           | Remove the person I am working with for an event                       | I can track who I need to work with for an event                             |"},{"lineNumber":276,"author":{"gitId":"SoulUseless"},"content":"| `* * *`  | SOC Student                           | View events in my schedule                                             | I can have a better sense of what will happen in the following days or weeks |"},{"lineNumber":277,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | View events for today                                                  | I can have a better sense of what will happen in the following hours         |"},{"lineNumber":278,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | Sort the tasks based on the deadline                                   | I can proceed with the task that is closer to the deadline                   |"},{"lineNumber":279,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student                           | Get alerts for impending events                                        | I can prepare ahead of time for the event                                    |"},{"lineNumber":280,"author":{"gitId":"SoulUseless"},"content":"| `*`      | SOC Student                           | Add the schedule of what I want to do and what I really do             | I can reflect which part of the day being not productive                     |"},{"lineNumber":281,"author":{"gitId":"SoulUseless"},"content":"| `*`      | SOC Student                           | Set alert time frame for events                                        | I can prepare ahead of time                                                  |"},{"lineNumber":282,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Set colours to events                                                  | I can categorise my events                                                   |"},{"lineNumber":283,"author":{"gitId":"icelenaugust"},"content":"| `* *`    | SOC Student                           | Set colours to tasks                                                   | I can categorise my tasks                                                    |"},{"lineNumber":284,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | highlight the events that are very important                           | I can differentiate the important tasks from the rest                        |"},{"lineNumber":285,"author":{"gitId":"SoulUseless"},"content":"| `*`      | SOC Student                           | record the progress of a habit user want to cultivate                  | I can cultivate a lot of good habits                                         |"},{"lineNumber":286,"author":{"gitId":"SoulUseless"},"content":"| `*`      | SOC Student                           | write a diary each day                                                 | I can record my life                                                         |"},{"lineNumber":287,"author":{"gitId":"icelenaugust"},"content":"| `*`      | SOC Student with many project modules | know who I am doing the task with                                      | it is easier to schedule meetings or discussions with my group mates         |"},{"lineNumber":288,"author":{"gitId":"SoulUseless"},"content":"| `*`      | SOC Student                           | keep track of the progress of each module                              | I can finish all tasks well and on time                                      |"},{"lineNumber":289,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | categorise my tasks                                                    | I can group my tasks to have a clearer schedule                              |"},{"lineNumber":290,"author":{"gitId":"SoulUseless"},"content":"| `* *`    | SOC Student                           | find out the free time between events                                  | fill in other activities to achieve better time management                   |"},{"lineNumber":291,"author":{"gitId":"SoulUseless"},"content":"| `*`      | SOC Student taking several projects   | have a better sense on the project tasks assigned and the due date     | I can finish the tasks assigned on time                                      |"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"### Use cases"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"icelenaugust"},"content":"(For all use cases below, the **System** is the `SOChedule` and the **Actor** is the `User`, unless specified otherwise)"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC01 - Add a task**"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"SoulUseless"},"content":"1. User wishes to add a new task."},{"lineNumber":304,"author":{"gitId":"SoulUseless"},"content":"2. User enters the required parameters."},{"lineNumber":305,"author":{"gitId":"SoulUseless"},"content":"3. SOChedule displays a success message for adding the task."},{"lineNumber":306,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":307,"author":{"gitId":"SoulUseless"},"content":"Use case ends."},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"SoulUseless"},"content":"**Extensions**"},{"lineNumber":310,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":311,"author":{"gitId":"SoulUseless"},"content":"* 2a. Some required information about the event is missing in the command."},{"lineNumber":312,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":313,"author":{"gitId":"SoulUseless"},"content":"    * 1a1. SOChedule displays an error message suggesting that information provided when creating"},{"lineNumber":314,"author":{"gitId":"SoulUseless"},"content":"      the event is incomplete."},{"lineNumber":315,"author":{"gitId":"SoulUseless"},"content":"      Use case ends."},{"lineNumber":316,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":317,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":318,"author":{"gitId":"SoulUseless"},"content":"* 2b. The date provided for the event is invalid"},{"lineNumber":319,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":320,"author":{"gitId":"SoulUseless"},"content":"    * 1b1. SOChedule displays an error message suggesting that date provied for the event"},{"lineNumber":321,"author":{"gitId":"SoulUseless"},"content":"      is invalid, or not following the `YYYY-MM-DD` format."},{"lineNumber":322,"author":{"gitId":"SoulUseless"},"content":"      Use case ends."},{"lineNumber":323,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":324,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC02 - List tasks**"},{"lineNumber":325,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":326,"author":{"gitId":"SoulUseless"},"content":"**MSS**"},{"lineNumber":327,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":328,"author":{"gitId":"SoulUseless"},"content":"1. User wishes to add a new task."},{"lineNumber":329,"author":{"gitId":"SoulUseless"},"content":"2. User enters the corresponding command."},{"lineNumber":330,"author":{"gitId":"SoulUseless"},"content":"3. SOChedule displays all tasks."},{"lineNumber":331,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":332,"author":{"gitId":"SoulUseless"},"content":"Use case ends.   "},{"lineNumber":333,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":334,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC03 - Delete a task**"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"SoulUseless"},"content":"1. User requests to \u003cu\u003e list tasks (UC02)\u003c/u\u003e."},{"lineNumber":339,"author":{"gitId":"YuFeng0930"},"content":"2. SOChedule shows a list of tasks."},{"lineNumber":340,"author":{"gitId":"icelenaugust"},"content":"3. User chooses to delete a task."},{"lineNumber":341,"author":{"gitId":"icelenaugust"},"content":"4. User enters the index of the task to be deleted."},{"lineNumber":342,"author":{"gitId":"icelenaugust"},"content":"5. SOChedule displays a success message for deleting the task."},{"lineNumber":343,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":344,"author":{"gitId":"-"},"content":"Use case ends."},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"icelenaugust"},"content":"* 2a. The task list is empty."},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"  Use case ends."},{"lineNumber":351,"author":{"gitId":"-"},"content":"  "},{"lineNumber":352,"author":{"gitId":"SoulUseless"},"content":"  \u003cbr\u003e"},{"lineNumber":353,"author":{"gitId":"SoulUseless"},"content":"  "},{"lineNumber":354,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":355,"author":{"gitId":"-"},"content":""},{"lineNumber":356,"author":{"gitId":"icelenaugust"},"content":"    * 3a1. SOChedule shows an error message."},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"      Use case resumes at step 2."},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC04 - Mark a task as completed**"},{"lineNumber":361,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":362,"author":{"gitId":"ljhgab"},"content":"**MSS**"},{"lineNumber":363,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":364,"author":{"gitId":"SoulUseless"},"content":"1. User requests to \u003cu\u003e list tasks (UC02)\u003c/u\u003e."},{"lineNumber":365,"author":{"gitId":"ljhgab"},"content":"2. SOChedule shows a list of tasks."},{"lineNumber":366,"author":{"gitId":"ljhgab"},"content":"3. User chooses to mark a task as completed."},{"lineNumber":367,"author":{"gitId":"ljhgab"},"content":"4. User enters the index of the task to be marked."},{"lineNumber":368,"author":{"gitId":"ljhgab"},"content":"5. SOChedule displays a success message for marking the task as completed."},{"lineNumber":369,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":370,"author":{"gitId":"ljhgab"},"content":"Use case ends."},{"lineNumber":371,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":372,"author":{"gitId":"ljhgab"},"content":"**Extensions**"},{"lineNumber":373,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":374,"author":{"gitId":"ljhgab"},"content":"* 2a. The task list is empty."},{"lineNumber":375,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":376,"author":{"gitId":"ljhgab"},"content":"  Use case ends."},{"lineNumber":377,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":378,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":379,"author":{"gitId":"ljhgab"},"content":"* 3a. The given index is invalid."},{"lineNumber":380,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":381,"author":{"gitId":"ljhgab"},"content":"    * 3a1. SOChedule shows an error message indicating the invalidity of the index."},{"lineNumber":382,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":383,"author":{"gitId":"ljhgab"},"content":"      Use case resumes at step 2."},{"lineNumber":384,"author":{"gitId":"ljhgab"},"content":"    "},{"lineNumber":385,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC05 - Add an event**"},{"lineNumber":386,"author":{"gitId":"litone01"},"content":""},{"lineNumber":387,"author":{"gitId":"litone01"},"content":"**MSS**"},{"lineNumber":388,"author":{"gitId":"litone01"},"content":""},{"lineNumber":389,"author":{"gitId":"litone01"},"content":"1. User requests to add a new event."},{"lineNumber":390,"author":{"gitId":"litone01"},"content":"1. SOChedule displays a success message for adding the event."},{"lineNumber":391,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":392,"author":{"gitId":"litone01"},"content":"Use case ends."},{"lineNumber":393,"author":{"gitId":"litone01"},"content":""},{"lineNumber":394,"author":{"gitId":"litone01"},"content":"**Extensions**"},{"lineNumber":395,"author":{"gitId":"litone01"},"content":""},{"lineNumber":396,"author":{"gitId":"litone01"},"content":"* 1a. Some required information about the event is missing in the command."},{"lineNumber":397,"author":{"gitId":"litone01"},"content":"  "},{"lineNumber":398,"author":{"gitId":"litone01"},"content":"    * 1a1. SOChedule displays an error message suggesting that information provided when creating"},{"lineNumber":399,"author":{"gitId":"litone01"},"content":"      the event is incomplete."},{"lineNumber":400,"author":{"gitId":"litone01"},"content":"      Use case ends."},{"lineNumber":401,"author":{"gitId":"litone01"},"content":""},{"lineNumber":402,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":403,"author":{"gitId":"litone01"},"content":"* 1b. The date provided for the event is invalid"},{"lineNumber":404,"author":{"gitId":"litone01"},"content":""},{"lineNumber":405,"author":{"gitId":"SoulUseless"},"content":"    * 1b1. SOChedule displays an error message suggesting that date provided for the event"},{"lineNumber":406,"author":{"gitId":"litone01"},"content":"      is invalid, or not following the `YYYY-MM-DD` format."},{"lineNumber":407,"author":{"gitId":"litone01"},"content":"      Use case ends."},{"lineNumber":408,"author":{"gitId":"ljhgab"},"content":"      "},{"lineNumber":409,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC06 - List events**"},{"lineNumber":410,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":411,"author":{"gitId":"YuFeng0930"},"content":"**MSS**"},{"lineNumber":412,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":413,"author":{"gitId":"SoulUseless"},"content":"1. User requests to list all events in the SOChedule."},{"lineNumber":414,"author":{"gitId":"SoulUseless"},"content":"1. SOChedule displays a list of all events added."},{"lineNumber":415,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":416,"author":{"gitId":"SoulUseless"},"content":"Use case ends."},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"SoulUseless"},"content":"* 1a. No events have been added."},{"lineNumber":421,"author":{"gitId":"SoulUseless"},"content":"    * 1a1. SOChedule displays an empty list."},{"lineNumber":422,"author":{"gitId":"SoulUseless"},"content":"      Use case ends."},{"lineNumber":423,"author":{"gitId":"SoulUseless"},"content":"      "},{"lineNumber":424,"author":{"gitId":"SoulUseless"},"content":"**Use case: UC07 - Delete an event**"},{"lineNumber":425,"author":{"gitId":"SoulUseless"},"content":"      "},{"lineNumber":426,"author":{"gitId":"SoulUseless"},"content":"**MSS**"},{"lineNumber":427,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":428,"author":{"gitId":"SoulUseless"},"content":"1. User requests to \u003cu\u003e list events (UC06)\u003c/u\u003e."},{"lineNumber":429,"author":{"gitId":"YuFeng0930"},"content":"2. SOChedule shows a list of events."},{"lineNumber":430,"author":{"gitId":"YuFeng0930"},"content":"3. User chooses to delete an event."},{"lineNumber":431,"author":{"gitId":"YuFeng0930"},"content":"4. User enters the index of the event to be deleted."},{"lineNumber":432,"author":{"gitId":"YuFeng0930"},"content":"5. SOChedule displays a success message for deleting the event."},{"lineNumber":433,"author":{"gitId":"SoulUseless"},"content":"\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":434,"author":{"gitId":"YuFeng0930"},"content":"Use case ends."},{"lineNumber":435,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":436,"author":{"gitId":"YuFeng0930"},"content":"**Extensions**"},{"lineNumber":437,"author":{"gitId":"YuFeng0930"},"content":""},{"lineNumber":438,"author":{"gitId":"YuFeng0930"},"content":"* 2a. The event scheduler is empty."},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"  Use case ends."},{"lineNumber":441,"author":{"gitId":"-"},"content":""},{"lineNumber":442,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":444,"author":{"gitId":"-"},"content":""},{"lineNumber":445,"author":{"gitId":"YuFeng0930"},"content":"    * 3a1. SOChedule shows an error message."},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"      Use case resumes at step 2."},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"litone01"},"content":"      "},{"lineNumber":450,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Non-Functional Requirements"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed."},{"lineNumber":455,"author":{"gitId":"SoulUseless"},"content":"1.  Should be able to hold up to 1000 tasks without a noticeable sluggishness in performance for typical usage."},{"lineNumber":456,"author":{"gitId":"SoulUseless"},"content":"1.  Should be able to hold up to 500 events without a noticeable sluggishness in performance for typical usage."},{"lineNumber":457,"author":{"gitId":"SoulUseless"},"content":"1.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":458,"author":{"gitId":"SoulUseless"},"content":"1.  Should give a response to user\u0027s input within 5 seconds."},{"lineNumber":459,"author":{"gitId":"SoulUseless"},"content":"1.  The user interface should be intuitive to a SoC freshman with little knowledge about programming."},{"lineNumber":460,"author":{"gitId":"SoulUseless"},"content":"1.  The source code should be open source."},{"lineNumber":461,"author":{"gitId":"-"},"content":""},{"lineNumber":462,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Glossary"},{"lineNumber":465,"author":{"gitId":"-"},"content":""},{"lineNumber":466,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X"},{"lineNumber":467,"author":{"gitId":"SoulUseless"},"content":"* **Event**: Activities that start at a specific time and ends at a specific time."},{"lineNumber":468,"author":{"gitId":"SoulUseless"},"content":"* **Task**: Activities to be undertaken that can be marked complete/incomplete. Optionally it has a date field to indicate deadlines."},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":475,"author":{"gitId":"-"},"content":""},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"},{"lineNumber":477,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing."},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"### Launch and shutdown"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"1. Initial launch"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"1. Saving window preferences"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"},{"lineNumber":494,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained."},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"### Deleting a person"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown"},{"lineNumber":501,"author":{"gitId":"-"},"content":""},{"lineNumber":502,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list."},{"lineNumber":503,"author":{"gitId":"-"},"content":""},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."},{"lineNumber":509,"author":{"gitId":"-"},"content":""},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      Expected: Similar to previous."},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Saving data"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"}],"authorContributionMap":{"YuFeng0930":15,"icelenaugust":18,"-":345,"SoulUseless":102,"ljhgab":21,"litone01":20}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"## User Guide"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":"SOChedule is a one-stop solution for managing tasks and events, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"## Feature List"},{"lineNumber":10,"author":{"gitId":"SoulUseless"},"content":"* Adding a task: `add task`"},{"lineNumber":11,"author":{"gitId":"YuFeng0930"},"content":"* Deleting a task: `delete task`"},{"lineNumber":12,"author":{"gitId":"SoulUseless"},"content":"* Listing all tasks: `list task`"},{"lineNumber":13,"author":{"gitId":"ljhgab"},"content":"* Marking a task as done : `done task`"},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"* Adding an event: `add event`"},{"lineNumber":15,"author":{"gitId":"YuFeng0930"},"content":"* Deleting an event: `delete event`"},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"* Listing all events: `list event`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Quick start"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"SoulUseless"},"content":"1. Download the latest `SOChedule.jar` from [link coming soon]."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"ljhgab"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your SOChedule."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   Some example commands you can try:"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"SoulUseless"},"content":"   * **`list task`** : Lists all tasks."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"SoulUseless"},"content":"   * **`add task`**`n/CS2103 assignment d/2021-02-27 p/1 c/school work t/urgent` : Adds a task named `CS2103 assignment` to the SOChedule with its respective attributes."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"SoulUseless"},"content":"   * **`delete task`**`3` : Deletes the 3rd task shown in the current list."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"SoulUseless"},"content":"### Adding a task: `add task`"},{"lineNumber":50,"author":{"gitId":"SoulUseless"},"content":"Adds a task to SOChedule Task List."},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"SoulUseless"},"content":"Format: `add task n/TASKNAME [d/DEADLINE] [p/PRIORITY] [c/CATEGORY]... [t/TAG]...`"},{"lineNumber":53,"author":{"gitId":"SoulUseless"},"content":"* `n/` is followed by the task name."},{"lineNumber":54,"author":{"gitId":"SoulUseless"},"content":"* `d/` is followed by the date, with the format YYYY-MM-DD. It is optional."},{"lineNumber":55,"author":{"gitId":"SoulUseless"},"content":"* `p/` is followed by the priority, with 0 being highest and 9 being lowest. Other inputs are not accepted. It is optional."},{"lineNumber":56,"author":{"gitId":"SoulUseless"},"content":"* `c/` is followed by the category. It is optional."},{"lineNumber":57,"author":{"gitId":"SoulUseless"},"content":"* `t/` is followed by the tag. It is optional."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":60,"author":{"gitId":"SoulUseless"},"content":"* `add task n/CS2103 assignment d/2021-02-27 p/1 c/school work t/urgent` adds a new task named \"CS2103 assignment\" with the respective parameters."},{"lineNumber":61,"author":{"gitId":"SoulUseless"},"content":"* `add task n/CCA admin work d/2021-02-28 p/2 c/CCA` adds a new task \"CCA admin work\" with the respective parameters."},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"SoulUseless"},"content":"### Listing all tasks: `list task`"},{"lineNumber":64,"author":{"gitId":"SoulUseless"},"content":"Lists all tasks from SOChedule Task List."},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"SoulUseless"},"content":"Format: `list task`"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"icelenaugust"},"content":"### Deleting a task: `delete task`"},{"lineNumber":69,"author":{"gitId":"icelenaugust"},"content":"Deletes a task from SOChedule Task List."},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"SoulUseless"},"content":"Format: `delete task i/INDEX`"},{"lineNumber":72,"author":{"gitId":"SoulUseless"},"content":"* `i/` is followed by the task index."},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":75,"author":{"gitId":"icelenaugust"},"content":"* `delete task i/2` deletes the second task in the task list."},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"ljhgab"},"content":"### Marking a task as done: `done task`"},{"lineNumber":78,"author":{"gitId":"ljhgab"},"content":"Marks a task from SOChedule Task List as completed."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"SoulUseless"},"content":"Format: `done task i/INDEX`"},{"lineNumber":81,"author":{"gitId":"SoulUseless"},"content":"* `i/` is followed by the task index."},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":84,"author":{"gitId":"ljhgab"},"content":"* `done task i/1` marks the first task in the task list as completed."},{"lineNumber":85,"author":{"gitId":"ljhgab"},"content":""},{"lineNumber":86,"author":{"gitId":"litone01"},"content":"### Adding an event: `add event`"},{"lineNumber":87,"author":{"gitId":"litone01"},"content":"Adds an event to the SOChedule Event Scheduler."},{"lineNumber":88,"author":{"gitId":"SoulUseless"},"content":"Format: `add event n/TASKNAME s/STARTDATE [st/STARTTIME] e/ENDDATE [et/ENDTIME] [c/CATEGORY]... [t/TAG]...`"},{"lineNumber":89,"author":{"gitId":"litone01"},"content":"* `n/` is followed by the task name, it is case-sensitive."},{"lineNumber":90,"author":{"gitId":"SoulUseless"},"content":"* `s/` is followed by the starting date, it has to be a **valid date** and in the format of **YYYY-MM-DD**. Here, Y is the year, M is the month, D is the day and all has to be integers."},{"lineNumber":91,"author":{"gitId":"SoulUseless"},"content":"* `st/` is followed by the time in 24-hour format and in the format of **hh:mm** Here, h is the hour, m is the minute and all has to be integers. It is optional."},{"lineNumber":92,"author":{"gitId":"SoulUseless"},"content":"* `e/` is followed by the end date, it has to be a **valid date** and in the format of **YYYY-MM-DD**."},{"lineNumber":93,"author":{"gitId":"SoulUseless"},"content":"* `et/` is followed by the time in 24-hour format and in the format of **hh:mm**. It is optional."},{"lineNumber":94,"author":{"gitId":"SoulUseless"},"content":"* `c/` is followed by the category. It is optional."},{"lineNumber":95,"author":{"gitId":"SoulUseless"},"content":"* `t/` is followed by the tag. It is optional."},{"lineNumber":96,"author":{"gitId":"litone01"},"content":"  "},{"lineNumber":97,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":98,"author":{"gitId":"SoulUseless"},"content":"* `add event n/CS2103 meeting s/2021-02-27 st/15:00 e/2021-02-27 et/17:00` adds an event with name `CS2103` and its respective attributes to the SOChedule Event Scheduler."},{"lineNumber":99,"author":{"gitId":"litone01"},"content":"  "},{"lineNumber":100,"author":{"gitId":"YuFeng0930"},"content":"### Deleting an event: `delete event`"},{"lineNumber":101,"author":{"gitId":"YuFeng0930"},"content":"Deletes an event from the SOChedule Event Scheduler."},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"SoulUseless"},"content":"Format: `delete event i/INDEX`"},{"lineNumber":104,"author":{"gitId":"SoulUseless"},"content":"* `i/` is followed by the event index."},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"YuFeng0930"},"content":"Examples:"},{"lineNumber":107,"author":{"gitId":"YuFeng0930"},"content":"* `delete event i/3` deletes the third event from the Event Scheduler."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"litone01"},"content":"### Listing all events: `list event`"},{"lineNumber":110,"author":{"gitId":"litone01"},"content":"Lists all events from SOChedule Event Scheduler."},{"lineNumber":111,"author":{"gitId":"litone01"},"content":"Format: `list event`"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"_Details coming soon ..._"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"},{"lineNumber":122,"author":{"gitId":"SoulUseless"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SOChedule home folder."},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"## Command summary"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"SoulUseless"},"content":"###General commands"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Action | Format, Examples"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------|------------------"},{"lineNumber":131,"author":{"gitId":"-"},"content":"**Help** | `help`"},{"lineNumber":132,"author":{"gitId":"SoulUseless"},"content":"**Exit** | `exit`"},{"lineNumber":133,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":134,"author":{"gitId":"SoulUseless"},"content":"###Task-related commands"},{"lineNumber":135,"author":{"gitId":"SoulUseless"},"content":"Action | Format, Examples"},{"lineNumber":136,"author":{"gitId":"SoulUseless"},"content":"--------|------------------"},{"lineNumber":137,"author":{"gitId":"SoulUseless"},"content":"**Add** | `add task n/TASKNAME [d/DEADLINE] [p/PRIORITY] [c/CATEGORY]... [t/TAG]...` \u003cbr\u003e e.g., `add task n/CS2103 assignment d/2021-02-27 p/1 c/school work t/urgent`"},{"lineNumber":138,"author":{"gitId":"SoulUseless"},"content":"**Delete** | `delete task i/INDEX`\u003cbr\u003ee.g., `delete task i/1`"},{"lineNumber":139,"author":{"gitId":"SoulUseless"},"content":"**Done** | `done task i/INDEX`\u003cbr\u003ee.g., `done task i/1`"},{"lineNumber":140,"author":{"gitId":"SoulUseless"},"content":"**List** | `list task`"},{"lineNumber":141,"author":{"gitId":"SoulUseless"},"content":""},{"lineNumber":142,"author":{"gitId":"SoulUseless"},"content":"###Event-related commands"},{"lineNumber":143,"author":{"gitId":"SoulUseless"},"content":"Action | Format, Examples"},{"lineNumber":144,"author":{"gitId":"SoulUseless"},"content":"--------|------------------"},{"lineNumber":145,"author":{"gitId":"SoulUseless"},"content":"**Add** | `add event n/TASKNAME s/STARTDATE [st/STARTTIME] e/ENDDATE [et/ENDTIME] [c/CATEGORY]... [t/TAG]...`\u003cbr\u003e e.g., `add event n/CS2103 meeting s/2021-02-27 st/15:00 e/2021-02-27 et/17:00`"},{"lineNumber":146,"author":{"gitId":"SoulUseless"},"content":"**Delete** | `delete event i/INDEX`\u003cbr\u003ee.g., `delete event i/3`"},{"lineNumber":147,"author":{"gitId":"SoulUseless"},"content":"**List** | `list event`"}],"authorContributionMap":{"YuFeng0930":6,"icelenaugust":6,"-":68,"SoulUseless":51,"ljhgab":6,"litone01":10}},{"path":"docs/team/litone01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"litone01"},"content":"---"},{"lineNumber":2,"author":{"gitId":"litone01"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"litone01"},"content":"title: Jiaxiang\u0027s Project Portfolio Page"},{"lineNumber":4,"author":{"gitId":"litone01"},"content":"---"},{"lineNumber":5,"author":{"gitId":"litone01"},"content":""},{"lineNumber":6,"author":{"gitId":"litone01"},"content":"## Project: SOChedule (YET TO BE UPDATED)"},{"lineNumber":7,"author":{"gitId":"litone01"},"content":""},{"lineNumber":8,"author":{"gitId":"litone01"},"content":"SOChedule is a one-stop solution for managing tasks and events, optimized for use via a Command Line Interface (CLI) "},{"lineNumber":9,"author":{"gitId":"litone01"},"content":"while still having the benefits of a Graphical User Interface (GUI)."},{"lineNumber":10,"author":{"gitId":"litone01"},"content":""},{"lineNumber":11,"author":{"gitId":"litone01"},"content":"Given below are my contributions to the project."},{"lineNumber":12,"author":{"gitId":"litone01"},"content":""},{"lineNumber":13,"author":{"gitId":"litone01"},"content":"* **New Feature**: Added the ability to undo/redo previous commands."},{"lineNumber":14,"author":{"gitId":"litone01"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command."},{"lineNumber":15,"author":{"gitId":"litone01"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them."},{"lineNumber":16,"author":{"gitId":"litone01"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands."},{"lineNumber":17,"author":{"gitId":"litone01"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*"},{"lineNumber":18,"author":{"gitId":"litone01"},"content":""},{"lineNumber":19,"author":{"gitId":"litone01"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys."},{"lineNumber":20,"author":{"gitId":"litone01"},"content":""},{"lineNumber":21,"author":{"gitId":"litone01"},"content":"* **Code contributed**: [RepoSense link]()"},{"lineNumber":22,"author":{"gitId":"litone01"},"content":""},{"lineNumber":23,"author":{"gitId":"litone01"},"content":"* **Project management**:"},{"lineNumber":24,"author":{"gitId":"litone01"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub"},{"lineNumber":25,"author":{"gitId":"litone01"},"content":""},{"lineNumber":26,"author":{"gitId":"litone01"},"content":"* **Enhancements to existing features**:"},{"lineNumber":27,"author":{"gitId":"litone01"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())"},{"lineNumber":28,"author":{"gitId":"litone01"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())"},{"lineNumber":29,"author":{"gitId":"litone01"},"content":""},{"lineNumber":30,"author":{"gitId":"litone01"},"content":"* **Documentation**:"},{"lineNumber":31,"author":{"gitId":"litone01"},"content":"    * User Guide:"},{"lineNumber":32,"author":{"gitId":"litone01"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()"},{"lineNumber":33,"author":{"gitId":"litone01"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()"},{"lineNumber":34,"author":{"gitId":"litone01"},"content":"    * Developer Guide:"},{"lineNumber":35,"author":{"gitId":"litone01"},"content":"        * Added implementation details of the `delete` feature."},{"lineNumber":36,"author":{"gitId":"litone01"},"content":""},{"lineNumber":37,"author":{"gitId":"litone01"},"content":"* **Community**:"},{"lineNumber":38,"author":{"gitId":"litone01"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()"},{"lineNumber":39,"author":{"gitId":"litone01"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())"},{"lineNumber":40,"author":{"gitId":"litone01"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())"},{"lineNumber":41,"author":{"gitId":"litone01"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())"},{"lineNumber":42,"author":{"gitId":"litone01"},"content":""},{"lineNumber":43,"author":{"gitId":"litone01"},"content":"* **Tools**:"},{"lineNumber":44,"author":{"gitId":"litone01"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())"},{"lineNumber":45,"author":{"gitId":"litone01"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo"},{"lineNumber":46,"author":{"gitId":"litone01"},"content":""},{"lineNumber":47,"author":{"gitId":"litone01"},"content":"* _{you can add/remove categories in the list above}_"}],"authorContributionMap":{"litone01":47}},{"path":"src/main/java/seedu/address/model/common/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"public class Category {"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":4}},{"path":"src/main/java/seedu/address/model/common/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"public class Date {"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":4}},{"path":"src/main/java/seedu/address/model/common/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":" * Represents a Task\u0027s or an Event\u0027s name in SOChedule."},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"public class Name {"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    /*"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":"     * The first character of the address must not be a whitespace,"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    public final String fullName;"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"     * Constructs a {@code Name}."},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     * @param name A valid name."},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    public Name(String name) {"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(name);"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        fullName \u003d name;"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"     * Returns true if a given string is a valid name."},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"    public static boolean isValidName(String test) {"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"        return fullName;"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"    public boolean equals(Object other) {"},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"                || (other instanceof seedu.address.model.person.Name // instanceof handles nulls"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"                \u0026\u0026 fullName.equals(((seedu.address.model.person.Name) other).fullName)); // state check"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"icelenaugust"},"content":"    public int hashCode() {"},{"lineNumber":56,"author":{"gitId":"icelenaugust"},"content":"        return fullName.hashCode();"},{"lineNumber":57,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":59,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":59}},{"path":"src/main/java/seedu/address/model/common/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.common;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":" * Represents a Tag in the address book."},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"public class Tag {"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";"},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";"},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":"    public final String tagName;"},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"     * Constructs a {@code Tag}."},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"     * @param tagName A valid tag name."},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    public Tag(String tagName) {"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"        requireNonNull(tagName);"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"        this.tagName \u003d tagName;"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     * Returns true if a given string is a valid tag name."},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"    public static boolean isValidTagName(String test) {"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"    public boolean equals(Object other) {"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"                || (other instanceof seedu.address.model.tag.Tag // instanceof handles nulls"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"                \u0026\u0026 tagName.equals(((seedu.address.model.tag.Tag) other).tagName)); // state check"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":42,"author":{"gitId":"icelenaugust"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"icelenaugust"},"content":"    public int hashCode() {"},{"lineNumber":44,"author":{"gitId":"icelenaugust"},"content":"        return tagName.hashCode();"},{"lineNumber":45,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":47,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"icelenaugust"},"content":"     * Format state as text for viewing."},{"lineNumber":49,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"icelenaugust"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"icelenaugust"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;"},{"lineNumber":52,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":54,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":54}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.event;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.util.HashSet;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Category;"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Name;"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Tag;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":" * Represents an event in SOChedule."},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"public class Event {"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    // Fields"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    private final Name name;"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    private final Date startDate;"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    private final Time startTime;"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    private final Date endDate;"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    private final Time endTime;"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":"    private final Category category;"},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"     * Name field must be present and not null."},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"    public Event(Name name, Date startDate, Time startTime,"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"                Date endDate, Time endTime, Category category, Set\u003cTag\u003e tags) {"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        requireAllNonNull(name, startDate, endDate);"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        this.name \u003d name;"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":"        this.category \u003d category;"},{"lineNumber":39,"author":{"gitId":"icelenaugust"},"content":"        this.tags.addAll(tags);"},{"lineNumber":40,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":41}},{"path":"src/main/java/seedu/address/model/event/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.event;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"public class Time {"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":4}},{"path":"src/main/java/seedu/address/model/task/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"public class Priority {"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":"}"}],"authorContributionMap":{"icelenaugust":4}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"icelenaugust"},"content":"package seedu.address.model.task;"},{"lineNumber":2,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":3,"author":{"gitId":"icelenaugust"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":5,"author":{"gitId":"icelenaugust"},"content":"import java.util.HashSet;"},{"lineNumber":6,"author":{"gitId":"icelenaugust"},"content":"import java.util.Set;"},{"lineNumber":7,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":8,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Category;"},{"lineNumber":9,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Date;"},{"lineNumber":10,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Name;"},{"lineNumber":11,"author":{"gitId":"icelenaugust"},"content":"import seedu.address.model.common.Tag;"},{"lineNumber":12,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":13,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":14,"author":{"gitId":"icelenaugust"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"icelenaugust"},"content":" * Represents a task in SOChedule."},{"lineNumber":16,"author":{"gitId":"icelenaugust"},"content":" */"},{"lineNumber":17,"author":{"gitId":"icelenaugust"},"content":"public class Task {"},{"lineNumber":18,"author":{"gitId":"icelenaugust"},"content":"    // Fields"},{"lineNumber":19,"author":{"gitId":"icelenaugust"},"content":"    private final Name name;"},{"lineNumber":20,"author":{"gitId":"icelenaugust"},"content":"    private final Date deadline;"},{"lineNumber":21,"author":{"gitId":"icelenaugust"},"content":"    private final Priority priority;"},{"lineNumber":22,"author":{"gitId":"icelenaugust"},"content":"    private final Category category;"},{"lineNumber":23,"author":{"gitId":"icelenaugust"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":25,"author":{"gitId":"icelenaugust"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"icelenaugust"},"content":"     * Name field must be present and not null."},{"lineNumber":27,"author":{"gitId":"icelenaugust"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"icelenaugust"},"content":"    public Task(Name name, Date deadline, Priority priority, Category category, Set\u003cTag\u003e tags) {"},{"lineNumber":29,"author":{"gitId":"icelenaugust"},"content":"        requireAllNonNull(name);"},{"lineNumber":30,"author":{"gitId":"icelenaugust"},"content":"        this.name \u003d name;"},{"lineNumber":31,"author":{"gitId":"icelenaugust"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":32,"author":{"gitId":"icelenaugust"},"content":"        this.priority \u003d priority;"},{"lineNumber":33,"author":{"gitId":"icelenaugust"},"content":"        this.category \u003d category;"},{"lineNumber":34,"author":{"gitId":"icelenaugust"},"content":"        this.tags.addAll(tags);"},{"lineNumber":35,"author":{"gitId":"icelenaugust"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"icelenaugust"},"content":"}"},{"lineNumber":37,"author":{"gitId":"icelenaugust"},"content":""},{"lineNumber":38,"author":{"gitId":"icelenaugust"},"content":""}],"authorContributionMap":{"icelenaugust":38}}]
